// Autogenerated using stratification.
requires "x86-configuration.k"

module VFMSUBADD213PD-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfmsubadd213pd R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 192), 53, 11)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 192), 53, 11) )  -Float  MInt2Float(xorMInt(mi(64, 0), extractMInt(getParentValue(R1, RSMap), 128, 192)), 53, 11) ) , 64), Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 256), 53, 11)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 256), 53, 11) )  -Float  (  (  ( negateFloat( ( minFloat(MInt2Float(concatenateMInt(mi(32, 0), extractMInt(getParentValue(R1, RSMap), 128, 160)), 53, 11), 0e+00)  *Float  minFloat(MInt2Float(concatenateMInt(mi(32, 0), extractMInt(getParentValue(R1, RSMap), 128, 160)), 53, 11), 0e+00) ) )  -Float  MInt2Float(concatenateMInt(mi(32, 0), extractMInt(getParentValue(R1, RSMap), 128, 160)), 53, 11) )  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11) )  -Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11) )  ) , 64))) )


)

    </regstate>
endmodule

module VFMSUBADD213PD-XMM-XMM-XMM-SEMANTICS
  imports VFMSUBADD213PD-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfmsubadd213pd %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:callq .move_128_032_xmm3_xmm8_xmm9_xmm10_xmm11  #  1     0     5      OPC=callq_label
circuit:vfnmsub213sd %xmm3, %xmm11, %xmm3               #  2     0x5   5      OPC=vfnmsub213sd_xmm_xmm_xmm
circuit:callq .move_256_128_ymm3_xmm10_xmm11            #  3     0xa   5      OPC=callq_label
circuit:vfmsub213pd %xmm10, %xmm2, %xmm1                #  4     0xf   5      OPC=vfmsub213pd_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfmsubadd213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ vfmsub132_double(%ymm2[127:64], %ymm3[127:64] ⊕ 0x0₆₄, %ymm1[127:64])[63:8] ∘ vfmsub132_double(%ymm2[127:64], %ymm3[127:64] ⊕ 0x0₆₄, %ymm1[127:64])[7:0] ∘ vfmsub132_double(%ymm2[63:0], vfmsub132_double(vnfmsub132_double(mincmp_double(0x0₆₄, 0x0₃₂ ∘ %ymm3[127:96]) = 0x1₁ ? 0x0₆₄ : 0x0₃₂ ∘ %ymm3[127:96], 0x0₃₂ ∘ %ymm3[127:96], mincmp_double(0x0₆₄, 0x0₃₂ ∘ %ymm3[127:96]) = 0x1₁ ? 0x0₆₄ : 0x0₃₂ ∘ %ymm3[127:96]), %ymm3[63:0], %ymm3[63:0]), %ymm1[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/