// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMSUB231PS-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmsub231ps R1:Ymm, R2:Ymm, R3:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate> ...
convToRegKeys(R2) |-> (MI676 => MI676)

convToRegKeys(R3) |-> ( MI675 => concatenateMInt(extractMInt(orMInt(andMInt(MI687, mi(256, -340282366920938463463374607431768211456)), mi(256, uvalueMInt(extractMInt(concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 0, 32), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 0, 32), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 0, 32), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 32, 64), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 32, 64), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 32, 64), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 64, 96), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 64, 96), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 64, 96), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 96, 128), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 96, 128), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 96, 128), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 128, 160), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 128, 160), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 160, 192), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 160, 192), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 192, 224), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 192, 224), 24, 8) ) ) ) , 32), Float2MInt( ( MInt2Float(extractMInt(MI675, 224, 256), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 224, 256), 24, 8) ) ) ) , 32)))))))), 0, 128)))), 128, 256), extractMInt(orMInt(andMInt(MI686, mi(256, -340282366920938463463374607431768211456)), mi(256, uvalueMInt(extractMInt(concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 0, 32), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 0, 32), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 0, 32), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 32, 64), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 32, 64), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 32, 64), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 64, 96), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 64, 96), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 64, 96), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 96, 128), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 96, 128), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 96, 128), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 128, 160), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 128, 160), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 160, 192), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 160, 192), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI675, 192, 224), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 192, 224), 24, 8) ) ) ) , 32), Float2MInt( ( MInt2Float(extractMInt(MI675, 224, 256), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(MI676, 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(MI677, 224, 256), 24, 8) ) ) ) , 32)))))))), 128, 256)))), 128, 256)) )

convToRegKeys(R1) |-> (MI677 => MI677)

 "YMM12" |-> (MI686 => MI686)

 "YMM13" |-> (MI687 => MI687)


    ...</regstate>
endmodule

module VFNMSUB231PS-YMM-YMM-YMM-SEMANTICS
  imports VFNMSUB231PS-YMM-YMM-YMM
endmodule
