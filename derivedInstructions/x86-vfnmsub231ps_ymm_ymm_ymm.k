// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMSUB231PS-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmsub231ps R1:Ymm, R2:Ymm, R3:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate> 
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 0, 32), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 0, 32), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 0, 32), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 32, 64), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 32, 64), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 32, 64), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 64, 96), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 64, 96), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 64, 96), 24, 8) ) ) ) , 32), Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 96, 128), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 96, 128), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 96, 128), 24, 8) ) ) ) , 32)))), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 160), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 160), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 160, 192), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 160, 192), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 224), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 224), 24, 8) ) ) ) , 32), Float2MInt( ( MInt2Float(extractMInt(getParentValue(R3, RSMap), 224, 256), 24, 8)  -Float  negateFloat( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 224, 256), 24, 8) ) ) ) , 32))))) )

  
)   

    </regstate>
endmodule

module VFNMSUB231PS-YMM-YMM-YMM-SEMANTICS
  imports VFNMSUB231PS-YMM-YMM-YMM
endmodule
/*
vfnmsub231ps %ymm3, %ymm2, %ymm1
maybe read:{ %ymm1 %ymm2 %ymm3 }
must read:{ %ymm1 %ymm2 %ymm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

circuit:vfnmsub132ps %ymm3, %ymm1, %ymm2      #  1     0    5      OPC=vfnmsub132ps_ymm_ymm_ymm
circuit:callq .move_256_128_ymm2_xmm12_xmm13  #  2     0x5  5      OPC=callq_label
circuit:callq .move_128_256_xmm12_xmm13_ymm1  #  3     0xa  5      OPC=callq_label

WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmsub231ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

-------------------------------------
Getting base circuit for vfnmsub132ps %ymm3, %ymm1, %ymm2

Final state:
%ymm2: vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm1_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm3_vfnmsub231ps_ymm_ymm_ymm[255:224]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm1_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm3_vfnmsub231ps_ymm_ymm_ymm[223:192]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm1_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm3_vfnmsub231ps_ymm_ymm_ymm[191:160]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm1_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm3_vfnmsub231ps_ymm_ymm_ymm[159:128]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm1_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm3_vfnmsub231ps_ymm_ymm_ymm[127:96]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm1_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm3_vfnmsub231ps_ymm_ymm_ymm[95:64]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm1_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm3_vfnmsub231ps_ymm_ymm_ymm[63:32]) ∘ vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm1_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm3_vfnmsub231ps_ymm_ymm_ymm[31:0])))))))

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_256_128_ymm2_xmm12_xmm13

Final state:
%rax/%rax: %rax_vfnmsub231ps_ymm_ymm_ymm
%rdx/%rdx: %rdx_vfnmsub231ps_ymm_ymm_ymm

%xmm0: %ymm0_vfnmsub231ps_ymm_ymm_ymm[127:0]
%xmm1: %ymm1_vfnmsub231ps_ymm_ymm_ymm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_256_xmm12_xmm13_ymm1

Final state:
%rax/%rax: %rax_vfnmsub231ps_ymm_ymm_ymm
%rdx/%rdx: %rdx_vfnmsub231ps_ymm_ymm_ymm

%xmm0: %ymm0_vfnmsub231ps_ymm_ymm_ymm[127:0]
%xmm1: ((%ymm13_vfnmsub231ps_ymm_ymm_ymm[255:128] ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm1_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm3_vfnmsub231ps_ymm_ymm_ymm[255:224]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm1_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm3_vfnmsub231ps_ymm_ymm_ymm[223:192]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm1_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm3_vfnmsub231ps_ymm_ymm_ymm[191:160]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm1_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm3_vfnmsub231ps_ymm_ymm_ymm[159:128]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm1_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm3_vfnmsub231ps_ymm_ymm_ymm[127:96]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm1_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm3_vfnmsub231ps_ymm_ymm_ymm[95:64]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm1_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm3_vfnmsub231ps_ymm_ymm_ymm[63:32]) ∘ vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm1_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm3_vfnmsub231ps_ymm_ymm_ymm[31:0]))))))))[255:128])[127:0][127:0] ∘ (%ymm12_vfnmsub231ps_ymm_ymm_ymm[255:128] ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm1_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm3_vfnmsub231ps_ymm_ymm_ymm[255:224]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm1_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm3_vfnmsub231ps_ymm_ymm_ymm[223:192]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm1_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm3_vfnmsub231ps_ymm_ymm_ymm[191:160]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm1_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm3_vfnmsub231ps_ymm_ymm_ymm[159:128]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm1_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm3_vfnmsub231ps_ymm_ymm_ymm[127:96]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm1_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm3_vfnmsub231ps_ymm_ymm_ymm[95:64]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm1_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm3_vfnmsub231ps_ymm_ymm_ymm[63:32]) ∘ vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm1_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm3_vfnmsub231ps_ymm_ymm_ymm[31:0]))))))))[127:0])[127:0][127:0])[127:0]

-------------------------------------
=====================================
Computing circuit for vfnmsub231ps %ymm3, %ymm2, %ymm1

.target:
vfnmsub132ps %ymm3, %ymm1, %ymm2
callq .move_256_128_ymm2_xmm12_xmm13
callq .move_128_256_xmm12_xmm13_ymm1
retq 

Initial state:
%ymm1: %ymm1

State for specgen instruction: vfnmsub231ps %ymm3, %ymm2, %ymm1:
%ymm1: (%ymm13_vfnmsub231ps_ymm_ymm_ymm[255:128] ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm1_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm3_vfnmsub231ps_ymm_ymm_ymm[255:224]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm1_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm3_vfnmsub231ps_ymm_ymm_ymm[223:192]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm1_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm3_vfnmsub231ps_ymm_ymm_ymm[191:160]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm1_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm3_vfnmsub231ps_ymm_ymm_ymm[159:128]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm1_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm3_vfnmsub231ps_ymm_ymm_ymm[127:96]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm1_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm3_vfnmsub231ps_ymm_ymm_ymm[95:64]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm1_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm3_vfnmsub231ps_ymm_ymm_ymm[63:32]) ∘ vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm1_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm3_vfnmsub231ps_ymm_ymm_ymm[31:0]))))))))[255:128])[127:0][127:0] ∘ (%ymm12_vfnmsub231ps_ymm_ymm_ymm[255:128] ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm1_vfnmsub231ps_ymm_ymm_ymm[255:224], %ymm3_vfnmsub231ps_ymm_ymm_ymm[255:224]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm1_vfnmsub231ps_ymm_ymm_ymm[223:192], %ymm3_vfnmsub231ps_ymm_ymm_ymm[223:192]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm1_vfnmsub231ps_ymm_ymm_ymm[191:160], %ymm3_vfnmsub231ps_ymm_ymm_ymm[191:160]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm1_vfnmsub231ps_ymm_ymm_ymm[159:128], %ymm3_vfnmsub231ps_ymm_ymm_ymm[159:128]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm1_vfnmsub231ps_ymm_ymm_ymm[127:96], %ymm3_vfnmsub231ps_ymm_ymm_ymm[127:96]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm1_vfnmsub231ps_ymm_ymm_ymm[95:64], %ymm3_vfnmsub231ps_ymm_ymm_ymm[95:64]) ∘ (vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm1_vfnmsub231ps_ymm_ymm_ymm[63:32], %ymm3_vfnmsub231ps_ymm_ymm_ymm[63:32]) ∘ vfnmsub132_single(%ymm2_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm1_vfnmsub231ps_ymm_ymm_ymm[31:0], %ymm3_vfnmsub231ps_ymm_ymm_ymm[31:0]))))))))[127:0])[127:0][127:0]

Final state
%ymm1: vfnmsub132_single(%ymm2[255:224], %ymm1[255:224], %ymm3[255:224]) ∘ (vfnmsub132_single(%ymm2[223:192], %ymm1[223:192], %ymm3[223:192]) ∘ (vfnmsub132_single(%ymm2[191:160], %ymm1[191:160], %ymm3[191:160]) ∘ vfnmsub132_single(%ymm2[159:128], %ymm1[159:128], %ymm3[159:128]))) ∘ (vfnmsub132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfnmsub132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfnmsub132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfnmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

=====================================
Circuits:

%ymm1  : vfnmsub132_single(%ymm2[255:224], %ymm1[255:224], %ymm3[255:224]) ∘ (vfnmsub132_single(%ymm2[223:192], %ymm1[223:192], %ymm3[223:192]) ∘ (vfnmsub132_single(%ymm2[191:160], %ymm1[191:160], %ymm3[191:160]) ∘ vfnmsub132_single(%ymm2[159:128], %ymm1[159:128], %ymm3[159:128]))) ∘ (vfnmsub132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfnmsub132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfnmsub132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfnmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/