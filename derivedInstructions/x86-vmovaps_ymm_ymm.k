// Autogenerated using stratification.
requires "x86-configuration.k"

module VMOVAPS-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vmovaps R1:Ymm, R2:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (getParentValue(R1, RSMap)   )


)

    </regstate>
endmodule

module VMOVAPS-YMM-YMM-SEMANTICS
  imports VMOVAPS-YMM-YMM
endmodule
/*
TargetInstr:
vmovaps %ymm2, %ymm1
RWSet:
maybe read:{ %ymm2 }
must read:{ %ymm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:vmovdqa %ymm2, %ymm1  #  1     0    4      OPC=vmovdqa_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vmovaps %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/