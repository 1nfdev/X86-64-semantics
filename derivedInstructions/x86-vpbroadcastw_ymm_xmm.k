// Autogenerated using stratification.
requires "x86-configuration.k"

module VPBROADCASTW-YMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpbroadcastw R1:Xmm, R2:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256)))), concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256))))) )


)

    </regstate>
endmodule

module VPBROADCASTW-YMM-XMM-SEMANTICS
  imports VPBROADCASTW-YMM-XMM
endmodule
/*
TargetInstr:
vpbroadcastw %xmm2, %ymm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx2 }

Circuit:
circuit:vbroadcastss %xmm2, %ymm1          #  1     0     5      OPC=vbroadcastss_ymm_xmm
circuit:callq .move_byte_1_of_ymm1_to_r8b  #  2     0x5   5      OPC=callq_label
circuit:callq .move_byte_0_of_ymm1_to_r9b  #  3     0xa   5      OPC=callq_label
circuit:callq .move_r8b_to_byte_3_of_ymm1  #  4     0xf   5      OPC=callq_label
circuit:callq .move_r9b_to_byte_2_of_ymm1  #  5     0x14  5      OPC=callq_label
circuit:vbroadcastss %xmm1, %ymm1          #  6     0x19  5      OPC=vbroadcastss_ymm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vpbroadcastw %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

-------------------------------------
Getting base circuit for callq .move_128_064_xmm2_r8_r9

Final state:
%rax/%rax: %rax_vbroadcastss_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastss_ymm_xmm

%xmm0: %ymm0_vbroadcastss_ymm_xmm[127:0]
%xmm1: %ymm1_vbroadcastss_ymm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_128_r8_r9_xmm3

Final state:
%rax/%rax: %rax_vbroadcastss_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastss_ymm_xmm

%xmm0: %ymm0_vbroadcastss_ymm_xmm[127:0]
%xmm1: %ymm1_vbroadcastss_ymm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: %ymm1_movd_r32_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_256_xmm8_xmm9_ymm1

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm1_r10_r11

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_032_064_r10d_r11d_rbx

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0]

-------------------------------------
=====================================
Computing circuit for movd %xmm2, %r8d

.target:
callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
callq .move_128_256_xmm8_xmm9_ymm1
callq .move_128_064_xmm1_r10_r11
callq .move_032_064_r10d_r11d_rbx
retq 

Initial state:
%r8/%r8: %r8_vbroadcastss_xmm_xmm

State for specgen instruction: movd %xmm1, %ebx:
%rbx/%rbx: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][127:64][31:0][31:0] ∘ ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][63:0][31:0][31:0]

Register        -> %rbx
  translates to => %r8
Value is               -> ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][127:64][31:0][31:0] ∘ ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][63:0][31:0][31:0]
  after renaming it is => 0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0]

Final state
%r8/%r8: 0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0]

=====================================
-------------------------------------
Getting base circuit for vzeroall 

Final state:
%ymm0: 0x0₂₅₆
%ymm1: 0x0₂₅₆
%ymm2: 0x0₂₅₆
%ymm3: 0x0₂₅₆
%ymm4: 0x0₂₅₆
%ymm5: 0x0₂₅₆
%ymm6: 0x0₂₅₆
%ymm7: 0x0₂₅₆
%ymm8: 0x0₂₅₆
%ymm9: 0x0₂₅₆
%ymm10: 0x0₂₅₆
%ymm11: 0x0₂₅₆
%ymm12: 0x0₂₅₆
%ymm13: 0x0₂₅₆
%ymm14: 0x0₂₅₆
%ymm15: 0x0₂₅₆

-------------------------------------
-------------------------------------
Getting base circuit for movslq %r8d, %r9

Final state:
%r9/%r9: sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_128_r8_r9_xmm1

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_64_xmm1_xmm10_xmm11

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_64_xmm1_xmm8_xmm9

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: ((0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[255:128] ∘ ((0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0]))[127:0]

-------------------------------------
=====================================
Computing circuit for vbroadcastss %xmm3, %xmm1

.target:
movd %xmm2, %r8d
vzeroall 
movslq %r8d, %r9
callq .move_064_128_r8_r9_xmm1
callq .move_128_64_xmm1_xmm10_xmm11
callq .move_128_64_xmm1_xmm8_xmm9
callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1
retq 

Initial state:
%ymm1: %ymm1_vbroadcastss_ymm_xmm

State for specgen instruction: vbroadcastss %xmm2, %xmm1:
%ymm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[255:128] ∘ ((0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0])

Final state
%ymm1: 0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0])

=====================================
-------------------------------------
Getting base circuit for callq .move_r8b_to_byte_23_of_ymm1

Final state:
%rax/%rax: %rax_vbroadcastss_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastss_ymm_xmm

%xmm0: %ymm0_vbroadcastss_ymm_xmm[127:0]
%xmm1: ((0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[255:192] ∘ %ymm2_vbroadcastss_ymm_xmm[127:0][63:0][7:0] ∘ (0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[183:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_64_xmm2_xmm10_xmm11

Final state:
%rax/%rax: %rax_vbroadcastsd_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastsd_ymm_xmm

%xmm0: %ymm0_vbroadcastsd_ymm_xmm[127:0]
%xmm1: %ymm1_vbroadcastsd_ymm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm3_r8_r9

Final state:
%rax/%rax: %rax_vpunpcklqdq_xmm_xmm_xmm
%rdx/%rdx: %rdx_vpunpcklqdq_xmm_xmm_xmm

%xmm0: %ymm0_vpunpcklqdq_xmm_xmm_xmm[127:0]
%xmm1: %ymm1_vpunpcklqdq_xmm_xmm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm2_r10_r11

Final state:
%rax/%rax: %rax_vpunpcklqdq_xmm_xmm_xmm
%rdx/%rdx: %rdx_vpunpcklqdq_xmm_xmm_xmm

%xmm0: %ymm0_vpunpcklqdq_xmm_xmm_xmm[127:0]
%xmm1: %ymm1_vpunpcklqdq_xmm_xmm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for vzeroall 

Final state:
%ymm0: 0x0₂₅₆
%ymm1: 0x0₂₅₆
%ymm2: 0x0₂₅₆
%ymm3: 0x0₂₅₆
%ymm4: 0x0₂₅₆
%ymm5: 0x0₂₅₆
%ymm6: 0x0₂₅₆
%ymm7: 0x0₂₅₆
%ymm8: 0x0₂₅₆
%ymm9: 0x0₂₅₆
%ymm10: 0x0₂₅₆
%ymm11: 0x0₂₅₆
%ymm12: 0x0₂₅₆
%ymm13: 0x0₂₅₆
%ymm14: 0x0₂₅₆
%ymm15: 0x0₂₅₆

-------------------------------------
-------------------------------------
Getting base circuit for movq %r8, %r11

Final state:
%r11/%r11: %ymm3_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_128_r10_r11_xmm1

Final state:
%rax/%rax: %rax_vpunpcklqdq_xmm_xmm_xmm
%rdx/%rdx: %rdx_vpunpcklqdq_xmm_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (%ymm3_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0] ∘ %ymm2_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0]))[127:0]

-------------------------------------
=====================================
Computing circuit for vpunpcklqdq %xmm10, %xmm10, %xmm11

.target:
callq .move_128_064_xmm3_r8_r9
callq .move_128_064_xmm2_r10_r11
vzeroall 
movq %r8, %r11
callq .move_064_128_r10_r11_xmm1
retq 

Initial state:
%ymm11: %ymm11_vbroadcastsd_ymm_xmm[255:128] ∘ (0x0₆₄ ∘ %ymm2_vbroadcastsd_ymm_xmm[127:0][127:64])

State for specgen instruction: vpunpcklqdq %xmm3, %xmm2, %xmm1:
%ymm1: 0x0₂₅₆[255:128] ∘ (%ymm3_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0] ∘ %ymm2_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0])

Final state
%ymm11: 0x0₁₂₈ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0])

=====================================
-------------------------------------
Getting base circuit for vmaxps %ymm2, %ymm2, %ymm10

Final state:
%ymm10: (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0])))))))

-------------------------------------
-------------------------------------
Getting base circuit for vmaxpd %ymm10, %ymm2, %ymm1

Final state:
%ymm1: (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[255:192], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:192] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[191:128], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:128] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[127:64], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:64] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64]) ∘ (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[63:0], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:0] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])))

-------------------------------------
=====================================
Computing circuit for vmovdqu %ymm11, %ymm10

.target:
vmaxps %ymm2, %ymm2, %ymm10
vmaxpd %ymm10, %ymm2, %ymm1
retq 

Initial state:
%ymm10: %ymm10_vbroadcastsd_ymm_xmm[255:128] ∘ (0x0₆₄ ∘ %ymm2_vbroadcastsd_ymm_xmm[127:0][63:0])

State for specgen instruction: vmovdqu %ymm2, %ymm1:
%ymm1: (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[255:192], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:192] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[191:128], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:128] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[127:64], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:64] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64]) ∘ (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[63:0], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:0] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])))

Final state
%ymm10: 0x0₆₄ ∘ (0x0₆₄ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0]))

=====================================
-------------------------------------
Getting base circuit for callq .move_128_256_xmm10_xmm11_ymm1

Final state:
%rax/%rax: %rax_vbroadcastsd_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastsd_ymm_xmm

%xmm0: %ymm0_vbroadcastsd_ymm_xmm[127:0]
%xmm1: ((0x0₁₂₈ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0]))[127:0][127:0] ∘ (0x0₆₄ ∘ (0x0₆₄ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0])))[127:0][127:0])[127:0]

-------------------------------------
=====================================
Computing circuit for vbroadcastsd %xmm1, %ymm1

.target:
callq .move_128_64_xmm2_xmm10_xmm11
vpunpcklqdq %xmm10, %xmm10, %xmm11
vmovdqu %ymm11, %ymm10
callq .move_128_256_xmm10_xmm11_ymm1
retq 

Initial state:
%ymm1: (0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[255:192] ∘ %ymm2_vbroadcastss_ymm_xmm[127:0][63:0][7:0] ∘ (0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[183:0]

State for specgen instruction: vbroadcastsd %xmm2, %ymm1:
%ymm1: (0x0₁₂₈ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0]))[127:0][127:0] ∘ (0x0₆₄ ∘ (0x0₆₄ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0])))[127:0][127:0]

Final state
%ymm1: %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]) ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))

=====================================
=====================================
Computing circuit for vbroadcastss %xmm2, %ymm1

.target:
callq .move_128_064_xmm2_r8_r9
callq .move_064_128_r8_r9_xmm3
vbroadcastss %xmm3, %xmm1
callq .move_r8b_to_byte_23_of_ymm1
vbroadcastsd %xmm1, %ymm1
retq 

Initial state:
%ymm1: %ymm1_vpbroadcastw_ymm_xmm

State for specgen instruction: vbroadcastss %xmm2, %ymm1:
%ymm1: %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]) ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))

Final state
%ymm1: %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]))

=====================================
-------------------------------------
Getting base circuit for callq .move_byte_1_of_ymm1_to_r8b

Final state:
%rax/%rax: %rax_vpbroadcastw_ymm_xmm
%rdx/%rdx: %rdx_vpbroadcastw_ymm_xmm

%xmm0: %ymm0_vpbroadcastw_ymm_xmm[127:0]
%xmm1: (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_byte_0_of_ymm1_to_r9b

Final state:
%rax/%rax: %rax_vpbroadcastw_ymm_xmm
%rdx/%rdx: %rdx_vpbroadcastw_ymm_xmm

%xmm0: %ymm0_vpbroadcastw_ymm_xmm[127:0]
%xmm1: (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_r8b_to_byte_3_of_ymm1

Final state:
%rax/%rax: %rax_vpbroadcastw_ymm_xmm
%rdx/%rdx: %rdx_vpbroadcastw_ymm_xmm

%xmm0: %ymm0_vpbroadcastw_ymm_xmm[127:0]
%xmm1: ((%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[255:32] ∘ (%r8_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[15:8])[7:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[23:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_r9b_to_byte_2_of_ymm1

Final state:
%rax/%rax: %rax_vpbroadcastw_ymm_xmm
%rdx/%rdx: %rdx_vpbroadcastw_ymm_xmm

%xmm0: %ymm0_vpbroadcastw_ymm_xmm[127:0]
%xmm1: (((%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[255:32] ∘ (%r8_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[15:8])[7:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[23:0])[255:24] ∘ (%r9_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[7:0])[7:0] ∘ ((%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[255:32] ∘ (%r8_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[15:8])[7:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[23:0])[15:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm2_r8_r9

Final state:
%rax/%rax: %rax_vbroadcastss_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastss_ymm_xmm

%xmm0: %ymm0_vbroadcastss_ymm_xmm[127:0]
%xmm1: %ymm1_vbroadcastss_ymm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_128_r8_r9_xmm3

Final state:
%rax/%rax: %rax_vbroadcastss_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastss_ymm_xmm

%xmm0: %ymm0_vbroadcastss_ymm_xmm[127:0]
%xmm1: %ymm1_vbroadcastss_ymm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: %ymm1_movd_r32_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_256_xmm8_xmm9_ymm1

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm1_r10_r11

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_032_064_r10d_r11d_rbx

Final state:
%rax/%rax: %rax_movd_r32_xmm
%rdx/%rdx: %rdx_movd_r32_xmm

%xmm0: %ymm0_movd_r32_xmm[127:0]
%xmm1: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0]

-------------------------------------
=====================================
Computing circuit for movd %xmm2, %r8d

.target:
callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
callq .move_128_256_xmm8_xmm9_ymm1
callq .move_128_064_xmm1_r10_r11
callq .move_032_064_r10d_r11d_rbx
retq 

Initial state:
%r8/%r8: %r8_vbroadcastss_xmm_xmm

State for specgen instruction: movd %xmm1, %ebx:
%rbx/%rbx: ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][127:64][31:0][31:0] ∘ ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][63:0][31:0][31:0]

Register        -> %rbx
  translates to => %r8
Value is               -> ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][127:64][31:0][31:0] ∘ ((%ymm9_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][63:32]))[127:0][127:0] ∘ (%ymm8_movd_r32_xmm[255:128] ∘ (0x0₉₆ ∘ %ymm1_movd_r32_xmm[127:0][31:0]))[127:0][127:0])[127:0][63:0][31:0][31:0]
  after renaming it is => 0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0]

Final state
%r8/%r8: 0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0]

=====================================
-------------------------------------
Getting base circuit for vzeroall 

Final state:
%ymm0: 0x0₂₅₆
%ymm1: 0x0₂₅₆
%ymm2: 0x0₂₅₆
%ymm3: 0x0₂₅₆
%ymm4: 0x0₂₅₆
%ymm5: 0x0₂₅₆
%ymm6: 0x0₂₅₆
%ymm7: 0x0₂₅₆
%ymm8: 0x0₂₅₆
%ymm9: 0x0₂₅₆
%ymm10: 0x0₂₅₆
%ymm11: 0x0₂₅₆
%ymm12: 0x0₂₅₆
%ymm13: 0x0₂₅₆
%ymm14: 0x0₂₅₆
%ymm15: 0x0₂₅₆

-------------------------------------
-------------------------------------
Getting base circuit for movslq %r8d, %r9

Final state:
%r9/%r9: sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_128_r8_r9_xmm1

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_64_xmm1_xmm10_xmm11

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_64_xmm1_xmm8_xmm9

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1

Final state:
%rax/%rax: %rax_vbroadcastss_xmm_xmm
%rdx/%rdx: %rdx_vbroadcastss_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: ((0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[255:128] ∘ ((0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0]))[127:0]

-------------------------------------
=====================================
Computing circuit for vbroadcastss %xmm3, %xmm1

.target:
movd %xmm2, %r8d
vzeroall 
movslq %r8d, %r9
callq .move_064_128_r8_r9_xmm1
callq .move_128_64_xmm1_xmm10_xmm11
callq .move_128_64_xmm1_xmm8_xmm9
callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1
retq 

Initial state:
%ymm1: %ymm1_vbroadcastss_ymm_xmm

State for specgen instruction: vbroadcastss %xmm2, %xmm1:
%ymm1: (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[255:128] ∘ ((0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][127:64]))[127:0][31:0] ∘ (0x0₂₅₆[255:128] ∘ (0x0₆₄ ∘ (0x0₂₅₆[255:128] ∘ (sign-extend-64((0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[31:0])[63:0] ∘ (0x0₃₂ ∘ %ymm2_vbroadcastss_xmm_xmm[31:0])[63:0]))[127:0][63:0]))[127:0][31:0])

Final state
%ymm1: 0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0])

=====================================
-------------------------------------
Getting base circuit for callq .move_r8b_to_byte_23_of_ymm1

Final state:
%rax/%rax: %rax_vbroadcastss_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastss_ymm_xmm

%xmm0: %ymm0_vbroadcastss_ymm_xmm[127:0]
%xmm1: ((0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[255:192] ∘ %ymm2_vbroadcastss_ymm_xmm[127:0][63:0][7:0] ∘ (0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[183:0])[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_64_xmm2_xmm10_xmm11

Final state:
%rax/%rax: %rax_vbroadcastsd_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastsd_ymm_xmm

%xmm0: %ymm0_vbroadcastsd_ymm_xmm[127:0]
%xmm1: %ymm1_vbroadcastsd_ymm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm3_r8_r9

Final state:
%rax/%rax: %rax_vpunpcklqdq_xmm_xmm_xmm
%rdx/%rdx: %rdx_vpunpcklqdq_xmm_xmm_xmm

%xmm0: %ymm0_vpunpcklqdq_xmm_xmm_xmm[127:0]
%xmm1: %ymm1_vpunpcklqdq_xmm_xmm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_128_064_xmm2_r10_r11

Final state:
%rax/%rax: %rax_vpunpcklqdq_xmm_xmm_xmm
%rdx/%rdx: %rdx_vpunpcklqdq_xmm_xmm_xmm

%xmm0: %ymm0_vpunpcklqdq_xmm_xmm_xmm[127:0]
%xmm1: %ymm1_vpunpcklqdq_xmm_xmm_xmm[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for vzeroall 

Final state:
%ymm0: 0x0₂₅₆
%ymm1: 0x0₂₅₆
%ymm2: 0x0₂₅₆
%ymm3: 0x0₂₅₆
%ymm4: 0x0₂₅₆
%ymm5: 0x0₂₅₆
%ymm6: 0x0₂₅₆
%ymm7: 0x0₂₅₆
%ymm8: 0x0₂₅₆
%ymm9: 0x0₂₅₆
%ymm10: 0x0₂₅₆
%ymm11: 0x0₂₅₆
%ymm12: 0x0₂₅₆
%ymm13: 0x0₂₅₆
%ymm14: 0x0₂₅₆
%ymm15: 0x0₂₅₆

-------------------------------------
-------------------------------------
Getting base circuit for movq %r8, %r11

Final state:
%r11/%r11: %ymm3_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_128_r10_r11_xmm1

Final state:
%rax/%rax: %rax_vpunpcklqdq_xmm_xmm_xmm
%rdx/%rdx: %rdx_vpunpcklqdq_xmm_xmm_xmm

%xmm0: 0x0₂₅₆[127:0]
%xmm1: (0x0₂₅₆[255:128] ∘ (%ymm3_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0] ∘ %ymm2_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0]))[127:0]

-------------------------------------
=====================================
Computing circuit for vpunpcklqdq %xmm10, %xmm10, %xmm11

.target:
callq .move_128_064_xmm3_r8_r9
callq .move_128_064_xmm2_r10_r11
vzeroall 
movq %r8, %r11
callq .move_064_128_r10_r11_xmm1
retq 

Initial state:
%ymm11: %ymm11_vbroadcastsd_ymm_xmm[255:128] ∘ (0x0₆₄ ∘ %ymm2_vbroadcastsd_ymm_xmm[127:0][127:64])

State for specgen instruction: vpunpcklqdq %xmm3, %xmm2, %xmm1:
%ymm1: 0x0₂₅₆[255:128] ∘ (%ymm3_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0] ∘ %ymm2_vpunpcklqdq_xmm_xmm_xmm[127:0][63:0][63:0])

Final state
%ymm11: 0x0₁₂₈ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0])

=====================================
-------------------------------------
Getting base circuit for vmaxps %ymm2, %ymm2, %ymm10

Final state:
%ymm10: (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0])))))))

-------------------------------------
-------------------------------------
Getting base circuit for vmaxpd %ymm10, %ymm2, %ymm1

Final state:
%ymm1: (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[255:192], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:192] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[191:128], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:128] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[127:64], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:64] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64]) ∘ (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[63:0], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:0] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])))

-------------------------------------
=====================================
Computing circuit for vmovdqu %ymm11, %ymm10

.target:
vmaxps %ymm2, %ymm2, %ymm10
vmaxpd %ymm10, %ymm2, %ymm1
retq 

Initial state:
%ymm10: %ymm10_vbroadcastsd_ymm_xmm[255:128] ∘ (0x0₆₄ ∘ %ymm2_vbroadcastsd_ymm_xmm[127:0][63:0])

State for specgen instruction: vmovdqu %ymm2, %ymm1:
%ymm1: (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[255:192], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:192] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[255:192]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[191:128], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:128] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[191:128]) ∘ ((maxcmp_double(%ymm2_vmovdqu_ymm_ymm[127:64], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:64] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[127:64]) ∘ (maxcmp_double(%ymm2_vmovdqu_ymm_ymm[63:0], ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:0] : ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[255:224], %ymm2_vmovdqu_ymm_ymm[255:224])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[255:224] : %ymm2_vmovdqu_ymm_ymm[255:224]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[223:192], %ymm2_vmovdqu_ymm_ymm[223:192])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[223:192] : %ymm2_vmovdqu_ymm_ymm[223:192]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[191:160], %ymm2_vmovdqu_ymm_ymm[191:160])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[191:160] : %ymm2_vmovdqu_ymm_ymm[191:160]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[159:128], %ymm2_vmovdqu_ymm_ymm[159:128])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[159:128] : %ymm2_vmovdqu_ymm_ymm[159:128]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[127:96], %ymm2_vmovdqu_ymm_ymm[127:96])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[127:96] : %ymm2_vmovdqu_ymm_ymm[127:96]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[95:64], %ymm2_vmovdqu_ymm_ymm[95:64])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[95:64] : %ymm2_vmovdqu_ymm_ymm[95:64]) ∘ ((maxcmp_single(%ymm2_vmovdqu_ymm_ymm[63:32], %ymm2_vmovdqu_ymm_ymm[63:32])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[63:32] : %ymm2_vmovdqu_ymm_ymm[63:32]) ∘ (maxcmp_single(%ymm2_vmovdqu_ymm_ymm[31:0], %ymm2_vmovdqu_ymm_ymm[31:0])[0:0] = 0x1₁ ? %ymm2_vmovdqu_ymm_ymm[31:0] : %ymm2_vmovdqu_ymm_ymm[31:0]))))))))[63:0])))

Final state
%ymm10: 0x0₆₄ ∘ (0x0₆₄ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0]))

=====================================
-------------------------------------
Getting base circuit for callq .move_128_256_xmm10_xmm11_ymm1

Final state:
%rax/%rax: %rax_vbroadcastsd_ymm_xmm
%rdx/%rdx: %rdx_vbroadcastsd_ymm_xmm

%xmm0: %ymm0_vbroadcastsd_ymm_xmm[127:0]
%xmm1: ((0x0₁₂₈ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0]))[127:0][127:0] ∘ (0x0₆₄ ∘ (0x0₆₄ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0])))[127:0][127:0])[127:0]

-------------------------------------
=====================================
Computing circuit for vbroadcastsd %xmm1, %ymm1

.target:
callq .move_128_64_xmm2_xmm10_xmm11
vpunpcklqdq %xmm10, %xmm10, %xmm11
vmovdqu %ymm11, %ymm10
callq .move_128_256_xmm10_xmm11_ymm1
retq 

Initial state:
%ymm1: (0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[255:192] ∘ %ymm2_vbroadcastss_ymm_xmm[127:0][63:0][7:0] ∘ (0x0₁₂₈ ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))[183:0]

State for specgen instruction: vbroadcastsd %xmm2, %ymm1:
%ymm1: (0x0₁₂₈ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0]))[127:0][127:0] ∘ (0x0₆₄ ∘ (0x0₆₄ ∘ (%ymm2_vbroadcastsd_ymm_xmm[63:0] ∘ %ymm2_vbroadcastsd_ymm_xmm[63:0])))[127:0][127:0]

Final state
%ymm1: %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]) ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))

=====================================
=====================================
Computing circuit for vbroadcastss %xmm1, %ymm1

.target:
callq .move_128_064_xmm2_r8_r9
callq .move_064_128_r8_r9_xmm3
vbroadcastss %xmm3, %xmm1
callq .move_r8b_to_byte_23_of_ymm1
vbroadcastsd %xmm1, %ymm1
retq 

Initial state:
%ymm1: ((%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[255:32] ∘ (%r8_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[15:8])[7:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[23:0])[255:24] ∘ (%r9_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[7:0])[7:0] ∘ ((%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[255:32] ∘ (%r8_vpbroadcastw_ymm_xmm[63:8] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[15:8])[7:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[31:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[31:0])))[23:0])[15:0]

State for specgen instruction: vbroadcastss %xmm2, %ymm1:
%ymm1: %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]) ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0] ∘ (%ymm2_vbroadcastss_ymm_xmm[31:0] ∘ %ymm2_vbroadcastss_ymm_xmm[31:0]))

Final state
%ymm1: %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0])) ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0])))

=====================================
=====================================
Computing circuit for vpbroadcastw %xmm2, %ymm1

.target:
vbroadcastss %xmm2, %ymm1
callq .move_byte_1_of_ymm1_to_r8b
callq .move_byte_0_of_ymm1_to_r9b
callq .move_r8b_to_byte_3_of_ymm1
callq .move_r9b_to_byte_2_of_ymm1
vbroadcastss %xmm1, %ymm1
retq 

Initial state:
%ymm1: %ymm1

State for specgen instruction: vpbroadcastw %xmm2, %ymm1:
%ymm1: %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0])) ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0]) ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ (%ymm2_vpbroadcastw_ymm_xmm[15:0] ∘ %ymm2_vpbroadcastw_ymm_xmm[15:0])))

Final state
%ymm1: %ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0])) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0])))

=====================================
Circuits:

%ymm1  : %ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0])) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/