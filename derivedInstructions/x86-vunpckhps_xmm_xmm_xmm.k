// Autogenerated using stratification.
requires "x86-configuration.k"

module VUNPCKHPS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vunpckhps R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R2, RSMap), 128, 160)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192)))) )


)

    </regstate>
endmodule

module VUNPCKHPS-XMM-XMM-XMM-SEMANTICS
  imports VUNPCKHPS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vunpckhps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 %xmm3 }
must read:{ %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:unpckhpd %xmm3, %xmm2                           #  1     0     4      OPC=unpckhpd_xmm_xmm
circuit:callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11  #  2     0x4   5      OPC=callq_label
circuit:vmovddup %xmm9, %xmm1                           #  3     0x9   5      OPC=vmovddup_xmm_xmm
circuit:vmovq %xmm1, %xmm10                             #  4     0xe   4      OPC=vmovq_xmm_xmm
circuit:callq .move_128_64_xmm2_xmm8_xmm9               #  5     0x12  5      OPC=callq_label
circuit:callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1  #  6     0x17  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vunpckhps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:96] ∘ %ymm2[127:96] ∘ %ymm3[95:64] ∘ %ymm2[95:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/