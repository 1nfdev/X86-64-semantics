// Autogenerated using stratification.
requires "x86-configuration.k"

module XCHGQ-R64-R64
  imports X86-CONFIGURATION

  rule <k>
    execinstr (xchgq R1:R64, R2:R64,  .Typedoperands) => .
  ...</k>
    <regstate> ...
convToRegKeys(R1) |-> ( MI673 => concatenateMInt(extractMInt(orMInt(andMInt(orMInt(andMInt(MI642, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(extractMInt(MI672, 0, 32))), 0)), mi(64, -65536)), shlMInt(mi(64, uvalueMInt(extractMInt(extractMInt(orMInt(andMInt(MI674, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(MI642, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(extractMInt(MI672, 0, 32))), 0)), 48, 64), extractMInt(orMInt(andMInt(MI679, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(extractMInt(MI672, 32, 64))), 0)), 48, 64)))), 0)), 32, 64), 0, 16))), 0)), 32, 64), extractMInt(orMInt(andMInt(orMInt(andMInt(MI679, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(extractMInt(MI672, 32, 64))), 0)), mi(64, -65536)), shlMInt(mi(64, uvalueMInt(extractMInt(extractMInt(orMInt(andMInt(MI674, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(MI642, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(extractMInt(MI672, 0, 32))), 0)), 48, 64), extractMInt(orMInt(andMInt(MI679, mi(64, -4294967296)), shlMInt(mi(64, uvalueMInt(extractMInt(MI672, 32, 64))), 0)), 48, 64)))), 0)), 32, 64), 16, 32))), 0)), 32, 64)) )

convToRegKeys(R2) |-> ( MI672 => MI673 )

 "R8" |-> (MI679 => MI679)

 "R9" |-> (MI642 => MI642)

 "RDX" |-> (MI674 => MI674)


    ...</regstate>
endmodule

module XCHGQ-R64-R64-SEMANTICS
  imports XCHGQ-R64-R64
endmodule
