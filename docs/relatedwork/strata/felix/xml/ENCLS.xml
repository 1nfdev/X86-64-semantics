<?xml version="1.0" encoding="UTF-8"?>
<x86:instruction summary="Execute an Enclave System Function of Specified Leaf Number" xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:x86="http://www.felixcloutier.com/x86">
<x86:mnemonic name="ENCLS"/>
<table>
<tr>
<th>Opcode/Instruction</th>
<th>Op/En</th>
<th>64/32 bit Mode Support</th>
<th>CPUID Feature Flag</th>
<th>Description</th></tr>
<tr>
<td>NP 0F 01 CF ENCLS</td>
<td>NP</td>
<td>V/V</td>
<td>NA</td>
<td>This instruction is used to execute privileged Intel SGX leaf functions that are used for managing and debugging the enclaves.</td></tr></table>
<h2>Instruction Operand Encoding</h2>
<table>
<tr>
<td>Op/En</td>
<td>Operand 1</td>
<td>Operand 2</td>
<td>Operand 3</td>
<td>Implicit Register Operands</td></tr>
<tr>
<td>NP</td>
<td>NA</td>
<td>NA</td>
<td>NA</td>
<td>See Section 40.3</td></tr></table>
<h3>Description</h3>
<p>The ENCLS instruction invokes the specified privileged Intel SGX leaf function for managing and debugging enclaves. Software specifies the leaf function by setting the appropriate value in the register EAX as input. The registers RBX, RCX, and RDX have leaf-specific purpose, and may act as input, as output, or may be unused. In 64-bit mode, the instruction ignores upper 32 bits of the RAX register.</p>
<p>The ENCLS instruction produces an invalid-opcode exception (#UD) if CR0.PE = 0 or RFLAGS.VM = 1, or if it is executed in system-management mode (SMM). Additionally, any attempt to execute the instruction when CPL &gt; 0 results in #UD. The instruction produces a general-protection exception (#GP) if CR0.PG = 0 or if an attempt is made to invoke an undefined leaf function.</p>
<p>In VMX non-root operation, execution of ENCLS may cause a VM exit if the “enable ENCLS exiting” VM-execution control is 1. In this case, execution of individual leaf functions of ENCLS is governed by the ENCLS-exiting bitmap field in the VMCS. Each bit in that field corresponds to the index of an ENCLS leaf function (as provided in EAX).</p>
<p>Software in VMX root operation can thus intercept the invocation of various ENCLS leaf functions in VMX non-root operation by setting the “enable ENCLS exiting” VM-execution control and setting the corresponding bits in the ENCLS-exiting bitmap.</p>
<p>Addresses and operands are 32 bits outside 64-bit mode (IA32_EFER.LMA = 0 || CS.L = 0) and are 64 bits in 64-bit mode (IA32_EFER.LMA = 1 || CS.L = 1). CS.D value has no impact on address calculation. The DS segment is used to create linear addresses.</p>
<p>Segment override prefixes and address-size override prefixes are ignored, and is the REX prefix in 64-bit mode.</p>
<h3>Operation</h3>
<pre>IF TSX_ACTIVE
    THEN GOTO TSX_ABORT_PROCESSING; FI;
IF CR0.PE = 0 or RFLAGS.VM = 1 or in SMM or CPUID.SGX_LEAF.0:EAX.SE1 = 0
    THEN #UD; FI;
IF (CPL &gt; 0)
    THEN #UD; FI;
IF in VMX non-root operation and the “enable ENCLS exiting“ VM-execution control is 1
    THEN
        IF EAX &lt; 63 and ENCLS_exiting_bitmap[EAX] = 1 or EAX&gt; 62 and ENCLS_exiting_bitmap[63] = 1
            THEN VM exit;
        FI;
FI;
IF IA32_FEATURE_CONTROL.LOCK = 0 or IA32_FEATURE_CONTROL.SGX_ENABLE = 0
    THEN #GP(0); FI;
IF (EAX is an invalid leaf number)
    THEN #GP(0); FI;
IF CR0.PG = 0
    THEN #GP(0); FI;
(* DS must not be an expanded down segment *)
IF not in 64-bit mode and DS.Type is expand-down data
    THEN #GP(0); FI;
Jump to leaf specific flow
</pre>
<h3>Flags Affected</h3>
<p>See individual leaf functions</p>
<h3>Protected Mode Exceptions</h3>
<table>
<tr>
<td rowspan="4">#UD</td>
<td>If any of the LOCK/OSIZE/REP/VEX prefix is used.</td></tr>
<tr>
<td>If current privilege level is not 0.</td></tr>
<tr>
<td>If CPUID.(EAX=12H,ECX=0):EAX.SGX1 [bit 0] = 0.</td></tr>
<tr>
<td>If logical processor is in SMM.</td></tr>
<tr>
<td rowspan="5">#GP(0)</td>
<td>If IA32_FEATURE_CONTROL.LOCK = 0.</td></tr>
<tr>
<td>If IA32_FEATURE_CONTROL.SGX_ENABLE = 0.</td></tr>
<tr>
<td>If input value in EAX encodes an unsupported leaf.</td></tr>
<tr>
<td>If data segment expand down.</td></tr>
<tr>
<td>If CR0.PG=0.</td></tr></table>
<h3>Real-Address Mode Exceptions</h3>
<table>
<tr>
<td>#UD</td>
<td>ENCLS is not recognized in real mode.</td></tr></table>
<h3>Virtual-8086 Mode Exceptions</h3>
<table>
<tr>
<td>#UD</td>
<td>ENCLS is not recognized in virtual-8086 mode.</td></tr></table>
<h3>Compatibility Mode Exceptions</h3>
<p>Same exceptions as in protected mode.</p>
<h3>64-Bit Mode Exceptions</h3>
<table>
<tr>
<td rowspan="4">#UD</td>
<td>If any of the LOCK/OSIZE/REP/VEX prefix is used.</td></tr>
<tr>
<td>If current privilege level is not 0.</td></tr>
<tr>
<td>If CPUID.(EAX=12H,ECX=0):EAX.SGX1 [bit 0] = 0.</td></tr>
<tr>
<td>If logical processor is in SMM.</td></tr>
<tr>
<td rowspan="3">#GP(0)</td>
<td>If IA32_FEATURE_CONTROL.LOCK = 0.</td></tr>
<tr>
<td>If IA32_FEATURE_CONTROL.SGX_ENABLE = 0.</td></tr>
<tr>
<td>If input value in EAX encodes an unsupported leaf.</td></tr></table></x86:instruction>