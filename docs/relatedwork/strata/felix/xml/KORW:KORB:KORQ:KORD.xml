<?xml version="1.0" encoding="UTF-8"?>
<x86:instruction summary="Bitwise Logical OR Masks" xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:x86="http://www.felixcloutier.com/x86">
<x86:mnemonic name="KORW"/>
<x86:mnemonic name="KORB"/>
<x86:mnemonic name="KORQ"/>
<x86:mnemonic name="KORD"/>
<table>
<tr>
<th>Opcode/Instruction</th>
<th>Op/En</th>
<th>64/32 bit Mode Support</th>
<th>CPUID Feature Flag</th>
<th>Description</th></tr>
<tr>
<td>VEX.NDS.L1.0F.W0 45 /r KORW k1, k2, k3</td>
<td>RVR</td>
<td>V/V</td>
<td>AVX512F</td>
<td>Bitwise OR 16 bits masks k2 and k3 and place result in k1.</td></tr>
<tr>
<td>VEX.L1.66.0F.W0 45 /r KORB k1, k2, k3</td>
<td>RVR</td>
<td>V/V</td>
<td>AVX512DQ</td>
<td>Bitwise OR 8 bits masks k2 and k3 and place result in k1.</td></tr>
<tr>
<td>VEX.L1.0F.W1 45 /r KORQ k1, k2, k3</td>
<td>RVR</td>
<td>V/V</td>
<td>AVX512BW</td>
<td>Bitwise OR 64 bits masks k2 and k3 and place result in k1.</td></tr>
<tr>
<td>VEX.L1.66.0F.W1 45 /r KORD k1, k2, k3</td>
<td>RVR</td>
<td>V/V</td>
<td>AVX512BW</td>
<td>Bitwise OR 32 bits masks k2 and k3 and place result in k1.</td></tr></table>
<h2>Instruction Operand Encoding</h2>
<table>
<tr>
<td>Op/En</td>
<td>Operand 1</td>
<td>Operand 2</td>
<td>Operand 3</td></tr>
<tr>
<td>RVR</td>
<td>ModRM:reg (w)</td>
<td>VEX.1vvv (r)</td>
<td>ModRM:r/m (r, ModRM:[7:6] must be 11b)</td></tr></table>
<h2>Description</h2>
<p>Performs a bitwise OR between the vector mask k2 and the vector mask k3, and writes the result into vector mask k1 (three-operand form).</p>
<h2>Operation</h2>
<h3>KORW</h3>
<pre>DEST[15:0]←SRC1[15:0] BITWISE OR SRC2[15:0]
DEST[MAX_KL-1:16] ← 0
</pre>
<h3>KORB</h3>
<pre>DEST[7:0]←SRC1[7:0] BITWISE OR SRC2[7:0]
DEST[MAX_KL-1:8] ← 0
</pre>
<h3>KORQ</h3>
<pre>DEST[63:0]←SRC1[63:0] BITWISE OR SRC2[63:0]
DEST[MAX_KL-1:64] ← 0
</pre>
<h3>KORD</h3>
<pre>DEST[31:0]←SRC1[31:0] BITWISE OR SRC2[31:0]
DEST[MAX_KL-1:32] ← 0
</pre>
<h2>Intel C/C++ Compiler Intrinsic Equivalent</h2>
<pre>KORW __mmask16 _mm512_kor(__mmask16 a, __mmask16 b);
</pre>
<h2>Flags Affected</h2>
<p>None</p>
<h2>SIMD Floating-Point Exceptions</h2>
<p>None</p>
<h2>Other Exceptions</h2>
<p>See Exceptions Type K20.</p></x86:instruction>