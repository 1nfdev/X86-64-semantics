[4m[1m[34mCheck if supported: addb_r8_rh[0m
[4m[1m[34mcreatespec addb_r8_rh: kproveSpecs//x86-semantics_addb_r8_rh_spec.k[0m
[4m[1m[34maddb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %ah, %eax
%ah -> 1
%rax -> 1
%eax -> 1

Circuit: addb %al, %bl
%af -> 1
%cf -> 1
%of -> 1
%bl -> 1
%pf -> 1
%al -> 1
%zf -> 1
%sf -> 1

Total Circuit
RAX -> 1
PF -> 1
SF -> 1
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
ZF -> 1

Target
RAX -> 1
AF -> 1
RBX -> 1
CF -> 1
OF -> 1
ZF -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove addb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_addb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_addb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput addb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_addb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput addb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34maddb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn addb_r8_rh: derivedInstructions//x86-addb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "addb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: addb_rh_r8[0m
[4m[1m[34mcreatespec addb_rh_r8: kproveSpecs//x86-semantics_addb_rh_r8_spec.k[0m
[4m[1m[34maddb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xaddb %ah, %bl
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1
%bl -> 1
%zf -> 1
%ah -> 1
%sf -> 1

Circuit: callq .set_szp_for_bl
%sf -> 1
%zf -> 1
%bl -> 1
%pf -> 1

Circuit: movb %bl, %ah
%ah -> 1
%bl -> 1

Total Circuit
RAX -> 1
PF -> 1
SF -> 1
RBX -> 1
AF -> 1
CF -> 1
OF -> 1
ZF -> 1

Target
RAX -> 1
ZF -> 1
CF -> 1
OF -> 1
RBX -> 1
AF -> 1
SF -> 1
PF -> 1

[4m[1m[34mkprove addb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_addb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_addb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput addb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_addb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput addb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34maddb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn addb_rh_r8: derivedInstructions//x86-addb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "addb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: bswap_r32[0m
[4m[1m[34mcreatespec bswap_r32: kproveSpecs//x86-semantics_bswap_r32_spec.k[0m
[4m[1m[34mbswap_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_032_016_ebx_r8w_r9w
%ebx -> 1
%r8w -> 1
%r9w -> 1

Circuit: callq .move_016_032_r8w_r9w_ecx
%r8w -> 1
%ecx -> 1
%r9w -> 1

Circuit: callq .move_byte_3_of_rbx_to_r8b
%r8b -> 1
%rbx -> 1

Circuit: notl %ebx
%ebx -> 1
%rbx -> 1

Circuit: callq .move_008_016_r8b_r9b_bx
%r8b -> 1
%r9b -> 1
%bx -> 1

Circuit: callq .move_016_008_cx_r8b_r9b
%r9b -> 1
%r8b -> 1
%cx -> 1

Circuit: callq .move_r8b_to_byte_3_of_rbx
%rbx -> 1
%r8b -> 1

Circuit: callq .move_r9b_to_byte_2_of_rbx
%r9b -> 1
%rbx -> 1

Total Circuit
R8 -> 1
RBX -> 1
R9 -> 1
RCX -> 1

Target
RBX -> 1

[4m[1m[34mkprove bswap_r32[0m
time krun --prove kproveSpecs//x86-semantics_bswap_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_bswap_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput bswap_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_bswap_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput bswap_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mbswap_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn bswap_r32: derivedInstructions//x86-bswap_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "bswap %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovbeq_r64_r64[0m
[4m[1m[34mcreatespec cmovbeq_r64_r64: kproveSpecs//x86-semantics_cmovbeq_r64_r64_spec.k[0m
[4m[1m[34mcmovbeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovbeq_r64_r64[0m
Circuit: setnbe %al
%zf -> 1
%al -> 1
%cf -> 1

Circuit: xaddb %al, %al
%zf -> 1
%al -> 1
%sf -> 1
%cf -> 1
%af -> 1
%pf -> 1
%of -> 1

Circuit: cmoveq %rcx, %rbx
%rbx -> 1
%zf -> 1
cmov -> 1
%rcx -> 1

Total Circuit
RCX -> 1
RAX -> 1
 -> 1
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
ZF -> 1
PF -> 1
SF -> 1

Target
ZF -> 1
RBX -> 1
CF -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovbeq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovbeq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovbeq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovbeq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovbeq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovbeq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovbeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovbeq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovbeq_r64_r64: derivedInstructions//x86-cmovbeq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovbeq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnzl_r32_r32[0m
[4m[1m[34mcreatespec cmovnzl_r32_r32: kproveSpecs//x86-semantics_cmovnzl_r32_r32_spec.k[0m
[4m[1m[34mcmovnzl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnzl_r32_r32[0m
Circuit: cmoveq %rbx, %rcx
cmov -> 1
%rcx -> 1
%rbx -> 1
%zf -> 1

Circuit: movl %ecx, %ebx
%rbx -> 1
%ebx -> 1
%ecx -> 1

Total Circuit
 -> 1
RCX -> 1
ZF -> 1
RBX -> 1

Target
ZF -> 1
RBX -> 1
RCX -> 1
 -> 1

[4m[1m[34mkprove cmovnzl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnzl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnzl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnzl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnzl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnzl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnzl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnzl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnzl_r32_r32: derivedInstructions//x86-cmovnzl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnzl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cvtpd2dq_xmm_xmm[0m
cvtpd2dq_xmm_xmm 0 derivedInstructions//x86-vcvtpd2dqx_xmm_xmm.k
Warn: [4m[1m[35mcvtpd2dq_xmm_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: cvttsd2sil_r32_xmm[0m
cvttsd2sil_r32_xmm 0 derivedInstructions//x86-vcvttpd2dq_xmm_ymm.k
Warn: [4m[1m[35mcvttsd2sil_r32_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: cwtd[0m
[4m[1m[34mcreatespec cwtd: kproveSpecs//x86-semantics_cwtd_spec.k[0m
[4m[1m[34mcwtd: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movswq %ax, %rbx
%rbx -> 1
%ax -> 1

Circuit: callq .move_064_032_rbx_r10d_r11d
%r11d -> 1
%r10d -> 1
%rbx -> 1

Circuit: movq $0xffffffffffffffff, %rdx
\$0xffffffffffffffff -> 1
%rdx -> 1

Circuit: xaddw %dx, %r11w
%sf -> 1
%dx -> 1
%zf -> 1
%r11w -> 1
%of -> 1
%pf -> 1
%af -> 1
%cf -> 1

Total Circuit
RAX -> 1
RDX -> 1
 -> 1
R10 -> 1
ZF -> 1
AF -> 1
R11 -> 1
RBX -> 1
OF -> 1
CF -> 1
SF -> 1
PF -> 1

Target
RAX -> 1
RDX -> 1

[4m[1m[34mkprove cwtd[0m
time krun --prove kproveSpecs//x86-semantics_cwtd_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cwtd_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cwtd[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cwtd_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cwtd[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcwtd: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cwtd: derivedInstructions//x86-cwtd.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cwtd" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: divss_xmm_xmm[0m
[4m[1m[34mcreatespec divss_xmm_xmm: kproveSpecs//x86-semantics_divss_xmm_xmm_spec.k[0m
[4m[1m[34mdivss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vdivps %xmm2, %xmm1, %xmm5
avx -> 1
%xmm1 -> 1
%xmm2 -> 1
%ymm5 -> 1
%xmm5 -> 1

Circuit: movss %xmm5, %xmm1
%xmm1 -> 1
sse -> 1
%xmm5 -> 1

Total Circuit
YMM5 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove divss_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_divss_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_divss_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput divss_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_divss_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput divss_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mdivss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn divss_xmm_xmm: derivedInstructions//x86-divss_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "divss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: haddpd_xmm_xmm[0m
[4m[1m[34mcreatespec haddpd_xmm_xmm: kproveSpecs//x86-semantics_haddpd_xmm_xmm_spec.k[0m
[4m[1m[34mhaddpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vhaddpd %xmm2, %xmm1, %xmm7
avx -> 1
%xmm1 -> 1
%xmm2 -> 1
%ymm7 -> 1
%xmm7 -> 1

Circuit: movapd %xmm7, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm7 -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM7 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove haddpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_haddpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_haddpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput haddpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_haddpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput haddpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mhaddpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn haddpd_xmm_xmm: derivedInstructions//x86-haddpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "haddpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: incb_rh[0m
[4m[1m[34mcreatespec incb_rh: kproveSpecs//x86-semantics_incb_rh_spec.k[0m
[4m[1m[34mincb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorb %al, %al
%zf -> 1
%al -> 1
%sf -> 1
%cf -> 1
%af -> 1
%pf -> 1
%of -> 1

Circuit: callq .set_cf
%cf -> 1

Circuit: adcb %al, %ah
%sf -> 1
%zf -> 1
%ax -> 1
%ah -> 1
%al -> 1
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1

Total Circuit
RAX -> 1
ZF -> 1
OF -> 1
CF -> 1
AF -> 1
SF -> 1
PF -> 1

Target
RAX -> 1
OF -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove incb_rh[0m
time krun --prove kproveSpecs//x86-semantics_incb_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_incb_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput incb_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_incb_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput incb_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mincb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn incb_rh: derivedInstructions//x86-incb_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "incb %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: incq_r64[0m
[4m[1m[34mcreatespec incq_r64: kproveSpecs//x86-semantics_incq_r64_spec.k[0m
[4m[1m[34mincq_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vxorps %xmm2, %xmm2, %xmm7
%ymm7 -> 1
%xmm2 -> 1
avx -> 1
%xmm7 -> 1

Circuit: vsubpd %ymm7, %ymm7, %ymm1
%ymm7 -> 1
avx -> 1
%ymm1 -> 1

Circuit: callq .move_128_064_xmm1_r8_r9
%r8 -> 1
%r9 -> 1
%xmm1 -> 1

Circuit: negw %r8w
%r8w -> 1
%sf -> 1
%zf -> 1
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1

Circuit: setge %r9b
%of -> 1
%sf -> 1
%r9b -> 1

Circuit: addq %r9, %rbx
%rbx -> 1
%sf -> 1
%zf -> 1
%r9 -> 1
%of -> 1
%pf -> 1
%af -> 1
%cf -> 1

Total Circuit
 -> 1
YMM2 -> 1
R9 -> 1
YMM1 -> 1
SF -> 1
R8 -> 1
PF -> 1
YMM7 -> 1
ZF -> 1
RBX -> 1
AF -> 1
CF -> 1
OF -> 1

Target
OF -> 1
AF -> 1
RBX -> 1
ZF -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove incq_r64[0m
time krun --prove kproveSpecs//x86-semantics_incq_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_incq_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput incq_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_incq_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput incq_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mincq_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn incq_r64: derivedInstructions//x86-incq_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "incq %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: maxpd_xmm_xmm[0m
[4m[1m[34mcreatespec maxpd_xmm_xmm: kproveSpecs//x86-semantics_maxpd_xmm_xmm_spec.k[0m
[4m[1m[34mmaxpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxpd %xmm2, %xmm1, %xmm3
%ymm3 -> 1
%xmm2 -> 1
%xmm1 -> 1
%xmm3 -> 1
avx -> 1

Circuit: callq .move_128_032_xmm3_xmm4_xmm5_xmm6_xmm7
%xmm7 -> 1
%xmm6 -> 1
%xmm5 -> 1
%xmm4 -> 1
%xmm3 -> 1

Circuit: callq .move_032_128_xmm4_xmm5_xmm6_xmm7_xmm1
%xmm1 -> 1
%xmm5 -> 1
%xmm4 -> 1
%xmm6 -> 1
%xmm7 -> 1

Total Circuit
YMM5 -> 1
YMM3 -> 1
YMM4 -> 1
YMM7 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM6 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove maxpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_maxpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_maxpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput maxpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_maxpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput maxpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmaxpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn maxpd_xmm_xmm: derivedInstructions//x86-maxpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "maxpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: maxsd_xmm_xmm[0m
[4m[1m[34mcreatespec maxsd_xmm_xmm: kproveSpecs//x86-semantics_maxsd_xmm_xmm_spec.k[0m
[4m[1m[34mmaxsd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxsd %xmm2, %xmm1, %xmm6
%xmm6 -> 1
%ymm6 -> 1
%xmm1 -> 1
avx -> 1
%xmm2 -> 1

Circuit: movupd %xmm6, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm6 -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM6 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove maxsd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_maxsd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_maxsd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput maxsd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_maxsd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput maxsd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmaxsd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn maxsd_xmm_xmm: derivedInstructions//x86-maxsd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "maxsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: maxss_xmm_xmm[0m
[4m[1m[34mcreatespec maxss_xmm_xmm: kproveSpecs//x86-semantics_maxss_xmm_xmm_spec.k[0m
[4m[1m[34mmaxss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxss %xmm2, %xmm1, %xmm10
%xmm1 -> 1
avx -> 1
%xmm2 -> 1
%xmm10 -> 1
%ymm10 -> 1

Circuit: movdqa %xmm10, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm10 -> 1

Total Circuit
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM10 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove maxss_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_maxss_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_maxss_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput maxss_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_maxss_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput maxss_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmaxss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn maxss_xmm_xmm: derivedInstructions//x86-maxss_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "maxss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: minpd_xmm_xmm[0m
[4m[1m[34mcreatespec minpd_xmm_xmm: kproveSpecs//x86-semantics_minpd_xmm_xmm_spec.k[0m
[4m[1m[34mminpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vminpd %xmm2, %xmm1, %xmm3
%ymm3 -> 1
%xmm2 -> 1
avx -> 1
%xmm3 -> 1
%xmm1 -> 1

Circuit: callq .move_128_64_xmm3_xmm8_xmm9
%xmm9 -> 1
%xmm8 -> 1
%xmm3 -> 1

Circuit: callq .move_64_128_xmm8_xmm9_xmm1
%xmm9 -> 1
%xmm1 -> 1
%xmm8 -> 1

Total Circuit
YMM3 -> 1
YMM1 -> 1
 -> 1
YMM9 -> 1
YMM2 -> 1
YMM8 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove minpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_minpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_minpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput minpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_minpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput minpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mminpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn minpd_xmm_xmm: derivedInstructions//x86-minpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "minpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: minss_xmm_xmm[0m
[4m[1m[34mcreatespec minss_xmm_xmm: kproveSpecs//x86-semantics_minss_xmm_xmm_spec.k[0m
[4m[1m[34mminss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
%xmm1 -> 1
%xmm8 -> 1
%xmm9 -> 1
%xmm10 -> 1
%xmm11 -> 1

Circuit: callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7
%xmm2 -> 1
%xmm5 -> 1
%xmm4 -> 1
%xmm7 -> 1
%xmm6 -> 1

Circuit: minps %xmm4, %xmm8
sse -> 1
%xmm4 -> 1
%xmm8 -> 1

Circuit: callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1
%xmm11 -> 1
%xmm10 -> 1
%xmm9 -> 1
%xmm8 -> 1
%xmm1 -> 1

Total Circuit
YMM5 -> 1
YMM11 -> 1
YMM4 -> 1
YMM10 -> 1
YMM7 -> 1
 -> 1
YMM9 -> 1
YMM2 -> 1
YMM8 -> 1
YMM1 -> 1
YMM6 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove minss_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_minss_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_minss_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput minss_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_minss_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput minss_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mminss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn minss_xmm_xmm: derivedInstructions//x86-minss_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "minss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movq_xmm_r64[0m
[4m[1m[34mcreatespec movq_xmm_r64: kproveSpecs//x86-semantics_movq_xmm_r64_spec.k[0m
[4m[1m[34mmovq_xmm_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovq %rbx, %xmm6
%ymm6 -> 1
%xmm6 -> 1
%rbx -> 1
avx -> 1

Circuit: vpor %xmm6, %xmm6, %xmm0
%xmm6 -> 1
%xmm0 -> 1
%ymm0 -> 1
avx -> 1

Circuit: movupd %xmm0, %xmm1
%xmm0 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
RBX -> 1
YMM0 -> 1
 -> 1
YMM1 -> 1
YMM6 -> 1

Target
RBX -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove movq_xmm_r64[0m
time krun --prove kproveSpecs//x86-semantics_movq_xmm_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movq_xmm_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movq_xmm_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movq_xmm_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movq_xmm_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovq_xmm_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movq_xmm_r64: derivedInstructions//x86-movq_xmm_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movq %rbx, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movsldup_xmm_xmm[0m
[4m[1m[34mcreatespec movsldup_xmm_xmm: kproveSpecs//x86-semantics_movsldup_xmm_xmm_spec.k[0m
[4m[1m[34mmovsldup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovsldup %xmm2, %xmm12
%xmm2 -> 1
avx -> 1
%ymm12 -> 1
%xmm12 -> 1

Circuit: movdqa %xmm12, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm12 -> 1

Total Circuit
YMM12 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove movsldup_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movsldup_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movsldup_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movsldup_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movsldup_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movsldup_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovsldup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movsldup_xmm_xmm: derivedInstructions//x86-movsldup_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movsldup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movzwq_r64_r16[0m
[4m[1m[34mcreatespec movzwq_r64_r16: kproveSpecs//x86-semantics_movzwq_r64_r16_spec.k[0m
[4m[1m[34mmovzwq_r64_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x0, %rbx
%rbx -> 1
\$0x0 -> 1

Circuit: decw %bx
%zf -> 1
%sf -> 1
%af -> 1
%of -> 1
%pf -> 1
%bx -> 1

Circuit: xaddw %bx, %cx
%zf -> 1
%sf -> 1
%cf -> 1
%af -> 1
%cx -> 1
%bx -> 1
%pf -> 1
%of -> 1

Total Circuit
OF -> 1
CF -> 1
RBX -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1
RCX -> 1
 -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove movzwq_r64_r16[0m
time krun --prove kproveSpecs//x86-semantics_movzwq_r64_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movzwq_r64_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movzwq_r64_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movzwq_r64_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movzwq_r64_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovzwq_r64_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movzwq_r64_r16: derivedInstructions//x86-movzwq_r64_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movzwq %cx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: negb_r8[0m
[4m[1m[34mcreatespec negb_r8: kproveSpecs//x86-semantics_negb_r8_spec.k[0m
[4m[1m[34mnegb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %bl, %r14d
%r14 -> 1
%bl -> 1
%r14d -> 1

Circuit: negw %r14w
%cf -> 1
%af -> 1
%pf -> 1
%of -> 1
%r14w -> 1
%zf -> 1
%sf -> 1

Circuit: xaddb %bl, %r14b
%zf -> 1
%r14b -> 1
%sf -> 1
%af -> 1
%cf -> 1
%of -> 1
%bl -> 1
%pf -> 1

Circuit: callq .set_szp_for_bl
%bl -> 1
%pf -> 1
%sf -> 1
%zf -> 1

Total Circuit
ZF -> 1
RBX -> 1
AF -> 1
OF -> 1
CF -> 1
SF -> 1
R14 -> 1
PF -> 1

Target
SF -> 1
PF -> 1
ZF -> 1
OF -> 1
CF -> 1
AF -> 1
RBX -> 1

[4m[1m[34mkprove negb_r8[0m
time krun --prove kproveSpecs//x86-semantics_negb_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_negb_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput negb_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_negb_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput negb_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnegb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn negb_r8: derivedInstructions//x86-negb_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "negb %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: notb_r8[0m
[4m[1m[34mcreatespec notb_r8: kproveSpecs//x86-semantics_notb_r8_spec.k[0m
[4m[1m[34mnotb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorq %rdx, %rdx
%sf -> 1
%zf -> 1
%rdx -> 1
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1

Circuit: adcb %bl, %dl
%sf -> 1
%zf -> 1
%dl -> 1
%of -> 1
%pf -> 1
%bl -> 1
%af -> 1
%cf -> 1

Circuit: notl %edx
%edx -> 1
%rdx -> 1

Circuit: movswl %dx, %ebx
%rbx -> 1
%dx -> 1
%ebx -> 1

Total Circuit
RDX -> 1
ZF -> 1
CF -> 1
OF -> 1
AF -> 1
RBX -> 1
SF -> 1
PF -> 1

Target
RBX -> 1

[4m[1m[34mkprove notb_r8[0m
time krun --prove kproveSpecs//x86-semantics_notb_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_notb_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput notb_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_notb_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput notb_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnotb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn notb_r8: derivedInstructions//x86-notb_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "notb %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: orb_rh_r8[0m
[4m[1m[34mcreatespec orb_rh_r8: kproveSpecs//x86-semantics_orb_rh_r8_spec.k[0m
[4m[1m[34morb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: orb_rh_r8[0m
Undef Set
af -> 1

Circuit: xorb %al, %al
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1
%al -> 1
%zf -> 1
%sf -> 1

Circuit: xchgb %ah, %bl
%bl -> 1
%ah -> 1

Circuit: adcb %ah, %al
%al -> 1
%ax -> 1
%zf -> 1
%ah -> 1
%sf -> 1
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1

Circuit: movb %bl, %bh
%bh -> 1
%bl -> 1

Circuit: orw %bx, %ax
%of -> 1
%pf -> 1
%bx -> 1
%af -> 1
%cf -> 1
%sf -> 1
%ax -> 1
%zf -> 1

Total Circuit
SF -> 1
PF -> 1
ZF -> 1
RBX -> 1
AF -> 1
CF -> 1
OF -> 1
RAX -> 1

Target
RAX -> 1
RBX -> 1
AF -> 1
CF -> 1
OF -> 1
ZF -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove orb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_orb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_orb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput orb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_orb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput orb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34morb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn orb_rh_r8: derivedInstructions//x86-orb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "orb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: orl_r32_r32[0m
[4m[1m[34mcreatespec orl_r32_r32: kproveSpecs//x86-semantics_orl_r32_r32_spec.k[0m
[4m[1m[34morl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: orl_r32_r32[0m
Undef Set
af -> 1

Circuit: movl %ebx, %r8d
%r8 -> 1
%r8d -> 1
%ebx -> 1

Circuit: movswq %cx, %r11
%r11 -> 1
%cx -> 1

Circuit: xaddl %r11d, %ecx
%sf -> 1
%r11 -> 1
%zf -> 1
%of -> 1
%pf -> 1
%af -> 1
%ecx -> 1
%r11d -> 1
%rcx -> 1
%cf -> 1

Circuit: orq %r11, %r8
%r8 -> 1
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1
%r11 -> 1
%zf -> 1
%sf -> 1

Circuit: xchgl %ebx, %r8d
%ebx -> 1
%rbx -> 1
%r8d -> 1
%r8 -> 1

Circuit: callq .set_szp_for_ebx
%ebx -> 1
%zf -> 1
%sf -> 1
%pf -> 1

Total Circuit
RCX -> 1
PF -> 1
SF -> 1
R8 -> 1
R11 -> 1
RBX -> 1
AF -> 1
CF -> 1
OF -> 1
ZF -> 1

Target
CF -> 1
OF -> 1
RBX -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1
RCX -> 1

[4m[1m[34mkprove orl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_orl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_orl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput orl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_orl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput orl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34morl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn orl_r32_r32: derivedInstructions//x86-orl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "orl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: pandn_xmm_xmm[0m
[4m[1m[34mcreatespec pandn_xmm_xmm: kproveSpecs//x86-semantics_pandn_xmm_xmm_spec.k[0m
[4m[1m[34mpandn_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: por %xmm1, %xmm2
%xmm1 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: pxor %xmm2, %xmm1
%xmm2 -> 1
sse2 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM2 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove pandn_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_pandn_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_pandn_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput pandn_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_pandn_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput pandn_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpandn_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn pandn_xmm_xmm: derivedInstructions//x86-pandn_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "pandn %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: popcntl_r32_r32[0m
[4m[1m[34mcreatespec popcntl_r32_r32: kproveSpecs//x86-semantics_popcntl_r32_r32_spec.k[0m
[4m[1m[34mpopcntl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movl %ecx, %r8d
%r8d -> 1
%ecx -> 1
%r8 -> 1

Circuit: popcntq %r8, %rbx
%rbx -> 1
%sf -> 1
popcnt -> 1
%zf -> 1
%pf -> 1
%of -> 1
%cf -> 1
%r8 -> 1
%af -> 1

Total Circuit
RCX -> 1
 -> 1
OF -> 1
CF -> 1
RBX -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1
R8 -> 1

Target
 -> 1
RCX -> 1
PF -> 1
SF -> 1
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
ZF -> 1

[4m[1m[34mkprove popcntl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_popcntl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_popcntl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput popcntl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_popcntl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput popcntl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpopcntl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn popcntl_r32_r32: derivedInstructions//x86-popcntl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "popcntl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: punpckhqdq_xmm_xmm[0m
[4m[1m[34mcreatespec punpckhqdq_xmm_xmm: kproveSpecs//x86-semantics_punpckhqdq_xmm_xmm_spec.k[0m
[4m[1m[34mpunpckhqdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: unpckhpd %xmm2, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm2 -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove punpckhqdq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_punpckhqdq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_punpckhqdq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput punpckhqdq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_punpckhqdq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput punpckhqdq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpunpckhqdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn punpckhqdq_xmm_xmm: derivedInstructions//x86-punpckhqdq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "punpckhqdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rclb_r8_one[0m
[4m[1m[34mcreatespec rclb_r8_one: kproveSpecs//x86-semantics_rclb_r8_one_spec.k[0m
[4m[1m[34mrclb_r8_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %bl, %eax
%eax -> 1
%rax -> 1
%bl -> 1

Circuit: movq %rax, %rbx
%rax -> 1
%rbx -> 1

Circuit: adcb %bl, %bl
%pf -> 1
%bl -> 1
%of -> 1
%cf -> 1
%af -> 1
%sf -> 1
%zf -> 1

Total Circuit
RAX -> 1
OF -> 1
CF -> 1
RBX -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1

Target
 -> 1
OF -> 1
CF -> 1
RBX -> 1

[4m[1m[34mkprove rclb_r8_one[0m
time krun --prove kproveSpecs//x86-semantics_rclb_r8_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rclb_r8_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rclb_r8_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rclb_r8_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rclb_r8_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrclb_r8_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rclb_r8_one: derivedInstructions//x86-rclb_r8_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rclb \$0x1, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rolb_rh_one[0m
[4m[1m[34mcreatespec rolb_rh_one: kproveSpecs//x86-semantics_rolb_rh_one_spec.k[0m
[4m[1m[34mrolb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .set_sf
%sf -> 1

Circuit: setns %al
%sf -> 1
%al -> 1

Circuit: xaddb %ah, %al
%cf -> 1
%af -> 1
%pf -> 1
%of -> 1
%ax -> 1
%zf -> 1
%ah -> 1
%al -> 1
%sf -> 1

Circuit: xaddb %ah, %al
%sf -> 1
%ah -> 1
%zf -> 1
%ax -> 1
%al -> 1
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1

Circuit: addw %ax, %ax
%of -> 1
%pf -> 1
%af -> 1
%cf -> 1
%sf -> 1
%ax -> 1
%zf -> 1

Total Circuit
RAX -> 1
CF -> 1
OF -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1

Target
CF -> 1
OF -> 1
 -> 1
RAX -> 1

[4m[1m[34mkprove rolb_rh_one[0m
time krun --prove kproveSpecs//x86-semantics_rolb_rh_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rolb_rh_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rolb_rh_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rolb_rh_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rolb_rh_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrolb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rolb_rh_one: derivedInstructions//x86-rolb_rh_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rolb \$0x1, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: roll_r32_one[0m
[4m[1m[34mcreatespec roll_r32_one: kproveSpecs//x86-semantics_roll_r32_one_spec.k[0m
[4m[1m[34mroll_r32_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorl %eax, %eax
%eax -> 1
%sf -> 1
%zf -> 1
%rax -> 1
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1

Circuit: movl %ebx, %esp
%rsp -> 1
%ebx -> 1
%esp -> 1

Circuit: rcll $0x1, %esp
%of -> 1
%cf -> 1
%rsp -> 1
\$0x1 -> 1
%esp -> 1

Circuit: rcll $0x1, %ebx
%ebx -> 1
%rbx -> 1
%cf -> 1
\$0x1 -> 1
%of -> 1

Total Circuit
 -> 1
RAX -> 1
RSP -> 1
SF -> 1
PF -> 1
ZF -> 1
AF -> 1
RBX -> 1
CF -> 1
OF -> 1

Target
 -> 1
OF -> 1
CF -> 1
RBX -> 1

[4m[1m[34mkprove roll_r32_one[0m
time krun --prove kproveSpecs//x86-semantics_roll_r32_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_roll_r32_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput roll_r32_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_roll_r32_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput roll_r32_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mroll_r32_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn roll_r32_one: derivedInstructions//x86-roll_r32_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "roll \$0x1, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rsqrtss_xmm_xmm[0m
[4m[1m[34mcreatespec rsqrtss_xmm_xmm: kproveSpecs//x86-semantics_rsqrtss_xmm_xmm_spec.k[0m
[4m[1m[34mrsqrtss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vdivps %xmm2, %xmm1, %xmm8
%ymm8 -> 1
%xmm1 -> 1
avx -> 1
%xmm2 -> 1
%xmm8 -> 1

Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm2 -> 1
%xmm8 -> 1
%xmm9 -> 1
%xmm10 -> 1
%xmm11 -> 1

Circuit: vrsqrtps %ymm8, %ymm2
%ymm8 -> 1
avx -> 1
%ymm2 -> 1

Circuit: movss %xmm2, %xmm1
%xmm2 -> 1
%xmm1 -> 1
sse -> 1

Total Circuit
YMM10 -> 1
YMM11 -> 1
YMM1 -> 1
YMM2 -> 1
YMM8 -> 1
 -> 1
YMM9 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove rsqrtss_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_rsqrtss_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rsqrtss_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rsqrtss_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rsqrtss_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rsqrtss_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrsqrtss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rsqrtss_xmm_xmm: derivedInstructions//x86-rsqrtss_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rsqrtss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: salb_rh_one[0m
[4m[1m[34mcreatespec salb_rh_one: kproveSpecs//x86-semantics_salb_rh_one_spec.k[0m
[4m[1m[34msalb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: salb_rh_one[0m
Undef Set
af -> 1

Circuit: shlb $0x1, %ah
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1
\$0x1 -> 1
%sf -> 1
%zf -> 1
%ah -> 1

Total Circuit
ZF -> 1
CF -> 1
OF -> 1
AF -> 1
SF -> 1
PF -> 1
RAX -> 1
 -> 1

Target
SF -> 1
PF -> 1
ZF -> 1
AF -> 1
OF -> 1
CF -> 1
 -> 1
RAX -> 1

[4m[1m[34mkprove salb_rh_one[0m
time krun --prove kproveSpecs//x86-semantics_salb_rh_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_salb_rh_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput salb_rh_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_salb_rh_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput salb_rh_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msalb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn salb_rh_one: derivedInstructions//x86-salb_rh_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "salb \$0x1, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: seta_rh[0m
[4m[1m[34mcreatespec seta_rh: kproveSpecs//x86-semantics_seta_rh_spec.k[0m
[4m[1m[34mseta_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rbx
%rbx -> 1
%zf -> 1

Circuit: setnc %ah
%ah -> 1
%cf -> 1

Circuit: decb %bl
%af -> 1
%of -> 1
%pf -> 1
%bl -> 1
%zf -> 1
%sf -> 1

Circuit: cmovzq %rbx, %rax
%zf -> 1
%rax -> 1
%rbx -> 1
cmov -> 1

Total Circuit
 -> 1
RAX -> 1
PF -> 1
SF -> 1
RBX -> 1
AF -> 1
OF -> 1
CF -> 1
ZF -> 1

Target
RAX -> 1
CF -> 1
ZF -> 1

[4m[1m[34mkprove seta_rh[0m
time krun --prove kproveSpecs//x86-semantics_seta_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_seta_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput seta_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_seta_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput seta_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mseta_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn seta_rh: derivedInstructions//x86-seta_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "seta %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setae_rh[0m
[4m[1m[34mcreatespec setae_rh: kproveSpecs//x86-semantics_setae_rh_spec.k[0m
[4m[1m[34msetae_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setnc %ah
%cf -> 1
%ah -> 1

Total Circuit
RAX -> 1
CF -> 1

Target
CF -> 1
RAX -> 1

[4m[1m[34mkprove setae_rh[0m
time krun --prove kproveSpecs//x86-semantics_setae_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setae_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setae_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setae_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setae_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetae_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setae_rh: derivedInstructions//x86-setae_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setae %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setbe_rh[0m
[4m[1m[34mcreatespec setbe_rh: kproveSpecs//x86-semantics_setbe_rh_spec.k[0m
[4m[1m[34msetbe_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setbe %dl
%dl -> 1
%zf -> 1
%cf -> 1

Circuit: xorw %ax, %ax
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1
%sf -> 1
%zf -> 1
%ax -> 1

Circuit: xaddb %ah, %dl
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1
%sf -> 1
%zf -> 1
%ah -> 1
%dl -> 1

Total Circuit
SF -> 1
PF -> 1
ZF -> 1
AF -> 1
CF -> 1
OF -> 1
RAX -> 1
RDX -> 1

Target
RAX -> 1
ZF -> 1
CF -> 1

[4m[1m[34mkprove setbe_rh[0m
time krun --prove kproveSpecs//x86-semantics_setbe_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setbe_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setbe_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setbe_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setbe_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetbe_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setbe_rh: derivedInstructions//x86-setbe_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setbe %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sete_rh[0m
[4m[1m[34mcreatespec sete_rh: kproveSpecs//x86-semantics_sete_rh_spec.k[0m
[4m[1m[34msete_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rbx
%rbx -> 1
%zf -> 1

Circuit: xorw %ax, %ax
%ax -> 1
%zf -> 1
%sf -> 1
%cf -> 1
%af -> 1
%pf -> 1
%of -> 1

Circuit: xaddb %bl, %ah
%af -> 1
%cf -> 1
%of -> 1
%bl -> 1
%pf -> 1
%ah -> 1
%zf -> 1
%sf -> 1

Total Circuit
SF -> 1
PF -> 1
ZF -> 1
OF -> 1
CF -> 1
AF -> 1
RBX -> 1
RAX -> 1

Target
ZF -> 1
RAX -> 1

[4m[1m[34mkprove sete_rh[0m
time krun --prove kproveSpecs//x86-semantics_sete_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sete_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sete_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sete_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sete_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msete_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sete_rh: derivedInstructions//x86-sete_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sete %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setge_rh[0m
[4m[1m[34mcreatespec setge_rh: kproveSpecs//x86-semantics_setge_rh_spec.k[0m
[4m[1m[34msetge_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x1, %rax
\$0x1 -> 1
%rax -> 1

Circuit: setge %al
%of -> 1
%al -> 1
%sf -> 1

Circuit: movb %al, %ah
%al -> 1
%ah -> 1

Circuit: movq %rax, %rax
%rax -> 1

Total Circuit
RAX -> 1
 -> 1
OF -> 1
SF -> 1

Target
RAX -> 1
OF -> 1
SF -> 1

[4m[1m[34mkprove setge_rh[0m
time krun --prove kproveSpecs//x86-semantics_setge_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setge_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setge_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setge_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setge_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetge_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setge_rh: derivedInstructions//x86-setge_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setge %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setl_r8[0m
[4m[1m[34mcreatespec setl_r8: kproveSpecs//x86-semantics_setl_r8_spec.k[0m
[4m[1m[34msetl_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setl %bh
%of -> 1
%bh -> 1
%sf -> 1

Circuit: movb %bh, %bl
%bh -> 1
%bl -> 1

Total Circuit
OF -> 1
RBX -> 1
SF -> 1

Target
SF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove setl_r8[0m
time krun --prove kproveSpecs//x86-semantics_setl_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setl_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setl_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setl_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setl_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetl_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setl_r8: derivedInstructions//x86-setl_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setl %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setle_rh[0m
[4m[1m[34mcreatespec setle_rh: kproveSpecs//x86-semantics_setle_rh_spec.k[0m
[4m[1m[34msetle_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rbx
%rbx -> 1
%zf -> 1

Circuit: setnge %bh
%of -> 1
%bh -> 1
%sf -> 1

Circuit: callq .set_szp_for_bx
%pf -> 1
%bx -> 1
%sf -> 1
%zf -> 1

Circuit: setne %ah
%ah -> 1
%zf -> 1

Total Circuit
RAX -> 1
OF -> 1
RBX -> 1
ZF -> 1
PF -> 1
SF -> 1

Target
ZF -> 1
OF -> 1
SF -> 1
RAX -> 1

[4m[1m[34mkprove setle_rh[0m
time krun --prove kproveSpecs//x86-semantics_setle_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setle_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setle_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setle_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setle_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetle_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setle_rh: derivedInstructions//x86-setle_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setle %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setne_r8[0m
[4m[1m[34mcreatespec setne_r8: kproveSpecs//x86-semantics_setne_r8_spec.k[0m
[4m[1m[34msetne_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x0, %rbx
\$0x0 -> 1
%rbx -> 1

Circuit: setne %bh
%bh -> 1
%zf -> 1

Circuit: callq .move_016_008_bx_r8b_r9b
%bx -> 1
%r9b -> 1
%r8b -> 1

Circuit: callq .move_r9b_to_byte_6_of_rbx
%rbx -> 1
%r9b -> 1

Circuit: xaddb %bh, %bl
%cf -> 1
%af -> 1
%bl -> 1
%bx -> 1
%pf -> 1
%of -> 1
%zf -> 1
%bh -> 1
%sf -> 1

Circuit: callq .move_r8b_to_byte_5_of_rbx
%rbx -> 1
%r8b -> 1

Total Circuit
R9 -> 1
 -> 1
OF -> 1
CF -> 1
RBX -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1
R8 -> 1

Target
RBX -> 1
ZF -> 1

[4m[1m[34mkprove setne_r8[0m
time krun --prove kproveSpecs//x86-semantics_setne_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setne_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setne_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setne_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setne_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetne_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setne_r8: derivedInstructions//x86-setne_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setne %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnge_r8[0m
[4m[1m[34mcreatespec setnge_r8: kproveSpecs//x86-semantics_setnge_r8_spec.k[0m
[4m[1m[34msetnge_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_of_into_rbx
%of -> 1
%rbx -> 1

Circuit: callq .move_032_016_ebx_r12w_r13w
%r12w -> 1
%r13w -> 1
%ebx -> 1

Circuit: callq .move_032_016_ebx_r8w_r9w
%r8w -> 1
%ebx -> 1
%r9w -> 1

Circuit: callq .read_sf_into_rcx
%rcx -> 1
%sf -> 1

Circuit: rolb $0x1, %r13b
%r13b -> 1
%of -> 1
\$0x1 -> 1
%cf -> 1

Circuit: xorl %ecx, %ebx
%af -> 1
%cf -> 1
%ecx -> 1
%of -> 1
%pf -> 1
%ebx -> 1
%zf -> 1
%sf -> 1
%rbx -> 1

Circuit: xaddw %r9w, %r13w
%zf -> 1
%sf -> 1
%r13w -> 1
%cf -> 1
%af -> 1
%r9w -> 1
%pf -> 1
%of -> 1

Circuit: callq .move_r9b_to_byte_5_of_rbx
%r9b -> 1
%rbx -> 1

Total Circuit
RCX -> 1
R9 -> 1
R12 -> 1
R13 -> 1
 -> 1
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
ZF -> 1
PF -> 1
SF -> 1
R8 -> 1

Target
SF -> 1
OF -> 1
RBX -> 1

[4m[1m[34mkprove setnge_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnge_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnge_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnge_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnge_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnge_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnge_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnge_r8: derivedInstructions//x86-setnge_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnge %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnl_r8[0m
[4m[1m[34mcreatespec setnl_r8: kproveSpecs//x86-semantics_setnl_r8_spec.k[0m
[4m[1m[34msetnl_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setge %bl
%sf -> 1
%bl -> 1
%of -> 1

Total Circuit
RBX -> 1
OF -> 1
SF -> 1

Target
SF -> 1
OF -> 1
RBX -> 1

[4m[1m[34mkprove setnl_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnl_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnl_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnl_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnl_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnl_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnl_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnl_r8: derivedInstructions//x86-setnl_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnl %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnz_r8[0m
[4m[1m[34mcreatespec setnz_r8: kproveSpecs//x86-semantics_setnz_r8_spec.k[0m
[4m[1m[34msetnz_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x10, %rbx
\$0x10 -> 1
%rbx -> 1

Circuit: setne %bh
%zf -> 1
%bh -> 1

Circuit: xaddb %bl, %bh
%sf -> 1
%bh -> 1
%zf -> 1
%pf -> 1
%bx -> 1
%bl -> 1
%of -> 1
%cf -> 1
%af -> 1

Total Circuit
 -> 1
ZF -> 1
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
SF -> 1
PF -> 1

Target
ZF -> 1
RBX -> 1

[4m[1m[34mkprove setnz_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnz_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnz_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnz_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnz_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnz_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnz_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnz_r8: derivedInstructions//x86-setnz_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnz %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: seto_rh[0m
[4m[1m[34mcreatespec seto_rh: kproveSpecs//x86-semantics_seto_rh_spec.k[0m
[4m[1m[34mseto_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_of_into_rcx
%of -> 1
%rcx -> 1

Circuit: xorl %eax, %eax
%zf -> 1
%rax -> 1
%sf -> 1
%eax -> 1
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1

Circuit: xaddb %ah, %cl
%sf -> 1
%zf -> 1
%ah -> 1
%of -> 1
%pf -> 1
%af -> 1
%cl -> 1
%cf -> 1

Total Circuit
CF -> 1
OF -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1
RCX -> 1
RAX -> 1

Target
OF -> 1
RAX -> 1

[4m[1m[34mkprove seto_rh[0m
time krun --prove kproveSpecs//x86-semantics_seto_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_seto_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput seto_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_seto_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput seto_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mseto_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn seto_rh: derivedInstructions//x86-seto_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "seto %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setpo_rh[0m
[4m[1m[34mcreatespec setpo_rh: kproveSpecs//x86-semantics_setpo_rh_spec.k[0m
[4m[1m[34msetpo_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setpo %r14b
%r14b -> 1
%pf -> 1

Circuit: movzbl %r14b, %ecx
%ecx -> 1
%rcx -> 1
%r14b -> 1

Circuit: movq $0xfffffffffffffff0, %rax
\$0xfffffffffffffff0 -> 1
%rax -> 1

Circuit: xaddb %ah, %cl
%zf -> 1
%ah -> 1
%sf -> 1
%cl -> 1
%cf -> 1
%af -> 1
%pf -> 1
%of -> 1

Total Circuit
 -> 1
RCX -> 1
RAX -> 1
PF -> 1
SF -> 1
R14 -> 1
AF -> 1
CF -> 1
OF -> 1
ZF -> 1

Target
PF -> 1
RAX -> 1

[4m[1m[34mkprove setpo_rh[0m
time krun --prove kproveSpecs//x86-semantics_setpo_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setpo_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setpo_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setpo_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setpo_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetpo_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setpo_rh: derivedInstructions//x86-setpo_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setpo %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setz_rh[0m
[4m[1m[34mcreatespec setz_rh: kproveSpecs//x86-semantics_setz_rh_spec.k[0m
[4m[1m[34msetz_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rbx
%zf -> 1
%rbx -> 1

Circuit: xorq %rax, %rax
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1
%rax -> 1
%zf -> 1
%sf -> 1

Circuit: xaddb %ah, %bl
%sf -> 1
%zf -> 1
%ah -> 1
%pf -> 1
%bl -> 1
%of -> 1
%cf -> 1
%af -> 1

Total Circuit
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
ZF -> 1
PF -> 1
SF -> 1
RAX -> 1

Target
RAX -> 1
ZF -> 1

[4m[1m[34mkprove setz_rh[0m
time krun --prove kproveSpecs//x86-semantics_setz_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setz_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setz_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setz_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setz_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetz_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setz_rh: derivedInstructions//x86-setz_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setz %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: shlw_r16_one[0m
[4m[1m[34mcreatespec shlw_r16_one: kproveSpecs//x86-semantics_shlw_r16_one_spec.k[0m
[4m[1m[34mshlw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: shlw_r16_one[0m
Undef Set
af -> 1

Circuit: xorq %rax, %rax
%zf -> 1
%rax -> 1
%sf -> 1
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1

Circuit: sall $0x1, %eax
%sf -> 1
%eax -> 1
%zf -> 1
%rax -> 1
%pf -> 1
%of -> 1
%cf -> 1
\$0x1 -> 1
%af -> 1

Circuit: cltq
%eax -> 1
%rax -> 1

Circuit: cltq
%eax -> 1
%rax -> 1

Circuit: adcw %ax, %bx
%sf -> 1
%zf -> 1
%ax -> 1
%bx -> 1
%pf -> 1
%of -> 1
%cf -> 1
%af -> 1

Circuit: addw %bx, %bx
%zf -> 1
%sf -> 1
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1
%bx -> 1

Total Circuit
 -> 1
RAX -> 1
SF -> 1
PF -> 1
ZF -> 1
AF -> 1
RBX -> 1
CF -> 1
OF -> 1

Target
CF -> 1
OF -> 1
RBX -> 1
AF -> 1
ZF -> 1
PF -> 1
SF -> 1
 -> 1

[4m[1m[34mkprove shlw_r16_one[0m
time krun --prove kproveSpecs//x86-semantics_shlw_r16_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_shlw_r16_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput shlw_r16_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_shlw_r16_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput shlw_r16_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mshlw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn shlw_r16_one: derivedInstructions//x86-shlw_r16_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "shlw \$0x1, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subpd_xmm_xmm[0m
[4m[1m[34mcreatespec subpd_xmm_xmm: kproveSpecs//x86-semantics_subpd_xmm_xmm_spec.k[0m
[4m[1m[34msubpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxps %xmm2, %xmm2, %xmm6
%xmm2 -> 1
avx -> 1
%ymm6 -> 1
%xmm6 -> 1

Circuit: vmaxss %xmm1, %xmm1, %xmm10
avx -> 1
%xmm1 -> 1
%xmm10 -> 1
%ymm10 -> 1

Circuit: vsubpd %ymm6, %ymm10, %ymm7
avx -> 1
%ymm7 -> 1
%ymm10 -> 1
%ymm6 -> 1

Circuit: movapd %xmm7, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm7 -> 1

Total Circuit
YMM1 -> 1
YMM6 -> 1
YMM2 -> 1
 -> 1
YMM7 -> 1
YMM10 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove subpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_subpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subpd_xmm_xmm: derivedInstructions//x86-subpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subss_xmm_xmm[0m
[4m[1m[34mcreatespec subss_xmm_xmm: kproveSpecs//x86-semantics_subss_xmm_xmm_spec.k[0m
[4m[1m[34msubss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovdqu %xmm1, %xmm14
avx -> 1
%xmm1 -> 1
%ymm14 -> 1
%xmm14 -> 1

Circuit: vunpcklpd %xmm14, %xmm2, %xmm8
%xmm14 -> 1
%xmm2 -> 1
avx -> 1
%xmm8 -> 1
%ymm8 -> 1

Circuit: vsubps %ymm8, %ymm14, %ymm11
%ymm14 -> 1
avx -> 1
%ymm11 -> 1
%ymm8 -> 1

Circuit: movss %xmm11, %xmm1
%xmm1 -> 1
%xmm11 -> 1
sse -> 1

Total Circuit
YMM2 -> 1
YMM8 -> 1
 -> 1
YMM1 -> 1
YMM14 -> 1
YMM11 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove subss_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_subss_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subss_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subss_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subss_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subss_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubss_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subss_xmm_xmm: derivedInstructions//x86-subss_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vaddsd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vaddsd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vaddsd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvaddsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: addsd %xmm3, %xmm2
%xmm2 -> 1
%xmm3 -> 1
sse2 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%r9 -> 1
%xmm2 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm0 -> 1
%ymm14 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm1 -> 1
%ymm3 -> 1
%ymm6 -> 1
%ymm2 -> 1
avx -> 1
%ymm7 -> 1
%ymm4 -> 1
%ymm12 -> 1
%ymm15 -> 1
%ymm9 -> 1
%ymm10 -> 1
%ymm8 -> 1
%ymm5 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Total Circuit
YMM11 -> 1
YMM3 -> 1
YMM15 -> 1
YMM10 -> 1
 -> 1
YMM8 -> 1
R9 -> 1
YMM6 -> 1
YMM5 -> 1
R8 -> 1
YMM4 -> 1
YMM14 -> 1
YMM7 -> 1
YMM0 -> 1
YMM12 -> 1
YMM9 -> 1
YMM2 -> 1
YMM13 -> 1
YMM1 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vaddsd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vaddsd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vaddsd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vaddsd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vaddsd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vaddsd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvaddsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vaddsd_xmm_xmm_xmm: derivedInstructions//x86-vaddsd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vaddsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandnpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vandnpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vandnpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvandnpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vorpd %xmm2, %xmm3, %xmm12
%xmm2 -> 1
%xmm12 -> 1
%xmm3 -> 1
avx -> 1
%ymm12 -> 1

Circuit: vmovupd %ymm12, %ymm1
%ymm1 -> 1
avx -> 1
%ymm12 -> 1

Circuit: pxor %xmm1, %xmm2
%xmm1 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: vmovdqa %xmm2, %xmm1
avx -> 1
%xmm2 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
YMM12 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vandnpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vandnpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandnpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandnpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandnpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandnpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandnpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandnpd_xmm_xmm_xmm: derivedInstructions//x86-vandnpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandnpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvtdq2pd_xmm_xmm[0m
[4m[1m[34mcreatespec vcvtdq2pd_xmm_xmm: kproveSpecs//x86-semantics_vcvtdq2pd_xmm_xmm_spec.k[0m
[4m[1m[34mvcvtdq2pd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%r9 -> 1
%xmm2 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm3 -> 1
%ymm1 -> 1
%ymm0 -> 1
%ymm14 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm10 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm9 -> 1
%ymm12 -> 1
%ymm15 -> 1
avx -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm4 -> 1

Circuit: callq .move_064_128_r8_r9_xmm3
%r8 -> 1
%xmm3 -> 1
%r9 -> 1

Circuit: cvtdq2pd %xmm3, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm3 -> 1

Total Circuit
YMM13 -> 1
YMM1 -> 1
YMM9 -> 1
YMM2 -> 1
YMM7 -> 1
YMM0 -> 1
YMM12 -> 1
YMM5 -> 1
R8 -> 1
YMM4 -> 1
YMM14 -> 1
R9 -> 1
YMM6 -> 1
 -> 1
YMM8 -> 1
YMM15 -> 1
YMM10 -> 1
YMM11 -> 1
YMM3 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vcvtdq2pd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vcvtdq2pd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vcvtdq2pd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vcvtdq2pd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vcvtdq2pd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vcvtdq2pd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvcvtdq2pd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vcvtdq2pd_xmm_xmm: derivedInstructions//x86-vcvtdq2pd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vcvtdq2pd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvtsd2ss_xmm_xmm_xmm[0m
vcvtsd2ss_xmm_xmm_xmm 0 derivedInstructions//x86-cvtsd2ss_xmm_xmm.k
Warn: [4m[1m[35mvcvtsd2ss_xmm_xmm_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vcvttss2sil_r32_xmm[0m
vcvttss2sil_r32_xmm 0 derivedInstructions//x86-cvttss2sil_r32_xmm.k
Warn: [4m[1m[35mvcvttss2sil_r32_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vdivsd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vdivsd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vdivsd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvdivsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: divsd %xmm3, %xmm2
%xmm3 -> 1
%xmm2 -> 1
sse2 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm9 -> 1
%ymm10 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm2 -> 1
avx -> 1
%ymm4 -> 1
%ymm7 -> 1
%ymm12 -> 1
%ymm15 -> 1
%ymm6 -> 1
%ymm0 -> 1
%ymm14 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm3 -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%r8 -> 1
%xmm1 -> 1

Total Circuit
YMM15 -> 1
YMM10 -> 1
YMM3 -> 1
YMM11 -> 1
YMM6 -> 1
R9 -> 1
YMM8 -> 1
 -> 1
YMM0 -> 1
YMM12 -> 1
YMM7 -> 1
YMM4 -> 1
YMM14 -> 1
R8 -> 1
YMM5 -> 1
YMM1 -> 1
YMM13 -> 1
YMM2 -> 1
YMM9 -> 1

Target
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vdivsd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vdivsd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vdivsd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vdivsd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vdivsd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vdivsd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvdivsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vdivsd_xmm_xmm_xmm: derivedInstructions//x86-vdivsd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vdivsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd231ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd231ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd231ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd231ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd213ss %xmm1, %xmm2, %xmm3
%xmm2 -> 1
%xmm1 -> 1
fma -> 1
%ymm3 -> 1
%xmm3 -> 1

Circuit: movss %xmm3, %xmm1
sse -> 1
%xmm3 -> 1
%xmm1 -> 1

Circuit: callq .move_128_064_xmm1_r8_r9
%r8 -> 1
%xmm1 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm3 -> 1
%ymm1 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm14 -> 1
%ymm0 -> 1
%ymm6 -> 1
%ymm15 -> 1
%ymm12 -> 1
%ymm7 -> 1
%ymm4 -> 1
%ymm2 -> 1
avx -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm10 -> 1
%ymm9 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%xmm1 -> 1
%r8 -> 1
%r9 -> 1

Total Circuit
YMM3 -> 1
YMM11 -> 1
YMM10 -> 1
YMM15 -> 1
YMM8 -> 1
 -> 1
YMM6 -> 1
R9 -> 1
YMM14 -> 1
YMM4 -> 1
YMM5 -> 1
R8 -> 1
YMM12 -> 1
YMM0 -> 1
YMM7 -> 1
YMM2 -> 1
YMM9 -> 1
YMM1 -> 1
YMM13 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmadd231ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd231ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd231ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd231ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd231ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd231ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd231ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd231ss_xmm_xmm_xmm: derivedInstructions//x86-vfmadd231ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub132pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub132pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovsd %xmm3, %xmm3, %xmm0
%xmm3 -> 1
avx -> 1
%xmm0 -> 1
%ymm0 -> 1

Circuit: vmovapd %xmm2, %xmm7
%xmm7 -> 1
%xmm2 -> 1
%ymm7 -> 1
avx -> 1

Circuit: vmaxss %xmm7, %xmm2, %xmm13
%xmm7 -> 1
%ymm13 -> 1
%xmm2 -> 1
%xmm13 -> 1
avx -> 1

Circuit: vmovups %xmm1, %xmm15
%xmm1 -> 1
%xmm15 -> 1
%ymm15 -> 1
avx -> 1

Circuit: vfmsub231pd %ymm0, %ymm15, %ymm13
%ymm15 -> 1
%ymm13 -> 1
%ymm0 -> 1
fma -> 1

Circuit: vmovupd %xmm13, %xmm1
%ymm1 -> 1
%xmm1 -> 1
avx -> 1
%xmm13 -> 1

Total Circuit
YMM2 -> 1
YMM13 -> 1
YMM1 -> 1
YMM7 -> 1
YMM0 -> 1
 -> 1
YMM3 -> 1
YMM15 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmsub132pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub132pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub132pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub132pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub132pd_xmm_xmm_xmm: derivedInstructions//x86-vfmsub132pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub132ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub132ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub132ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub132ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub231ps %xmm3, %xmm1, %xmm2
%xmm3 -> 1
%ymm2 -> 1
fma -> 1
%xmm2 -> 1
%xmm1 -> 1

Circuit: vmovss %xmm2, %xmm1, %xmm1
%ymm1 -> 1
%xmm2 -> 1
%xmm1 -> 1
avx -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmsub132ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub132ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub132ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub132ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub132ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub132ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub132ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub132ss_xmm_xmm_xmm: derivedInstructions//x86-vfmsub132ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub213ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub213ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub213ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub213ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub231ps %xmm1, %xmm2, %xmm3
%xmm3 -> 1
%xmm1 -> 1
%xmm2 -> 1
%ymm3 -> 1
fma -> 1

Circuit: callq .move_128_064_xmm3_r8_r9
%xmm3 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm9 -> 1
%ymm10 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm2 -> 1
avx -> 1
%ymm4 -> 1
%ymm7 -> 1
%ymm12 -> 1
%ymm15 -> 1
%ymm6 -> 1
%ymm0 -> 1
%ymm14 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm3 -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r8 -> 1
%xmm1 -> 1
%r9 -> 1

Total Circuit
 -> 1
YMM8 -> 1
R9 -> 1
YMM6 -> 1
YMM11 -> 1
YMM3 -> 1
YMM15 -> 1
YMM10 -> 1
YMM9 -> 1
YMM2 -> 1
YMM13 -> 1
YMM1 -> 1
R8 -> 1
YMM5 -> 1
YMM4 -> 1
YMM14 -> 1
YMM7 -> 1
YMM0 -> 1
YMM12 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmsub213ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub213ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub213ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub213ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub213ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub213ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub213ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub213ps_xmm_xmm_xmm: derivedInstructions//x86-vfmsub213ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd132ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd132ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd132ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd132ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd213ps %xmm2, %xmm1, %xmm3
%xmm2 -> 1
%xmm1 -> 1
%ymm3 -> 1
fma -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm3_r8_r9
%xmm3 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm1 -> 1
%ymm3 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm0 -> 1
%ymm14 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm15 -> 1
%ymm12 -> 1
%ymm7 -> 1
%ymm4 -> 1
avx -> 1
%ymm2 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Total Circuit
YMM4 -> 1
YMM14 -> 1
YMM5 -> 1
R8 -> 1
YMM0 -> 1
YMM12 -> 1
YMM7 -> 1
YMM2 -> 1
YMM9 -> 1
YMM1 -> 1
YMM13 -> 1
YMM3 -> 1
YMM11 -> 1
YMM15 -> 1
YMM10 -> 1
YMM8 -> 1
 -> 1
YMM6 -> 1
R9 -> 1

Target
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmadd132ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd132ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd132ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd132ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd132ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd132ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd132ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd132ps_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd132ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd231pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd231pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd231pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovapd %xmm1, %xmm1
%xmm1 -> 1
%ymm1 -> 1
avx -> 1

Circuit: vmovapd %xmm2, %xmm8
%xmm8 -> 1
%xmm2 -> 1
avx -> 1
%ymm8 -> 1

Circuit: vmaxpd %xmm3, %xmm3, %xmm5
%ymm5 -> 1
avx -> 1
%xmm3 -> 1
%xmm5 -> 1

Circuit: vfnmadd231pd %ymm5, %ymm8, %ymm1
%ymm8 -> 1
%ymm5 -> 1
fma -> 1
%ymm1 -> 1

Total Circuit
YMM3 -> 1
YMM8 -> 1
 -> 1
YMM5 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmadd231pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd231pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd231pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd231pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd231pd_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd231pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub213ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub213ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub213ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub213ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7
%xmm4 -> 1
%xmm5 -> 1
%xmm7 -> 1
%xmm6 -> 1
%xmm2 -> 1

Circuit: vfnmsub132ps %xmm1, %xmm3, %xmm4
%ymm4 -> 1
%xmm3 -> 1
%xmm1 -> 1
fma -> 1
%xmm4 -> 1

Circuit: vmovss %xmm4, %xmm1, %xmm1
avx -> 1
%xmm1 -> 1
%ymm1 -> 1
%xmm4 -> 1

Total Circuit
YMM7 -> 1
YMM4 -> 1
YMM5 -> 1
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
YMM6 -> 1
 -> 1

Target
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmsub213ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub213ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub213ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub213ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub213ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub213ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub213ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub213ss_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub213ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub213ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vminsd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vminsd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vminsd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvminsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vminpd %xmm3, %xmm2, %xmm4
avx -> 1
%xmm3 -> 1
%ymm4 -> 1
%xmm4 -> 1
%xmm2 -> 1

Circuit: vmovdqa %ymm4, %ymm14
%ymm14 -> 1
%ymm4 -> 1
avx -> 1

Circuit: vmovsd %xmm14, %xmm2, %xmm1
avx -> 1
%ymm1 -> 1
%xmm2 -> 1
%xmm14 -> 1
%xmm1 -> 1

Total Circuit
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
YMM4 -> 1
YMM14 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vminsd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vminsd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vminsd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vminsd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vminsd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vminsd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvminsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vminsd_xmm_xmm_xmm: derivedInstructions//x86-vminsd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vminsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovshdup_xmm_xmm[0m
[4m[1m[34mcreatespec vmovshdup_xmm_xmm: kproveSpecs//x86-semantics_vmovshdup_xmm_xmm_spec.k[0m
[4m[1m[34mvmovshdup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm11 -> 1
%xmm9 -> 1
%xmm8 -> 1
%xmm2 -> 1
%xmm10 -> 1

Circuit: vmovsldup %xmm11, %xmm11
avx -> 1
%xmm11 -> 1
%ymm11 -> 1

Circuit: vmovdqa %xmm11, %xmm3
%ymm3 -> 1
%xmm3 -> 1
avx -> 1
%xmm11 -> 1

Circuit: vmovsldup %xmm9, %xmm1
%ymm1 -> 1
%xmm1 -> 1
avx -> 1
%xmm9 -> 1

Circuit: unpcklpd %xmm3, %xmm1
%xmm3 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
YMM8 -> 1
 -> 1
YMM10 -> 1
YMM3 -> 1
YMM11 -> 1
YMM1 -> 1
YMM2 -> 1
YMM9 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vmovshdup_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovshdup_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovshdup_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovshdup_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovshdup_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovshdup_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovshdup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovshdup_xmm_xmm: derivedInstructions//x86-vmovshdup_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovshdup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovsldup_ymm_ymm[0m
[4m[1m[34mcreatespec vmovsldup_ymm_ymm: kproveSpecs//x86-semantics_vmovsldup_ymm_ymm_spec.k[0m
[4m[1m[34mvmovsldup_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm2_xmm12_xmm13
%xmm13 -> 1
%xmm12 -> 1
%ymm2 -> 1

Circuit: vmovsldup %xmm13, %xmm6
avx -> 1
%xmm13 -> 1
%xmm6 -> 1
%ymm6 -> 1

Circuit: vmovsldup %xmm2, %xmm8
%xmm8 -> 1
%xmm2 -> 1
%ymm8 -> 1
avx -> 1

Circuit: vmovapd %xmm6, %xmm9
%xmm6 -> 1
%ymm9 -> 1
%xmm9 -> 1
avx -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%xmm8 -> 1
%ymm1 -> 1
%xmm9 -> 1

Total Circuit
YMM13 -> 1
YMM1 -> 1
YMM9 -> 1
YMM2 -> 1
YMM12 -> 1
YMM6 -> 1
 -> 1
YMM8 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vmovsldup_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vmovsldup_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovsldup_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovsldup_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovsldup_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovsldup_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovsldup_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovsldup_ymm_ymm: derivedInstructions//x86-vmovsldup_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovsldup %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vorpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vorpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vorpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvorpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm3_xmm8_xmm9
%xmm9 -> 1
%xmm8 -> 1
%ymm3 -> 1

Circuit: por %xmm2, %xmm8
%xmm2 -> 1
sse2 -> 1
%xmm8 -> 1

Circuit: callq .move_256_128_ymm2_xmm10_xmm11
%xmm11 -> 1
%ymm2 -> 1
%xmm10 -> 1

Circuit: orpd %xmm11, %xmm9
sse2 -> 1
%xmm11 -> 1
%xmm9 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%xmm8 -> 1
%ymm1 -> 1
%xmm9 -> 1

Total Circuit
YMM10 -> 1
YMM3 -> 1
YMM11 -> 1
YMM8 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM9 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vorpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vorpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vorpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vorpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vorpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vorpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvorpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vorpd_ymm_ymm_ymm: derivedInstructions//x86-vorpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vorpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpandn_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpandn_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpandn_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpandn_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxss %xmm3, %xmm3, %xmm1
%xmm3 -> 1
avx -> 1
%xmm1 -> 1
%ymm1 -> 1

Circuit: movdqu %xmm2, %xmm14
%xmm2 -> 1
%xmm14 -> 1
sse2 -> 1

Circuit: vandnps %xmm1, %xmm14, %xmm1
avx -> 1
%xmm14 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
YMM14 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpandn_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpandn_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpandn_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpandn_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpandn_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpandn_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpandn_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpandn_xmm_xmm_xmm: derivedInstructions//x86-vpandn_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpandn %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpbroadcastw_ymm_xmm[0m
[4m[1m[34mcreatespec vpbroadcastw_ymm_xmm: kproveSpecs//x86-semantics_vpbroadcastw_ymm_xmm_spec.k[0m
[4m[1m[34mvpbroadcastw_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vbroadcastss %xmm2, %ymm1
%xmm2 -> 1
%ymm1 -> 1
avx2 -> 1

Circuit: callq .move_byte_1_of_ymm1_to_r8b
%ymm1 -> 1
%r8b -> 1

Circuit: callq .move_byte_0_of_ymm1_to_r9b
%ymm1 -> 1
%r9b -> 1

Circuit: callq .move_r8b_to_byte_3_of_ymm1
%ymm1 -> 1
%r8b -> 1

Circuit: callq .move_r9b_to_byte_2_of_ymm1
%ymm1 -> 1
%r9b -> 1

Circuit: vbroadcastss %xmm1, %ymm1
avx2 -> 1
%ymm1 -> 1
%xmm1 -> 1

Total Circuit
R8 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1
R9 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vpbroadcastw_ymm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpbroadcastw_ymm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpbroadcastw_ymm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpbroadcastw_ymm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpbroadcastw_ymm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpbroadcastw_ymm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpbroadcastw_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpbroadcastw_ymm_xmm: derivedInstructions//x86-vpbroadcastw_ymm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpbroadcastw %xmm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vsqrtsd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vsqrtsd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vsqrtsd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvsqrtsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: sqrtsd %xmm3, %xmm2
%xmm2 -> 1
sse2 -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%r9 -> 1
%r8 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm12 -> 1
%ymm15 -> 1
avx -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm9 -> 1
%ymm1 -> 1
%ymm3 -> 1
%ymm14 -> 1
%ymm0 -> 1
%ymm11 -> 1
%ymm13 -> 1
%ymm6 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r8 -> 1
%xmm1 -> 1
%r9 -> 1

Total Circuit
YMM12 -> 1
YMM0 -> 1
YMM7 -> 1
YMM14 -> 1
YMM4 -> 1
R8 -> 1
YMM5 -> 1
YMM1 -> 1
YMM13 -> 1
YMM2 -> 1
YMM9 -> 1
YMM10 -> 1
YMM15 -> 1
YMM3 -> 1
YMM11 -> 1
YMM6 -> 1
R9 -> 1
YMM8 -> 1
 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vsqrtsd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vsqrtsd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vsqrtsd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vsqrtsd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vsqrtsd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vsqrtsd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvsqrtsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vsqrtsd_xmm_xmm_xmm: derivedInstructions//x86-vsqrtsd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vsqrtsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vsqrtss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vsqrtss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vsqrtss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvsqrtss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm3_xmm12_xmm13
%xmm12 -> 1
%xmm13 -> 1
%xmm3 -> 1

Circuit: vmulss %xmm2, %xmm2, %xmm1
avx -> 1
%xmm2 -> 1
%xmm1 -> 1
%ymm1 -> 1

Circuit: sqrtss %xmm12, %xmm1
%xmm12 -> 1
sse -> 1
%xmm1 -> 1

Total Circuit
YMM12 -> 1
YMM13 -> 1
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vsqrtss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vsqrtss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vsqrtss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vsqrtss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vsqrtss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vsqrtss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvsqrtss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vsqrtss_xmm_xmm_xmm: derivedInstructions//x86-vsqrtss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vsqrtss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vsubps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vsubps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vsubps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvsubps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vminps %xmm2, %xmm2, %xmm5
%ymm5 -> 1
avx -> 1
%xmm5 -> 1
%xmm2 -> 1

Circuit: subps %xmm3, %xmm5
%xmm5 -> 1
sse -> 1
%xmm3 -> 1

Circuit: vmovdqu %xmm5, %xmm1
avx -> 1
%xmm5 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
YMM5 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vsubps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vsubps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vsubps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vsubps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vsubps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vsubps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvsubps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vsubps_xmm_xmm_xmm: derivedInstructions//x86-vsubps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vsubps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vsubsd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vsubsd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vsubsd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvsubsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm2_xmm8_xmm9
%xmm9 -> 1
%xmm8 -> 1
%xmm2 -> 1

Circuit: vsubpd %xmm3, %xmm8, %xmm0
%xmm8 -> 1
%ymm0 -> 1
%xmm0 -> 1
%xmm3 -> 1
avx -> 1

Circuit: vunpcklpd %xmm9, %xmm0, %xmm1
%xmm0 -> 1
avx -> 1
%xmm9 -> 1
%ymm1 -> 1
%xmm1 -> 1

Total Circuit
YMM3 -> 1
YMM8 -> 1
 -> 1
YMM0 -> 1
YMM1 -> 1
YMM2 -> 1
YMM9 -> 1

Target
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vsubsd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vsubsd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vsubsd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vsubsd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vsubsd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vsubsd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvsubsd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vsubsd_xmm_xmm_xmm: derivedInstructions//x86-vsubsd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vsubsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpckhpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vunpckhpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vunpckhpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvunpckhpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm2_xmm8_xmm9
%xmm8 -> 1
%xmm9 -> 1
%ymm2 -> 1

Circuit: callq .move_256_128_ymm3_xmm10_xmm11
%ymm3 -> 1
%xmm10 -> 1
%xmm11 -> 1

Circuit: unpckhpd %xmm3, %xmm8
%xmm8 -> 1
sse2 -> 1
%xmm3 -> 1

Circuit: unpckhpd %xmm11, %xmm9
%xmm11 -> 1
%xmm9 -> 1
sse2 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%ymm1 -> 1
%xmm8 -> 1
%xmm9 -> 1

Total Circuit
YMM3 -> 1
YMM11 -> 1
YMM10 -> 1
YMM8 -> 1
 -> 1
YMM2 -> 1
YMM9 -> 1
YMM1 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vunpckhpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vunpckhpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpckhpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpckhpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpckhpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpckhpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpckhpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpckhpd_ymm_ymm_ymm: derivedInstructions//x86-vunpckhpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpckhpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpckhps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vunpckhps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vunpckhps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvunpckhps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: unpckhpd %xmm3, %xmm2
%xmm2 -> 1
sse2 -> 1
%xmm3 -> 1

Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm2 -> 1
%xmm8 -> 1
%xmm10 -> 1
%xmm9 -> 1
%xmm11 -> 1

Circuit: vmovddup %xmm9, %xmm1
%xmm1 -> 1
%ymm1 -> 1
%xmm9 -> 1
avx -> 1

Circuit: vmovq %xmm1, %xmm10
avx -> 1
%ymm10 -> 1
%xmm1 -> 1
%xmm10 -> 1

Circuit: callq .move_128_64_xmm2_xmm8_xmm9
%xmm9 -> 1
%xmm8 -> 1
%xmm2 -> 1

Circuit: callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1
%xmm11 -> 1
%xmm9 -> 1
%xmm8 -> 1
%xmm1 -> 1
%xmm10 -> 1

Total Circuit
YMM1 -> 1
YMM9 -> 1
YMM2 -> 1
YMM10 -> 1
YMM11 -> 1
YMM3 -> 1
 -> 1
YMM8 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vunpckhps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vunpckhps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpckhps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpckhps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpckhps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpckhps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpckhps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpckhps_xmm_xmm_xmm: derivedInstructions//x86-vunpckhps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpckhps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xchgb_r8_r8[0m
[4m[1m[34mcreatespec xchgb_r8_r8: kproveSpecs//x86-semantics_xchgb_r8_r8_spec.k[0m
[4m[1m[34mxchgb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbq %bl, %r8
%r8 -> 1
%bl -> 1

Circuit: movzbw %cl, %cx
%cl -> 1
%cx -> 1

Circuit: movb %ch, %bh
%ch -> 1
%bh -> 1

Circuit: xaddb %bl, %ch
%af -> 1
%cf -> 1
%of -> 1
%bl -> 1
%pf -> 1
%sf -> 1
%ch -> 1
%zf -> 1

Circuit: xaddw %bx, %cx
%of -> 1
%pf -> 1
%zf -> 1
%sf -> 1
%af -> 1
%cx -> 1
%cf -> 1
%bx -> 1

Circuit: xchgw %cx, %r8w
%cx -> 1
%r8w -> 1

Total Circuit
R8 -> 1
RBX -> 1
CF -> 1
RCX -> 1
SF -> 1
PF -> 1
ZF -> 1
AF -> 1
OF -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove xchgb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_xchgb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xchgb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xchgb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xchgb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xchgb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxchgb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35mxchgb_r8_r8: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xchgb_r8_r8: derivedInstructions//x86-xchgb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xchgb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xchgb_rh_r8[0m
[4m[1m[34mcreatespec xchgb_rh_r8: kproveSpecs//x86-semantics_xchgb_rh_r8_spec.k[0m
[4m[1m[34mxchgb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xchgb %ah, %bl
%bl -> 1
%ah -> 1

Total Circuit
RAX -> 1
RBX -> 1

Target
RBX -> 1
RAX -> 1

[4m[1m[34mkprove xchgb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_xchgb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xchgb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xchgb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xchgb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xchgb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxchgb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35mxchgb_rh_r8: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xchgb_rh_r8: derivedInstructions//x86-xchgb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xchgb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xorb_rh_r8[0m
[4m[1m[34mcreatespec xorb_rh_r8: kproveSpecs//x86-semantics_xorb_rh_r8_spec.k[0m
[4m[1m[34mxorb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: xorb_rh_r8[0m
Undef Set
af -> 1

Circuit: movq $0x4, %rdi
%rdi -> 1
\$0x4 -> 1

Circuit: shlb $0x1, %dil
%sf -> 1
%zf -> 1
%dil -> 1
%of -> 1
%pf -> 1
\$0x1 -> 1
%af -> 1
%cf -> 1

Circuit: xorq %r8, %r8
%cf -> 1
%af -> 1
%r8 -> 1
%pf -> 1
%of -> 1
%zf -> 1
%sf -> 1

Circuit: xorb %ah, %bl
%ah -> 1
%af -> 1
%cf -> 1
%sf -> 1
%zf -> 1
%of -> 1
%bl -> 1
%pf -> 1

Circuit: popcntw %r8w, %ax
%ax -> 1
%zf -> 1
%r8w -> 1
%sf -> 1
%of -> 1
%pf -> 1
popcnt -> 1
%af -> 1
%cf -> 1

Circuit: xaddb %ah, %bl
%cf -> 1
%af -> 1
%ah -> 1
%pf -> 1
%bl -> 1
%of -> 1
%sf -> 1
%zf -> 1

Circuit: rcll $0x1, %edi
%rdi -> 1
%of -> 1
%edi -> 1
\$0x1 -> 1
%cf -> 1

Total Circuit
SF -> 1
PF -> 1
ZF -> 1
OF -> 1
AF -> 1
 -> 1
RAX -> 1
R8 -> 1
CF -> 1
RBX -> 1
RDI -> 1

Target
RAX -> 1
ZF -> 1
AF -> 1
OF -> 1
SF -> 1
PF -> 1
RBX -> 1
CF -> 1

[4m[1m[34mkprove xorb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_xorb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xorb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xorb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xorb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xorb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxorb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xorb_rh_r8: derivedInstructions//x86-xorb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xorb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xorpd_xmm_xmm[0m
[4m[1m[34mcreatespec xorpd_xmm_xmm: kproveSpecs//x86-semantics_xorpd_xmm_xmm_spec.k[0m
[4m[1m[34mxorpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: pxor %xmm2, %xmm1
%xmm2 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
 -> 1
YMM1 -> 1
YMM2 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove xorpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_xorpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xorpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xorpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xorpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xorpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxorpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xorpd_xmm_xmm: derivedInstructions//x86-xorpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xorpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

