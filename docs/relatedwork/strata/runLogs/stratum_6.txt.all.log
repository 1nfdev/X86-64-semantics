[4m[1m[34mCheck if supported: andb_r8_r8[0m
[4m[1m[34mcreatespec andb_r8_r8: kproveSpecs//x86-semantics_andb_r8_r8_spec.k[0m
[4m[1m[34mandb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andb_r8_r8[0m
Undef Set
af -> 1

Circuit: movsbq %bl, %r12
%bl -> 1
%r12 -> 1

Circuit: movsbl %cl, %ebx
%rbx -> 1
%ebx -> 1
%cl -> 1

Circuit: andl %r12d, %ebx
%af -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%pf -> 1
%of -> 1
%r12d -> 1
%ebx -> 1
%rbx -> 1

Total Circuit
SF -> 1
AF -> 1
OF -> 1
ZF -> 1
RBX -> 1
CF -> 1
R12 -> 1
PF -> 1
RCX -> 1

Target
ZF -> 1
OF -> 1
AF -> 1
SF -> 1
CF -> 1
PF -> 1
RCX -> 1
RBX -> 1

[4m[1m[34mkprove andb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_andb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andb_r8_r8: derivedInstructions//x86-andb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: blsrl_r32_r32[0m
[4m[1m[34mcreatespec blsrl_r32_r32: kproveSpecs//x86-semantics_blsrl_r32_r32_spec.k[0m
[4m[1m[34mblsrl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: blsrl_r32_r32[0m
Undef Set
af -> 1
pf -> 1

Circuit: movl %ecx, %ebx
%ecx -> 1
%rbx -> 1
%ebx -> 1

Circuit: decq %rbx
%sf -> 1
%pf -> 1
%of -> 1
%rbx -> 1
%af -> 1
%zf -> 1

Circuit: andl %ecx, %ebx
%of -> 1
%pf -> 1
%sf -> 1
%rbx -> 1
%ebx -> 1
%ecx -> 1
%zf -> 1
%af -> 1
%cf -> 1

Circuit: blsmskl %ecx, %ecx
%cf -> 1
%zf -> 1
%af -> 1
bmi1 -> 1
%ecx -> 1
%of -> 1
%rcx -> 1
%pf -> 1
%sf -> 1

Circuit: callq .set_szp_for_ebx
%zf -> 1
%sf -> 1
%pf -> 1
%ebx -> 1

Total Circuit
OF -> 1
ZF -> 1
SF -> 1
AF -> 1
RCX -> 1
PF -> 1
CF -> 1
 -> 1
RBX -> 1

Target
CF -> 1
PF -> 1
RCX -> 1
 -> 1
RBX -> 1
ZF -> 1
OF -> 1
AF -> 1
SF -> 1

[4m[1m[34mkprove blsrl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_blsrl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_blsrl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput blsrl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_blsrl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput blsrl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mblsrl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn blsrl_r32_r32: derivedInstructions//x86-blsrl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "blsrl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: btq_r64_r64[0m
[4m[1m[34mcreatespec btq_r64_r64: kproveSpecs//x86-semantics_btq_r64_r64_spec.k[0m
[4m[1m[34mbtq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: btq_r64_r64[0m
Undef Set
of -> 1
pf -> 1
sf -> 1
af -> 1

Circuit: sarq %cl, %rbx
%rbx -> 1
%of -> 1
%pf -> 1
%sf -> 1
%cf -> 1
%cl -> 1
%zf -> 1
%af -> 1

Circuit: sarq $0x1, %rbx
%sf -> 1
%of -> 1
\$0x1 -> 1
%pf -> 1
%rbx -> 1
%af -> 1
%zf -> 1
%cf -> 1

Total Circuit
AF -> 1
SF -> 1
ZF -> 1
OF -> 1
RBX -> 1
 -> 1
RCX -> 1
PF -> 1
CF -> 1

Target
RBX -> 1
PF -> 1
RCX -> 1
CF -> 1
SF -> 1
AF -> 1
OF -> 1

[4m[1m[34mkprove btq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_btq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_btq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput btq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_btq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput btq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mbtq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn btq_r64_r64: derivedInstructions//x86-btq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "btq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovael_r32_r32[0m
[4m[1m[34mcreatespec cmovael_r32_r32: kproveSpecs//x86-semantics_cmovael_r32_r32_spec.k[0m
[4m[1m[34mcmovael_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovael_r32_r32[0m
Circuit: cmovbl %ebx, %ecx
%cf -> 1
%rcx -> 1
cmov -> 1
%ebx -> 1
%ecx -> 1

Circuit: xchgl %ebx, %ecx
%ecx -> 1
%ebx -> 1
%rbx -> 1
%rcx -> 1

Circuit: orq %rbx, %rbx
%af -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%pf -> 1
%of -> 1
%rbx -> 1

Total Circuit
 -> 1
RBX -> 1
CF -> 1
PF -> 1
RCX -> 1
AF -> 1
SF -> 1
ZF -> 1
OF -> 1

Target
RBX -> 1
 -> 1
RCX -> 1
CF -> 1

[4m[1m[34mkprove cmovael_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovael_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovael_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovael_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovael_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovael_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovael_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovael_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovael_r32_r32: derivedInstructions//x86-cmovael_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovael %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovaq_r64_r64[0m
[4m[1m[34mcreatespec cmovaq_r64_r64: kproveSpecs//x86-semantics_cmovaq_r64_r64_spec.k[0m
[4m[1m[34mcmovaq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovaq_r64_r64[0m
Circuit: cmovnbeq %rcx, %rbx
%rcx -> 1
%rbx -> 1
cmov -> 1
%zf -> 1
%cf -> 1

Total Circuit
RCX -> 1
CF -> 1
 -> 1
RBX -> 1
ZF -> 1

Target
RCX -> 1
CF -> 1
RBX -> 1
 -> 1
ZF -> 1

[4m[1m[34mkprove cmovaq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovaq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovaq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovaq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovaq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovaq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovaq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovaq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovaq_r64_r64: derivedInstructions//x86-cmovaq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovaq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovbw_r16_r16[0m
[4m[1m[34mcreatespec cmovbw_r16_r16: kproveSpecs//x86-semantics_cmovbw_r16_r16_spec.k[0m
[4m[1m[34mcmovbw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovbw_r16_r16[0m
Circuit: movswq %cx, %rsp
%rsp -> 1
%cx -> 1

Circuit: cmovbl %esp, %ebx
%esp -> 1
%cf -> 1
cmov -> 1
%ebx -> 1
%rbx -> 1

Total Circuit
CF -> 1
RCX -> 1
RSP -> 1
 -> 1
RBX -> 1

Target
RCX -> 1
CF -> 1
 -> 1
RBX -> 1

[4m[1m[34mkprove cmovbw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovbw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovbw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovbw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovbw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovbw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovbw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovbw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovbw_r16_r16: derivedInstructions//x86-cmovbw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovbw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovcl_r32_r32[0m
[4m[1m[34mcreatespec cmovcl_r32_r32: kproveSpecs//x86-semantics_cmovcl_r32_r32_spec.k[0m
[4m[1m[34mcmovcl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovcl_r32_r32[0m
Circuit: cmovbl %ecx, %ebx
%cf -> 1
%ecx -> 1
%ebx -> 1
%rbx -> 1
cmov -> 1

Total Circuit
 -> 1
RBX -> 1
RCX -> 1
CF -> 1

Target
 -> 1
RBX -> 1
CF -> 1
RCX -> 1

[4m[1m[34mkprove cmovcl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovcl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovcl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovcl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovcl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovcl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovcl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovcl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovcl_r32_r32: derivedInstructions//x86-cmovcl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovcl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovll_r32_r32[0m
[4m[1m[34mcreatespec cmovll_r32_r32: kproveSpecs//x86-semantics_cmovll_r32_r32_spec.k[0m
[4m[1m[34mcmovll_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovll_r32_r32[0m
Circuit: vpxor %xmm2, %xmm2, %xmm1
avx -> 1
%ymm1 -> 1
%xmm1 -> 1
%xmm2 -> 1

Circuit: callq .move_byte_25_of_ymm1_to_r8b
%ymm1 -> 1
%r8b -> 1

Circuit: setnl %r14b
%r14b -> 1
%sf -> 1
%of -> 1

Circuit: xaddb %r14b, %r8b
%zf -> 1
%af -> 1
%cf -> 1
%of -> 1
%pf -> 1
%sf -> 1
%r14b -> 1
%r8b -> 1

Circuit: cmovel %ecx, %ebx
%ecx -> 1
%rbx -> 1
%ebx -> 1
cmov -> 1
%zf -> 1

Total Circuit
ZF -> 1
OF -> 1
YMM2 -> 1
YMM1 -> 1
R14 -> 1
AF -> 1
SF -> 1
CF -> 1
RCX -> 1
PF -> 1
R8 -> 1
RBX -> 1
 -> 1

Target
RCX -> 1
 -> 1
RBX -> 1
OF -> 1
SF -> 1

[4m[1m[34mkprove cmovll_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovll_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovll_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovll_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovll_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovll_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovll_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovll_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovll_r32_r32: derivedInstructions//x86-cmovll_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovll %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnaeq_r64_r64[0m
[4m[1m[34mcreatespec cmovnaeq_r64_r64: kproveSpecs//x86-semantics_cmovnaeq_r64_r64_spec.k[0m
[4m[1m[34mcmovnaeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnaeq_r64_r64[0m
Circuit: cmovbq %rcx, %rbx
%cf -> 1
%rcx -> 1
cmov -> 1
%rbx -> 1

Total Circuit
CF -> 1
RCX -> 1
 -> 1
RBX -> 1

Target
RBX -> 1
 -> 1
CF -> 1
RCX -> 1

[4m[1m[34mkprove cmovnaeq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovnaeq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnaeq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnaeq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnaeq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnaeq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnaeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnaeq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnaeq_r64_r64: derivedInstructions//x86-cmovnaeq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnaeq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnaew_r16_r16[0m
[4m[1m[34mcreatespec cmovnaew_r16_r16: kproveSpecs//x86-semantics_cmovnaew_r16_r16_spec.k[0m
[4m[1m[34mcmovnaew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovnaew_r16_r16[0m
Circuit: movzwq %cx, %rcx
%rcx -> 1
%cx -> 1

Circuit: cmovbl %ecx, %ebx
%cf -> 1
%ecx -> 1
%ebx -> 1
%rbx -> 1
cmov -> 1

Total Circuit
 -> 1
RBX -> 1
CF -> 1
RCX -> 1

Target
RBX -> 1
 -> 1
CF -> 1
RCX -> 1

[4m[1m[34mkprove cmovnaew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovnaew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnaew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnaew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnaew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnaew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnaew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnaew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnaew_r16_r16: derivedInstructions//x86-cmovnaew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnaew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnal_r32_r32[0m
[4m[1m[34mcreatespec cmovnal_r32_r32: kproveSpecs//x86-semantics_cmovnal_r32_r32_spec.k[0m
[4m[1m[34mcmovnal_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnal_r32_r32[0m
Circuit: xchgl %ebx, %ecx
%rcx -> 1
%ecx -> 1
%ebx -> 1
%rbx -> 1

Circuit: cmovnbel %ecx, %ebx
%cf -> 1
%zf -> 1
cmov -> 1
%ebx -> 1
%rbx -> 1
%ecx -> 1

Total Circuit
 -> 1
RBX -> 1
CF -> 1
RCX -> 1
ZF -> 1

Target
ZF -> 1
RBX -> 1
 -> 1
RCX -> 1
CF -> 1

[4m[1m[34mkprove cmovnal_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnal_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnal_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnal_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnal_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnal_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnal_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnal_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnal_r32_r32: derivedInstructions//x86-cmovnal_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnal %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovngel_r32_r32[0m
[4m[1m[34mcreatespec cmovngel_r32_r32: kproveSpecs//x86-semantics_cmovngel_r32_r32_spec.k[0m
[4m[1m[34mcmovngel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovngel_r32_r32[0m
Circuit: movslq %ecx, %r8
%r8 -> 1
%ecx -> 1

Circuit: setl %cl
%cl -> 1
%of -> 1
%sf -> 1

Circuit: callq .write_cl_to_zf
%zf -> 1
%cl -> 1

Circuit: cmovel %r8d, %ebx
cmov -> 1
%r8d -> 1
%rbx -> 1
%ebx -> 1
%zf -> 1

Total Circuit
ZF -> 1
OF -> 1
SF -> 1
RCX -> 1
 -> 1
R8 -> 1
RBX -> 1

Target
SF -> 1
OF -> 1
RBX -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovngel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovngel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovngel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovngel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovngel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovngel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovngel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovngel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovngel_r32_r32: derivedInstructions//x86-cmovngel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovngel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnsw_r16_r16[0m
[4m[1m[34mcreatespec cmovnsw_r16_r16: kproveSpecs//x86-semantics_cmovnsw_r16_r16_spec.k[0m
[4m[1m[34mcmovnsw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovnsw_r16_r16[0m
Circuit: movzwq %cx, %rsi
%rsi -> 1
%cx -> 1

Circuit: cmovnsl %esi, %ebx
cmov -> 1
%ebx -> 1
%rbx -> 1
%sf -> 1
%esi -> 1

Circuit: xorq %r11, %r11
%sf -> 1
%pf -> 1
%of -> 1
%r11 -> 1
%cf -> 1
%af -> 1
%zf -> 1

Circuit: cmovnbel %esi, %ebx
cmov -> 1
%rbx -> 1
%ebx -> 1
%esi -> 1
%cf -> 1
%zf -> 1

Total Circuit
ZF -> 1
OF -> 1
R11 -> 1
AF -> 1
SF -> 1
CF -> 1
RSI -> 1
RCX -> 1
PF -> 1
 -> 1
RBX -> 1

Target
SF -> 1
RBX -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovnsw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovnsw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnsw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnsw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnsw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnsw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnsw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnsw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnsw_r16_r16: derivedInstructions//x86-cmovnsw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnsw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpew_r16_r16[0m
[4m[1m[34mcreatespec cmovpew_r16_r16: kproveSpecs//x86-semantics_cmovpew_r16_r16_spec.k[0m
[4m[1m[34mcmovpew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovpew_r16_r16[0m
Circuit: setp %ah
%pf -> 1
%ah -> 1

Circuit: decb %ah
%zf -> 1
%af -> 1
%ah -> 1
%of -> 1
%pf -> 1
%sf -> 1

Circuit: cmovzw %cx, %bx
cmov -> 1
%cx -> 1
%zf -> 1
%bx -> 1

Total Circuit
OF -> 1
ZF -> 1
SF -> 1
AF -> 1
RCX -> 1
PF -> 1
RBX -> 1
 -> 1
RAX -> 1

Target
PF -> 1
RCX -> 1
 -> 1
RBX -> 1

[4m[1m[34mkprove cmovpew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovpew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpew_r16_r16: derivedInstructions//x86-cmovpew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpl_r32_r32[0m
[4m[1m[34mcreatespec cmovpl_r32_r32: kproveSpecs//x86-semantics_cmovpl_r32_r32_spec.k[0m
[4m[1m[34mcmovpl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovpl_r32_r32[0m
Circuit: cmovpel %ecx, %ebx
%pf -> 1
cmov -> 1
%ecx -> 1
%ebx -> 1
%rbx -> 1

Total Circuit
 -> 1
RBX -> 1
RCX -> 1
PF -> 1

Target
 -> 1
RBX -> 1
PF -> 1
RCX -> 1

[4m[1m[34mkprove cmovpl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovpl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpl_r32_r32: derivedInstructions//x86-cmovpl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpow_r16_r16[0m
[4m[1m[34mcreatespec cmovpow_r16_r16: kproveSpecs//x86-semantics_cmovpow_r16_r16_spec.k[0m
[4m[1m[34mcmovpow_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovpow_r16_r16[0m
Circuit: cmovnpw %cx, %bx
cmov -> 1
%pf -> 1
%bx -> 1
%cx -> 1

Total Circuit
PF -> 1
RCX -> 1
RBX -> 1
 -> 1

Target
 -> 1
RBX -> 1
PF -> 1
RCX -> 1

[4m[1m[34mkprove cmovpow_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovpow_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpow_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpow_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpow_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpow_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpow_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpow_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpow_r16_r16: derivedInstructions//x86-cmovpow_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpow %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpq_r64_r64[0m
[4m[1m[34mcreatespec cmovpq_r64_r64: kproveSpecs//x86-semantics_cmovpq_r64_r64_spec.k[0m
[4m[1m[34mcmovpq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovpq_r64_r64[0m
Circuit: cmovpeq %rcx, %rbx
%pf -> 1
%rcx -> 1
cmov -> 1
%rbx -> 1

Total Circuit
RCX -> 1
PF -> 1
 -> 1
RBX -> 1

Target
 -> 1
RBX -> 1
PF -> 1
RCX -> 1

[4m[1m[34mkprove cmovpq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovpq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpq_r64_r64: derivedInstructions//x86-cmovpq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovzl_r32_r32[0m
[4m[1m[34mcreatespec cmovzl_r32_r32: kproveSpecs//x86-semantics_cmovzl_r32_r32_spec.k[0m
[4m[1m[34mcmovzl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovzl_r32_r32[0m
Circuit: movl %ecx, %esi
%ecx -> 1
%rsi -> 1
%esi -> 1

Circuit: cmovel %esi, %ebx
%esi -> 1
cmov -> 1
%ebx -> 1
%rbx -> 1
%zf -> 1

Total Circuit
ZF -> 1
RBX -> 1
 -> 1
RCX -> 1
RSI -> 1

Target
 -> 1
RBX -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove cmovzl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovzl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovzl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovzl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovzl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovzl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovzl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovzl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovzl_r32_r32: derivedInstructions//x86-cmovzl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovzl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cvtsi2sdl_xmm_r32[0m
[4m[1m[34mcreatespec cvtsi2sdl_xmm_r32: kproveSpecs//x86-semantics_cvtsi2sdl_xmm_r32_spec.k[0m
[4m[1m[34mcvtsi2sdl_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vcvtsi2sdl %ebx, %xmm1, %xmm12
%xmm1 -> 1
%ymm12 -> 1
%xmm12 -> 1
avx -> 1
%mxcsr::rc[0] -> 1
%ebx -> 1

Circuit: movsd %xmm12, %xmm1
%xmm12 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
 -> 1
RBX -> 1
YMM12 -> 1
YMM1 -> 1

Target
YMM1 -> 1
 -> 1
RBX -> 1

[4m[1m[34mkprove cvtsi2sdl_xmm_r32[0m
time krun --prove kproveSpecs//x86-semantics_cvtsi2sdl_xmm_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cvtsi2sdl_xmm_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cvtsi2sdl_xmm_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cvtsi2sdl_xmm_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cvtsi2sdl_xmm_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcvtsi2sdl_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cvtsi2sdl_xmm_r32: derivedInstructions//x86-cvtsi2sdl_xmm_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cvtsi2sdl %ebx, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movmskpd_r32_xmm[0m
movmskpd_r32_xmm 0 derivedInstructions//x86-movmskpd_r64_xmm.k
Warn: [4m[1m[35mmovmskpd_r32_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: negl_r32[0m
[4m[1m[34mcreatespec negl_r32: kproveSpecs//x86-semantics_negl_r32_spec.k[0m
[4m[1m[34mnegl_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: notl %ebx
%ebx -> 1
%rbx -> 1

Circuit: xorl %eax, %eax
%of -> 1
%pf -> 1
%sf -> 1
%eax -> 1
%zf -> 1
%af -> 1
%rax -> 1
%cf -> 1

Circuit: setnb %al
%al -> 1
%cf -> 1

Circuit: addl %eax, %ebx
%af -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%pf -> 1
%of -> 1
%ebx -> 1
%eax -> 1
%rbx -> 1

Circuit: cmc
%cf -> 1

Total Circuit
RBX -> 1
RAX -> 1
PF -> 1
CF -> 1
AF -> 1
SF -> 1
ZF -> 1
OF -> 1

Target
SF -> 1
AF -> 1
OF -> 1
ZF -> 1
RBX -> 1
CF -> 1
PF -> 1

[4m[1m[34mkprove negl_r32[0m
time krun --prove kproveSpecs//x86-semantics_negl_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_negl_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput negl_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_negl_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput negl_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnegl_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn negl_r32: derivedInstructions//x86-negl_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "negl %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: paddd_xmm_xmm[0m
[4m[1m[34mcreatespec paddd_xmm_xmm: kproveSpecs//x86-semantics_paddd_xmm_xmm_spec.k[0m
[4m[1m[34mpaddd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vunpckhps %xmm1, %xmm2, %xmm10
avx -> 1
%xmm2 -> 1
%xmm1 -> 1
%xmm10 -> 1
%ymm10 -> 1

Circuit: unpcklps %xmm2, %xmm1
%xmm1 -> 1
%xmm2 -> 1
sse -> 1

Circuit: phaddd %xmm10, %xmm1
%xmm10 -> 1
%xmm1 -> 1
ssse3 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
YMM10 -> 1
 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove paddd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_paddd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_paddd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput paddd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_paddd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput paddd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpaddd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn paddd_xmm_xmm: derivedInstructions//x86-paddd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "paddd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: punpckldq_xmm_xmm[0m
[4m[1m[34mcreatespec punpckldq_xmm_xmm: kproveSpecs//x86-semantics_punpckldq_xmm_xmm_spec.k[0m
[4m[1m[34mpunpckldq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: unpcklps %xmm2, %xmm1
sse -> 1
%xmm1 -> 1
%xmm2 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove punpckldq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_punpckldq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_punpckldq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput punpckldq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_punpckldq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput punpckldq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpunpckldq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn punpckldq_xmm_xmm: derivedInstructions//x86-punpckldq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "punpckldq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sarb_r8_one[0m
[4m[1m[34mcreatespec sarb_r8_one: kproveSpecs//x86-semantics_sarb_r8_one_spec.k[0m
[4m[1m[34msarb_r8_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: sarb_r8_one[0m
Undef Set
af -> 1

Circuit: movsbq %bl, %r8
%r8 -> 1
%bl -> 1

Circuit: sarq $0x1, %r8
%cf -> 1
%zf -> 1
%af -> 1
%r8 -> 1
%pf -> 1
\$0x1 -> 1
%of -> 1
%sf -> 1

Circuit: movq %r8, %rbx
%rbx -> 1
%r8 -> 1

Total Circuit
CF -> 1
PF -> 1
RBX -> 1
R8 -> 1
 -> 1
ZF -> 1
OF -> 1
AF -> 1
SF -> 1

Target
OF -> 1
ZF -> 1
SF -> 1
AF -> 1
CF -> 1
PF -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove sarb_r8_one[0m
time krun --prove kproveSpecs//x86-semantics_sarb_r8_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sarb_r8_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sarb_r8_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sarb_r8_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sarb_r8_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msarb_r8_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sarb_r8_one: derivedInstructions//x86-sarb_r8_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sarb \$0x1, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sarl_r32_one[0m
[4m[1m[34mcreatespec sarl_r32_one: kproveSpecs//x86-semantics_sarl_r32_one_spec.k[0m
[4m[1m[34msarl_r32_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: sarl_r32_one[0m
Undef Set
af -> 1

Circuit: movslq %ebx, %rbx
%ebx -> 1
%rbx -> 1

Circuit: sarq $0x1, %rbx
%cf -> 1
%zf -> 1
%af -> 1
%rbx -> 1
%of -> 1
\$0x1 -> 1
%pf -> 1
%sf -> 1

Circuit: movl %ebx, %ebx
%rbx -> 1
%ebx -> 1

Total Circuit
RBX -> 1
 -> 1
CF -> 1
PF -> 1
AF -> 1
SF -> 1
ZF -> 1
OF -> 1

Target
 -> 1
RBX -> 1
PF -> 1
CF -> 1
SF -> 1
AF -> 1
OF -> 1
ZF -> 1

[4m[1m[34mkprove sarl_r32_one[0m
time krun --prove kproveSpecs//x86-semantics_sarl_r32_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sarl_r32_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sarl_r32_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sarl_r32_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sarl_r32_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msarl_r32_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sarl_r32_one: derivedInstructions//x86-sarl_r32_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sarl \$0x1, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sarw_r16_one[0m
[4m[1m[34mcreatespec sarw_r16_one: kproveSpecs//x86-semantics_sarw_r16_one_spec.k[0m
[4m[1m[34msarw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: sarw_r16_one[0m
Undef Set
af -> 1

Circuit: movswq %bx, %r12
%r12 -> 1
%bx -> 1

Circuit: sarq $0x1, %r12
%r12 -> 1
%sf -> 1
%pf -> 1
\$0x1 -> 1
%of -> 1
%af -> 1
%zf -> 1
%cf -> 1

Circuit: xchgw %r12w, %bx
%bx -> 1
%r12w -> 1

Total Circuit
AF -> 1
SF -> 1
ZF -> 1
OF -> 1
RBX -> 1
 -> 1
CF -> 1
R12 -> 1
PF -> 1

Target
CF -> 1
PF -> 1
RBX -> 1
 -> 1
ZF -> 1
OF -> 1
AF -> 1
SF -> 1

[4m[1m[34mkprove sarw_r16_one[0m
time krun --prove kproveSpecs//x86-semantics_sarw_r16_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sarw_r16_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sarw_r16_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sarw_r16_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sarw_r16_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msarw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sarw_r16_one: derivedInstructions//x86-sarw_r16_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sarw \$0x1, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbb_rh_r8[0m
[4m[1m[34mcreatespec sbbb_rh_r8: kproveSpecs//x86-semantics_sbbb_rh_r8_spec.k[0m
[4m[1m[34msbbb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: cmc
%cf -> 1

Circuit: notb %bl
%bl -> 1

Circuit: adcb %bl, %ah
%cf -> 1
%zf -> 1
%af -> 1
%ah -> 1
%bl -> 1
%pf -> 1
%of -> 1
%sf -> 1

Circuit: cmc
%cf -> 1

Total Circuit
CF -> 1
PF -> 1
RAX -> 1
RBX -> 1
OF -> 1
ZF -> 1
SF -> 1
AF -> 1

Target
RAX -> 1
RBX -> 1
CF -> 1
PF -> 1
AF -> 1
SF -> 1
ZF -> 1
OF -> 1

[4m[1m[34mkprove sbbb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_sbbb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbb_rh_r8: derivedInstructions//x86-sbbb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbb_rh_rh[0m
[4m[1m[34mcreatespec sbbb_rh_rh: kproveSpecs//x86-semantics_sbbb_rh_rh_spec.k[0m
[4m[1m[34msbbb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: cmc
%cf -> 1

Circuit: notb %bh
%bh -> 1

Circuit: adcb %bh, %ah
%pf -> 1
%of -> 1
%sf -> 1
%bh -> 1
%ah -> 1
%zf -> 1
%af -> 1
%cf -> 1

Circuit: cmc
%cf -> 1

Total Circuit
SF -> 1
AF -> 1
OF -> 1
ZF -> 1
RAX -> 1
RBX -> 1
CF -> 1
PF -> 1

Target
ZF -> 1
OF -> 1
AF -> 1
SF -> 1
PF -> 1
CF -> 1
RBX -> 1
RAX -> 1

[4m[1m[34mkprove sbbb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_sbbb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbb_rh_rh: derivedInstructions//x86-sbbb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbl_r32_r32[0m
[4m[1m[34mcreatespec sbbl_r32_r32: kproveSpecs//x86-semantics_sbbl_r32_r32_spec.k[0m
[4m[1m[34msbbl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: notl %ecx
%ecx -> 1
%rcx -> 1

Circuit: cmc
%cf -> 1

Circuit: adcl %ecx, %ebx
%rbx -> 1
%ebx -> 1
%ecx -> 1
%sf -> 1
%of -> 1
%pf -> 1
%cf -> 1
%af -> 1
%zf -> 1

Circuit: callq .set_szp_for_ebx
%ebx -> 1
%pf -> 1
%sf -> 1
%zf -> 1

Circuit: cmc
%cf -> 1

Total Circuit
AF -> 1
SF -> 1
ZF -> 1
OF -> 1
RBX -> 1
PF -> 1
RCX -> 1
CF -> 1

Target
CF -> 1
RCX -> 1
PF -> 1
RBX -> 1
OF -> 1
ZF -> 1
SF -> 1
AF -> 1

[4m[1m[34mkprove sbbl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_sbbl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbl_r32_r32: derivedInstructions//x86-sbbl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbq_r64_r64[0m
[4m[1m[34mcreatespec sbbq_r64_r64: kproveSpecs//x86-semantics_sbbq_r64_r64_spec.k[0m
[4m[1m[34msbbq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: notq %rcx
%rcx -> 1

Circuit: cmc
%cf -> 1

Circuit: adcq %rcx, %rbx
%of -> 1
%rcx -> 1
%pf -> 1
%sf -> 1
%rbx -> 1
%zf -> 1
%af -> 1
%cf -> 1

Circuit: cmc
%cf -> 1

Total Circuit
SF -> 1
AF -> 1
OF -> 1
ZF -> 1
RBX -> 1
RCX -> 1
PF -> 1
CF -> 1

Target
RBX -> 1
CF -> 1
RCX -> 1
PF -> 1
SF -> 1
AF -> 1
OF -> 1
ZF -> 1

[4m[1m[34mkprove sbbq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_sbbq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbq_r64_r64: derivedInstructions//x86-sbbq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbw_r16_r16[0m
[4m[1m[34mcreatespec sbbw_r16_r16: kproveSpecs//x86-semantics_sbbw_r16_r16_spec.k[0m
[4m[1m[34msbbw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: cmc
%cf -> 1

Circuit: notw %cx
%cx -> 1

Circuit: adcw %bx, %cx
%zf -> 1
%cx -> 1
%af -> 1
%cf -> 1
%bx -> 1
%of -> 1
%pf -> 1
%sf -> 1

Circuit: cmc
%cf -> 1

Circuit: movswq %cx, %rbx
%cx -> 1
%rbx -> 1

Total Circuit
CF -> 1
PF -> 1
RCX -> 1
RBX -> 1
ZF -> 1
OF -> 1
AF -> 1
SF -> 1

Target
AF -> 1
SF -> 1
ZF -> 1
OF -> 1
RBX -> 1
PF -> 1
RCX -> 1
CF -> 1

[4m[1m[34mkprove sbbw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_sbbw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbw_r16_r16: derivedInstructions//x86-sbbw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setg_r8[0m
[4m[1m[34mcreatespec setg_r8: kproveSpecs//x86-semantics_setg_r8_spec.k[0m
[4m[1m[34msetg_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setnle %bl
%zf -> 1
%bl -> 1
%of -> 1
%sf -> 1

Total Circuit
ZF -> 1
OF -> 1
SF -> 1
RBX -> 1

Target
ZF -> 1
OF -> 1
SF -> 1
RBX -> 1

[4m[1m[34mkprove setg_r8[0m
time krun --prove kproveSpecs//x86-semantics_setg_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setg_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setg_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setg_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setg_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetg_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setg_r8: derivedInstructions//x86-setg_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setg %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnle_rh[0m
[4m[1m[34mcreatespec setnle_rh: kproveSpecs//x86-semantics_setnle_rh_spec.k[0m
[4m[1m[34msetnle_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setnle %cl
%cl -> 1
%zf -> 1
%of -> 1
%sf -> 1

Circuit: setne %ah
%zf -> 1
%ah -> 1

Circuit: xchgb %cl, %ah
%ah -> 1
%cl -> 1

Total Circuit
RCX -> 1
RAX -> 1
OF -> 1
ZF -> 1
SF -> 1

Target
RAX -> 1
ZF -> 1
OF -> 1
SF -> 1

[4m[1m[34mkprove setnle_rh[0m
time krun --prove kproveSpecs//x86-semantics_setnle_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnle_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnle_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnle_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnle_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnle_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnle_rh: derivedInstructions//x86-setnle_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnle %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subq_r64_r64[0m
[4m[1m[34mcreatespec subq_r64_r64: kproveSpecs//x86-semantics_subq_r64_r64_spec.k[0m
[4m[1m[34msubq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: stc
%cf -> 1

Circuit: notq %rcx
%rcx -> 1

Circuit: adcq %rcx, %rbx
%pf -> 1
%of -> 1
%rcx -> 1
%sf -> 1
%rbx -> 1
%zf -> 1
%af -> 1
%cf -> 1

Circuit: cmc
%cf -> 1

Total Circuit
CF -> 1
PF -> 1
RCX -> 1
RBX -> 1
OF -> 1
ZF -> 1
SF -> 1
AF -> 1

Target
RBX -> 1
CF -> 1
RCX -> 1
PF -> 1
SF -> 1
AF -> 1
OF -> 1
ZF -> 1

[4m[1m[34mkprove subq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_subq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subq_r64_r64: derivedInstructions//x86-subq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testb_r8_r8[0m
[4m[1m[34mcreatespec testb_r8_r8: kproveSpecs//x86-semantics_testb_r8_r8_spec.k[0m
[4m[1m[34mtestb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testb_r8_r8[0m
Undef Set
af -> 1

Circuit: movsbl %bl, %ebx
%ebx -> 1
%rbx -> 1
%bl -> 1

Circuit: movsbl %cl, %r11d
%r11d -> 1
%cl -> 1
%r11 -> 1

Circuit: testl %r11d, %ebx
%ebx -> 1
%of -> 1
%pf -> 1
%sf -> 1
%cf -> 1
%r11d -> 1
%zf -> 1
%af -> 1

Total Circuit
R11 -> 1
OF -> 1
ZF -> 1
SF -> 1
AF -> 1
CF -> 1
RCX -> 1
PF -> 1
RBX -> 1

Target
RBX -> 1
CF -> 1
RCX -> 1
PF -> 1
AF -> 1
SF -> 1
ZF -> 1
OF -> 1

[4m[1m[34mkprove testb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_testb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testb_r8_r8: derivedInstructions//x86-testb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testw_r16_r16[0m
[4m[1m[34mcreatespec testw_r16_r16: kproveSpecs//x86-semantics_testw_r16_r16_spec.k[0m
[4m[1m[34mtestw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testw_r16_r16[0m
Undef Set
af -> 1

Circuit: movswq %bx, %r10
%bx -> 1
%r10 -> 1

Circuit: movswl %cx, %edi
%rdi -> 1
%cx -> 1
%edi -> 1

Circuit: xchgl %edi, %r10d
%edi -> 1
%r10d -> 1
%r10 -> 1
%rdi -> 1

Circuit: andl %r10d, %edi
%r10d -> 1
%cf -> 1
%rdi -> 1
%af -> 1
%zf -> 1
%edi -> 1
%sf -> 1
%pf -> 1
%of -> 1

Total Circuit
ZF -> 1
OF -> 1
RDI -> 1
AF -> 1
SF -> 1
CF -> 1
PF -> 1
RCX -> 1
R10 -> 1
RBX -> 1

Target
AF -> 1
SF -> 1
ZF -> 1
OF -> 1
RBX -> 1
PF -> 1
RCX -> 1
CF -> 1

[4m[1m[34mkprove testw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_testw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testw_r16_r16: derivedInstructions//x86-testw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vandps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vandps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvandps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: andps %xmm2, %xmm3
sse -> 1
%xmm3 -> 1
%xmm2 -> 1

Circuit: callq .move_256_128_ymm2_xmm10_xmm11
%xmm10 -> 1
%xmm11 -> 1
%ymm2 -> 1

Circuit: callq .move_256_128_ymm3_xmm8_xmm9
%ymm3 -> 1
%xmm9 -> 1
%xmm8 -> 1

Circuit: pand %xmm11, %xmm9
%xmm11 -> 1
sse2 -> 1
%xmm9 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%xmm8 -> 1
%ymm1 -> 1
%xmm9 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM9 -> 1
YMM2 -> 1
YMM1 -> 1
YMM10 -> 1
YMM11 -> 1
YMM8 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vandps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vandps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandps_ymm_ymm_ymm: derivedInstructions//x86-vandps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvtsi2ssl_xmm_xmm_r32[0m
[4m[1m[34mcreatespec vcvtsi2ssl_xmm_xmm_r32: kproveSpecs//x86-semantics_vcvtsi2ssl_xmm_xmm_r32_spec.k[0m
[4m[1m[34mvcvtsi2ssl_xmm_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r10_r11
%r10 -> 1
%r11 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm12 -> 1
%ymm14 -> 1
%ymm11 -> 1
avx -> 1
%ymm15 -> 1
%ymm6 -> 1
%ymm8 -> 1
%ymm1 -> 1
%ymm4 -> 1
%ymm5 -> 1
%ymm10 -> 1
%ymm3 -> 1
%ymm2 -> 1
%ymm13 -> 1
%ymm0 -> 1
%ymm7 -> 1
%ymm9 -> 1

Circuit: callq .move_064_128_r10_r11_xmm3
%r11 -> 1
%r10 -> 1
%xmm3 -> 1

Circuit: cvtsi2ssl %ebx, %xmm3
%mxcsr::rc[0] -> 1
sse -> 1
%ebx -> 1
%xmm3 -> 1

Circuit: movdqa %xmm3, %xmm1
sse2 -> 1
%xmm3 -> 1
%xmm1 -> 1

Total Circuit
YMM7 -> 1
YMM6 -> 1
YMM10 -> 1
YMM11 -> 1
YMM5 -> 1
YMM4 -> 1
 -> 1
YMM3 -> 1
RBX -> 1
YMM1 -> 1
YMM2 -> 1
R11 -> 1
YMM13 -> 1
YMM8 -> 1
YMM15 -> 1
YMM14 -> 1
R10 -> 1
YMM0 -> 1
YMM9 -> 1
YMM12 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
RBX -> 1

[4m[1m[34mkprove vcvtsi2ssl_xmm_xmm_r32[0m
time krun --prove kproveSpecs//x86-semantics_vcvtsi2ssl_xmm_xmm_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vcvtsi2ssl_xmm_xmm_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vcvtsi2ssl_xmm_xmm_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vcvtsi2ssl_xmm_xmm_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vcvtsi2ssl_xmm_xmm_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvcvtsi2ssl_xmm_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vcvtsi2ssl_xmm_xmm_r32: derivedInstructions//x86-vcvtsi2ssl_xmm_xmm_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vcvtsi2ssl %ebx, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvttps2dq_xmm_xmm[0m
vcvttps2dq_xmm_xmm 0 derivedInstructions//x86-vcvttps2dq_ymm_ymm.k
Warn: [4m[1m[35mvcvttps2dq_xmm_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vfmadd132pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd132pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd132pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd231pd %xmm3, %xmm1, %xmm2
%xmm1 -> 1
%xmm3 -> 1
%ymm2 -> 1
fma -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm2_r10_r11
%r10 -> 1
%r11 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm1 -> 1
%ymm4 -> 1
%ymm3 -> 1
%ymm5 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm2 -> 1
%ymm0 -> 1
%ymm9 -> 1
%ymm7 -> 1
%ymm12 -> 1
%ymm14 -> 1
%ymm11 -> 1
%ymm6 -> 1
%ymm15 -> 1
avx -> 1
%ymm8 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%r11 -> 1
%xmm1 -> 1

Total Circuit
YMM12 -> 1
YMM9 -> 1
YMM0 -> 1
R10 -> 1
YMM15 -> 1
YMM14 -> 1
YMM8 -> 1
YMM13 -> 1
YMM1 -> 1
R11 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1
YMM5 -> 1
YMM4 -> 1
YMM11 -> 1
YMM10 -> 1
YMM6 -> 1
YMM7 -> 1

Target
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vfmadd132pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd132pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd132pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd132pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd132pd_xmm_xmm_xmm: derivedInstructions//x86-vfmadd132pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd132sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd132sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd132sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd231pd %xmm3, %xmm1, %xmm2
fma -> 1
%xmm2 -> 1
%ymm2 -> 1
%xmm3 -> 1
%xmm1 -> 1

Circuit: vmovsd %xmm2, %xmm1, %xmm9
%xmm2 -> 1
%ymm9 -> 1
%xmm1 -> 1
%xmm9 -> 1
avx -> 1

Circuit: vmovaps %ymm9, %ymm1
%ymm1 -> 1
%ymm9 -> 1
avx -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM9 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfmadd132sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd132sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd132sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd132sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd132sd_xmm_xmm_xmm: derivedInstructions//x86-vfmadd132sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd213ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd213ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd213ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd213ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: pxor %xmm9, %xmm9
%xmm9 -> 1
sse2 -> 1

Circuit: vandps %xmm9, %xmm3, %xmm10
%xmm3 -> 1
%ymm10 -> 1
%xmm10 -> 1
avx -> 1
%xmm9 -> 1

Circuit: vfnmsub231ps %xmm3, %xmm10, %xmm3
%ymm3 -> 1
%xmm10 -> 1
fma -> 1
%xmm3 -> 1

Circuit: vfmsub132ps %xmm1, %xmm3, %xmm2
%xmm1 -> 1
%xmm3 -> 1
%ymm2 -> 1
fma -> 1
%xmm2 -> 1

Circuit: vorpd %ymm2, %ymm10, %ymm1
%ymm10 -> 1
%ymm1 -> 1
%ymm2 -> 1
avx -> 1

Total Circuit
YMM10 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
YMM9 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmadd213ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd213ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd213ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd213ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd213ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd213ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd213ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd213ps_xmm_xmm_xmm: derivedInstructions//x86-vfmadd213ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd213sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd213sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd213sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm2_xmm10_xmm11
%xmm11 -> 1
%xmm10 -> 1
%xmm2 -> 1

Circuit: vfmadd231pd %xmm1, %xmm10, %xmm3
%xmm3 -> 1
fma -> 1
%ymm3 -> 1
%xmm10 -> 1
%xmm1 -> 1

Circuit: vpunpcklqdq %ymm3, %ymm3, %ymm11
%ymm3 -> 1
avx2 -> 1
%ymm11 -> 1

Circuit: vmovsd %xmm11, %xmm1, %xmm1
%xmm11 -> 1
%ymm1 -> 1
avx -> 1
%xmm1 -> 1

Total Circuit
 -> 1
YMM3 -> 1
YMM11 -> 1
YMM10 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfmadd213sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd213sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd213sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd213sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd213sd_xmm_xmm_xmm: derivedInstructions//x86-vfmadd213sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmaddsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmaddsub132pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmaddsub132pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmaddsub132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm1_xmm10_xmm11
%xmm11 -> 1
%xmm10 -> 1
%xmm1 -> 1

Circuit: vfmsub231sd %xmm3, %xmm10, %xmm2
%xmm2 -> 1
fma -> 1
%xmm10 -> 1
%ymm2 -> 1
%xmm3 -> 1

Circuit: vpunpcklqdq %xmm2, %xmm10, %xmm12
%xmm12 -> 1
%xmm10 -> 1
%xmm2 -> 1
%ymm12 -> 1
avx -> 1

Circuit: vfmadd231pd %xmm3, %xmm1, %xmm2
%xmm1 -> 1
fma -> 1
%xmm2 -> 1
%xmm3 -> 1
%ymm2 -> 1

Circuit: vmovhlps %xmm12, %xmm2, %xmm1
avx -> 1
%xmm1 -> 1
%ymm1 -> 1
%xmm2 -> 1
%xmm12 -> 1

Total Circuit
YMM10 -> 1
YMM11 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM12 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vfmaddsub132pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmaddsub132pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmaddsub132pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmaddsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmaddsub132pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmaddsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmaddsub132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmaddsub132pd_xmm_xmm_xmm: derivedInstructions//x86-vfmaddsub132pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmaddsub132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd132sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd132sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd132sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vandpd %xmm1, %xmm1, %xmm9
avx -> 1
%xmm9 -> 1
%xmm1 -> 1
%ymm9 -> 1

Circuit: vfnmadd231pd %xmm3, %xmm9, %xmm2
%xmm9 -> 1
fma -> 1
%xmm2 -> 1
%ymm2 -> 1
%xmm3 -> 1

Circuit: vmovsd %xmm2, %xmm9, %xmm1
%ymm1 -> 1
%xmm2 -> 1
%xmm1 -> 1
%xmm9 -> 1
avx -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM9 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmadd132sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd132sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd132sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd132sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd132sd_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd132sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd213ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd213ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd213ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd213ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm2 -> 1
%xmm10 -> 1
%xmm11 -> 1
%xmm8 -> 1
%xmm9 -> 1

Circuit: pmovsxdq %xmm8, %xmm15
%xmm15 -> 1
sse4_1 -> 1
%xmm8 -> 1

Circuit: callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
%xmm1 -> 1
%xmm9 -> 1
%xmm10 -> 1
%xmm11 -> 1
%xmm8 -> 1

Circuit: vmovss %xmm3, %xmm1, %xmm1
avx -> 1
%xmm1 -> 1
%xmm3 -> 1
%ymm1 -> 1

Circuit: vfnmadd231ss %xmm8, %xmm15, %xmm1
%ymm1 -> 1
fma -> 1
%xmm8 -> 1
%xmm1 -> 1
%xmm15 -> 1

Total Circuit
YMM11 -> 1
YMM10 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
YMM8 -> 1
YMM15 -> 1
YMM9 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmadd213ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd213ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd213ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd213ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd213ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd213ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd213ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd213ss_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd213ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd213ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub213pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub213pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub213pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmsub132pd %xmm1, %xmm3, %xmm2
%xmm1 -> 1
%xmm2 -> 1
fma -> 1
%xmm3 -> 1
%ymm2 -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%xmm2 -> 1
%r13 -> 1
%r12 -> 1

Circuit: vzeroall
%ymm8 -> 1
avx -> 1
%ymm15 -> 1
%ymm6 -> 1
%ymm11 -> 1
%ymm14 -> 1
%ymm12 -> 1
%ymm7 -> 1
%ymm9 -> 1
%ymm0 -> 1
%ymm13 -> 1
%ymm2 -> 1
%ymm3 -> 1
%ymm10 -> 1
%ymm5 -> 1
%ymm4 -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r13 -> 1
%r12 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
YMM8 -> 1
YMM13 -> 1
YMM15 -> 1
YMM14 -> 1
YMM12 -> 1
YMM9 -> 1
R13 -> 1
YMM0 -> 1
YMM7 -> 1
YMM11 -> 1
YMM10 -> 1
YMM6 -> 1
YMM5 -> 1
YMM4 -> 1
R12 -> 1
 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vfnmsub213pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub213pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub213pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub213pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub213pd_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub213pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovmskpd_r32_ymm[0m
vmovmskpd_r32_ymm 0 derivedInstructions//x86-vmovmskpd_r64_ymm.k
Warn: [4m[1m[35mvmovmskpd_r32_ymm: UnSupported[0m
[4m[1m[34mCheck if supported: vpbroadcastb_ymm_xmm[0m
[4m[1m[34mcreatespec vpbroadcastb_ymm_xmm: kproveSpecs//x86-semantics_vpbroadcastb_ymm_xmm_spec.k[0m
[4m[1m[34mvpbroadcastb_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpbroadcastb %xmm2, %xmm1
%xmm1 -> 1
%xmm2 -> 1
%ymm1 -> 1
avx2 -> 1

Circuit: callq .move_256_128_ymm1_xmm10_xmm11
%ymm1 -> 1
%xmm10 -> 1
%xmm11 -> 1

Circuit: vaddpd %xmm10, %xmm11, %xmm0
%xmm11 -> 1
%xmm0 -> 1
%ymm0 -> 1
%xmm10 -> 1
avx -> 1

Circuit: callq .move_64_128_xmm10_xmm11_xmm3
%xmm10 -> 1
%xmm11 -> 1
%xmm3 -> 1

Circuit: vmovlhps %xmm3, %xmm0, %xmm1
%ymm1 -> 1
%xmm3 -> 1
%xmm0 -> 1
%xmm1 -> 1
avx -> 1

Circuit: vpbroadcastw %xmm1, %ymm1
%xmm1 -> 1
avx2 -> 1
%ymm1 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
YMM0 -> 1
YMM10 -> 1
YMM11 -> 1
YMM3 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vpbroadcastb_ymm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpbroadcastb_ymm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpbroadcastb_ymm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpbroadcastb_ymm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpbroadcastb_ymm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpbroadcastb_ymm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpbroadcastb_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpbroadcastb_ymm_xmm: derivedInstructions//x86-vpbroadcastb_ymm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpbroadcastb %xmm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vphaddd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vphaddd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vphaddd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvphaddd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: phaddd %xmm3, %xmm2
%xmm3 -> 1
%xmm2 -> 1
ssse3 -> 1

Circuit: vpor %xmm2, %xmm2, %xmm1
%xmm2 -> 1
%ymm1 -> 1
avx -> 1
%xmm1 -> 1

Total Circuit
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vphaddd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vphaddd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vphaddd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vphaddd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vphaddd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vphaddd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvphaddd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vphaddd_xmm_xmm_xmm: derivedInstructions//x86-vphaddd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vphaddd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vphaddd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vphaddd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vphaddd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvphaddd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm3_xmm12_xmm13
%xmm13 -> 1
%ymm3 -> 1
%xmm12 -> 1

Circuit: phaddd %xmm12, %xmm2
ssse3 -> 1
%xmm2 -> 1
%xmm12 -> 1

Circuit: callq .move_256_128_ymm2_xmm10_xmm11
%ymm2 -> 1
%xmm11 -> 1
%xmm10 -> 1

Circuit: phaddd %xmm13, %xmm11
ssse3 -> 1
%xmm11 -> 1
%xmm13 -> 1

Circuit: callq .move_128_256_xmm10_xmm11_ymm1
%ymm1 -> 1
%xmm10 -> 1
%xmm11 -> 1

Total Circuit
YMM11 -> 1
YMM10 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM13 -> 1
YMM12 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vphaddd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vphaddd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vphaddd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vphaddd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vphaddd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vphaddd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvphaddd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vphaddd_ymm_ymm_ymm: derivedInstructions//x86-vphaddd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vphaddd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovzxbq_ymm_xmm[0m
[4m[1m[34mcreatespec vpmovzxbq_ymm_xmm: kproveSpecs//x86-semantics_vpmovzxbq_ymm_xmm_spec.k[0m
[4m[1m[34mvpmovzxbq_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vbroadcastss %xmm2, %xmm1
%xmm1 -> 1
%xmm2 -> 1
%ymm1 -> 1
avx2 -> 1

Circuit: callq .move_128_64_xmm2_xmm10_xmm11
%xmm11 -> 1
%xmm10 -> 1
%xmm2 -> 1

Circuit: callq .move_byte_11_of_ymm1_to_r9b
%ymm1 -> 1
%r9b -> 1

Circuit: callq .move_r9b_to_byte_24_of_ymm1
%r9b -> 1
%ymm1 -> 1

Circuit: callq .move_byte_6_of_ymm1_to_r9b
%r9b -> 1
%ymm1 -> 1

Circuit: callq .move_r9b_to_byte_16_of_ymm1
%r9b -> 1
%ymm1 -> 1

Circuit: pmovzxbq %xmm10, %xmm1
sse4_1 -> 1
%xmm1 -> 1
%xmm10 -> 1

Total Circuit
R9 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM10 -> 1
YMM11 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vpmovzxbq_ymm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovzxbq_ymm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovzxbq_ymm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovzxbq_ymm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovzxbq_ymm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovzxbq_ymm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovzxbq_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovzxbq_ymm_xmm: derivedInstructions//x86-vpmovzxbq_ymm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovzxbq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpckhdq_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpunpckhdq_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpunpckhdq_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpunpckhdq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vunpckhps %ymm3, %ymm2, %ymm15
avx -> 1
%ymm15 -> 1
%ymm3 -> 1
%ymm2 -> 1

Circuit: vmaxps %ymm15, %ymm15, %ymm1
%ymm1 -> 1
%ymm15 -> 1
avx -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
YMM15 -> 1
YMM3 -> 1
 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpunpckhdq_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpckhdq_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpckhdq_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpckhdq_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpckhdq_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpckhdq_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpckhdq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpckhdq_ymm_ymm_ymm: derivedInstructions//x86-vpunpckhdq_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpckhdq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpckldq_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpunpckldq_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpunpckldq_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpunpckldq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpbroadcastq %xmm3, %ymm6
%xmm3 -> 1
avx2 -> 1
%ymm6 -> 1

Circuit: vunpcklpd %xmm3, %xmm6, %xmm9
%ymm9 -> 1
%xmm3 -> 1
%xmm6 -> 1
avx -> 1
%xmm9 -> 1

Circuit: vpor %xmm9, %xmm9, %xmm7
%xmm9 -> 1
avx -> 1
%xmm7 -> 1
%ymm7 -> 1

Circuit: unpcklps %xmm7, %xmm2
sse -> 1
%xmm7 -> 1
%xmm2 -> 1

Circuit: vmulpd %xmm6, %xmm2, %xmm12
avx -> 1
%ymm12 -> 1
%xmm2 -> 1
%xmm6 -> 1
%xmm12 -> 1

Circuit: vxorps %xmm12, %xmm2, %xmm1
%xmm1 -> 1
avx -> 1
%xmm2 -> 1
%ymm1 -> 1
%xmm12 -> 1

Circuit: movdqu %xmm2, %xmm1
%xmm2 -> 1
sse2 -> 1
%xmm1 -> 1

Total Circuit
YMM12 -> 1
YMM9 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM6 -> 1
YMM7 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vpunpckldq_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpckldq_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpckldq_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpckldq_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpckldq_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpckldq_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpckldq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpckldq_xmm_xmm_xmm: derivedInstructions//x86-vpunpckldq_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpckldq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpcklps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vunpcklps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vunpcklps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvunpcklps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movlhps %xmm2, %xmm2
sse -> 1
%xmm2 -> 1

Circuit: vmovddup %ymm3, %ymm8
%ymm3 -> 1
%ymm8 -> 1
avx -> 1

Circuit: vmovddup %ymm2, %ymm6
%ymm6 -> 1
avx -> 1
%ymm2 -> 1

Circuit: vunpckhps %ymm8, %ymm6, %ymm1
%ymm1 -> 1
avx -> 1
%ymm6 -> 1
%ymm8 -> 1

Total Circuit
YMM6 -> 1
YMM3 -> 1
 -> 1
YMM8 -> 1
YMM2 -> 1
YMM1 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vunpcklps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vunpcklps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpcklps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpcklps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpcklps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpcklps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpcklps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpcklps_ymm_ymm_ymm: derivedInstructions//x86-vunpcklps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpcklps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

