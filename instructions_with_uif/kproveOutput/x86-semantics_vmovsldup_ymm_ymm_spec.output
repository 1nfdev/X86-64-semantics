-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%ymm2(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> _73_728:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _75_730:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _72_727:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _74_729:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _76_731:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _77_732:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _71_726:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _78_733:K@SORT-K   ),, <regstatequeue>(_79_734:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%ymm2(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, %xmm12(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, %xmm13(.KList@BASIC-K)), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, %xmm13(.KList@BASIC-K)), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovsldup(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovapd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"96"),, Int@INT-SYNTAX(#"128")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
63.84user 1.06system 0:18.18elapsed 356%CPU (0avgtext+0avgdata 1734284maxresident)k
0inputs+3800outputs (0major+355253minor)pagefaults 0swaps
