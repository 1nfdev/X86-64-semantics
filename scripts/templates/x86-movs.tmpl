// Autogenerated from templates.
requires "x86-configuration.k"
requires "x86-flag-checks-syntax.k"

/*@ This file defines the semantics of following 51 base instructions.
  - movswq_r64_r16, movsbq_r64_r8, movswq_r64_r32,

*/

module MOVS-R64-R8
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS-SYNTAX

  // Unroll START
Unroll START PATTERN-6
  rule <k> 
    execinstr (movsbq , (%REG8_1 ,  (%REG64_2 , .Typedoperands)) ) =>
      execinstr(movsbq, (%REG64_2, signExtend(truncate(MI, 8), 64), .Typedoperands)) 
  ...</k>
  <REG64_1> MI </REG64_1>
Unroll END
  // Unroll END

  rule
    execinstr(movsbq, ( DestR:R64, MIsrc:MInt, .Typedoperands )) => 
      updateReg(MIsrc, DestR) 

endmodule

module MOVS-R64-R16
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS-SYNTAX

  // Unroll START
Unroll START PATTERN-7
  rule <k> 
    execinstr (movswq , (%REG16_1 ,  (%REG64_2 , .Typedoperands)) ) =>
      execinstr(movswq, (%REG64_2, signExtend(truncate(MI, 16), 64), .Typedoperands)) 
  ...</k>
  <REG64_1> MI </REG64_1>
Unroll END
  // Unroll END

  rule
    execinstr(movswq, ( DestR:R64, MIsrc:MInt, .Typedoperands )) => 
      updateReg(MIsrc, DestR) 

endmodule

module MOVS-R64-R32
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS-SYNTAX

  // Unroll START
Unroll START PATTERN-8
  rule <k> 
    execinstr (movslq , (%REG32_1 ,  (%REG64_2 , .Typedoperands)) ) =>
      execinstr(movslq, (%REG64_2, signExtend(truncate(MI, 32), 64), .Typedoperands)) 
  ...</k>
  <REG64_1> MI </REG64_1>
Unroll END
  // Unroll END

  rule
    execinstr(movslq, ( DestR:R64, MIsrc:MInt, .Typedoperands )) => 
      updateReg(MIsrc, DestR) 

endmodule

module MOVS-SEMANTICS
  imports MOVS-R64-R8
  imports MOVS-R64-R16
  imports MOVS-R64-R32
endmodule
