// Autogenerated from templates.
requires "x86-configuration.k"
requires "x86-flag-checks-syntax.k"

/*@ This file defines the semantics of following 51 base instructions.
  - vmulpd_ymm_ymm_ymm, vmulps_ymm_ymm_ymm,
*/

module VMULPD-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS-SYNTAX

  // Unroll START
Unroll START PATTERN-15
  rule <k>
    execinstr ( mulpd , %YMM ,  %YMM , DestR, .Typedoperands) =>
      execinstr( mulpd, DestR, 
      joinVector(operateOnVector(splitVector(MI, 64), splitVector(MI, 64), vfmul, 64)), 
      .Typedoperands)
  ...</k>
  <YMM> MI </YMM>
Unroll END
  // Unroll END

  // Unroll START
Unroll START PATTERN-16
  rule <k>
    execinstr ( mulpd , %YMM1 ,  %YMM2 , DestR, .Typedoperands) =>
      execinstr( mulpd, DestR, 
      joinVector(operateOnVector(splitVector(MI1, 64), splitVector(MI2, 64), vfmul, 64)), 
      .Typedoperands)
  ...</k>
  <YMM1> MI1 </YMM1>
  <YMM2> MI2 </YMM2>
Unroll END
  // Unroll END

  rule <k> execinstr(mulpd, DestR:Ymm, MIsrc:MInt, .Typedoperands ) => updateReg(MIsrc, DestR) ...</k>
endmodule

module VMULPS-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS-SYNTAX

  // Unroll START
Unroll START PATTERN-15
  rule <k>
    execinstr ( mulps , %YMM ,  %YMM , DestR, .Typedoperands) =>
      execinstr( mulps, DestR, 
      joinVector(operateOnVector(splitVector(MI, 32), splitVector(MI, 32), vfmul, 32)), 
      .Typedoperands)
  ...</k>
  <YMM> MI </YMM>
Unroll END
  // Unroll END

  // Unroll START
Unroll START PATTERN-16
  rule <k>
    execinstr ( mulps , %YMM1 ,  %YMM2 , DestR, .Typedoperands) =>
      execinstr( mulps, DestR, 
      joinVector(operateOnVector(splitVector(MI1, 32), splitVector(MI2, 32), vfmul, 32)), 
      .Typedoperands)
  ...</k>
  <YMM1> MI1 </YMM1>
  <YMM2> MI2 </YMM2>
Unroll END
  // Unroll END

  rule <k> execinstr(mulps, DestR:Ymm, MIsrc:MInt, .Typedoperands ) => updateReg(MIsrc, DestR) ...</k>
endmodule


module VMUL-SEMANTICS
  imports VMULPD-YMM-YMM-YMM
  imports VMULPS-YMM-YMM-YMM
endmodule
