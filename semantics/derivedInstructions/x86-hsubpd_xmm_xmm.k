// Autogenerated using stratification.
requires "x86-configuration.k"

module HSUBPD-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (hsubpd R1:Xmm, R2:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 128), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11)  -Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 192), 53, 11) ) , 64), Float2MInt( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 256), 53, 11)  -Float  MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 192), 53, 11) ) , 64))) )


)

    </regstate>
endmodule

module HSUBPD-XMM-XMM-SEMANTICS
  imports HSUBPD-XMM-XMM
endmodule
/*
TargetInstr:
hsubpd %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 }
must read:{ %xmm1 %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ pni }

Circuit:
circuit:vhsubpd %xmm2, %xmm1, %xmm7  #  1     0    4      OPC=vhsubpd_xmm_xmm_xmm
circuit:movdqu %xmm7, %xmm1          #  2     0x4  4      OPC=movdqu_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

hsubpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Circuits:

%ymm1  : %ymm1[255:128] ∘ (sub_double(%ymm2[63:0], %ymm2[127:64]) ∘ sub_double(%ymm1[63:0], %ymm1[127:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/