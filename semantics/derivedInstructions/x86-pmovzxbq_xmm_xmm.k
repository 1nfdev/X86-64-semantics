// Autogenerated using stratification.
requires "x86-configuration.k"

module PMOVZXBQ-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (pmovzxbq R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 128), concatenateMInt(concatenateMInt(mi(56, 0), extractMInt(getParentValue(R1, RSMap), 240, 248)), concatenateMInt(mi(56, 0), extractMInt(getParentValue(R1, RSMap), 248, 256)))) )


)

    </regstate>
endmodule

module PMOVZXBQ-XMM-XMM-SEMANTICS
  imports PMOVZXBQ-XMM-XMM
endmodule
/*
TargetInstr:
pmovzxbq %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ sse4_1 }

Circuit:
circuit:vpmovzxbq %xmm2, %xmm2             #  1     0     5      OPC=vpmovzxbq_xmm_xmm
circuit:callq .move_128_64_xmm2_xmm8_xmm9  #  2     0x5   5      OPC=callq_label
circuit:movddup %xmm8, %xmm1               #  3     0xa   5      OPC=movddup_xmm_xmm
circuit:vorpd %ymm2, %ymm2, %ymm15         #  4     0xf   4      OPC=vorpd_ymm_ymm_ymm
circuit:unpckhpd %xmm15, %xmm1             #  5     0x13  5      OPC=unpckhpd_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

pmovzxbq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Circuits:

%ymm1  : %ymm1[255:128] ∘ (0x0₅₆ ∘ %ymm2[15:8] ∘ (0x0₅₆ ∘ %ymm2[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/