// Autogenerated using stratification.
requires "x86-configuration.k"

module SQRTSD-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (sqrtsd R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 192), Float2MInt(rootFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11), 2), 64)) )


)

    </regstate>
endmodule

module SQRTSD-XMM-XMM-SEMANTICS
  imports SQRTSD-XMM-XMM
endmodule
/*
TargetInstr:
sqrtsd %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 }
must read:{ %xmm1 %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ sse2 }

Circuit:
circuit:vpbroadcastq %xmm2, %ymm5            #  1     0     5      OPC=vpbroadcastq_ymm_xmm
circuit:callq .move_128_64_xmm1_xmm10_xmm11  #  2     0x5   5      OPC=callq_label
circuit:vminpd %ymm5, %ymm5, %ymm5           #  3     0xa   4      OPC=vminpd_ymm_ymm_ymm
circuit:vsqrtpd %xmm5, %xmm10                #  4     0xe   4      OPC=vsqrtpd_xmm_xmm
circuit:callq .move_64_128_xmm10_xmm11_xmm1  #  5     0x12  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

sqrtsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Circuits:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ sqrt_double(%ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/