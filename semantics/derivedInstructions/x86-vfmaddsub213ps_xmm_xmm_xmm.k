// Autogenerated using stratification.
requires "x86-configuration.k"

module VFMADDSUB213PS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfmaddsub213ps R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt(Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 160), 24, 8) )  +Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 160), 24, 8) ) , 32), Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 160, 192), 24, 8) )  -Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 160, 192), 24, 8) ) , 32)), concatenateMInt(Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 224), 24, 8) )  +Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 224), 24, 8) ) , 32), Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 224, 256), 24, 8) )  -Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 224, 256), 24, 8) ) , 32)))) )


)

    </regstate>
endmodule

module VFMADDSUB213PS-XMM-XMM-XMM-SEMANTICS
  imports VFMADDSUB213PS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfmaddsub213ps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vpor %xmm3, %xmm3, %xmm10         #  1     0     4      OPC=vpor_xmm_xmm_xmm
circuit:vxorpd %xmm3, %xmm10, %xmm3       #  2     0x4   4      OPC=vxorpd_xmm_xmm_xmm
circuit:vfnmsub132ps %ymm3, %ymm3, %ymm3  #  3     0x8   5      OPC=vfnmsub132ps_ymm_ymm_ymm
circuit:addsubps %xmm10, %xmm3            #  4     0xd   5      OPC=addsubps_xmm_xmm
circuit:vfmadd213ps %xmm3, %xmm2, %xmm1   #  5     0x12  5      OPC=vfmadd213ps_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfmaddsub213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) | 0x0₆₄) ∘ (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) | 0x0₆₄) ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96])), %ymm1[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64])), %ymm1[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]))) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32])), %ymm1[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0])), %ymm1[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/