// Autogenerated using stratification.
requires "x86-configuration.k"

module VFMADDSUB231PD-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfmaddsub231pd R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 192), 53, 11)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 192), 53, 11) )  -Float  ( -0e+00  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 192), 53, 11) )  ) , 64), Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 256), 53, 11)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11) )  -Float  ( negateFloat( (  ( -0e+00  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 256), 53, 11) )  *Float  MInt2Float(concatenateMInt(mi(32, 0), extractMInt(Float2MInt( ( -0e+00  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 192), 53, 11) ) , 64), 0, 32)), 53, 11) ) )  -Float  ( -0e+00  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 256), 53, 11) )  )  ) , 64))) )


)

    </regstate>
endmodule

module VFMADDSUB231PD-XMM-XMM-XMM-SEMANTICS
  imports VFMADDSUB231PD-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfmaddsub231pd %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vxorps %ymm1, %ymm1, %ymm6          #  1     0     4      OPC=vxorps_ymm_ymm_ymm
circuit:vmovq %xmm3, %xmm12                 #  2     0x4   4      OPC=vmovq_xmm_xmm
circuit:vxorpd %xmm1, %xmm1, %xmm11         #  3     0x8   4      OPC=vxorpd_xmm_xmm_xmm
circuit:vmaxps %ymm6, %ymm12, %ymm6         #  4     0xc   4      OPC=vmaxps_ymm_ymm_ymm
circuit:vfnmsub231pd %xmm11, %xmm6, %xmm1   #  5     0x10  5      OPC=vfnmsub231pd_xmm_xmm_xmm
circuit:vfmsubadd231pd %xmm3, %xmm2, %xmm1  #  6     0x15  5      OPC=vfmsubadd231pd_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfmaddsub231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], vnfmsub132_double((maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) ∘ (maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))), %ymm1[127:64], 0x0₆₄), %ymm3[127:64]) ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(%ymm3[63:32], 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) = 0x1₁ ? %ymm3[63:32] : 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) ∘ (maxcmp_single(%ymm3[31:0], 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))) = 0x1₁ ? %ymm3[31:0] : 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))), %ymm1[63:0], 0x0₆₄), vnfmsub132_double((maxcmp_single(%ymm3[63:32], 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) = 0x1₁ ? %ymm3[63:32] : 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) ∘ (maxcmp_single(%ymm3[31:0], 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))) = 0x1₁ ? %ymm3[31:0] : 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))), %ymm1[63:0], 0x0₆₄), 0x0₃₂ ∘ vnfmsub132_double((maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) ∘ (maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))), %ymm1[127:64], 0x0₆₄)[63:32]), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/