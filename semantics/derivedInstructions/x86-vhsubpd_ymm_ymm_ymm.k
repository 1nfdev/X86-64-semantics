// Autogenerated using stratification.
requires "x86-configuration.k"

module VHSUBPD-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vhsubpd R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R1, RSMap), 64, 128), 53, 11)  -Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 0, 64), 53, 11) ) , 64), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 64, 128), 53, 11)  -Float  MInt2Float(extractMInt(getParentValue(R2, RSMap), 0, 64), 53, 11) ) , 64), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11)  -Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 192), 53, 11) ) , 64), Float2MInt( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 256), 53, 11)  -Float  MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 192), 53, 11) ) , 64)))) )


)

    </regstate>
endmodule

module VHSUBPD-YMM-YMM-YMM-SEMANTICS
  imports VHSUBPD-YMM-YMM-YMM
endmodule
/*
TargetInstr:
vhsubpd %ymm3, %ymm2, %ymm1
RWSet:
maybe read:{ %ymm2 %ymm3 }
must read:{ %ymm2 %ymm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:vpunpcklqdq %ymm3, %ymm2, %ymm9  #  1     0     4      OPC=vpunpcklqdq_ymm_ymm_ymm
circuit:vpunpckhqdq %ymm3, %ymm2, %ymm6  #  2     0x4   4      OPC=vpunpckhqdq_ymm_ymm_ymm
circuit:vmovdqa %ymm9, %ymm2             #  3     0x8   5      OPC=vmovdqa_ymm_ymm
circuit:vsubpd %ymm6, %ymm2, %ymm1       #  4     0xd   4      OPC=vsubpd_ymm_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vhsubpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : sub_double(%ymm3[191:128], %ymm3[255:192]) ∘ (sub_double(%ymm2[191:128], %ymm2[255:192]) ∘ (sub_double(%ymm3[63:0], %ymm3[127:64]) ∘ sub_double(%ymm2[63:0], %ymm2[127:64])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/