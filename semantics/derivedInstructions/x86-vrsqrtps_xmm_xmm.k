// Autogenerated using stratification.
requires "x86-configuration.k"

module VRSQRTPS-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vrsqrtps R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(mi(128, 0), concatenateMInt(Float2MInt( ( 1e+00  /Float  rootFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 160), 24, 8), 2) ) , 32), concatenateMInt(Float2MInt( ( 1e+00  /Float  rootFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 160, 192), 24, 8), 2) ) , 32), concatenateMInt(Float2MInt( ( 1e+00  /Float  rootFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 224), 24, 8), 2) ) , 32), Float2MInt( ( 1e+00  /Float  rootFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 224, 256), 24, 8), 2) ) , 32))))) )


)

    </regstate>
endmodule

module VRSQRTPS-XMM-XMM-SEMANTICS
  imports VRSQRTPS-XMM-XMM
endmodule
/*
TargetInstr:
vrsqrtps %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:callq .move_128_064_xmm2_r8_r9        #  1     0     5      OPC=callq_label
circuit:vzeroall                              #  2     0x5   3      OPC=vzeroall
circuit:callq .move_064_128_r8_r9_xmm3        #  3     0x8   5      OPC=callq_label
circuit:vrsqrtps %ymm3, %ymm12                #  4     0xd   4      OPC=vrsqrtps_ymm_ymm
circuit:callq .move_128_256_xmm12_xmm13_ymm1  #  5     0x11  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vrsqrtps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ (approx_reciprocal_sqrt_single(%ymm2[127:96]) ∘ (approx_reciprocal_sqrt_single(%ymm2[95:64]) ∘ (approx_reciprocal_sqrt_single(%ymm2[63:32]) ∘ approx_reciprocal_sqrt_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/