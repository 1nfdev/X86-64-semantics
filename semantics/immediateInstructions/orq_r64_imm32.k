// Autogenerated using stratification.
requires "x86-configuration.k"

module ORQ-R64-IMM32
  imports X86-CONFIGURATION

  rule <k>
    execinstr (orq Imm32:Imm, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
"CF" |-> mi(1, 0)

"PF" |-> (#ifMInt (notBool (((((((eqMInt( extractMInt( getParentValue(R2, RSMap), 63, 64), mi(1, 1)) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 62, 63), mi(1, 1))) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 61, 62), mi(1, 1))) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 60, 61), mi(1, 1))) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 59, 60), mi(1, 1))) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 58, 59), mi(1, 1))) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 57, 58), mi(1, 1))) xorBool eqMInt( extractMInt( getParentValue(R2, RSMap), 56, 57), mi(1, 1)))) #then mi(1, 1) #else mi(1, 0) #fi)

"AF" |-> (undefMInt)

"ZF" |-> (#ifMInt eqMInt( getParentValue(R2, RSMap), mi(64, 0)) #then mi(1, 1) #else mi(1, 0) #fi)

"SF" |-> extractMInt( getParentValue(R2, RSMap), 0, 1)

"OF" |-> mi(1, 0)
)

    </regstate>
    
endmodule

module ORQ-R64-IMM32-SEMANTICS
  imports ORQ-R64-IMM32
endmodule
