-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm2(.KList@BASIC-K),, %xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _75_641:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _73_639:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _74_640:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _77_643:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _76_642:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _79_645:K@SORT-K String@STRING-SYNTAX(#""YMM5"") |-> _78_644:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _80_646:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _72_638:K@SORT-K   ),, <regstatequeue>(_81_647:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm2(.KList@BASIC-K),, %xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, %xmm4(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, %xmm5(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm6(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm7(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, %xmm5(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm6(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm7(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm6(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm7(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm7(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm5(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineR32ToXmm(%xmm4(.KList@BASIC-K),, %xmm5(.KList@BASIC-K),, %xmm6(.KList@BASIC-K),, %xmm7(.KList@BASIC-K),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, %xmm3(.KList@BASIC-K)), execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpmovzxwq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vhsubps(.KList@BASIC-K),, typeoperandlist(%xmm13(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM5"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_637:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
87.46user 1.41system 0:25.31elapsed 351%CPU (0avgtext+0avgdata 2457600maxresident)k
0inputs+3728outputs (0major+523771minor)pagefaults 0swaps
