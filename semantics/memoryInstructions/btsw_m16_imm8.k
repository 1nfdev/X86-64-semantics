// Autogenerated using stratification.
requires "x86-configuration.k"

module BTSW-M16-IMM8
  imports X86-CONFIGURATION

  context execinstr(btsw:Opcode Imm8:Imm, HOLE:Mem,  .Operands) [result(MemOffset)]
  
          rule <k>
            execinstr (btsw:Opcode Imm8:Imm, memOffset( MemOff:MInt):MemOffset,  .Operands) =>
              loadFromMemory( MemOff, 16) ~> execinstr (btsw Imm8, memOffset( MemOff),  .Operands)
          ...</k>
          
  rule <k>
    memLoadValue(Mem16:MInt):MemLoadValue ~> execinstr (btsw:Opcode Imm8:Imm, memOffset( MemOff:MInt):MemOffset,  .Operands) =>
      
            storeToMemory(
              orMInt( Mem8, shlMInt( mi(8, 1), uvalueMInt(concatenateMInt( mi(5, 0), andMInt( extractMInt( handleImmediateWithSignExtend(Imm8, 8, 8), 5, 8), mi(3, 7)))))),
              MemOff,
              8
            )
          
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
"CF" |-> extractMInt( lshrMInt( Mem8, uvalueMInt(concatenateMInt( mi(5, 0), andMInt( extractMInt( handleImmediateWithSignExtend(Imm8, 8, 8), 5, 8), mi(3, 7))))), 7, 8)

"PF" |-> (undefMInt)

"AF" |-> (undefMInt)

"SF" |-> (undefMInt)

"OF" |-> (undefMInt)
      )
      </regstate>
endmodule
