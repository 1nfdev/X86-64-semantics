// Autogenerated using stratification.
requires "x86-configuration.k"

module BTQ-R64-R64
  imports X86-CONFIGURATION

  rule <k>
    execinstr (btq R1:R64, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
"CF" |-> (#ifMInt ((true andBool eqMInt( extractMInt( ashrMInt( concatenateMInt( extractMInt( ashrMInt( concatenateMInt( getParentValue(R2, RSMap), mi(1, 0)), uvalueMInt(concatenateMInt( mi(57, 0), andMInt( extractMInt( getParentValue(R1, RSMap), 56, 64), mi(8, 63))))), 0, 64), mi(1, 0)), uvalueMInt(concatenateMInt( mi(57, 0), mi(8, 1)))), 64, 65), mi(1, 1))) orBool false) #then mi(1, 1) #else mi(1, 0) #fi)

"PF" |-> (undef)

"AF" |-> (undef)

"SF" |-> (undef)

"OF" |-> (undef)
)

    </regstate>
endmodule

module BTQ-R64-R64-SEMANTICS
  imports BTQ-R64-R64
endmodule
