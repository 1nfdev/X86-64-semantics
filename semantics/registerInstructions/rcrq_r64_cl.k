// Autogenerated using stratification.
requires "x86-configuration.k"

module RCRQ-R64-CL
  imports X86-CONFIGURATION

  rule <k>
    execinstr (rcrq %cl, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> extractMInt( ror( concatenateMInt( (#ifMInt eqMInt(getFlag("CF", RSMap), mi(1,1)) #then mi(1, 1) #else mi(1, 0) #fi), getParentValue(R2, RSMap)), uremMInt( concatenateMInt( mi(57, 0), andMInt( extractMInt( getParentValue(%rcx, RSMap), 56, 64), mi(8, 63))), mi(65, 65))), 1, 65)

"CF" |-> extractMInt( ror( concatenateMInt( (#ifMInt eqMInt(getFlag("CF", RSMap), mi(1,1)) #then mi(1, 1) #else mi(1, 0) #fi), getParentValue(R2, RSMap)), uremMInt( concatenateMInt( mi(57, 0), andMInt( extractMInt( getParentValue(%rcx, RSMap), 56, 64), mi(8, 63))), mi(65, 65))), 0, 1)

"OF" |-> (undef)
)

    </regstate>
endmodule

module RCRQ-R64-CL-SEMANTICS
  imports RCRQ-R64-CL
endmodule
