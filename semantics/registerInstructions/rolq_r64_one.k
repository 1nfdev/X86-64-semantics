// Autogenerated using stratification.
requires "x86-configuration.k"

module ROLQ-R64-ONE
  imports X86-CONFIGURATION

  rule <k>
    execinstr (rolq $0x1, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> rol( getParentValue(R2, RSMap), mi(64, 1))

"CF" |-> (#ifMInt ((true andBool eqMInt( extractMInt( rol( getParentValue(R2, RSMap), mi(64, 1)), 63, 64), mi(1, 1))) orBool (false andBool eqMInt(getFlag("CF", RSMap), mi(1,1)))) #then mi(1, 1) #else mi(1, 0) #fi)

"OF" |-> (undef)
)

    </regstate>
endmodule

module ROLQ-R64-ONE-SEMANTICS
  imports ROLQ-R64-ONE
endmodule
