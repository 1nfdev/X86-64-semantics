// Autogenerated using stratification.
requires "x86-configuration.k"

module VBLENDVPS-XMM-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vblendvps R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
"YMM1" |-> concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R3, RSMap)ymm4, 128, 129), mi(1, 0)) #then extractMInt( getParentValue(R3, RSMap)ymm2, 128, 160) #else extractMInt( getParentValue(R3, RSMap)ymm3, 128, 160) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R3, RSMap)ymm4, 160, 161), mi(1, 0)) #then extractMInt( getParentValue(R3, RSMap)ymm2, 160, 192) #else extractMInt( getParentValue(R3, RSMap)ymm3, 160, 192) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R3, RSMap)ymm4, 192, 193), mi(1, 0)) #then extractMInt( getParentValue(R3, RSMap)ymm2, 192, 224) #else extractMInt( getParentValue(R3, RSMap)ymm3, 192, 224) #fi), (#ifMInt eqMInt( extractMInt( getParentValue(R3, RSMap)ymm4, 224, 225), mi(1, 0)) #then extractMInt( getParentValue(R3, RSMap)ymm2, 224, 256) #else extractMInt( getParentValue(R3, RSMap)ymm3, 224, 256) #fi)))))
)

    </regstate>
endmodule

module VBLENDVPS-XMM-XMM-XMM-XMM-SEMANTICS
  imports VBLENDVPS-XMM-XMM-XMM-XMM
endmodule
