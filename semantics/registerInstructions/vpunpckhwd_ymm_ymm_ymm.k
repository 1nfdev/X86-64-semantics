// Autogenerated using stratification.
requires "x86-configuration.k"

module VPUNPCKHWD-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpunpckhwd R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 16, 32)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 16, 32)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 0, 32), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 16, 32), extractMInt( getParentValue(R1, RSMap), 16, 32)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 16, 32)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 16, 32)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 0, 16)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 16, 32)), mi(32, 0)))), xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 48, 64)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 48, 64)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 32, 64), concatenateMInt( extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 48, 64)), mi(32, 0)), 16, 32), extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 48, 64)), mi(32, 0)), 16, 32)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 48, 64)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 48, 64)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 32, 48)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 48, 64)), mi(32, 0))))), concatenateMInt( xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 144, 160)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 144, 160)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 128, 160), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), extractMInt( getParentValue(R1, RSMap), 144, 160)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 144, 160)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 144, 160)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 128, 144)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 144, 160)), mi(32, 0)))), xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 176, 192)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 176, 192)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 160, 192), concatenateMInt( extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 176, 192)), mi(32, 0)), 16, 32), extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 176, 192)), mi(32, 0)), 16, 32)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 176, 192)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 176, 192)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 160, 176)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 176, 192)), mi(32, 0))))))
)

    </regstate>
endmodule

module VPUNPCKHWD-YMM-YMM-YMM-SEMANTICS
  imports VPUNPCKHWD-YMM-YMM-YMM
endmodule
