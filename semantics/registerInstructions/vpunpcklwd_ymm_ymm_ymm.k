// Autogenerated using stratification.
requires "x86-configuration.k"

module VPUNPCKLWD-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpunpcklwd R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 80, 96)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 80, 96)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 64, 96), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 80, 96), extractMInt( getParentValue(R1, RSMap), 80, 96)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 80, 96)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 80, 96)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 64, 80)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 80, 96)), mi(32, 0)))), xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 112, 128)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 112, 128)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 96, 128), concatenateMInt( extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 112, 128)), mi(32, 0)), 16, 32), extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 112, 128)), mi(32, 0)), 16, 32)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 112, 128)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 112, 128)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 96, 112)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 112, 128)), mi(32, 0))))), concatenateMInt( xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 192, 224), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), extractMInt( getParentValue(R1, RSMap), 208, 224)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 192, 208)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 208, 224)), mi(32, 0)))), xorMInt( xorMInt( orMInt( concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), mi(32, 0))), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 224, 256), concatenateMInt( extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), mi(32, 0)), 16, 32), extractMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), mi(32, 0)), 16, 32)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), mi(32, 0)))), concatenateMInt( sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 224, 240)), mi(32, 0)), sub_single(concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 240, 256)), mi(32, 0))))))
)

    </regstate>
endmodule

module VPUNPCKLWD-YMM-YMM-YMM-SEMANTICS
  imports VPUNPCKLWD-YMM-YMM-YMM
endmodule
