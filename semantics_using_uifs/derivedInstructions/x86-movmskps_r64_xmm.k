// Autogenerated using stratification.
requires "x86-configuration.k"

module MOVMSKPS-R64-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (movmskps R1:Xmm, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(mi(48, 0), extractMInt(addMInt(concatenateMInt(mi(9, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), extractMInt(addMInt(concatenateMInt(mi(7, 0), concatenateMInt(extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 128, 160))), 0, 1), extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 160, 192))), 0, 1))), concatenateMInt(mi(7, 0), concatenateMInt(extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 128, 160))), 0, 1), extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 160, 192))), 0, 1)))), 1, 9)), concatenateMInt(mi(7, 0), concatenateMInt(extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 192, 224))), 0, 1), extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 224, 256))), 0, 1)))), 1, 9)), concatenateMInt(mi(9, 0), extractMInt(addMInt(concatenateMInt(mi(7, 0), concatenateMInt(extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 128, 160))), 0, 1), extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 160, 192))), 0, 1))), concatenateMInt(mi(7, 0), concatenateMInt(extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 128, 160))), 0, 1), extractMInt(mi(64, svalueMInt(extractMInt(getParentValue(R1, RSMap), 160, 192))), 0, 1)))), 1, 9))), 1, 17))   )


)

    </regstate>
endmodule

module MOVMSKPS-R64-XMM-SEMANTICS
  imports MOVMSKPS-R64-XMM
endmodule
/*
TargetInstr:
movmskps %xmm1, %rbx
RWSet:
maybe read:{ %xmm1 }
must read:{ %xmm1 }
maybe write:{ %rbx }
must write:{ %rbx }
maybe undef:{ }
must undef:{ }
required flags:{ sse }

Circuit:
circuit:movmskps %xmm1, %ebx  #  1     0    3      OPC=movmskps_r32_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

movmskps %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Circuits:

%rbx   : (concat <0x0|48> (plus (concat <0x0|1> (concat (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[15:8] (plus (concat <0x0|1> (plus (concat <0x0|1> (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[7:0]) (concat <0x0|1> (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[7:0]))[7:0]) (concat <0x0|1> (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[7:0]))[7:0])) (concat <0x0|1> (concat (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[31:0])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[63:32])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[15:8] (plus (concat <0x0|1> (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[7:0]) (concat <0x0|1> (plus (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[95:64])[63:32]))[32:32] <0x1|1>) then (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x2|33> else <0x1|33>) else (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>)) (if (== (plus (if (== (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then (plus (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]) <0x1|33>) else (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32])) (concat <0x0|1> (sign-extend-64 <%ymm1|256>[127:96])[63:32]))[32:32] <0x1|1>) then <0x1|33> else <0x0|33>))[7:0]))[7:0])))[15:0])

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/