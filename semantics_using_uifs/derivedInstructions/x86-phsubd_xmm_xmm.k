// Autogenerated using stratification.
requires "x86-configuration.k"

module PHSUBD-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (phsubd R1:Xmm, R2:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 128), concatenateMInt(concatenateMInt(extractMInt(addMInt(concatenateMInt(mi(33, 0), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R1, RSMap), 128, 192))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192)))), mi(65, 1)), 1, 33)), concatenateMInt(mi(33, 0), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R1, RSMap), 128, 192))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192)))), mi(65, 1)), 33, 65))), 33, 65), extractMInt(addMInt(concatenateMInt(mi(1, 0), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R1, RSMap), 192, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))), mi(65, 1)), 1, 65)), concatenateMInt(mi(33, 0), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R1, RSMap), 192, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))), mi(65, 1)), 1, 33))), 33, 65)), concatenateMInt(extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R2, RSMap), 128, 192))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192)))), mi(65, 1)), 1, 33), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R2, RSMap), 128, 192))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192)))), mi(65, 1)), 1, 33))), concatenateMInt(mi(1, 0), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R2, RSMap), 128, 192))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192)))), mi(65, 1)), 1, 65))), 33, 65), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R2, RSMap), 192, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256)))), mi(65, 1)), 1, 33), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R2, RSMap), 192, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256)))), mi(65, 1)), 1, 33))), concatenateMInt(mi(1, 0), extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), extractMInt(getParentValue(R2, RSMap), 192, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256)))), mi(65, 1)), 1, 65))), 33, 65)))) )


)

    </regstate>
endmodule

module PHSUBD-XMM-XMM-SEMANTICS
  imports PHSUBD-XMM-XMM
endmodule
/*
TargetInstr:
phsubd %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 }
must read:{ %xmm1 %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ ssse3 }

Circuit:
circuit:movsldup %xmm2, %xmm0        #  1     0     4      OPC=movsldup_xmm_xmm
circuit:vmovsldup %xmm1, %xmm13      #  2     0x4   4      OPC=vmovsldup_xmm_xmm
circuit:movdqu %xmm0, %xmm15         #  3     0x8   5      OPC=movdqu_xmm_xmm
circuit:vpsubq %xmm1, %xmm13, %xmm9  #  4     0xd   4      OPC=vpsubq_xmm_xmm_xmm
circuit:vpsubq %xmm2, %xmm15, %xmm0  #  5     0x11  4      OPC=vpsubq_xmm_xmm_xmm
circuit:movdqu %xmm9, %xmm1          #  6     0x15  5      OPC=movdqu_xmm_xmm
circuit:phaddd %xmm0, %xmm1          #  7     0x1a  5      OPC=phaddd_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

phsubd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Circuits:

%ymm1  : (concat <%ymm1|256>[255:128] (concat (concat (concat (plus (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> (^ <%ymm2|256>[127:64] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm2|256>[95:64] <%ymm2|256>[95:64])))[63:32])) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> (^ <%ymm2|256>[127:64] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm2|256>[95:64] <%ymm2|256>[95:64])))[31:0])))[31:0] (plus (concat <0x0|1> (plus (plus (concat <0x0|1> (^ <%ymm2|256>[63:0] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])))[63:0]) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> (^ <%ymm2|256>[63:0] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])))[63:32])))[31:0]) (plus (concat <0x0|1> (concat (plus (plus (concat <0x0|1> (^ <%ymm1|256>[127:64] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm1|256>[95:64] <%ymm1|256>[95:64])))[63:32] (plus (plus (concat <0x0|1> (^ <%ymm1|256>[127:64] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm1|256>[95:64] <%ymm1|256>[95:64])))[63:32])) (concat <0x0|1> (plus (plus (concat <0x0|1> (^ <%ymm1|256>[127:64] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm1|256>[95:64] <%ymm1|256>[95:64])))[63:0]))[31:0]) (plus (concat <0x0|1> (concat (plus (plus (concat <0x0|1> (^ <%ymm1|256>[63:0] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm1|256>[31:0] <%ymm1|256>[31:0])))[63:32] (plus (plus (concat <0x0|1> (^ <%ymm1|256>[63:0] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm1|256>[31:0] <%ymm1|256>[31:0])))[63:32])) (concat <0x0|1> (plus (plus (concat <0x0|1> (^ <%ymm1|256>[63:0] <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat <%ymm1|256>[31:0] <%ymm1|256>[31:0])))[63:0]))[31:0]))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/