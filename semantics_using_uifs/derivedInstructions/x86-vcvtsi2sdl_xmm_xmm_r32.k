// Autogenerated using stratification.
requires "x86-configuration.k"

module VCVTSI2SDL-XMM-XMM-R32
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vcvtsi2sdl R1:R32, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 128, 192),  cvt_int32_to_double ( extractMInt(getParentValue(R1, RSMap), 32, 64) ) )) )


)

    </regstate>
endmodule

module VCVTSI2SDL-XMM-XMM-R32-SEMANTICS
  imports VCVTSI2SDL-XMM-XMM-R32
endmodule
/*
TargetInstr:
vcvtsi2sdl %ebx, %xmm2, %xmm1
RWSet:
maybe read:{ %ebx %xmm2 %mxcsr::rc[0] }
must read:{ %ebx %xmm2 %mxcsr::rc[0] }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:vmovd %ebx, %xmm1                   #  1     0     4      OPC=vmovd_xmm_r32
circuit:callq .move_128_064_xmm1_r8_r9      #  2     0x4   5      OPC=callq_label
circuit:callq .move_r9b_to_byte_25_of_ymm1  #  3     0x9   5      OPC=callq_label
circuit:vcvtdq2pd %ymm1, %ymm3              #  4     0xe   4      OPC=vcvtdq2pd_ymm_ymm
circuit:vmovsd %xmm3, %xmm2, %xmm1          #  5     0x12  4      OPC=vmovsd_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vcvtsi2sdl %ebx, %xmm2, %xmm1

  maybe read:      { %ebx %xmm2 %mxcsr::rc[0] }
  must read:       { %ebx %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : (concat <0x0|128> (concat <%ymm2|256>[127:64] cvt_int32_to_double(<%rbx|64>[31:0])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/