// Autogenerated using stratification.
requires "x86-configuration.k"

module VFMADD213PD-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfmadd213pd R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt( vfmsub132_double ( extractMInt(getParentValue(R2, RSMap), 128, 192), vfnmsub132_double ( mi(64, 0), extractMInt(getParentValue(R1, RSMap), 128, 192), mi(64, 0) ), extractMInt(getParentValue(R3, RSMap), 128, 192) ) ,  vfmsub132_double ( extractMInt(getParentValue(R2, RSMap), 192, 256), vfnmsub132_double ( mi(64, 0), extractMInt(getParentValue(R1, RSMap), 192, 256), mi(64, 0) ), extractMInt(getParentValue(R3, RSMap), 192, 256) ) )) )


)

    </regstate>
endmodule

module VFMADD213PD-XMM-XMM-XMM-SEMANTICS
  imports VFMADD213PD-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfmadd213pd %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vfmadd132pd %xmm1, %xmm3, %xmm2   #  1     0     5      OPC=vfmadd132pd_xmm_xmm_xmm
circuit:callq .move_128_064_xmm2_r10_r11  #  2     0x5   5      OPC=callq_label
circuit:vzeroall                          #  3     0xa   3      OPC=vzeroall
circuit:callq .move_064_128_r10_r11_xmm1  #  4     0xd   5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfmadd213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat <0x0|128> (concat vfmsub132_double(<%ymm2|256>[127:64], vnfmsub132_double(<0x0|64>, <%ymm3|256>[127:64], <0x0|64>), <%ymm1|256>[127:64]) vfmsub132_double(<%ymm2|256>[63:0], vnfmsub132_double(<0x0|64>, <%ymm3|256>[63:0], <0x0|64>), <%ymm1|256>[63:0])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/