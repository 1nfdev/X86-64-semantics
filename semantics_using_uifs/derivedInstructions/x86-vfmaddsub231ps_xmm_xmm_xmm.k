// Autogenerated using stratification.
requires "x86-configuration.k"

module VFMADDSUB231PS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfmaddsub231ps R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt( vfmsub132_single ( extractMInt(getParentValue(R2, RSMap), 128, 160), vfnmsub132_single ( mi(32, 0), add_single ( extractMInt(getParentValue(R3, RSMap), 128, 160),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ), add_single ( extractMInt(getParentValue(R3, RSMap), 128, 160),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ) ), extractMInt(getParentValue(R1, RSMap), 128, 160) ) ,  vfmsub132_single ( extractMInt(getParentValue(R2, RSMap), 160, 192), vfnmsub132_single ( mi(32, 0), sub_single ( extractMInt(getParentValue(R3, RSMap), 160, 192),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ), sub_single ( extractMInt(getParentValue(R3, RSMap), 160, 192),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ) ), extractMInt(getParentValue(R1, RSMap), 160, 192) ) ), concatenateMInt( vfmsub132_single ( extractMInt(getParentValue(R2, RSMap), 192, 224), vfnmsub132_single ( mi(32, 0), add_single ( extractMInt(getParentValue(R3, RSMap), 192, 224),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ), add_single ( extractMInt(getParentValue(R3, RSMap), 192, 224),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ) ), extractMInt(getParentValue(R1, RSMap), 192, 224) ) ,  vfmsub132_single ( extractMInt(getParentValue(R2, RSMap), 224, 256), vfnmsub132_single ( mi(32, 0), sub_single ( extractMInt(getParentValue(R3, RSMap), 224, 256),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ), sub_single ( extractMInt(getParentValue(R3, RSMap), 224, 256),  vfnmsub132_single ( mi(32, 0), mi(32, 0), mi(32, 0) )  ) ), extractMInt(getParentValue(R1, RSMap), 224, 256) ) ))) )


)

    </regstate>
endmodule

module VFMADDSUB231PS-XMM-XMM-XMM-SEMANTICS
  imports VFMADDSUB231PS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfmaddsub231ps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vfmaddsub213ps %xmm1, %xmm2, %xmm3  #  1     0    5      OPC=vfmaddsub213ps_xmm_xmm_xmm
circuit:vpor %xmm3, %xmm3, %xmm1            #  2     0x5  4      OPC=vpor_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfmaddsub231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat <0x0|128> (concat (| (concat vfmsub132_single(<%ymm2|256>[127:96], vfnmsub132_single((^ (^ <0x0|32> add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[127:96])) (| <0x0|32> (^ <0x0|32> add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[127:96])))), add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[127:96]), add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[127:96])), <%ymm3|256>[127:96]) vfmsub132_single(<%ymm2|256>[95:64], vfnmsub132_single((^ (^ <0x0|32> sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[95:64])) (| <0x0|32> (^ <0x0|32> sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[95:64])))), sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[95:64]), sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[95:64])), <%ymm3|256>[95:64])) (^ (^ <0x0|64> (concat add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[127:96]) sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[95:64]))) (| <0x0|64> (^ <0x0|64> (concat add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[127:96]) sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[95:64])))))) (| (concat vfmsub132_single(<%ymm2|256>[63:32], vfnmsub132_single((^ (^ <0x0|32> add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[63:32])) (| <0x0|32> (^ <0x0|32> add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[63:32])))), add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[63:32]), add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[63:32])), <%ymm3|256>[63:32]) vfmsub132_single(<%ymm2|256>[31:0], vfnmsub132_single((^ (^ <0x0|32> sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[31:0])) (| <0x0|32> (^ <0x0|32> sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[31:0])))), sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[31:0]), sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[31:0])), <%ymm3|256>[31:0])) (^ (^ <0x0|64> (concat add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[63:32]) sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[31:0]))) (| <0x0|64> (^ <0x0|64> (concat add_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[63:32]) sub_single(vfnmsub132_single(<0x0|32>, <0x0|32>, <0x0|32>), <%ymm1|256>[31:0]))))))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/