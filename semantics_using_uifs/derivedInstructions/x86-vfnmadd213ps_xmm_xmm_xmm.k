// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMADD213PS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmadd213ps R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(concatenateMInt( vfnmadd132_single ( mi(32, 0), mi(32, 0), mi(32, 0) ) , concatenateMInt( vfnmadd132_single ( mi(32, 0), mi(32, 0), mi(32, 0) ) , concatenateMInt( vfnmadd132_single ( mi(32, 0), mi(32, 0), mi(32, 0) ) ,  vfnmadd132_single ( mi(32, 0), mi(32, 0), mi(32, 0) ) ))), concatenateMInt( vfnmadd132_single ( extractMInt(getParentValue(R2, RSMap), 128, 160), extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R3, RSMap), 128, 160) ) , concatenateMInt( vfnmadd132_single ( extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R3, RSMap), 160, 192) ) , concatenateMInt( vfnmadd132_single ( extractMInt(getParentValue(R2, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R3, RSMap), 192, 224) ) ,  vfnmadd132_single ( extractMInt(getParentValue(R2, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R3, RSMap), 224, 256) ) )))) )


)

    </regstate>
endmodule

module VFNMADD213PS-XMM-XMM-XMM-SEMANTICS
  imports VFNMADD213PS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfnmadd213ps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vmovapd %xmm2, %xmm13               #  1     0     4      OPC=vmovapd_xmm_xmm
circuit:callq .move_128_64_xmm1_xmm8_xmm9   #  2     0x4   5      OPC=callq_label
circuit:vorps %xmm8, %xmm1, %xmm14          #  3     0x9   5      OPC=vorps_xmm_xmm_xmm
circuit:vmovdqu %xmm3, %xmm1                #  4     0xe   4      OPC=vmovdqu_xmm_xmm
circuit:vfnmadd231ps %ymm14, %ymm13, %ymm1  #  5     0x12  5      OPC=vfnmadd231ps_ymm_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmadd213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat (concat vfnmadd132_single(<0x0|32>, <0x0|32>, <0x0|32>) (concat vfnmadd132_single(<0x0|32>, <0x0|32>, <0x0|32>) (concat vfnmadd132_single(<0x0|32>, <0x0|32>, <0x0|32>) vfnmadd132_single(<0x0|32>, <0x0|32>, <0x0|32>)))) (concat vfnmadd132_single(<%ymm2|256>[127:96], <%ymm3|256>[127:96], (| <0x0|32> <%ymm1|256>[127:96])) (concat vfnmadd132_single(<%ymm2|256>[95:64], <%ymm3|256>[95:64], (| <0x0|32> <%ymm1|256>[95:64])) (concat vfnmadd132_single(<%ymm2|256>[63:32], <%ymm3|256>[63:32], <%ymm1|256>[63:32]) vfnmadd132_single(<%ymm2|256>[31:0], <%ymm3|256>[31:0], <%ymm1|256>[31:0])))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/