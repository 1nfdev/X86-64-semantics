// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMADD213SS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmadd213ss R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(concatenateMInt(mi(128, 0), extractMInt(getParentValue(R3, RSMap), 128, 224)),  vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 224, 256), vfnmsub132_single ( mi(32, 0), extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256) ), extractMInt(getParentValue(R3, RSMap), 224, 256) ) ) )


)

    </regstate>
endmodule

module VFNMADD213SS-XMM-XMM-XMM-SEMANTICS
  imports VFNMADD213SS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfnmadd213ss %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11  #  1     0     5      OPC=callq_label
circuit:pmovsxdq %xmm8, %xmm15                          #  2     0x5   6      OPC=pmovsxdq_xmm_xmm
circuit:callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11  #  3     0xb   5      OPC=callq_label
circuit:vmovss %xmm3, %xmm1, %xmm1                      #  4     0x10  4      OPC=vmovss_xmm_xmm_xmm
circuit:vfnmadd231ss %xmm8, %xmm15, %xmm1               #  5     0x14  5      OPC=vfnmadd231ss_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmadd213ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat <0x0|128> (concat <%ymm1|256>[127:32] vfnmsub132_single(<%ymm2|256>[31:0], vfnmsub132_single(<0x0|32>, <%ymm3|256>[31:0], <%ymm3|256>[31:0]), <%ymm1|256>[31:0])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/