// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMSUB231PS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmsub231ps R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 128, 160), extractMInt(getParentValue(R3, RSMap), 128, 160), extractMInt(getParentValue(R1, RSMap), 128, 160) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R3, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 192, 224), extractMInt(getParentValue(R3, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224) ) ,  vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 224, 256), extractMInt(getParentValue(R3, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256) ) )))) )


)

    </regstate>
endmodule

module VFNMSUB231PS-XMM-XMM-XMM-SEMANTICS
  imports VFNMSUB231PS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfnmsub231ps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vmovupd %xmm1, %xmm13              #  1     0     4      OPC=vmovupd_xmm_xmm
circuit:vmovdqu %xmm2, %xmm6               #  2     0x4   4      OPC=vmovdqu_xmm_xmm
circuit:vmovapd %xmm3, %xmm1               #  3     0x8   4      OPC=vmovapd_xmm_xmm
circuit:vfnmsub132ps %ymm1, %ymm13, %ymm6  #  4     0xc   5      OPC=vfnmsub132ps_ymm_ymm_ymm
circuit:vmovapd %xmm6, %xmm1               #  5     0x11  4      OPC=vmovapd_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmsub231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat <0x0|128> (concat vfnmsub132_single(<%ymm2|256>[127:96], <%ymm1|256>[127:96], <%ymm3|256>[127:96]) (concat vfnmsub132_single(<%ymm2|256>[95:64], <%ymm1|256>[95:64], <%ymm3|256>[95:64]) (concat vfnmsub132_single(<%ymm2|256>[63:32], <%ymm1|256>[63:32], <%ymm3|256>[63:32]) vfnmsub132_single(<%ymm2|256>[31:0], <%ymm1|256>[31:0], <%ymm3|256>[31:0])))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/