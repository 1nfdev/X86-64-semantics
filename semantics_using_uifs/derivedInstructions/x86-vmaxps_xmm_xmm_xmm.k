// Autogenerated using stratification.
requires "x86-configuration.k"

module VMAXPS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vmaxps R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt( maxcmp_single ( extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R2, RSMap), 128, 160) ) , concatenateMInt( maxcmp_single ( extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192) ) , concatenateMInt( maxcmp_single ( extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R2, RSMap), 192, 224) ) ,  maxcmp_single ( extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256) ) )))) )


)

    </regstate>
endmodule

module VMAXPS-XMM-XMM-XMM-SEMANTICS
  imports VMAXPS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vmaxps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 %xmm3 }
must read:{ %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:vmovdqa %xmm3, %xmm3         #  1     0    4      OPC=vmovdqa_xmm_xmm
circuit:vmovdqa %xmm2, %xmm11        #  2     0x4  4      OPC=vmovdqa_xmm_xmm
circuit:vmaxps %ymm3, %ymm11, %ymm1  #  3     0x8  4      OPC=vmaxps_ymm_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vmaxps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (concat (if (== maxcmp_single(<%ymm2|256>[127:96], <%ymm3|256>[127:96]) <0x1|1>) then <%ymm2|256>[127:96] else <%ymm3|256>[127:96]) (concat (if (== maxcmp_single(<%ymm2|256>[95:64], <%ymm3|256>[95:64]) <0x1|1>) then <%ymm2|256>[95:64] else <%ymm3|256>[95:64]) (concat (if (== maxcmp_single(<%ymm2|256>[63:32], <%ymm3|256>[63:32]) <0x1|1>) then <%ymm2|256>[63:32] else <%ymm3|256>[63:32]) (if (== maxcmp_single(<%ymm2|256>[31:0], <%ymm3|256>[31:0]) <0x1|1>) then <%ymm2|256>[31:0] else <%ymm3|256>[31:0]))))))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/