// Autogenerated using stratification.
requires "x86-configuration.k"

module VPMOVZXBQ-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpmovzxbq R1:Xmm, R2:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(mi(184, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 248), concatenateMInt(mi(56, 0), extractMInt(getParentValue(R1, RSMap), 248, 256)))) )


)

    </regstate>
endmodule

module VPMOVZXBQ-XMM-XMM-SEMANTICS
  imports VPMOVZXBQ-XMM-XMM
endmodule
/*
TargetInstr:
vpmovzxbq %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:callq .move_128_064_xmm2_r8_r9     #  1     0     5      OPC=callq_label
circuit:vzeroall                           #  2     0x5   3      OPC=vzeroall
circuit:callq .move_r8b_to_byte_0_of_ymm1  #  3     0x8   5      OPC=callq_label
circuit:notb %r8b                          #  4     0xd   3      OPC=notb_r8
circuit:callq .move_016_032_r8w_r9w_edx    #  5     0x10  5      OPC=callq_label
circuit:callq .move_016_008_dx_r8b_r9b     #  6     0x15  5      OPC=callq_label
circuit:callq .move_r9b_to_byte_8_of_ymm1  #  7     0x1a  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vpmovzxbq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : (concat (concat <0x0|184> <%ymm2|256>[15:8]) (concat <0x0|56> <%ymm2|256>[7:0]))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/