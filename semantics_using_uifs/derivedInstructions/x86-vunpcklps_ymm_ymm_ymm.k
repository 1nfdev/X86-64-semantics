// Autogenerated using stratification.
requires "x86-configuration.k"

module VUNPCKLPS-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vunpcklps R1:Ymm, R2:Ymm, R3:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 64, 96), extractMInt(getParentValue(R2, RSMap), 64, 96)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 96, 128), extractMInt(getParentValue(R2, RSMap), 96, 128))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R2, RSMap), 192, 224)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256)))) )


)

    </regstate>
endmodule

module VUNPCKLPS-YMM-YMM-YMM-SEMANTICS
  imports VUNPCKLPS-YMM-YMM-YMM
endmodule
/*
TargetInstr:
vunpcklps %ymm3, %ymm2, %ymm1
RWSet:
maybe read:{ %ymm2 %ymm3 }
must read:{ %ymm2 %ymm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:movlhps %xmm2, %xmm2           #  1     0     3      OPC=movlhps_xmm_xmm
circuit:vmovddup %ymm3, %ymm8          #  2     0x3   4      OPC=vmovddup_ymm_ymm
circuit:vmovddup %ymm2, %ymm6          #  3     0x7   4      OPC=vmovddup_ymm_ymm
circuit:vunpckhps %ymm8, %ymm6, %ymm1  #  4     0xb   5      OPC=vunpckhps_ymm_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vunpcklps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : (concat (concat (concat <%ymm3|256>[191:160] <%ymm2|256>[191:160]) (concat <%ymm3|256>[159:128] <%ymm2|256>[159:128])) (concat (concat <%ymm3|256>[63:32] <%ymm2|256>[63:32]) (concat <%ymm3|256>[31:0] <%ymm2|256>[31:0])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/