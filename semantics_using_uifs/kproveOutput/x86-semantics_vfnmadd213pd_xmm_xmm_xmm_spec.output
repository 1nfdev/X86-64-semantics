-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(vfnmadd231pd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%xmm3(.KList@BASIC-K),, %r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> _89_757:K@SORT-K String@STRING-SYNTAX(#""R10"") |-> _72_740:K@SORT-K String@STRING-SYNTAX(#""YMM12"") |-> _78_746:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _82_750:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _75_743:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _79_747:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _76_744:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _84_752:K@SORT-K String@STRING-SYNTAX(#""R11"") |-> _73_741:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _77_745:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _83_751:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _86_754:K@SORT-K String@STRING-SYNTAX(#""YMM5"") |-> _85_753:K@SORT-K String@STRING-SYNTAX(#""YMM14"") |-> _80_748:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _88_756:K@SORT-K String@STRING-SYNTAX(#""YMM15"") |-> _81_749:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _87_755:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _71_739:K@SORT-K String@STRING-SYNTAX(#""YMM0"") |-> _74_742:K@SORT-K   ),, <regstatequeue>(_90_758:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vfnmadd231pd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%xmm3(.KList@BASIC-K),, %r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm3(.KList@BASIC-K),, %r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0")),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"))),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, %r10(.KList@BASIC-K)), setRegisterValue(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, %r11(.KList@BASIC-K)), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0")),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"))),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, %r11(.KList@BASIC-K)), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0")),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"))),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0")),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'0"))),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))),, %xmm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> _(_,_,_)(UIFTerOperation@MINT-WRAPPER-SYNTAX(#"vfnmadd132_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_737:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_738:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_736:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for _(_,_,_)
[Warning] Critical: missing SMTLib translation for mi
89.06user 1.31system 0:22.58elapsed 400%CPU (0avgtext+0avgdata 2403476maxresident)k
0inputs+3680outputs (0major+518853minor)pagefaults 0swaps
