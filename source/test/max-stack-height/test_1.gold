Args: opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_1.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_70
==========================================
----------------------------------
entry
----------------------------------
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %79 = add i64 %78, -8 :::  [I] = -8 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = -8
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : [ACTUAL ESP] = 0 : [ACTUAL EBP] = -8 : MAX DISP = -8
  %81 = add i64 %78, -24 :::  [I] = -24 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = -8 : MAX DISP = -24
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -24
  %94 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -24
  %95 = add i64 %94, -4, !mcsema_real_eip !7 :::  [I] = -12 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -24
  %98 = load i64* %RSP_val, !mcsema_real_eip !8 :::  [I] = -24 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -24
  %99 = add i64 %98, -8 :::  [I] = -32 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  store i64 %99, i64* %RSP_val, !mcsema_real_eip !8 :::  [I] = NULL : [ACTUAL ESP] = -32 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %107 = load i64* %RSP_val, !mcsema_real_eip !8 :::  [I] = -32 : [ACTUAL ESP] = -32 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %108 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : [ACTUAL ESP] = -32 : [ACTUAL EBP] = -8 : MAX DISP = -32
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !8 :::  [I] = NULL : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %241 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %242 = add i64 %241, -8, !mcsema_real_eip !9 :::  [I] = -16 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %247 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %248 = add i64 %247, -8, !mcsema_real_eip !10 :::  [I] = -16 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %253 = load i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = -24 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %253, i64 16) :::  [I] = -8 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %254 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %267 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : [ACTUAL ESP] = -24 : [ACTUAL EBP] = -8 : MAX DISP = -32
  store i64 %254, i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = NULL : [ACTUAL ESP] = -8 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %270 = add i64 %254, 16, !mcsema_real_eip !13 :::  [I] = 8 : [ACTUAL ESP] = -8 : [ACTUAL EBP] = -8 : MAX DISP = -32
  store i64 %270, i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = NULL : [ACTUAL ESP] = 8 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %277 = load i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = 8 : [ACTUAL ESP] = 8 : [ACTUAL EBP] = -8 : MAX DISP = -32
  %278 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : [ACTUAL ESP] = 8 : [ACTUAL EBP] = -8 : MAX DISP = -32
----------------------------------
DFA Equations: 
----------------------------------
sub_70::entry
  IN   [0|0]
  GEN  [8|-32]
  OUT  [8|-32]
Height[ sub_70 ] : -32
==========================================
Function : sub_0
==========================================
----------------------------------
entry
----------------------------------
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %79 = add i64 %78, -8 :::  [I] = -8 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = -8
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : [ACTUAL ESP] = 0 : [ACTUAL EBP] = -8 : MAX DISP = -8
  %81 = add i64 %78, -40 :::  [I] = -40 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = -8 : MAX DISP = -40
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %94 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %95 = add i64 %94, -4, !mcsema_real_eip !6 :::  [I] = -12 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %100 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %101 = add i64 %100, -8, !mcsema_real_eip !7 :::  [I] = -16 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %106 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %107 = add i64 %106, -4, !mcsema_real_eip !8 :::  [I] = -12 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %112 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %113 = add i64 %112, -8, !mcsema_real_eip !9 :::  [I] = -16 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %134 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %135 = add i64 %134, -12, !mcsema_real_eip !10 :::  [I] = -20 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %138 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %139 = add i64 %138, -12, !mcsema_real_eip !11 :::  [I] = -20 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %146 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %147 = add i64 %146, -4, !mcsema_real_eip !14 :::  [I] = -12 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %164 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %165 = add i64 %164, -20, !mcsema_real_eip !15 :::  [I] = -28 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %175 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
  %176 = add i64 %175, -12, !mcsema_real_eip !17 :::  [I] = -20 : [ACTUAL ESP] = -40 : [ACTUAL EBP] = -8 : MAX DISP = -40
----------------------------------
block_0x4e
----------------------------------
  %205 = load i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = 0 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %uadd142 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %205, i64 32) :::  [I] = 32 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %206 = extractvalue { i64, i1 } %uadd142, 0 :::  [I] = 32 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %219 = extractvalue { i64, i1 } %uadd142, 1 :::  [I] = 32 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  store i64 %206, i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = NULL : [ACTUAL ESP] = 32 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %222 = add i64 %206, 16, !mcsema_real_eip !23 :::  [I] = 48 : [ACTUAL ESP] = 32 : [ACTUAL EBP] = 0 : MAX DISP = 0
  store i64 %222, i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = NULL : [ACTUAL ESP] = 48 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %229 = load i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = 48 : [ACTUAL ESP] = 48 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %230 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = 0 : [ACTUAL ESP] = 48 : [ACTUAL EBP] = 0 : MAX DISP = 0
----------------------------------
block_0x3e
----------------------------------
  %318 = load i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = 0 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %uadd141 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %318, i64 32) :::  [I] = 32 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %319 = extractvalue { i64, i1 } %uadd141, 0 :::  [I] = 32 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %332 = extractvalue { i64, i1 } %uadd141, 1 :::  [I] = 32 : [ACTUAL ESP] = 0 : [ACTUAL EBP] = 0 : MAX DISP = 0
  store i64 %319, i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = NULL : [ACTUAL ESP] = 32 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %335 = add i64 %319, 16, !mcsema_real_eip !23 :::  [I] = 48 : [ACTUAL ESP] = 32 : [ACTUAL EBP] = 0 : MAX DISP = 0
  store i64 %335, i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = NULL : [ACTUAL ESP] = 48 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %342 = load i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = 48 : [ACTUAL ESP] = 48 : [ACTUAL EBP] = 0 : MAX DISP = 0
  %343 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = 0 : [ACTUAL ESP] = 48 : [ACTUAL EBP] = 0 : MAX DISP = 0
----------------------------------
DFA Equations: 
----------------------------------
sub_0::entry
  IN   [0|0]
  GEN  [-40|-40]
  OUT  [-40|-40]
sub_0::block_0x4e
  IN   [-40|-40]
  GEN  [48|0]
  OUT  [8|-40]
sub_0::block_0x3e
  IN   [-40|-40]
  GEN  [48|0]
  OUT  [8|-40]
Height[ sub_0 ] : -40
==========================================
Function : mcsema_main
==========================================
----------------------------------
driverBlockRaw
----------------------------------
  tail call x86_64_sysvcc void @sub_70(%struct.regs* %0) :::  [I] = NULL : [ACTUAL ESP] = 8 : [ACTUAL EBP] = 0 : MAX DISP = 0
----------------------------------
DFA Equations: 
----------------------------------
mcsema_main::driverBlockRaw
  IN   [0|0]
  GEN  [8|0]
  OUT  [8|0]
Height[ mcsema_main ] : 0
