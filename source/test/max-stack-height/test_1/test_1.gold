Args: opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_1.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_70
==========================================
----------------------------------
sub_70::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -24 :::  [I] = -24 : Inst :: 0:-24:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -24:-24:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -24:-24:-8:0
  %95 = add i64 %94, -4, !mcsema_real_eip !7 :::  [I] = -12 : Inst :: -24:-24:-8:-12
  %98 = load i64* %RSP_val, !mcsema_real_eip !8 :::  [I] = -24 : Inst :: -24:-24:-8:-12
  %99 = add i64 %98, -8 :::  [I] = -32 : Inst :: -24:-32:-8:-12
  store i64 %99, i64* %RSP_val, !mcsema_real_eip !8 :::  [I] = NULL : Inst :: -32:-32:-8:-12
  %107 = load i64* %RSP_val, !mcsema_real_eip !8 :::  [I] = -32 : Inst :: -32:-32:-8:-12
  %108 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -32:-32:-8:-12
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !8 :::  [I] = NULL : Inst :: -24:-32:-8:-12
  %241 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -24:-32:-8:-12
  %242 = add i64 %241, -8, !mcsema_real_eip !9 :::  [I] = -16 : Inst :: -24:-32:-8:-16
  %247 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -24:-32:-8:-16
  %248 = add i64 %247, -8, !mcsema_real_eip !10 :::  [I] = -16 : Inst :: -24:-32:-8:-16
  %253 = load i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = -24 : Inst :: -24:-32:-8:-16
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %253, i64 16) :::  [I] = -8 : Inst :: -24:-32:-8:-16
  %254 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : Inst :: -24:-32:-8:-16
  %267 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : Inst :: -24:-32:-8:-16
  store i64 %254, i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = NULL : Inst :: -8:-32:-8:-16
  %270 = add i64 %254, 16, !mcsema_real_eip !13 :::  [I] = 8 : Inst :: -8:-32:-8:-16
  store i64 %270, i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = NULL : Inst :: 8:-32:-8:-16
  %277 = load i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = 8 : Inst :: 8:-32:-8:-16
  %278 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: 8:-32:-8:-16
Gen :: 8:-32:-8:-16


DFA Analysis: 
sub_70::entry
	Gen :: 8:-32:-8:-16
	Out :: 8:-32:-8:-16
sub_70::entry
	Gen :: 8:-32:-8:-16
	Out :: 8:-32:-8:-16
Height[ sub_70 ] : -32
==========================================
Function : sub_0
==========================================
----------------------------------
sub_0::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -40 :::  [I] = -40 : Inst :: 0:-40:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -40:-40:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -40:-40:-8:0
  %95 = add i64 %94, -4, !mcsema_real_eip !6 :::  [I] = -12 : Inst :: -40:-40:-8:-12
  %100 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -40:-40:-8:-12
  %101 = add i64 %100, -8, !mcsema_real_eip !7 :::  [I] = -16 : Inst :: -40:-40:-8:-16
  %106 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %107 = add i64 %106, -4, !mcsema_real_eip !8 :::  [I] = -12 : Inst :: -40:-40:-8:-16
  %112 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %113 = add i64 %112, -8, !mcsema_real_eip !9 :::  [I] = -16 : Inst :: -40:-40:-8:-16
  %134 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %135 = add i64 %134, -12, !mcsema_real_eip !10 :::  [I] = -20 : Inst :: -40:-40:-8:-20
  %138 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %139 = add i64 %138, -12, !mcsema_real_eip !11 :::  [I] = -20 : Inst :: -40:-40:-8:-20
  %146 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %147 = add i64 %146, -4, !mcsema_real_eip !14 :::  [I] = -12 : Inst :: -40:-40:-8:-20
  %164 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %165 = add i64 %164, -20, !mcsema_real_eip !15 :::  [I] = -28 : Inst :: -40:-40:-8:-28
  %175 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: -40:-40:-8:-28
  %176 = add i64 %175, -12, !mcsema_real_eip !17 :::  [I] = -20 : Inst :: -40:-40:-8:-28
Gen :: -40:-40:-8:-28
----------------------------------
sub_0::block_0x4e
----------------------------------
  %195 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = 0 : Inst :: 0:0:0:0
  %196 = add i64 %195, -16, !mcsema_real_eip !19 :::  [I] = -16 : Inst :: 0:0:0:-16
  %199 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = 0 : Inst :: 0:0:0:-16
  %200 = add i64 %199, -16, !mcsema_real_eip !20 :::  [I] = -16 : Inst :: 0:0:0:-16
  %205 = load i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = 0 : Inst :: 0:0:0:-16
  %uadd142 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %205, i64 32) :::  [I] = 32 : Inst :: 0:0:0:-16
  %206 = extractvalue { i64, i1 } %uadd142, 0 :::  [I] = 32 : Inst :: 0:0:0:-16
  %219 = extractvalue { i64, i1 } %uadd142, 1 :::  [I] = 32 : Inst :: 0:0:0:-16
  store i64 %206, i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = NULL : Inst :: 32:0:0:-16
  %222 = add i64 %206, 16, !mcsema_real_eip !23 :::  [I] = 48 : Inst :: 32:0:0:-16
  store i64 %222, i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = NULL : Inst :: 48:0:0:-16
  %229 = load i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = 48 : Inst :: 48:0:0:-16
  %230 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = 0 : Inst :: 48:0:0:-16
Gen :: 48:0:0:-16
----------------------------------
sub_0::block_0x3e
----------------------------------
  %308 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = 0 : Inst :: 0:0:0:0
  %309 = add i64 %308, -16, !mcsema_real_eip !25 :::  [I] = -16 : Inst :: 0:0:0:-16
  %312 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = 0 : Inst :: 0:0:0:-16
  %313 = add i64 %312, -16, !mcsema_real_eip !20 :::  [I] = -16 : Inst :: 0:0:0:-16
  %318 = load i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = 0 : Inst :: 0:0:0:-16
  %uadd141 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %318, i64 32) :::  [I] = 32 : Inst :: 0:0:0:-16
  %319 = extractvalue { i64, i1 } %uadd141, 0 :::  [I] = 32 : Inst :: 0:0:0:-16
  %332 = extractvalue { i64, i1 } %uadd141, 1 :::  [I] = 32 : Inst :: 0:0:0:-16
  store i64 %319, i64* %RSP_val, !mcsema_real_eip !21 :::  [I] = NULL : Inst :: 32:0:0:-16
  %335 = add i64 %319, 16, !mcsema_real_eip !23 :::  [I] = 48 : Inst :: 32:0:0:-16
  store i64 %335, i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = NULL : Inst :: 48:0:0:-16
  %342 = load i64* %RSP_val, !mcsema_real_eip !23 :::  [I] = 48 : Inst :: 48:0:0:-16
  %343 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = 0 : Inst :: 48:0:0:-16
Gen :: 48:0:0:-16


DFA Analysis: 
sub_0::entry
	Gen :: -40:-40:-8:-28
	Out :: -40:-40:-8:-28
sub_0::block_0x3e
	Pred :: entry: -40:-40:-8:-28
	Gen :: 48:0:0:-16
	Out :: 8:-40:-8:-28
sub_0::block_0x4e
	Pred :: entry: -40:-40:-8:-28
	Gen :: 48:0:0:-16
	Out :: 8:-40:-8:-28
sub_0::entry
	Gen :: -40:-40:-8:-28
	Out :: -40:-40:-8:-28
sub_0::block_0x3e
	Pred :: entry: -40:-40:-8:-28
	Gen :: 48:0:0:-16
	Out :: 8:-40:-8:-28
sub_0::block_0x4e
	Pred :: entry: -40:-40:-8:-28
	Gen :: 48:0:0:-16
	Out :: 8:-40:-8:-28
Height[ sub_0 ] : -40
==========================================
Function : mcsema_main
==========================================
----------------------------------
mcsema_main::driverBlockRaw
----------------------------------
  tail call x86_64_sysvcc void @sub_70(%struct.regs* %0) :::  [I] = NULL : Inst :: 8:0:0:0
Gen :: 8:0:0:0


DFA Analysis: 
mcsema_main::driverBlockRaw
	Gen :: 8:0:0:0
	Out :: 8:0:0:0
mcsema_main::driverBlockRaw
	Gen :: 8:0:0:0
	Out :: 8:0:0:0
Height[ mcsema_main ] : 0
