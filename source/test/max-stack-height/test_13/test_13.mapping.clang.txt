========================================================
Source line mapping for function: sub_10
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <10>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <10>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <10>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <10>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <10>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <10>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <10>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <10>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <10>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <10>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <10>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <10>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <10>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <10>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <10>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <10>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <10>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <10>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <10>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <10>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <10>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <10>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <10>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <10>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <10>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <10>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <10>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <10>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <10>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <10>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <10>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <10>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <10>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <10>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <10>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <10>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <10>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <10>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <10>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <10>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <10>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <10>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <10>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <10>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <10>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <10>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <10>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <10>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <10>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <10>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <10>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <10>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <10>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <10>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <10>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <10>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <10>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <10>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <10>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <10>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <10>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <10>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <10>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <10>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <10>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <10>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <10>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <10>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <10>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <10>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <10>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <10>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <10>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <10>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <10>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <10>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <10>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <10>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <10>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <10>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <10>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <10>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <10>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <10>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <10>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <10>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <10>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <10>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <10>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <10>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <10>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <10>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <10>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <10>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <10>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <10>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <10>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <10>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <10>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <10>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <10>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <10>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <10>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <10>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <10>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <10>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <11>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -40 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
296 :   %83 = and i64 %82, 16, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
297 :   %84 = icmp ne i64 %83, 0, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <14>	subq	$32, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
308 :   %91 = icmp ult i64 %79, 32, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <14>	subq	$32, %rsp

314 :   %94 = load i64* %RBP_val, !mcsema_real_eip !5 :          <18>	movq	%rdi, -8(%rbp)
315 :   %95 = add i64 %94, -8, !mcsema_real_eip !5 :          <18>	movq	%rdi, -8(%rbp)
316 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !5 :          <18>	movq	%rdi, -8(%rbp)
317 :   %97 = load i64* %RDI_val, !mcsema_real_eip !5 :          <18>	movq	%rdi, -8(%rbp)
318 :   store i64 %97, i64* %96, !mcsema_real_eip !5 :          <18>	movq	%rdi, -8(%rbp)

319 :   %98 = load i64* %RBP_val, !mcsema_real_eip !6 :          <1c>	movl	%esi, -12(%rbp)
320 :   %99 = add i64 %98, -12, !mcsema_real_eip !6 :          <1c>	movl	%esi, -12(%rbp)
321 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !6 :          <1c>	movl	%esi, -12(%rbp)
322 :   %101 = load i64* %RSI_val, !mcsema_real_eip !6 :          <1c>	movl	%esi, -12(%rbp)
323 :   %102 = trunc i64 %101 to i32, !mcsema_real_eip !6 :          <1c>	movl	%esi, -12(%rbp)

324 :   %103 = bitcast i64* %100 to i32* : NIL

325 :   store i32 %102, i32* %103, !mcsema_real_eip !6 :          <1c>	movl	%esi, -12(%rbp)

326 :   %104 = load i64* %RBP_val, !mcsema_real_eip !7 :          <1f>	movl	$0, -16(%rbp)
327 :   %105 = add i64 %104, -16, !mcsema_real_eip !7 :          <1f>	movl	$0, -16(%rbp)
328 :   %106 = inttoptr i64 %105 to i64*, !mcsema_real_eip !7 :          <1f>	movl	$0, -16(%rbp)

329 :   %107 = bitcast i64* %106 to i32* : NIL

330 :   store i32 0, i32* %107, !mcsema_real_eip !7 :          <1f>	movl	$0, -16(%rbp)

331 :   %108 = load i64* %RBP_val, !mcsema_real_eip !8 :          <26>	movslq	-12(%rbp), %rdi
332 :   %109 = add i64 %108, -12, !mcsema_real_eip !8 :          <26>	movslq	-12(%rbp), %rdi
333 :   %110 = inttoptr i64 %109 to i64*, !mcsema_real_eip !8 :          <26>	movslq	-12(%rbp), %rdi

334 :   %111 = bitcast i64* %110 to i32* : NIL

335 :   %112 = load i32* %111, !mcsema_real_eip !8 :          <26>	movslq	-12(%rbp), %rdi
336 :   %113 = sext i32 %112 to i64, !mcsema_real_eip !8 :          <26>	movslq	-12(%rbp), %rdi

337 :   %114 = shl nsw i64 %113, 3, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi
338 :   store i1 false, i1* %CF_val, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi

339 :   %115 = icmp eq i32 %112, 0 : NIL

340 :   store i1 %115, i1* %ZF_val, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi

341 :   %116 = icmp slt i32 %112, 0 : NIL

342 :   store i1 %116, i1* %SF_val, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi
343 :   %117 = trunc i64 %114 to i8, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi
344 :   %118 = tail call i8 @llvm.ctpop.i8(i8 %117), !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi

345 :   %119 = and i8 %118, 1 : NIL
346 :   %120 = icmp eq i8 %119, 0 : NIL

347 :   store i1 %120, i1* %PF_val, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi
348 :   store i64 %114, i64* %RDI_val, !mcsema_real_eip !9 :          <2a>	shlq	$3, %rdi

349 :   %121 = tail call x86_64_sysvcc i64 @malloc(i64 %114), !mcsema_real_eip !10 :          <2e>	callq	0
350 :   store i64 %121, i64* %RAX_val, !mcsema_real_eip !10 :          <2e>	callq	0

351 :   %122 = load i64* %RBP_val, !mcsema_real_eip !11 :          <33>	movq	%rax, -24(%rbp)
352 :   %123 = add i64 %122, -24, !mcsema_real_eip !11 :          <33>	movq	%rax, -24(%rbp)
353 :   %124 = inttoptr i64 %123 to i64*, !mcsema_real_eip !11 :          <33>	movq	%rax, -24(%rbp)
354 :   store i64 %121, i64* %124, !mcsema_real_eip !11 :          <33>	movq	%rax, -24(%rbp)

355 :   %125 = load i64* %RBP_val, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
356 :   %126 = add i64 %125, -16, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
357 :   %127 = inttoptr i64 %126 to i64*, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax

358 :   %128 = bitcast i64* %127 to i32* : NIL

359 :   %129 = load i32* %128, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
360 :   %130 = zext i32 %129 to i64, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
361 :   store i64 %130, i64* %RAX_val, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax

362 :   %131 = load i64* %RBP_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
363 :   %132 = add i64 %131, -12, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
364 :   %133 = inttoptr i64 %132 to i64*, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

365 :   %134 = bitcast i64* %133 to i32* : NIL

366 :   %135 = load i32* %134, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
367 :   %136 = sub i32 %129, %135, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
368 :   %137 = xor i32 %136, %129, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
369 :   %138 = xor i32 %137, %135, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
370 :   %139 = and i32 %138, 16, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
371 :   %140 = icmp ne i32 %139, 0, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
372 :   store i1 %140, i1* %AF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
373 :   %141 = trunc i32 %136 to i8, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
374 :   %142 = tail call i8 @llvm.ctpop.i8(i8 %141), !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

375 :   %143 = and i8 %142, 1 : NIL
376 :   %144 = icmp eq i8 %143, 0 : NIL

377 :   store i1 %144, i1* %PF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

378 :   %145 = icmp eq i32 %129, %135 : NIL

379 :   store i1 %145, i1* %ZF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

380 :   %146 = icmp slt i32 %136, 0 : NIL

381 :   store i1 %146, i1* %SF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
382 :   %147 = icmp ult i32 %129, %135, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
383 :   store i1 %147, i1* %CF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
384 :   %148 = xor i32 %135, %129, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
385 :   %149 = and i32 %137, %148, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

386 :   %150 = icmp slt i32 %149, 0 : NIL

387 :   store i1 %150, i1* %OF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

388 :   %151 = load i1* %SF_val, !mcsema_real_eip !14 :          <3d>	jge	70

389 :   %tmp = xor i1 %151, %150 : NIL

390 :   br i1 %tmp, label %block_0x43.preheader, label %block_0x89, !mcsema_real_eip !14 :          <3d>	jge	70

391 :   br label %block_0x43 : NIL
392 :   br label %block_0x89 : NIL

393 :   %152 = load i64* %RBP_val, !mcsema_real_eip !15 :          <89>	movq	-24(%rbp), %rax
394 :   %153 = add i64 %152, -24, !mcsema_real_eip !15 :          <89>	movq	-24(%rbp), %rax
395 :   %154 = inttoptr i64 %153 to i64*, !mcsema_real_eip !15 :          <89>	movq	-24(%rbp), %rax
396 :   %155 = load i64* %154, !mcsema_real_eip !15 :          <89>	movq	-24(%rbp), %rax
397 :   store i64 %155, i64* %RAX_val, !mcsema_real_eip !15 :          <89>	movq	-24(%rbp), %rax

398 :   %156 = add i64 %155, 1, !mcsema_real_eip !16 :          <8d>	movb	$2, 1(%rax)
399 :   %157 = inttoptr i64 %156 to i64*, !mcsema_real_eip !16 :          <8d>	movb	$2, 1(%rax)

400 :   %158 = bitcast i64* %157 to i8* : NIL

401 :   store i8 2, i8* %158, !mcsema_real_eip !16 :          <8d>	movb	$2, 1(%rax)

402 :   %159 = load i64* %RSP_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp

403 :   %uadd350 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %159, i64 32) : NIL
404 :   %160 = extractvalue { i64, i1 } %uadd350, 0 : NIL

405 :   %161 = xor i64 %160, %159, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
406 :   %162 = and i64 %161, 16, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
407 :   %163 = icmp ne i64 %162, 0, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
408 :   store i1 %163, i1* %AF_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp

409 :   %164 = icmp slt i64 %160, 0 : NIL

410 :   store i1 %164, i1* %SF_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
411 :   %165 = icmp eq i64 %160, 0, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
412 :   store i1 %165, i1* %ZF_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
413 :   %166 = xor i64 %159, -9223372036854775808, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
414 :   %167 = and i64 %161, %166, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp

415 :   %168 = icmp slt i64 %167, 0 : NIL

416 :   store i1 %168, i1* %OF_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
417 :   %169 = trunc i64 %160 to i8, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
418 :   %170 = tail call i8 @llvm.ctpop.i8(i8 %169), !mcsema_real_eip !17 :          <91>	addq	$32, %rsp

419 :   %171 = and i8 %170, 1 : NIL
420 :   %172 = icmp eq i8 %171, 0 : NIL

421 :   store i1 %172, i1* %PF_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp

422 :   %173 = extractvalue { i64, i1 } %uadd350, 1 : NIL

423 :   store i1 %173, i1* %CF_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp
424 :   store i64 %160, i64* %RSP_val, !mcsema_real_eip !17 :          <91>	addq	$32, %rsp

425 :   %174 = inttoptr i64 %160 to i64*, !mcsema_real_eip !18 :          <95>	popq	%rbp
426 :   %175 = load i64* %174, !mcsema_real_eip !18 :          <95>	popq	%rbp
427 :   store i64 %175, i64* %RBP_val, !mcsema_real_eip !18 :          <95>	popq	%rbp

428 :   %176 = add i64 %160, 16, !mcsema_real_eip !19 :          <96>	retq
429 :   store i64 %176, i64* %RSP_val, !mcsema_real_eip !19 :          <96>	retq
430 :   %177 = load i64* %RAX_val, !mcsema_real_eip !19 :          <96>	retq
431 :   store i64 %177, i64* %RAX, !mcsema_real_eip !19 :          <96>	retq
432 :   %178 = load i64* %RBX_val, !mcsema_real_eip !19 :          <96>	retq
433 :   store i64 %178, i64* %RBX, !mcsema_real_eip !19 :          <96>	retq
434 :   %179 = load i64* %RCX_val, !mcsema_real_eip !19 :          <96>	retq
435 :   store i64 %179, i64* %RCX, !mcsema_real_eip !19 :          <96>	retq
436 :   %180 = load i64* %RDX_val, !mcsema_real_eip !19 :          <96>	retq
437 :   store i64 %180, i64* %RDX, !mcsema_real_eip !19 :          <96>	retq
438 :   %181 = load i64* %RSI_val, !mcsema_real_eip !19 :          <96>	retq
439 :   store i64 %181, i64* %RSI, !mcsema_real_eip !19 :          <96>	retq
440 :   %182 = load i64* %RDI_val, !mcsema_real_eip !19 :          <96>	retq
441 :   store i64 %182, i64* %RDI, !mcsema_real_eip !19 :          <96>	retq
442 :   %183 = load i64* %RSP_val, !mcsema_real_eip !19 :          <96>	retq
443 :   store i64 %183, i64* %RSP, !mcsema_real_eip !19 :          <96>	retq
444 :   %184 = load i64* %RBP_val, !mcsema_real_eip !19 :          <96>	retq
445 :   store i64 %184, i64* %RBP, !mcsema_real_eip !19 :          <96>	retq
446 :   %185 = load i64* %R8_val, !mcsema_real_eip !19 :          <96>	retq
447 :   store i64 %185, i64* %R8, !mcsema_real_eip !19 :          <96>	retq
448 :   %186 = load i64* %R9_val, !mcsema_real_eip !19 :          <96>	retq
449 :   store i64 %186, i64* %R9, !mcsema_real_eip !19 :          <96>	retq
450 :   %187 = load i64* %R10_val, !mcsema_real_eip !19 :          <96>	retq
451 :   store i64 %187, i64* %R10, !mcsema_real_eip !19 :          <96>	retq
452 :   %188 = load i64* %R11_val, !mcsema_real_eip !19 :          <96>	retq
453 :   store i64 %188, i64* %R11, !mcsema_real_eip !19 :          <96>	retq
454 :   %189 = load i64* %R12_val, !mcsema_real_eip !19 :          <96>	retq
455 :   store i64 %189, i64* %R12, !mcsema_real_eip !19 :          <96>	retq
456 :   %190 = load i64* %R13_val, !mcsema_real_eip !19 :          <96>	retq
457 :   store i64 %190, i64* %R13, !mcsema_real_eip !19 :          <96>	retq
458 :   %191 = load i64* %R14_val, !mcsema_real_eip !19 :          <96>	retq
459 :   store i64 %191, i64* %R14, !mcsema_real_eip !19 :          <96>	retq
460 :   %192 = load i64* %R15_val, !mcsema_real_eip !19 :          <96>	retq
461 :   store i64 %192, i64* %R15, !mcsema_real_eip !19 :          <96>	retq
462 :   %193 = load i64* %RIP_val, !mcsema_real_eip !19 :          <96>	retq
463 :   store i64 %193, i64* %RIP, !mcsema_real_eip !19 :          <96>	retq
464 :   %194 = load i1* %CF_val, !mcsema_real_eip !19 :          <96>	retq
465 :   store i1 %194, i1* %CF, align 1, !mcsema_real_eip !19 :          <96>	retq
466 :   %195 = load i1* %PF_val, !mcsema_real_eip !19 :          <96>	retq
467 :   store i1 %195, i1* %PF, align 1, !mcsema_real_eip !19 :          <96>	retq
468 :   %196 = load i1* %AF_val, !mcsema_real_eip !19 :          <96>	retq
469 :   store i1 %196, i1* %AF, align 1, !mcsema_real_eip !19 :          <96>	retq
470 :   %197 = load i1* %ZF_val, !mcsema_real_eip !19 :          <96>	retq
471 :   store i1 %197, i1* %ZF, align 1, !mcsema_real_eip !19 :          <96>	retq
472 :   %198 = load i1* %SF_val, !mcsema_real_eip !19 :          <96>	retq
473 :   store i1 %198, i1* %SF, align 1, !mcsema_real_eip !19 :          <96>	retq
474 :   %199 = load i1* %OF_val, !mcsema_real_eip !19 :          <96>	retq
475 :   store i1 %199, i1* %OF, align 1, !mcsema_real_eip !19 :          <96>	retq
476 :   %200 = load i1* %DF_val, !mcsema_real_eip !19 :          <96>	retq
477 :   store i1 %200, i1* %DF, align 1, !mcsema_real_eip !19 :          <96>	retq
478 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !19 :          <96>	retq
479 :   %201 = load i1* %FPU_B_val, !mcsema_real_eip !19 :          <96>	retq
480 :   store i1 %201, i1* %FPU_B, align 1, !mcsema_real_eip !19 :          <96>	retq
481 :   %202 = load i1* %FPU_C3_val, !mcsema_real_eip !19 :          <96>	retq
482 :   store i1 %202, i1* %FPU_C3, align 1, !mcsema_real_eip !19 :          <96>	retq
483 :   %203 = load i3* %FPU_TOP_val, !mcsema_real_eip !19 :          <96>	retq
484 :   store i3 %203, i3* %FPU_TOP, align 1, !mcsema_real_eip !19 :          <96>	retq
485 :   %204 = load i1* %FPU_C2_val, !mcsema_real_eip !19 :          <96>	retq
486 :   store i1 %204, i1* %FPU_C2, align 1, !mcsema_real_eip !19 :          <96>	retq
487 :   %205 = load i1* %FPU_C1_val, !mcsema_real_eip !19 :          <96>	retq
488 :   store i1 %205, i1* %FPU_C1, align 1, !mcsema_real_eip !19 :          <96>	retq
489 :   %206 = load i1* %FPU_C0_val, !mcsema_real_eip !19 :          <96>	retq
490 :   store i1 %206, i1* %FPU_C0, align 1, !mcsema_real_eip !19 :          <96>	retq
491 :   %207 = load i1* %FPU_ES_val, !mcsema_real_eip !19 :          <96>	retq
492 :   store i1 %207, i1* %FPU_ES, align 1, !mcsema_real_eip !19 :          <96>	retq
493 :   %208 = load i1* %FPU_SF_val, !mcsema_real_eip !19 :          <96>	retq
494 :   store i1 %208, i1* %FPU_SF, align 1, !mcsema_real_eip !19 :          <96>	retq
495 :   %209 = load i1* %FPU_PE_val, !mcsema_real_eip !19 :          <96>	retq
496 :   store i1 %209, i1* %FPU_PE, align 1, !mcsema_real_eip !19 :          <96>	retq
497 :   %210 = load i1* %FPU_UE_val, !mcsema_real_eip !19 :          <96>	retq
498 :   store i1 %210, i1* %FPU_UE, align 1, !mcsema_real_eip !19 :          <96>	retq
499 :   %211 = load i1* %FPU_OE_val, !mcsema_real_eip !19 :          <96>	retq
500 :   store i1 %211, i1* %FPU_OE, align 1, !mcsema_real_eip !19 :          <96>	retq
501 :   %212 = load i1* %FPU_ZE_val, !mcsema_real_eip !19 :          <96>	retq
502 :   store i1 %212, i1* %FPU_ZE, align 1, !mcsema_real_eip !19 :          <96>	retq
503 :   %213 = load i1* %FPU_DE_val, !mcsema_real_eip !19 :          <96>	retq
504 :   store i1 %213, i1* %FPU_DE, align 1, !mcsema_real_eip !19 :          <96>	retq
505 :   %214 = load i1* %FPU_IE_val, !mcsema_real_eip !19 :          <96>	retq
506 :   store i1 %214, i1* %FPU_IE, align 1, !mcsema_real_eip !19 :          <96>	retq
507 :   %215 = load i1* %FPU_X_val, !mcsema_real_eip !19 :          <96>	retq
508 :   store i1 %215, i1* %FPU_X, align 1, !mcsema_real_eip !19 :          <96>	retq
509 :   %216 = load i2* %FPU_RC_val, !mcsema_real_eip !19 :          <96>	retq
510 :   store i2 %216, i2* %FPU_RC, align 1, !mcsema_real_eip !19 :          <96>	retq
511 :   %217 = load i2* %FPU_PC_val, !mcsema_real_eip !19 :          <96>	retq
512 :   store i2 %217, i2* %FPU_PC, align 1, !mcsema_real_eip !19 :          <96>	retq
513 :   %218 = load i1* %FPU_PM_val, !mcsema_real_eip !19 :          <96>	retq
514 :   store i1 %218, i1* %FPU_PM, align 1, !mcsema_real_eip !19 :          <96>	retq
515 :   %219 = load i1* %FPU_UM_val, !mcsema_real_eip !19 :          <96>	retq
516 :   store i1 %219, i1* %FPU_UM, align 1, !mcsema_real_eip !19 :          <96>	retq
517 :   %220 = load i1* %FPU_OM_val, !mcsema_real_eip !19 :          <96>	retq
518 :   store i1 %220, i1* %FPU_OM, align 1, !mcsema_real_eip !19 :          <96>	retq
519 :   %221 = load i1* %FPU_ZM_val, !mcsema_real_eip !19 :          <96>	retq
520 :   store i1 %221, i1* %FPU_ZM, align 1, !mcsema_real_eip !19 :          <96>	retq
521 :   %222 = load i1* %FPU_DM_val, !mcsema_real_eip !19 :          <96>	retq
522 :   store i1 %222, i1* %FPU_DM, align 1, !mcsema_real_eip !19 :          <96>	retq
523 :   %223 = load i1* %FPU_IM_val, !mcsema_real_eip !19 :          <96>	retq
524 :   store i1 %223, i1* %FPU_IM, align 1, !mcsema_real_eip !19 :          <96>	retq

525 :   %224 = load i64* %53, align 4 : NIL
526 :   store i64 %224, i64* %52, align 4 : NIL

527 :   %225 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !19 :          <96>	retq
528 :   store i16 %225, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !19 :          <96>	retq
529 :   %226 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !19 :          <96>	retq
530 :   store i64 %226, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !19 :          <96>	retq
531 :   %227 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !19 :          <96>	retq
532 :   store i16 %227, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !19 :          <96>	retq
533 :   %228 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !19 :          <96>	retq
534 :   store i64 %228, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !19 :          <96>	retq
535 :   %229 = load i128* %XMM0_val, !mcsema_real_eip !19 :          <96>	retq
536 :   store i128 %229, i128* %XMM0, align 1, !mcsema_real_eip !19 :          <96>	retq
537 :   %230 = load i128* %XMM1_val, !mcsema_real_eip !19 :          <96>	retq
538 :   store i128 %230, i128* %XMM1, align 1, !mcsema_real_eip !19 :          <96>	retq
539 :   %231 = load i128* %XMM2_val, !mcsema_real_eip !19 :          <96>	retq
540 :   store i128 %231, i128* %XMM2, align 1, !mcsema_real_eip !19 :          <96>	retq
541 :   %232 = load i128* %XMM3_val, !mcsema_real_eip !19 :          <96>	retq
542 :   store i128 %232, i128* %XMM3, align 1, !mcsema_real_eip !19 :          <96>	retq
543 :   %233 = load i128* %XMM4_val, !mcsema_real_eip !19 :          <96>	retq
544 :   store i128 %233, i128* %XMM4, align 1, !mcsema_real_eip !19 :          <96>	retq
545 :   %234 = load i128* %XMM5_val, !mcsema_real_eip !19 :          <96>	retq
546 :   store i128 %234, i128* %XMM5, align 1, !mcsema_real_eip !19 :          <96>	retq
547 :   %235 = load i128* %XMM6_val, !mcsema_real_eip !19 :          <96>	retq
548 :   store i128 %235, i128* %XMM6, align 1, !mcsema_real_eip !19 :          <96>	retq
549 :   %236 = load i128* %XMM7_val, !mcsema_real_eip !19 :          <96>	retq
550 :   store i128 %236, i128* %XMM7, align 1, !mcsema_real_eip !19 :          <96>	retq
551 :   %237 = load i128* %XMM8_val, !mcsema_real_eip !19 :          <96>	retq
552 :   store i128 %237, i128* %XMM8, align 1, !mcsema_real_eip !19 :          <96>	retq
553 :   %238 = load i128* %XMM9_val, !mcsema_real_eip !19 :          <96>	retq
554 :   store i128 %238, i128* %XMM9, align 1, !mcsema_real_eip !19 :          <96>	retq
555 :   %239 = load i128* %XMM10_val, !mcsema_real_eip !19 :          <96>	retq
556 :   store i128 %239, i128* %XMM10, align 1, !mcsema_real_eip !19 :          <96>	retq
557 :   %240 = load i128* %XMM11_val, !mcsema_real_eip !19 :          <96>	retq
558 :   store i128 %240, i128* %XMM11, align 1, !mcsema_real_eip !19 :          <96>	retq
559 :   %241 = load i128* %XMM12_val, !mcsema_real_eip !19 :          <96>	retq
560 :   store i128 %241, i128* %XMM12, align 1, !mcsema_real_eip !19 :          <96>	retq
561 :   %242 = load i128* %XMM13_val, !mcsema_real_eip !19 :          <96>	retq
562 :   store i128 %242, i128* %XMM13, align 1, !mcsema_real_eip !19 :          <96>	retq
563 :   %243 = load i128* %XMM14_val, !mcsema_real_eip !19 :          <96>	retq
564 :   store i128 %243, i128* %XMM14, align 1, !mcsema_real_eip !19 :          <96>	retq
565 :   %244 = load i128* %XMM15_val, !mcsema_real_eip !19 :          <96>	retq
566 :   store i128 %244, i128* %XMM15, align 1, !mcsema_real_eip !19 :          <96>	retq
567 :   %245 = load i64* %STACK_BASE_val, !mcsema_real_eip !19 :          <96>	retq
568 :   store i64 %245, i64* %STACK_BASE, align 1, !mcsema_real_eip !19 :          <96>	retq
569 :   %246 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !19 :          <96>	retq
570 :   store i64 %246, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !19 :          <96>	retq
571 :   ret void, !mcsema_real_eip !19 :          <96>	retq

572 :   %247 = load i64* %RBP_val, !mcsema_real_eip !20 :          <43>	movslq	-16(%rbp), %rax
573 :   %248 = add i64 %247, -16, !mcsema_real_eip !20 :          <43>	movslq	-16(%rbp), %rax
574 :   %249 = inttoptr i64 %248 to i64*, !mcsema_real_eip !20 :          <43>	movslq	-16(%rbp), %rax

575 :   %250 = bitcast i64* %249 to i32* : NIL

576 :   %251 = load i32* %250, !mcsema_real_eip !20 :          <43>	movslq	-16(%rbp), %rax
577 :   %252 = sext i32 %251 to i64, !mcsema_real_eip !20 :          <43>	movslq	-16(%rbp), %rax
578 :   store i64 %252, i64* %RAX_val, !mcsema_real_eip !20 :          <43>	movslq	-16(%rbp), %rax

579 :   %253 = load i64* %RBP_val, !mcsema_real_eip !21 :          <47>	movq	-8(%rbp), %rcx
580 :   %254 = add i64 %253, -8, !mcsema_real_eip !21 :          <47>	movq	-8(%rbp), %rcx
581 :   %255 = inttoptr i64 %254 to i64*, !mcsema_real_eip !21 :          <47>	movq	-8(%rbp), %rcx
582 :   %256 = load i64* %255, !mcsema_real_eip !21 :          <47>	movq	-8(%rbp), %rcx
583 :   store i64 %256, i64* %RCX_val, !mcsema_real_eip !21 :          <47>	movq	-8(%rbp), %rcx

584 :   %257 = shl nsw i64 %252, 3 : NIL

585 :   %258 = add i64 %256, %257, !mcsema_real_eip !22 :          <4b>	movq	(%rcx,%rax,8), %rax
586 :   %259 = inttoptr i64 %258 to i64*, !mcsema_real_eip !22 :          <4b>	movq	(%rcx,%rax,8), %rax
587 :   %260 = load i64* %259, !mcsema_real_eip !22 :          <4b>	movq	(%rcx,%rax,8), %rax
588 :   store i64 %260, i64* %RAX_val, !mcsema_real_eip !22 :          <4b>	movq	(%rcx,%rax,8), %rax

589 :   %261 = load i64* %RBP_val, !mcsema_real_eip !23 :          <4f>	movq	%rax, -32(%rbp)
590 :   %262 = add i64 %261, -32, !mcsema_real_eip !23 :          <4f>	movq	%rax, -32(%rbp)
591 :   %263 = inttoptr i64 %262 to i64*, !mcsema_real_eip !23 :          <4f>	movq	%rax, -32(%rbp)
592 :   store i64 %260, i64* %263, !mcsema_real_eip !23 :          <4f>	movq	%rax, -32(%rbp)

593 :   %264 = load i64* %RBP_val, !mcsema_real_eip !24 :          <53>	movq	-32(%rbp), %rdi
594 :   %265 = add i64 %264, -32, !mcsema_real_eip !24 :          <53>	movq	-32(%rbp), %rdi
595 :   %266 = inttoptr i64 %265 to i64*, !mcsema_real_eip !24 :          <53>	movq	-32(%rbp), %rdi
596 :   %267 = load i64* %266, !mcsema_real_eip !24 :          <53>	movq	-32(%rbp), %rdi
597 :   store i64 %267, i64* %RDI_val, !mcsema_real_eip !24 :          <53>	movq	-32(%rbp), %rdi

598 :   %268 = load i64* %RSP_val, !mcsema_real_eip !25 :          <57>	callq	68

599 :   %269 = add i64 %268, -8 : NIL

600 :   %270 = inttoptr i64 %269 to i64*, !mcsema_real_eip !25 :          <57>	callq	68
601 :   store i64 -4981261766360305936, i64* %270, !mcsema_real_eip !25 :          <57>	callq	68
602 :   store i64 %269, i64* %RSP_val, !mcsema_real_eip !25 :          <57>	callq	68
603 :   %271 = load i64* %RAX_val, !mcsema_real_eip !25 :          <57>	callq	68
604 :   store i64 %271, i64* %RAX, !mcsema_real_eip !25 :          <57>	callq	68
605 :   %272 = load i64* %RBX_val, !mcsema_real_eip !25 :          <57>	callq	68
606 :   store i64 %272, i64* %RBX, !mcsema_real_eip !25 :          <57>	callq	68
607 :   %273 = load i64* %RCX_val, !mcsema_real_eip !25 :          <57>	callq	68
608 :   store i64 %273, i64* %RCX, !mcsema_real_eip !25 :          <57>	callq	68
609 :   %274 = load i64* %RDX_val, !mcsema_real_eip !25 :          <57>	callq	68
610 :   store i64 %274, i64* %RDX, !mcsema_real_eip !25 :          <57>	callq	68
611 :   %275 = load i64* %RSI_val, !mcsema_real_eip !25 :          <57>	callq	68
612 :   store i64 %275, i64* %RSI, !mcsema_real_eip !25 :          <57>	callq	68
613 :   %276 = load i64* %RDI_val, !mcsema_real_eip !25 :          <57>	callq	68
614 :   store i64 %276, i64* %RDI, !mcsema_real_eip !25 :          <57>	callq	68
615 :   %277 = load i64* %RSP_val, !mcsema_real_eip !25 :          <57>	callq	68
616 :   store i64 %277, i64* %RSP, !mcsema_real_eip !25 :          <57>	callq	68
617 :   %278 = load i64* %RBP_val, !mcsema_real_eip !25 :          <57>	callq	68
618 :   store i64 %278, i64* %RBP, !mcsema_real_eip !25 :          <57>	callq	68
619 :   %279 = load i64* %R8_val, !mcsema_real_eip !25 :          <57>	callq	68
620 :   store i64 %279, i64* %R8, !mcsema_real_eip !25 :          <57>	callq	68
621 :   %280 = load i64* %R9_val, !mcsema_real_eip !25 :          <57>	callq	68
622 :   store i64 %280, i64* %R9, !mcsema_real_eip !25 :          <57>	callq	68
623 :   %281 = load i64* %R10_val, !mcsema_real_eip !25 :          <57>	callq	68
624 :   store i64 %281, i64* %R10, !mcsema_real_eip !25 :          <57>	callq	68
625 :   %282 = load i64* %R11_val, !mcsema_real_eip !25 :          <57>	callq	68
626 :   store i64 %282, i64* %R11, !mcsema_real_eip !25 :          <57>	callq	68
627 :   %283 = load i64* %R12_val, !mcsema_real_eip !25 :          <57>	callq	68
628 :   store i64 %283, i64* %R12, !mcsema_real_eip !25 :          <57>	callq	68
629 :   %284 = load i64* %R13_val, !mcsema_real_eip !25 :          <57>	callq	68
630 :   store i64 %284, i64* %R13, !mcsema_real_eip !25 :          <57>	callq	68
631 :   %285 = load i64* %R14_val, !mcsema_real_eip !25 :          <57>	callq	68
632 :   store i64 %285, i64* %R14, !mcsema_real_eip !25 :          <57>	callq	68
633 :   %286 = load i64* %R15_val, !mcsema_real_eip !25 :          <57>	callq	68
634 :   store i64 %286, i64* %R15, !mcsema_real_eip !25 :          <57>	callq	68
635 :   %287 = load i64* %RIP_val, !mcsema_real_eip !25 :          <57>	callq	68
636 :   store i64 %287, i64* %RIP, !mcsema_real_eip !25 :          <57>	callq	68
637 :   %288 = load i1* %CF_val, !mcsema_real_eip !25 :          <57>	callq	68
638 :   store i1 %288, i1* %CF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
639 :   %289 = load i1* %PF_val, !mcsema_real_eip !25 :          <57>	callq	68
640 :   store i1 %289, i1* %PF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
641 :   %290 = load i1* %AF_val, !mcsema_real_eip !25 :          <57>	callq	68
642 :   store i1 %290, i1* %AF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
643 :   %291 = load i1* %ZF_val, !mcsema_real_eip !25 :          <57>	callq	68
644 :   store i1 %291, i1* %ZF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
645 :   %292 = load i1* %SF_val, !mcsema_real_eip !25 :          <57>	callq	68
646 :   store i1 %292, i1* %SF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
647 :   %293 = load i1* %OF_val, !mcsema_real_eip !25 :          <57>	callq	68
648 :   store i1 %293, i1* %OF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
649 :   %294 = load i1* %DF_val, !mcsema_real_eip !25 :          <57>	callq	68
650 :   store i1 %294, i1* %DF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
651 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !25 :          <57>	callq	68
652 :   %295 = load i1* %FPU_B_val, !mcsema_real_eip !25 :          <57>	callq	68
653 :   store i1 %295, i1* %FPU_B, align 1, !mcsema_real_eip !25 :          <57>	callq	68
654 :   %296 = load i1* %FPU_C3_val, !mcsema_real_eip !25 :          <57>	callq	68
655 :   store i1 %296, i1* %FPU_C3, align 1, !mcsema_real_eip !25 :          <57>	callq	68
656 :   %297 = load i3* %FPU_TOP_val, !mcsema_real_eip !25 :          <57>	callq	68
657 :   store i3 %297, i3* %FPU_TOP, align 1, !mcsema_real_eip !25 :          <57>	callq	68
658 :   %298 = load i1* %FPU_C2_val, !mcsema_real_eip !25 :          <57>	callq	68
659 :   store i1 %298, i1* %FPU_C2, align 1, !mcsema_real_eip !25 :          <57>	callq	68
660 :   %299 = load i1* %FPU_C1_val, !mcsema_real_eip !25 :          <57>	callq	68
661 :   store i1 %299, i1* %FPU_C1, align 1, !mcsema_real_eip !25 :          <57>	callq	68
662 :   %300 = load i1* %FPU_C0_val, !mcsema_real_eip !25 :          <57>	callq	68
663 :   store i1 %300, i1* %FPU_C0, align 1, !mcsema_real_eip !25 :          <57>	callq	68
664 :   %301 = load i1* %FPU_ES_val, !mcsema_real_eip !25 :          <57>	callq	68
665 :   store i1 %301, i1* %FPU_ES, align 1, !mcsema_real_eip !25 :          <57>	callq	68
666 :   %302 = load i1* %FPU_SF_val, !mcsema_real_eip !25 :          <57>	callq	68
667 :   store i1 %302, i1* %FPU_SF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
668 :   %303 = load i1* %FPU_PE_val, !mcsema_real_eip !25 :          <57>	callq	68
669 :   store i1 %303, i1* %FPU_PE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
670 :   %304 = load i1* %FPU_UE_val, !mcsema_real_eip !25 :          <57>	callq	68
671 :   store i1 %304, i1* %FPU_UE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
672 :   %305 = load i1* %FPU_OE_val, !mcsema_real_eip !25 :          <57>	callq	68
673 :   store i1 %305, i1* %FPU_OE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
674 :   %306 = load i1* %FPU_ZE_val, !mcsema_real_eip !25 :          <57>	callq	68
675 :   store i1 %306, i1* %FPU_ZE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
676 :   %307 = load i1* %FPU_DE_val, !mcsema_real_eip !25 :          <57>	callq	68
677 :   store i1 %307, i1* %FPU_DE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
678 :   %308 = load i1* %FPU_IE_val, !mcsema_real_eip !25 :          <57>	callq	68
679 :   store i1 %308, i1* %FPU_IE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
680 :   %309 = load i1* %FPU_X_val, !mcsema_real_eip !25 :          <57>	callq	68
681 :   store i1 %309, i1* %FPU_X, align 1, !mcsema_real_eip !25 :          <57>	callq	68
682 :   %310 = load i2* %FPU_RC_val, !mcsema_real_eip !25 :          <57>	callq	68
683 :   store i2 %310, i2* %FPU_RC, align 1, !mcsema_real_eip !25 :          <57>	callq	68
684 :   %311 = load i2* %FPU_PC_val, !mcsema_real_eip !25 :          <57>	callq	68
685 :   store i2 %311, i2* %FPU_PC, align 1, !mcsema_real_eip !25 :          <57>	callq	68
686 :   %312 = load i1* %FPU_PM_val, !mcsema_real_eip !25 :          <57>	callq	68
687 :   store i1 %312, i1* %FPU_PM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
688 :   %313 = load i1* %FPU_UM_val, !mcsema_real_eip !25 :          <57>	callq	68
689 :   store i1 %313, i1* %FPU_UM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
690 :   %314 = load i1* %FPU_OM_val, !mcsema_real_eip !25 :          <57>	callq	68
691 :   store i1 %314, i1* %FPU_OM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
692 :   %315 = load i1* %FPU_ZM_val, !mcsema_real_eip !25 :          <57>	callq	68
693 :   store i1 %315, i1* %FPU_ZM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
694 :   %316 = load i1* %FPU_DM_val, !mcsema_real_eip !25 :          <57>	callq	68
695 :   store i1 %316, i1* %FPU_DM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
696 :   %317 = load i1* %FPU_IM_val, !mcsema_real_eip !25 :          <57>	callq	68
697 :   store i1 %317, i1* %FPU_IM, align 1, !mcsema_real_eip !25 :          <57>	callq	68

698 :   %318 = load i64* %53, align 4 : NIL
699 :   store i64 %318, i64* %52, align 4 : NIL

700 :   %319 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !25 :          <57>	callq	68
701 :   store i16 %319, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !25 :          <57>	callq	68
702 :   %320 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !25 :          <57>	callq	68
703 :   store i64 %320, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
704 :   %321 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !25 :          <57>	callq	68
705 :   store i16 %321, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !25 :          <57>	callq	68
706 :   %322 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !25 :          <57>	callq	68
707 :   store i64 %322, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
708 :   %323 = load i128* %XMM0_val, !mcsema_real_eip !25 :          <57>	callq	68
709 :   store i128 %323, i128* %XMM0, align 1, !mcsema_real_eip !25 :          <57>	callq	68
710 :   %324 = load i128* %XMM1_val, !mcsema_real_eip !25 :          <57>	callq	68
711 :   store i128 %324, i128* %XMM1, align 1, !mcsema_real_eip !25 :          <57>	callq	68
712 :   %325 = load i128* %XMM2_val, !mcsema_real_eip !25 :          <57>	callq	68
713 :   store i128 %325, i128* %XMM2, align 1, !mcsema_real_eip !25 :          <57>	callq	68
714 :   %326 = load i128* %XMM3_val, !mcsema_real_eip !25 :          <57>	callq	68
715 :   store i128 %326, i128* %XMM3, align 1, !mcsema_real_eip !25 :          <57>	callq	68
716 :   %327 = load i128* %XMM4_val, !mcsema_real_eip !25 :          <57>	callq	68
717 :   store i128 %327, i128* %XMM4, align 1, !mcsema_real_eip !25 :          <57>	callq	68
718 :   %328 = load i128* %XMM5_val, !mcsema_real_eip !25 :          <57>	callq	68
719 :   store i128 %328, i128* %XMM5, align 1, !mcsema_real_eip !25 :          <57>	callq	68
720 :   %329 = load i128* %XMM6_val, !mcsema_real_eip !25 :          <57>	callq	68
721 :   store i128 %329, i128* %XMM6, align 1, !mcsema_real_eip !25 :          <57>	callq	68
722 :   %330 = load i128* %XMM7_val, !mcsema_real_eip !25 :          <57>	callq	68
723 :   store i128 %330, i128* %XMM7, align 1, !mcsema_real_eip !25 :          <57>	callq	68
724 :   %331 = load i128* %XMM8_val, !mcsema_real_eip !25 :          <57>	callq	68
725 :   store i128 %331, i128* %XMM8, align 1, !mcsema_real_eip !25 :          <57>	callq	68
726 :   %332 = load i128* %XMM9_val, !mcsema_real_eip !25 :          <57>	callq	68
727 :   store i128 %332, i128* %XMM9, align 1, !mcsema_real_eip !25 :          <57>	callq	68
728 :   %333 = load i128* %XMM10_val, !mcsema_real_eip !25 :          <57>	callq	68
729 :   store i128 %333, i128* %XMM10, align 1, !mcsema_real_eip !25 :          <57>	callq	68
730 :   %334 = load i128* %XMM11_val, !mcsema_real_eip !25 :          <57>	callq	68
731 :   store i128 %334, i128* %XMM11, align 1, !mcsema_real_eip !25 :          <57>	callq	68
732 :   %335 = load i128* %XMM12_val, !mcsema_real_eip !25 :          <57>	callq	68
733 :   store i128 %335, i128* %XMM12, align 1, !mcsema_real_eip !25 :          <57>	callq	68
734 :   %336 = load i128* %XMM13_val, !mcsema_real_eip !25 :          <57>	callq	68
735 :   store i128 %336, i128* %XMM13, align 1, !mcsema_real_eip !25 :          <57>	callq	68
736 :   %337 = load i128* %XMM14_val, !mcsema_real_eip !25 :          <57>	callq	68
737 :   store i128 %337, i128* %XMM14, align 1, !mcsema_real_eip !25 :          <57>	callq	68
738 :   %338 = load i128* %XMM15_val, !mcsema_real_eip !25 :          <57>	callq	68
739 :   store i128 %338, i128* %XMM15, align 1, !mcsema_real_eip !25 :          <57>	callq	68
740 :   %339 = load i64* %STACK_BASE_val, !mcsema_real_eip !25 :          <57>	callq	68
741 :   store i64 %339, i64* %STACK_BASE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
742 :   %340 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !25 :          <57>	callq	68
743 :   store i64 %340, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !25 :          <57>	callq	68
744 :   tail call x86_64_sysvcc void @sub_a0(%struct.regs* %0), !mcsema_real_eip !25 :          <57>	callq	68
745 :   %341 = load i64* %RAX, !mcsema_real_eip !25 :          <57>	callq	68
746 :   store i64 %341, i64* %RAX_val, !mcsema_real_eip !25 :          <57>	callq	68
747 :   %342 = load i64* %RBX, !mcsema_real_eip !25 :          <57>	callq	68
748 :   store i64 %342, i64* %RBX_val, !mcsema_real_eip !25 :          <57>	callq	68
749 :   %343 = load i64* %RCX, !mcsema_real_eip !25 :          <57>	callq	68
750 :   store i64 %343, i64* %RCX_val, !mcsema_real_eip !25 :          <57>	callq	68
751 :   %344 = load i64* %RDX, !mcsema_real_eip !25 :          <57>	callq	68
752 :   store i64 %344, i64* %RDX_val, !mcsema_real_eip !25 :          <57>	callq	68
753 :   %345 = load i64* %RSI, !mcsema_real_eip !25 :          <57>	callq	68
754 :   store i64 %345, i64* %RSI_val, !mcsema_real_eip !25 :          <57>	callq	68
755 :   %346 = load i64* %RDI, !mcsema_real_eip !25 :          <57>	callq	68
756 :   store i64 %346, i64* %RDI_val, !mcsema_real_eip !25 :          <57>	callq	68
757 :   %347 = load i64* %RSP, !mcsema_real_eip !25 :          <57>	callq	68
758 :   store i64 %347, i64* %RSP_val, !mcsema_real_eip !25 :          <57>	callq	68
759 :   %348 = load i64* %RBP, !mcsema_real_eip !25 :          <57>	callq	68
760 :   store i64 %348, i64* %RBP_val, !mcsema_real_eip !25 :          <57>	callq	68
761 :   %349 = load i64* %R8, !mcsema_real_eip !25 :          <57>	callq	68
762 :   store i64 %349, i64* %R8_val, !mcsema_real_eip !25 :          <57>	callq	68
763 :   %350 = load i64* %R9, !mcsema_real_eip !25 :          <57>	callq	68
764 :   store i64 %350, i64* %R9_val, !mcsema_real_eip !25 :          <57>	callq	68
765 :   %351 = load i64* %R10, !mcsema_real_eip !25 :          <57>	callq	68
766 :   store i64 %351, i64* %R10_val, !mcsema_real_eip !25 :          <57>	callq	68
767 :   %352 = load i64* %R11, !mcsema_real_eip !25 :          <57>	callq	68
768 :   store i64 %352, i64* %R11_val, !mcsema_real_eip !25 :          <57>	callq	68
769 :   %353 = load i64* %R12, !mcsema_real_eip !25 :          <57>	callq	68
770 :   store i64 %353, i64* %R12_val, !mcsema_real_eip !25 :          <57>	callq	68
771 :   %354 = load i64* %R13, !mcsema_real_eip !25 :          <57>	callq	68
772 :   store i64 %354, i64* %R13_val, !mcsema_real_eip !25 :          <57>	callq	68
773 :   %355 = load i64* %R14, !mcsema_real_eip !25 :          <57>	callq	68
774 :   store i64 %355, i64* %R14_val, !mcsema_real_eip !25 :          <57>	callq	68
775 :   %356 = load i64* %R15, !mcsema_real_eip !25 :          <57>	callq	68
776 :   store i64 %356, i64* %R15_val, !mcsema_real_eip !25 :          <57>	callq	68
777 :   %357 = load i64* %RIP, !mcsema_real_eip !25 :          <57>	callq	68
778 :   store i64 %357, i64* %RIP_val, !mcsema_real_eip !25 :          <57>	callq	68
779 :   %358 = load i1* %CF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
780 :   store i1 %358, i1* %CF_val, !mcsema_real_eip !25 :          <57>	callq	68
781 :   %359 = load i1* %PF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
782 :   store i1 %359, i1* %PF_val, !mcsema_real_eip !25 :          <57>	callq	68
783 :   %360 = load i1* %AF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
784 :   store i1 %360, i1* %AF_val, !mcsema_real_eip !25 :          <57>	callq	68
785 :   %361 = load i1* %ZF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
786 :   store i1 %361, i1* %ZF_val, !mcsema_real_eip !25 :          <57>	callq	68
787 :   %362 = load i1* %SF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
788 :   store i1 %362, i1* %SF_val, !mcsema_real_eip !25 :          <57>	callq	68
789 :   %363 = load i1* %OF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
790 :   store i1 %363, i1* %OF_val, !mcsema_real_eip !25 :          <57>	callq	68
791 :   %364 = load i1* %DF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
792 :   store i1 %364, i1* %DF_val, !mcsema_real_eip !25 :          <57>	callq	68
793 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !25 :          <57>	callq	68
794 :   %365 = load i1* %FPU_B, align 1, !mcsema_real_eip !25 :          <57>	callq	68
795 :   store i1 %365, i1* %FPU_B_val, !mcsema_real_eip !25 :          <57>	callq	68
796 :   %366 = load i1* %FPU_C3, align 1, !mcsema_real_eip !25 :          <57>	callq	68
797 :   store i1 %366, i1* %FPU_C3_val, !mcsema_real_eip !25 :          <57>	callq	68
798 :   %367 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !25 :          <57>	callq	68
799 :   store i3 %367, i3* %FPU_TOP_val, !mcsema_real_eip !25 :          <57>	callq	68
800 :   %368 = load i1* %FPU_C2, align 1, !mcsema_real_eip !25 :          <57>	callq	68
801 :   store i1 %368, i1* %FPU_C2_val, !mcsema_real_eip !25 :          <57>	callq	68
802 :   %369 = load i1* %FPU_C1, align 1, !mcsema_real_eip !25 :          <57>	callq	68
803 :   store i1 %369, i1* %FPU_C1_val, !mcsema_real_eip !25 :          <57>	callq	68
804 :   %370 = load i1* %FPU_C0, align 1, !mcsema_real_eip !25 :          <57>	callq	68
805 :   store i1 %370, i1* %FPU_C0_val, !mcsema_real_eip !25 :          <57>	callq	68
806 :   %371 = load i1* %FPU_ES, align 1, !mcsema_real_eip !25 :          <57>	callq	68
807 :   store i1 %371, i1* %FPU_ES_val, !mcsema_real_eip !25 :          <57>	callq	68
808 :   %372 = load i1* %FPU_SF, align 1, !mcsema_real_eip !25 :          <57>	callq	68
809 :   store i1 %372, i1* %FPU_SF_val, !mcsema_real_eip !25 :          <57>	callq	68
810 :   %373 = load i1* %FPU_PE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
811 :   store i1 %373, i1* %FPU_PE_val, !mcsema_real_eip !25 :          <57>	callq	68
812 :   %374 = load i1* %FPU_UE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
813 :   store i1 %374, i1* %FPU_UE_val, !mcsema_real_eip !25 :          <57>	callq	68
814 :   %375 = load i1* %FPU_OE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
815 :   store i1 %375, i1* %FPU_OE_val, !mcsema_real_eip !25 :          <57>	callq	68
816 :   %376 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
817 :   store i1 %376, i1* %FPU_ZE_val, !mcsema_real_eip !25 :          <57>	callq	68
818 :   %377 = load i1* %FPU_DE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
819 :   store i1 %377, i1* %FPU_DE_val, !mcsema_real_eip !25 :          <57>	callq	68
820 :   %378 = load i1* %FPU_IE, align 1, !mcsema_real_eip !25 :          <57>	callq	68
821 :   store i1 %378, i1* %FPU_IE_val, !mcsema_real_eip !25 :          <57>	callq	68
822 :   %379 = load i1* %FPU_X, align 1, !mcsema_real_eip !25 :          <57>	callq	68
823 :   store i1 %379, i1* %FPU_X_val, !mcsema_real_eip !25 :          <57>	callq	68
824 :   %380 = load i2* %FPU_RC, align 1, !mcsema_real_eip !25 :          <57>	callq	68
825 :   store i2 %380, i2* %FPU_RC_val, !mcsema_real_eip !25 :          <57>	callq	68
826 :   %381 = load i2* %FPU_PC, align 1, !mcsema_real_eip !25 :          <57>	callq	68
827 :   store i2 %381, i2* %FPU_PC_val, !mcsema_real_eip !25 :          <57>	callq	68
828 :   %382 = load i1* %FPU_PM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
829 :   store i1 %382, i1* %FPU_PM_val, !mcsema_real_eip !25 :          <57>	callq	68
830 :   %383 = load i1* %FPU_UM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
831 :   store i1 %383, i1* %FPU_UM_val, !mcsema_real_eip !25 :          <57>	callq	68
832 :   %384 = load i1* %FPU_OM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
833 :   store i1 %384, i1* %FPU_OM_val, !mcsema_real_eip !25 :          <57>	callq	68
834 :   %385 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
835 :   store i1 %385, i1* %FPU_ZM_val, !mcsema_real_eip !25 :          <57>	callq	68
836 :   %386 = load i1* %FPU_DM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
837 :   store i1 %386, i1* %FPU_DM_val, !mcsema_real_eip !25 :          <57>	callq	68
838 :   %387 = load i1* %FPU_IM, align 1, !mcsema_real_eip !25 :          <57>	callq	68
839 :   store i1 %387, i1* %FPU_IM_val, !mcsema_real_eip !25 :          <57>	callq	68

840 :   %388 = load i64* %52, align 4 : NIL
841 :   store i64 %388, i64* %53, align 4 : NIL

842 :   %389 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !25 :          <57>	callq	68
843 :   store i16 %389, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !25 :          <57>	callq	68
844 :   %390 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !25 :          <57>	callq	68
845 :   store i64 %390, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !25 :          <57>	callq	68
846 :   %391 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !25 :          <57>	callq	68
847 :   store i16 %391, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !25 :          <57>	callq	68
848 :   %392 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !25 :          <57>	callq	68
849 :   store i64 %392, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !25 :          <57>	callq	68
850 :   %393 = load i128* %XMM0, align 1, !mcsema_real_eip !25 :          <57>	callq	68
851 :   store i128 %393, i128* %XMM0_val, !mcsema_real_eip !25 :          <57>	callq	68
852 :   %394 = load i128* %XMM1, align 1, !mcsema_real_eip !25 :          <57>	callq	68
853 :   store i128 %394, i128* %XMM1_val, !mcsema_real_eip !25 :          <57>	callq	68
854 :   %395 = load i128* %XMM2, align 1, !mcsema_real_eip !25 :          <57>	callq	68
855 :   store i128 %395, i128* %XMM2_val, !mcsema_real_eip !25 :          <57>	callq	68
856 :   %396 = load i128* %XMM3, align 1, !mcsema_real_eip !25 :          <57>	callq	68
857 :   store i128 %396, i128* %XMM3_val, !mcsema_real_eip !25 :          <57>	callq	68
858 :   %397 = load i128* %XMM4, align 1, !mcsema_real_eip !25 :          <57>	callq	68
859 :   store i128 %397, i128* %XMM4_val, !mcsema_real_eip !25 :          <57>	callq	68
860 :   %398 = load i128* %XMM5, align 1, !mcsema_real_eip !25 :          <57>	callq	68
861 :   store i128 %398, i128* %XMM5_val, !mcsema_real_eip !25 :          <57>	callq	68
862 :   %399 = load i128* %XMM6, align 1, !mcsema_real_eip !25 :          <57>	callq	68
863 :   store i128 %399, i128* %XMM6_val, !mcsema_real_eip !25 :          <57>	callq	68
864 :   %400 = load i128* %XMM7, align 1, !mcsema_real_eip !25 :          <57>	callq	68
865 :   store i128 %400, i128* %XMM7_val, !mcsema_real_eip !25 :          <57>	callq	68
866 :   %401 = load i128* %XMM8, align 1, !mcsema_real_eip !25 :          <57>	callq	68
867 :   store i128 %401, i128* %XMM8_val, !mcsema_real_eip !25 :          <57>	callq	68
868 :   %402 = load i128* %XMM9, align 1, !mcsema_real_eip !25 :          <57>	callq	68
869 :   store i128 %402, i128* %XMM9_val, !mcsema_real_eip !25 :          <57>	callq	68
870 :   %403 = load i128* %XMM10, align 1, !mcsema_real_eip !25 :          <57>	callq	68
871 :   store i128 %403, i128* %XMM10_val, !mcsema_real_eip !25 :          <57>	callq	68
872 :   %404 = load i128* %XMM11, align 1, !mcsema_real_eip !25 :          <57>	callq	68
873 :   store i128 %404, i128* %XMM11_val, !mcsema_real_eip !25 :          <57>	callq	68
874 :   %405 = load i128* %XMM12, align 1, !mcsema_real_eip !25 :          <57>	callq	68
875 :   store i128 %405, i128* %XMM12_val, !mcsema_real_eip !25 :          <57>	callq	68
876 :   %406 = load i128* %XMM13, align 1, !mcsema_real_eip !25 :          <57>	callq	68
877 :   store i128 %406, i128* %XMM13_val, !mcsema_real_eip !25 :          <57>	callq	68
878 :   %407 = load i128* %XMM14, align 1, !mcsema_real_eip !25 :          <57>	callq	68
879 :   store i128 %407, i128* %XMM14_val, !mcsema_real_eip !25 :          <57>	callq	68
880 :   %408 = load i128* %XMM15, align 1, !mcsema_real_eip !25 :          <57>	callq	68
881 :   store i128 %408, i128* %XMM15_val, !mcsema_real_eip !25 :          <57>	callq	68
882 :   %409 = load i64* %STACK_BASE, !mcsema_real_eip !25 :          <57>	callq	68
883 :   store i64 %409, i64* %STACK_BASE_val, !mcsema_real_eip !25 :          <57>	callq	68
884 :   %410 = load i64* %STACK_LIMIT, !mcsema_real_eip !25 :          <57>	callq	68
885 :   store i64 %410, i64* %STACK_LIMIT_val, !mcsema_real_eip !25 :          <57>	callq	68

886 :   %411 = load i64* %RAX_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax
887 :   %412 = trunc i64 %411 to i32, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax
888 :   store i1 false, i1* %AF_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax

889 :   %413 = trunc i64 %411 to i8 : NIL

890 :   %414 = tail call i8 @llvm.ctpop.i8(i8 %413), !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax

891 :   %415 = and i8 %414, 1 : NIL
892 :   %416 = icmp eq i8 %415, 0 : NIL

893 :   store i1 %416, i1* %PF_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax
894 :   %417 = icmp eq i32 %412, 0, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax
895 :   store i1 %417, i1* %ZF_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax

896 :   %418 = icmp slt i32 %412, 0 : NIL

897 :   store i1 %418, i1* %SF_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax
898 :   store i1 false, i1* %CF_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax
899 :   store i1 false, i1* %OF_val, !mcsema_real_eip !26 :          <5c>	cmpl	$0, %eax

900 :   br i1 %417, label %block_0x67, label %block_0x79, !mcsema_real_eip !27 :          <61>	jne	13

901 :   %419 = load i64* %RBP_val, !mcsema_real_eip !28 :          <67>	movq	-32(%rbp), %rdi
902 :   %420 = add i64 %419, -32, !mcsema_real_eip !28 :          <67>	movq	-32(%rbp), %rdi
903 :   %421 = inttoptr i64 %420 to i64*, !mcsema_real_eip !28 :          <67>	movq	-32(%rbp), %rdi
904 :   %422 = load i64* %421, !mcsema_real_eip !28 :          <67>	movq	-32(%rbp), %rdi
905 :   store i64 %422, i64* %RDI_val, !mcsema_real_eip !28 :          <67>	movq	-32(%rbp), %rdi

906 :   %423 = load i64* %421, !mcsema_real_eip !29 :          <6b>	movq	-32(%rbp), %rsi
907 :   store i64 %423, i64* %RSI_val, !mcsema_real_eip !29 :          <6b>	movq	-32(%rbp), %rsi

908 :   %424 = load i64* %RSP_val, !mcsema_real_eip !30 :          <6f>	callq	172

909 :   %425 = add i64 %424, -8 : NIL

910 :   %426 = inttoptr i64 %425 to i64*, !mcsema_real_eip !30 :          <6f>	callq	172
911 :   store i64 -4981261766360305936, i64* %426, !mcsema_real_eip !30 :          <6f>	callq	172
912 :   store i64 %425, i64* %RSP_val, !mcsema_real_eip !30 :          <6f>	callq	172
913 :   %427 = load i64* %RAX_val, !mcsema_real_eip !30 :          <6f>	callq	172
914 :   store i64 %427, i64* %RAX, !mcsema_real_eip !30 :          <6f>	callq	172
915 :   %428 = load i64* %RBX_val, !mcsema_real_eip !30 :          <6f>	callq	172
916 :   store i64 %428, i64* %RBX, !mcsema_real_eip !30 :          <6f>	callq	172
917 :   %429 = load i64* %RCX_val, !mcsema_real_eip !30 :          <6f>	callq	172
918 :   store i64 %429, i64* %RCX, !mcsema_real_eip !30 :          <6f>	callq	172
919 :   %430 = load i64* %RDX_val, !mcsema_real_eip !30 :          <6f>	callq	172
920 :   store i64 %430, i64* %RDX, !mcsema_real_eip !30 :          <6f>	callq	172
921 :   %431 = load i64* %RSI_val, !mcsema_real_eip !30 :          <6f>	callq	172
922 :   store i64 %431, i64* %RSI, !mcsema_real_eip !30 :          <6f>	callq	172
923 :   %432 = load i64* %RDI_val, !mcsema_real_eip !30 :          <6f>	callq	172
924 :   store i64 %432, i64* %RDI, !mcsema_real_eip !30 :          <6f>	callq	172
925 :   %433 = load i64* %RSP_val, !mcsema_real_eip !30 :          <6f>	callq	172
926 :   store i64 %433, i64* %RSP, !mcsema_real_eip !30 :          <6f>	callq	172
927 :   %434 = load i64* %RBP_val, !mcsema_real_eip !30 :          <6f>	callq	172
928 :   store i64 %434, i64* %RBP, !mcsema_real_eip !30 :          <6f>	callq	172
929 :   %435 = load i64* %R8_val, !mcsema_real_eip !30 :          <6f>	callq	172
930 :   store i64 %435, i64* %R8, !mcsema_real_eip !30 :          <6f>	callq	172
931 :   %436 = load i64* %R9_val, !mcsema_real_eip !30 :          <6f>	callq	172
932 :   store i64 %436, i64* %R9, !mcsema_real_eip !30 :          <6f>	callq	172
933 :   %437 = load i64* %R10_val, !mcsema_real_eip !30 :          <6f>	callq	172
934 :   store i64 %437, i64* %R10, !mcsema_real_eip !30 :          <6f>	callq	172
935 :   %438 = load i64* %R11_val, !mcsema_real_eip !30 :          <6f>	callq	172
936 :   store i64 %438, i64* %R11, !mcsema_real_eip !30 :          <6f>	callq	172
937 :   %439 = load i64* %R12_val, !mcsema_real_eip !30 :          <6f>	callq	172
938 :   store i64 %439, i64* %R12, !mcsema_real_eip !30 :          <6f>	callq	172
939 :   %440 = load i64* %R13_val, !mcsema_real_eip !30 :          <6f>	callq	172
940 :   store i64 %440, i64* %R13, !mcsema_real_eip !30 :          <6f>	callq	172
941 :   %441 = load i64* %R14_val, !mcsema_real_eip !30 :          <6f>	callq	172
942 :   store i64 %441, i64* %R14, !mcsema_real_eip !30 :          <6f>	callq	172
943 :   %442 = load i64* %R15_val, !mcsema_real_eip !30 :          <6f>	callq	172
944 :   store i64 %442, i64* %R15, !mcsema_real_eip !30 :          <6f>	callq	172
945 :   %443 = load i64* %RIP_val, !mcsema_real_eip !30 :          <6f>	callq	172
946 :   store i64 %443, i64* %RIP, !mcsema_real_eip !30 :          <6f>	callq	172
947 :   %444 = load i1* %CF_val, !mcsema_real_eip !30 :          <6f>	callq	172
948 :   store i1 %444, i1* %CF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
949 :   %445 = load i1* %PF_val, !mcsema_real_eip !30 :          <6f>	callq	172
950 :   store i1 %445, i1* %PF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
951 :   %446 = load i1* %AF_val, !mcsema_real_eip !30 :          <6f>	callq	172
952 :   store i1 %446, i1* %AF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
953 :   %447 = load i1* %ZF_val, !mcsema_real_eip !30 :          <6f>	callq	172
954 :   store i1 %447, i1* %ZF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
955 :   %448 = load i1* %SF_val, !mcsema_real_eip !30 :          <6f>	callq	172
956 :   store i1 %448, i1* %SF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
957 :   %449 = load i1* %OF_val, !mcsema_real_eip !30 :          <6f>	callq	172
958 :   store i1 %449, i1* %OF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
959 :   %450 = load i1* %DF_val, !mcsema_real_eip !30 :          <6f>	callq	172
960 :   store i1 %450, i1* %DF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
961 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !30 :          <6f>	callq	172
962 :   %451 = load i1* %FPU_B_val, !mcsema_real_eip !30 :          <6f>	callq	172
963 :   store i1 %451, i1* %FPU_B, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
964 :   %452 = load i1* %FPU_C3_val, !mcsema_real_eip !30 :          <6f>	callq	172
965 :   store i1 %452, i1* %FPU_C3, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
966 :   %453 = load i3* %FPU_TOP_val, !mcsema_real_eip !30 :          <6f>	callq	172
967 :   store i3 %453, i3* %FPU_TOP, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
968 :   %454 = load i1* %FPU_C2_val, !mcsema_real_eip !30 :          <6f>	callq	172
969 :   store i1 %454, i1* %FPU_C2, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
970 :   %455 = load i1* %FPU_C1_val, !mcsema_real_eip !30 :          <6f>	callq	172
971 :   store i1 %455, i1* %FPU_C1, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
972 :   %456 = load i1* %FPU_C0_val, !mcsema_real_eip !30 :          <6f>	callq	172
973 :   store i1 %456, i1* %FPU_C0, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
974 :   %457 = load i1* %FPU_ES_val, !mcsema_real_eip !30 :          <6f>	callq	172
975 :   store i1 %457, i1* %FPU_ES, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
976 :   %458 = load i1* %FPU_SF_val, !mcsema_real_eip !30 :          <6f>	callq	172
977 :   store i1 %458, i1* %FPU_SF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
978 :   %459 = load i1* %FPU_PE_val, !mcsema_real_eip !30 :          <6f>	callq	172
979 :   store i1 %459, i1* %FPU_PE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
980 :   %460 = load i1* %FPU_UE_val, !mcsema_real_eip !30 :          <6f>	callq	172
981 :   store i1 %460, i1* %FPU_UE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
982 :   %461 = load i1* %FPU_OE_val, !mcsema_real_eip !30 :          <6f>	callq	172
983 :   store i1 %461, i1* %FPU_OE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
984 :   %462 = load i1* %FPU_ZE_val, !mcsema_real_eip !30 :          <6f>	callq	172
985 :   store i1 %462, i1* %FPU_ZE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
986 :   %463 = load i1* %FPU_DE_val, !mcsema_real_eip !30 :          <6f>	callq	172
987 :   store i1 %463, i1* %FPU_DE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
988 :   %464 = load i1* %FPU_IE_val, !mcsema_real_eip !30 :          <6f>	callq	172
989 :   store i1 %464, i1* %FPU_IE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
990 :   %465 = load i1* %FPU_X_val, !mcsema_real_eip !30 :          <6f>	callq	172
991 :   store i1 %465, i1* %FPU_X, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
992 :   %466 = load i2* %FPU_RC_val, !mcsema_real_eip !30 :          <6f>	callq	172
993 :   store i2 %466, i2* %FPU_RC, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
994 :   %467 = load i2* %FPU_PC_val, !mcsema_real_eip !30 :          <6f>	callq	172
995 :   store i2 %467, i2* %FPU_PC, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
996 :   %468 = load i1* %FPU_PM_val, !mcsema_real_eip !30 :          <6f>	callq	172
997 :   store i1 %468, i1* %FPU_PM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
998 :   %469 = load i1* %FPU_UM_val, !mcsema_real_eip !30 :          <6f>	callq	172
999 :   store i1 %469, i1* %FPU_UM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1000 :   %470 = load i1* %FPU_OM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1001 :   store i1 %470, i1* %FPU_OM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1002 :   %471 = load i1* %FPU_ZM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1003 :   store i1 %471, i1* %FPU_ZM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1004 :   %472 = load i1* %FPU_DM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1005 :   store i1 %472, i1* %FPU_DM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1006 :   %473 = load i1* %FPU_IM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1007 :   store i1 %473, i1* %FPU_IM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172

1008 :   %474 = load i64* %53, align 4 : NIL
1009 :   store i64 %474, i64* %52, align 4 : NIL

1010 :   %475 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !30 :          <6f>	callq	172
1011 :   store i16 %475, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1012 :   %476 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1013 :   store i64 %476, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1014 :   %477 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !30 :          <6f>	callq	172
1015 :   store i16 %477, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1016 :   %478 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1017 :   store i64 %478, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1018 :   %479 = load i128* %XMM0_val, !mcsema_real_eip !30 :          <6f>	callq	172
1019 :   store i128 %479, i128* %XMM0, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1020 :   %480 = load i128* %XMM1_val, !mcsema_real_eip !30 :          <6f>	callq	172
1021 :   store i128 %480, i128* %XMM1, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1022 :   %481 = load i128* %XMM2_val, !mcsema_real_eip !30 :          <6f>	callq	172
1023 :   store i128 %481, i128* %XMM2, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1024 :   %482 = load i128* %XMM3_val, !mcsema_real_eip !30 :          <6f>	callq	172
1025 :   store i128 %482, i128* %XMM3, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1026 :   %483 = load i128* %XMM4_val, !mcsema_real_eip !30 :          <6f>	callq	172
1027 :   store i128 %483, i128* %XMM4, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1028 :   %484 = load i128* %XMM5_val, !mcsema_real_eip !30 :          <6f>	callq	172
1029 :   store i128 %484, i128* %XMM5, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1030 :   %485 = load i128* %XMM6_val, !mcsema_real_eip !30 :          <6f>	callq	172
1031 :   store i128 %485, i128* %XMM6, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1032 :   %486 = load i128* %XMM7_val, !mcsema_real_eip !30 :          <6f>	callq	172
1033 :   store i128 %486, i128* %XMM7, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1034 :   %487 = load i128* %XMM8_val, !mcsema_real_eip !30 :          <6f>	callq	172
1035 :   store i128 %487, i128* %XMM8, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1036 :   %488 = load i128* %XMM9_val, !mcsema_real_eip !30 :          <6f>	callq	172
1037 :   store i128 %488, i128* %XMM9, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1038 :   %489 = load i128* %XMM10_val, !mcsema_real_eip !30 :          <6f>	callq	172
1039 :   store i128 %489, i128* %XMM10, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1040 :   %490 = load i128* %XMM11_val, !mcsema_real_eip !30 :          <6f>	callq	172
1041 :   store i128 %490, i128* %XMM11, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1042 :   %491 = load i128* %XMM12_val, !mcsema_real_eip !30 :          <6f>	callq	172
1043 :   store i128 %491, i128* %XMM12, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1044 :   %492 = load i128* %XMM13_val, !mcsema_real_eip !30 :          <6f>	callq	172
1045 :   store i128 %492, i128* %XMM13, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1046 :   %493 = load i128* %XMM14_val, !mcsema_real_eip !30 :          <6f>	callq	172
1047 :   store i128 %493, i128* %XMM14, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1048 :   %494 = load i128* %XMM15_val, !mcsema_real_eip !30 :          <6f>	callq	172
1049 :   store i128 %494, i128* %XMM15, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1050 :   %495 = load i64* %STACK_BASE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1051 :   store i64 %495, i64* %STACK_BASE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1052 :   %496 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !30 :          <6f>	callq	172
1053 :   store i64 %496, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1054 :   tail call x86_64_sysvcc void @sub_120(%struct.regs* %0), !mcsema_real_eip !30 :          <6f>	callq	172
1055 :   %497 = load i64* %RAX, !mcsema_real_eip !30 :          <6f>	callq	172
1056 :   store i64 %497, i64* %RAX_val, !mcsema_real_eip !30 :          <6f>	callq	172
1057 :   %498 = load i64* %RBX, !mcsema_real_eip !30 :          <6f>	callq	172
1058 :   store i64 %498, i64* %RBX_val, !mcsema_real_eip !30 :          <6f>	callq	172
1059 :   %499 = load i64* %RCX, !mcsema_real_eip !30 :          <6f>	callq	172
1060 :   store i64 %499, i64* %RCX_val, !mcsema_real_eip !30 :          <6f>	callq	172
1061 :   %500 = load i64* %RDX, !mcsema_real_eip !30 :          <6f>	callq	172
1062 :   store i64 %500, i64* %RDX_val, !mcsema_real_eip !30 :          <6f>	callq	172
1063 :   %501 = load i64* %RSI, !mcsema_real_eip !30 :          <6f>	callq	172
1064 :   store i64 %501, i64* %RSI_val, !mcsema_real_eip !30 :          <6f>	callq	172
1065 :   %502 = load i64* %RDI, !mcsema_real_eip !30 :          <6f>	callq	172
1066 :   store i64 %502, i64* %RDI_val, !mcsema_real_eip !30 :          <6f>	callq	172
1067 :   %503 = load i64* %RSP, !mcsema_real_eip !30 :          <6f>	callq	172
1068 :   store i64 %503, i64* %RSP_val, !mcsema_real_eip !30 :          <6f>	callq	172
1069 :   %504 = load i64* %RBP, !mcsema_real_eip !30 :          <6f>	callq	172
1070 :   store i64 %504, i64* %RBP_val, !mcsema_real_eip !30 :          <6f>	callq	172
1071 :   %505 = load i64* %R8, !mcsema_real_eip !30 :          <6f>	callq	172
1072 :   store i64 %505, i64* %R8_val, !mcsema_real_eip !30 :          <6f>	callq	172
1073 :   %506 = load i64* %R9, !mcsema_real_eip !30 :          <6f>	callq	172
1074 :   store i64 %506, i64* %R9_val, !mcsema_real_eip !30 :          <6f>	callq	172
1075 :   %507 = load i64* %R10, !mcsema_real_eip !30 :          <6f>	callq	172
1076 :   store i64 %507, i64* %R10_val, !mcsema_real_eip !30 :          <6f>	callq	172
1077 :   %508 = load i64* %R11, !mcsema_real_eip !30 :          <6f>	callq	172
1078 :   store i64 %508, i64* %R11_val, !mcsema_real_eip !30 :          <6f>	callq	172
1079 :   %509 = load i64* %R12, !mcsema_real_eip !30 :          <6f>	callq	172
1080 :   store i64 %509, i64* %R12_val, !mcsema_real_eip !30 :          <6f>	callq	172
1081 :   %510 = load i64* %R13, !mcsema_real_eip !30 :          <6f>	callq	172
1082 :   store i64 %510, i64* %R13_val, !mcsema_real_eip !30 :          <6f>	callq	172
1083 :   %511 = load i64* %R14, !mcsema_real_eip !30 :          <6f>	callq	172
1084 :   store i64 %511, i64* %R14_val, !mcsema_real_eip !30 :          <6f>	callq	172
1085 :   %512 = load i64* %R15, !mcsema_real_eip !30 :          <6f>	callq	172
1086 :   store i64 %512, i64* %R15_val, !mcsema_real_eip !30 :          <6f>	callq	172
1087 :   %513 = load i64* %RIP, !mcsema_real_eip !30 :          <6f>	callq	172
1088 :   store i64 %513, i64* %RIP_val, !mcsema_real_eip !30 :          <6f>	callq	172
1089 :   %514 = load i1* %CF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1090 :   store i1 %514, i1* %CF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1091 :   %515 = load i1* %PF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1092 :   store i1 %515, i1* %PF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1093 :   %516 = load i1* %AF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1094 :   store i1 %516, i1* %AF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1095 :   %517 = load i1* %ZF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1096 :   store i1 %517, i1* %ZF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1097 :   %518 = load i1* %SF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1098 :   store i1 %518, i1* %SF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1099 :   %519 = load i1* %OF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1100 :   store i1 %519, i1* %OF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1101 :   %520 = load i1* %DF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1102 :   store i1 %520, i1* %DF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1103 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !30 :          <6f>	callq	172
1104 :   %521 = load i1* %FPU_B, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1105 :   store i1 %521, i1* %FPU_B_val, !mcsema_real_eip !30 :          <6f>	callq	172
1106 :   %522 = load i1* %FPU_C3, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1107 :   store i1 %522, i1* %FPU_C3_val, !mcsema_real_eip !30 :          <6f>	callq	172
1108 :   %523 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1109 :   store i3 %523, i3* %FPU_TOP_val, !mcsema_real_eip !30 :          <6f>	callq	172
1110 :   %524 = load i1* %FPU_C2, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1111 :   store i1 %524, i1* %FPU_C2_val, !mcsema_real_eip !30 :          <6f>	callq	172
1112 :   %525 = load i1* %FPU_C1, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1113 :   store i1 %525, i1* %FPU_C1_val, !mcsema_real_eip !30 :          <6f>	callq	172
1114 :   %526 = load i1* %FPU_C0, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1115 :   store i1 %526, i1* %FPU_C0_val, !mcsema_real_eip !30 :          <6f>	callq	172
1116 :   %527 = load i1* %FPU_ES, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1117 :   store i1 %527, i1* %FPU_ES_val, !mcsema_real_eip !30 :          <6f>	callq	172
1118 :   %528 = load i1* %FPU_SF, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1119 :   store i1 %528, i1* %FPU_SF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1120 :   %529 = load i1* %FPU_PE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1121 :   store i1 %529, i1* %FPU_PE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1122 :   %530 = load i1* %FPU_UE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1123 :   store i1 %530, i1* %FPU_UE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1124 :   %531 = load i1* %FPU_OE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1125 :   store i1 %531, i1* %FPU_OE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1126 :   %532 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1127 :   store i1 %532, i1* %FPU_ZE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1128 :   %533 = load i1* %FPU_DE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1129 :   store i1 %533, i1* %FPU_DE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1130 :   %534 = load i1* %FPU_IE, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1131 :   store i1 %534, i1* %FPU_IE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1132 :   %535 = load i1* %FPU_X, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1133 :   store i1 %535, i1* %FPU_X_val, !mcsema_real_eip !30 :          <6f>	callq	172
1134 :   %536 = load i2* %FPU_RC, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1135 :   store i2 %536, i2* %FPU_RC_val, !mcsema_real_eip !30 :          <6f>	callq	172
1136 :   %537 = load i2* %FPU_PC, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1137 :   store i2 %537, i2* %FPU_PC_val, !mcsema_real_eip !30 :          <6f>	callq	172
1138 :   %538 = load i1* %FPU_PM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1139 :   store i1 %538, i1* %FPU_PM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1140 :   %539 = load i1* %FPU_UM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1141 :   store i1 %539, i1* %FPU_UM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1142 :   %540 = load i1* %FPU_OM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1143 :   store i1 %540, i1* %FPU_OM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1144 :   %541 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1145 :   store i1 %541, i1* %FPU_ZM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1146 :   %542 = load i1* %FPU_DM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1147 :   store i1 %542, i1* %FPU_DM_val, !mcsema_real_eip !30 :          <6f>	callq	172
1148 :   %543 = load i1* %FPU_IM, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1149 :   store i1 %543, i1* %FPU_IM_val, !mcsema_real_eip !30 :          <6f>	callq	172

1150 :   %544 = load i64* %52, align 4 : NIL
1151 :   store i64 %544, i64* %53, align 4 : NIL

1152 :   %545 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1153 :   store i16 %545, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !30 :          <6f>	callq	172
1154 :   %546 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !30 :          <6f>	callq	172
1155 :   store i64 %546, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1156 :   %547 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1157 :   store i16 %547, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !30 :          <6f>	callq	172
1158 :   %548 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !30 :          <6f>	callq	172
1159 :   store i64 %548, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !30 :          <6f>	callq	172
1160 :   %549 = load i128* %XMM0, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1161 :   store i128 %549, i128* %XMM0_val, !mcsema_real_eip !30 :          <6f>	callq	172
1162 :   %550 = load i128* %XMM1, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1163 :   store i128 %550, i128* %XMM1_val, !mcsema_real_eip !30 :          <6f>	callq	172
1164 :   %551 = load i128* %XMM2, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1165 :   store i128 %551, i128* %XMM2_val, !mcsema_real_eip !30 :          <6f>	callq	172
1166 :   %552 = load i128* %XMM3, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1167 :   store i128 %552, i128* %XMM3_val, !mcsema_real_eip !30 :          <6f>	callq	172
1168 :   %553 = load i128* %XMM4, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1169 :   store i128 %553, i128* %XMM4_val, !mcsema_real_eip !30 :          <6f>	callq	172
1170 :   %554 = load i128* %XMM5, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1171 :   store i128 %554, i128* %XMM5_val, !mcsema_real_eip !30 :          <6f>	callq	172
1172 :   %555 = load i128* %XMM6, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1173 :   store i128 %555, i128* %XMM6_val, !mcsema_real_eip !30 :          <6f>	callq	172
1174 :   %556 = load i128* %XMM7, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1175 :   store i128 %556, i128* %XMM7_val, !mcsema_real_eip !30 :          <6f>	callq	172
1176 :   %557 = load i128* %XMM8, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1177 :   store i128 %557, i128* %XMM8_val, !mcsema_real_eip !30 :          <6f>	callq	172
1178 :   %558 = load i128* %XMM9, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1179 :   store i128 %558, i128* %XMM9_val, !mcsema_real_eip !30 :          <6f>	callq	172
1180 :   %559 = load i128* %XMM10, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1181 :   store i128 %559, i128* %XMM10_val, !mcsema_real_eip !30 :          <6f>	callq	172
1182 :   %560 = load i128* %XMM11, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1183 :   store i128 %560, i128* %XMM11_val, !mcsema_real_eip !30 :          <6f>	callq	172
1184 :   %561 = load i128* %XMM12, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1185 :   store i128 %561, i128* %XMM12_val, !mcsema_real_eip !30 :          <6f>	callq	172
1186 :   %562 = load i128* %XMM13, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1187 :   store i128 %562, i128* %XMM13_val, !mcsema_real_eip !30 :          <6f>	callq	172
1188 :   %563 = load i128* %XMM14, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1189 :   store i128 %563, i128* %XMM14_val, !mcsema_real_eip !30 :          <6f>	callq	172
1190 :   %564 = load i128* %XMM15, align 1, !mcsema_real_eip !30 :          <6f>	callq	172
1191 :   store i128 %564, i128* %XMM15_val, !mcsema_real_eip !30 :          <6f>	callq	172
1192 :   %565 = load i64* %STACK_BASE, !mcsema_real_eip !30 :          <6f>	callq	172
1193 :   store i64 %565, i64* %STACK_BASE_val, !mcsema_real_eip !30 :          <6f>	callq	172
1194 :   %566 = load i64* %STACK_LIMIT, !mcsema_real_eip !30 :          <6f>	callq	172
1195 :   store i64 %566, i64* %STACK_LIMIT_val, !mcsema_real_eip !30 :          <6f>	callq	172

1196 :   br label %block_0x79, !mcsema_real_eip !31 :          <74>	jmp	0

1197 :   %567 = load i64* %RBP_val, !mcsema_real_eip !32 :          <79>	movl	-16(%rbp), %eax
1198 :   %568 = add i64 %567, -16, !mcsema_real_eip !32 :          <79>	movl	-16(%rbp), %eax
1199 :   %569 = inttoptr i64 %568 to i64*, !mcsema_real_eip !32 :          <79>	movl	-16(%rbp), %eax

1200 :   %570 = bitcast i64* %569 to i32* : NIL

1201 :   %571 = load i32* %570, !mcsema_real_eip !32 :          <79>	movl	-16(%rbp), %eax

1202 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %571, i32 1) : NIL
1203 :   %572 = extractvalue { i32, i1 } %uadd, 0 : NIL

1204 :   %573 = xor i32 %572, %571, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1205 :   %574 = and i32 %573, 16, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1206 :   %575 = icmp ne i32 %574, 0, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1207 :   store i1 %575, i1* %AF_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax

1208 :   %576 = icmp slt i32 %572, 0 : NIL

1209 :   store i1 %576, i1* %SF_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1210 :   %577 = icmp eq i32 %572, 0, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1211 :   store i1 %577, i1* %ZF_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1212 :   %578 = xor i32 %571, -2147483648, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1213 :   %579 = and i32 %573, %578, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax

1214 :   %580 = icmp slt i32 %579, 0 : NIL

1215 :   store i1 %580, i1* %OF_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1216 :   %581 = trunc i32 %572 to i8, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1217 :   %582 = tail call i8 @llvm.ctpop.i8(i8 %581), !mcsema_real_eip !33 :          <7c>	addl	$1, %eax

1218 :   %583 = and i8 %582, 1 : NIL
1219 :   %584 = icmp eq i8 %583, 0 : NIL

1220 :   store i1 %584, i1* %PF_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax

1221 :   %585 = extractvalue { i32, i1 } %uadd, 1 : NIL

1222 :   store i1 %585, i1* %CF_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1223 :   %586 = zext i32 %572 to i64, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax
1224 :   store i64 %586, i64* %RAX_val, !mcsema_real_eip !33 :          <7c>	addl	$1, %eax

1225 :   %587 = load i64* %RBP_val, !mcsema_real_eip !34 :          <81>	movl	%eax, -16(%rbp)
1226 :   %588 = add i64 %587, -16, !mcsema_real_eip !34 :          <81>	movl	%eax, -16(%rbp)
1227 :   %589 = inttoptr i64 %588 to i64*, !mcsema_real_eip !34 :          <81>	movl	%eax, -16(%rbp)

1228 :   %590 = bitcast i64* %589 to i32* : NIL

1229 :   store i32 %572, i32* %590, !mcsema_real_eip !34 :          <81>	movl	%eax, -16(%rbp)

1230 :   %591 = load i64* %RBP_val, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
1231 :   %592 = add i64 %591, -16, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
1232 :   %593 = inttoptr i64 %592 to i64*, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax

1233 :   %594 = bitcast i64* %593 to i32* : NIL

1234 :   %595 = load i32* %594, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
1235 :   %596 = zext i32 %595 to i64, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax
1236 :   store i64 %596, i64* %RAX_val, !mcsema_real_eip !12 :          <37>	movl	-16(%rbp), %eax

1237 :   %597 = load i64* %RBP_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1238 :   %598 = add i64 %597, -12, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1239 :   %599 = inttoptr i64 %598 to i64*, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

1240 :   %600 = bitcast i64* %599 to i32* : NIL

1241 :   %601 = load i32* %600, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1242 :   %602 = sub i32 %595, %601, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1243 :   %603 = xor i32 %602, %595, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1244 :   %604 = xor i32 %603, %601, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1245 :   %605 = and i32 %604, 16, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1246 :   %606 = icmp ne i32 %605, 0, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1247 :   store i1 %606, i1* %AF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1248 :   %607 = trunc i32 %602 to i8, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1249 :   %608 = tail call i8 @llvm.ctpop.i8(i8 %607), !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

1250 :   %609 = and i8 %608, 1 : NIL
1251 :   %610 = icmp eq i8 %609, 0 : NIL

1252 :   store i1 %610, i1* %PF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

1253 :   %611 = icmp eq i32 %595, %601 : NIL

1254 :   store i1 %611, i1* %ZF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

1255 :   %612 = icmp slt i32 %602, 0 : NIL

1256 :   store i1 %612, i1* %SF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1257 :   %613 = icmp ult i32 %595, %601, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1258 :   store i1 %613, i1* %CF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1259 :   %614 = xor i32 %601, %595, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax
1260 :   %615 = and i32 %603, %614, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

1261 :   %616 = icmp slt i32 %615, 0 : NIL

1262 :   store i1 %616, i1* %OF_val, !mcsema_real_eip !13 :          <3a>	cmpl	-12(%rbp), %eax

1263 :   %617 = load i1* %SF_val, !mcsema_real_eip !14 :          <3d>	jge	70

1264 :   %tmp349 = xor i1 %617, %616 : NIL

1265 :   br i1 %tmp349, label %block_0x43, label %block_0x89.loopexit, !mcsema_real_eip !14 :          <3d>	jge	70
========================================================
Source line mapping for function: sub_120
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <120>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <120>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <120>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <120>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <120>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <120>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <120>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <120>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <120>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <120>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <120>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <120>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <120>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <120>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <120>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <120>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <120>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <120>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <120>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <120>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <120>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <120>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <120>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <120>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <120>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <120>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <120>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <120>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <120>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <120>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <120>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <120>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <120>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <120>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <120>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <120>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <120>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <120>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <120>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <120>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <120>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <120>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <120>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <120>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <120>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <120>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <120>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <120>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <120>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <120>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <120>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <120>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <120>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <120>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <120>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <120>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <120>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <120>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <120>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <120>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <120>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <120>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <120>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <120>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <120>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <120>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <120>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <120>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <120>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <120>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <120>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <120>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <120>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <120>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <120>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <120>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <120>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <120>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <120>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <120>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <120>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <120>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <120>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <120>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <120>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <120>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <120>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <120>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <120>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <120>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <120>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <120>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <120>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <120>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <120>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <120>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <120>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <120>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <120>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <120>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <120>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <120>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <120>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <120>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <120>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <120>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <121>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, -16, !mcsema_real_eip !4 :          <124>	movq	%rdi, -8(%rbp)
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <124>	movq	%rdi, -8(%rbp)
297 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <124>	movq	%rdi, -8(%rbp)
298 :   store i64 %83, i64* %82, !mcsema_real_eip !4 :          <124>	movq	%rdi, -8(%rbp)

299 :   %84 = load i64* %RBP_val, !mcsema_real_eip !5 :          <128>	movq	%rsi, -16(%rbp)
300 :   %85 = add i64 %84, -16, !mcsema_real_eip !5 :          <128>	movq	%rsi, -16(%rbp)
301 :   %86 = inttoptr i64 %85 to i64*, !mcsema_real_eip !5 :          <128>	movq	%rsi, -16(%rbp)
302 :   %87 = load i64* %RSI_val, !mcsema_real_eip !5 :          <128>	movq	%rsi, -16(%rbp)
303 :   store i64 %87, i64* %86, !mcsema_real_eip !5 :          <128>	movq	%rsi, -16(%rbp)

304 :   %88 = load i64* %RBP_val, !mcsema_real_eip !6 :          <12c>	movq	-8(%rbp), %rsi
305 :   %89 = add i64 %88, -8, !mcsema_real_eip !6 :          <12c>	movq	-8(%rbp), %rsi
306 :   %90 = inttoptr i64 %89 to i64*, !mcsema_real_eip !6 :          <12c>	movq	-8(%rbp), %rsi
307 :   %91 = load i64* %90, !mcsema_real_eip !6 :          <12c>	movq	-8(%rbp), %rsi
308 :   store i64 %91, i64* %RSI_val, !mcsema_real_eip !6 :          <12c>	movq	-8(%rbp), %rsi

309 :   %92 = add i64 %88, -24, !mcsema_real_eip !7 :          <130>	movq	%rsi, -24(%rbp)
310 :   %93 = inttoptr i64 %92 to i64*, !mcsema_real_eip !7 :          <130>	movq	%rsi, -24(%rbp)
311 :   store i64 %91, i64* %93, !mcsema_real_eip !7 :          <130>	movq	%rsi, -24(%rbp)

312 :   %94 = load i64* %RBP_val, !mcsema_real_eip !8 :          <134>	movq	-16(%rbp), %rsi
313 :   %95 = add i64 %94, -16, !mcsema_real_eip !8 :          <134>	movq	-16(%rbp), %rsi
314 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !8 :          <134>	movq	-16(%rbp), %rsi
315 :   %97 = load i64* %96, !mcsema_real_eip !8 :          <134>	movq	-16(%rbp), %rsi
316 :   store i64 %97, i64* %RSI_val, !mcsema_real_eip !8 :          <134>	movq	-16(%rbp), %rsi

317 :   %98 = add i64 %94, -32, !mcsema_real_eip !9 :          <138>	movq	%rsi, -32(%rbp)
318 :   %99 = inttoptr i64 %98 to i64*, !mcsema_real_eip !9 :          <138>	movq	%rsi, -32(%rbp)
319 :   store i64 %97, i64* %99, !mcsema_real_eip !9 :          <138>	movq	%rsi, -32(%rbp)

320 :   %100 = load i64* %RBP_val, !mcsema_real_eip !10 :          <13c>	movq	-24(%rbp), %rsi
321 :   %101 = add i64 %100, -24, !mcsema_real_eip !10 :          <13c>	movq	-24(%rbp), %rsi
322 :   %102 = inttoptr i64 %101 to i64*, !mcsema_real_eip !10 :          <13c>	movq	-24(%rbp), %rsi
323 :   %103 = load i64* %102, !mcsema_real_eip !10 :          <13c>	movq	-24(%rbp), %rsi
324 :   store i64 %103, i64* %RSI_val, !mcsema_real_eip !10 :          <13c>	movq	-24(%rbp), %rsi

325 :   %104 = inttoptr i64 %103 to i64*, !mcsema_real_eip !11 :          <140>	movb	(%rsi), %al

326 :   %105 = bitcast i64* %104 to i8* : NIL

327 :   %106 = load i8* %105, !mcsema_real_eip !11 :          <140>	movb	(%rsi), %al
328 :   %107 = zext i8 %106 to i64, !mcsema_real_eip !11 :          <140>	movb	(%rsi), %al
329 :   %108 = load i64* %RAX_val, !mcsema_real_eip !11 :          <140>	movb	(%rsi), %al
330 :   %109 = and i64 %108, -256, !mcsema_real_eip !11 :          <140>	movb	(%rsi), %al

331 :   %110 = or i64 %109, %107 : NIL

332 :   store i64 %110, i64* %RAX_val, !mcsema_real_eip !11 :          <140>	movb	(%rsi), %al

333 :   %111 = load i64* %RBP_val, !mcsema_real_eip !12 :          <142>	movb	%al, -33(%rbp)
334 :   %112 = add i64 %111, -33, !mcsema_real_eip !12 :          <142>	movb	%al, -33(%rbp)
335 :   %113 = inttoptr i64 %112 to i64*, !mcsema_real_eip !12 :          <142>	movb	%al, -33(%rbp)

336 :   %114 = bitcast i64* %113 to i8* : NIL

337 :   store i8 %106, i8* %114, !mcsema_real_eip !12 :          <142>	movb	%al, -33(%rbp)

338 :   %115 = load i64* %RBP_val, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
339 :   %116 = add i64 %115, -33, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
340 :   %117 = inttoptr i64 %116 to i64*, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax

341 :   %118 = bitcast i64* %117 to i8* : NIL

342 :   %119 = load i8* %118, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
343 :   %120 = sext i8 %119 to i32, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
344 :   %121 = zext i32 %120 to i64, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
345 :   store i64 %121, i64* %RAX_val, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax

346 :   store i1 false, i1* %AF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax
347 :   %122 = tail call i8 @llvm.ctpop.i8(i8 %119), !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

348 :   %123 = and i8 %122, 1 : NIL
349 :   %124 = icmp eq i8 %123, 0 : NIL

350 :   store i1 %124, i1* %PF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

351 :   %125 = icmp eq i8 %119, 0 : NIL

352 :   store i1 %125, i1* %ZF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

353 :   %126 = icmp slt i8 %119, 0 : NIL

354 :   store i1 %126, i1* %SF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax
355 :   store i1 false, i1* %CF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax
356 :   store i1 false, i1* %OF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

357 :   br i1 %125, label %block_0x1a2, label %block_0x154.preheader, !mcsema_real_eip !15 :          <14e>	je	78

358 :   br label %block_0x154 : NIL
359 :   br label %block_0x1a2 : NIL

360 :   %127 = load i64* %RSP_val, !mcsema_real_eip !16 :          <1a2>	popq	%rbp
361 :   %128 = inttoptr i64 %127 to i64*, !mcsema_real_eip !16 :          <1a2>	popq	%rbp
362 :   %129 = load i64* %128, !mcsema_real_eip !16 :          <1a2>	popq	%rbp
363 :   store i64 %129, i64* %RBP_val, !mcsema_real_eip !16 :          <1a2>	popq	%rbp

364 :   %130 = add i64 %127, 16, !mcsema_real_eip !17 :          <1a3>	retq
365 :   store i64 %130, i64* %RSP_val, !mcsema_real_eip !17 :          <1a3>	retq
366 :   %131 = load i64* %RAX_val, !mcsema_real_eip !17 :          <1a3>	retq
367 :   store i64 %131, i64* %RAX, !mcsema_real_eip !17 :          <1a3>	retq
368 :   %132 = load i64* %RBX_val, !mcsema_real_eip !17 :          <1a3>	retq
369 :   store i64 %132, i64* %RBX, !mcsema_real_eip !17 :          <1a3>	retq
370 :   %133 = load i64* %RCX_val, !mcsema_real_eip !17 :          <1a3>	retq
371 :   store i64 %133, i64* %RCX, !mcsema_real_eip !17 :          <1a3>	retq
372 :   %134 = load i64* %RDX_val, !mcsema_real_eip !17 :          <1a3>	retq
373 :   store i64 %134, i64* %RDX, !mcsema_real_eip !17 :          <1a3>	retq
374 :   %135 = load i64* %RSI_val, !mcsema_real_eip !17 :          <1a3>	retq
375 :   store i64 %135, i64* %RSI, !mcsema_real_eip !17 :          <1a3>	retq
376 :   %136 = load i64* %RDI_val, !mcsema_real_eip !17 :          <1a3>	retq
377 :   store i64 %136, i64* %RDI, !mcsema_real_eip !17 :          <1a3>	retq
378 :   %137 = load i64* %RSP_val, !mcsema_real_eip !17 :          <1a3>	retq
379 :   store i64 %137, i64* %RSP, !mcsema_real_eip !17 :          <1a3>	retq
380 :   %138 = load i64* %RBP_val, !mcsema_real_eip !17 :          <1a3>	retq
381 :   store i64 %138, i64* %RBP, !mcsema_real_eip !17 :          <1a3>	retq
382 :   %139 = load i64* %R8_val, !mcsema_real_eip !17 :          <1a3>	retq
383 :   store i64 %139, i64* %R8, !mcsema_real_eip !17 :          <1a3>	retq
384 :   %140 = load i64* %R9_val, !mcsema_real_eip !17 :          <1a3>	retq
385 :   store i64 %140, i64* %R9, !mcsema_real_eip !17 :          <1a3>	retq
386 :   %141 = load i64* %R10_val, !mcsema_real_eip !17 :          <1a3>	retq
387 :   store i64 %141, i64* %R10, !mcsema_real_eip !17 :          <1a3>	retq
388 :   %142 = load i64* %R11_val, !mcsema_real_eip !17 :          <1a3>	retq
389 :   store i64 %142, i64* %R11, !mcsema_real_eip !17 :          <1a3>	retq
390 :   %143 = load i64* %R12_val, !mcsema_real_eip !17 :          <1a3>	retq
391 :   store i64 %143, i64* %R12, !mcsema_real_eip !17 :          <1a3>	retq
392 :   %144 = load i64* %R13_val, !mcsema_real_eip !17 :          <1a3>	retq
393 :   store i64 %144, i64* %R13, !mcsema_real_eip !17 :          <1a3>	retq
394 :   %145 = load i64* %R14_val, !mcsema_real_eip !17 :          <1a3>	retq
395 :   store i64 %145, i64* %R14, !mcsema_real_eip !17 :          <1a3>	retq
396 :   %146 = load i64* %R15_val, !mcsema_real_eip !17 :          <1a3>	retq
397 :   store i64 %146, i64* %R15, !mcsema_real_eip !17 :          <1a3>	retq
398 :   %147 = load i64* %RIP_val, !mcsema_real_eip !17 :          <1a3>	retq
399 :   store i64 %147, i64* %RIP, !mcsema_real_eip !17 :          <1a3>	retq
400 :   %148 = load i1* %CF_val, !mcsema_real_eip !17 :          <1a3>	retq
401 :   store i1 %148, i1* %CF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
402 :   %149 = load i1* %PF_val, !mcsema_real_eip !17 :          <1a3>	retq
403 :   store i1 %149, i1* %PF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
404 :   %150 = load i1* %AF_val, !mcsema_real_eip !17 :          <1a3>	retq
405 :   store i1 %150, i1* %AF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
406 :   %151 = load i1* %ZF_val, !mcsema_real_eip !17 :          <1a3>	retq
407 :   store i1 %151, i1* %ZF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
408 :   %152 = load i1* %SF_val, !mcsema_real_eip !17 :          <1a3>	retq
409 :   store i1 %152, i1* %SF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
410 :   %153 = load i1* %OF_val, !mcsema_real_eip !17 :          <1a3>	retq
411 :   store i1 %153, i1* %OF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
412 :   %154 = load i1* %DF_val, !mcsema_real_eip !17 :          <1a3>	retq
413 :   store i1 %154, i1* %DF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
414 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !17 :          <1a3>	retq
415 :   %155 = load i1* %FPU_B_val, !mcsema_real_eip !17 :          <1a3>	retq
416 :   store i1 %155, i1* %FPU_B, align 1, !mcsema_real_eip !17 :          <1a3>	retq
417 :   %156 = load i1* %FPU_C3_val, !mcsema_real_eip !17 :          <1a3>	retq
418 :   store i1 %156, i1* %FPU_C3, align 1, !mcsema_real_eip !17 :          <1a3>	retq
419 :   %157 = load i3* %FPU_TOP_val, !mcsema_real_eip !17 :          <1a3>	retq
420 :   store i3 %157, i3* %FPU_TOP, align 1, !mcsema_real_eip !17 :          <1a3>	retq
421 :   %158 = load i1* %FPU_C2_val, !mcsema_real_eip !17 :          <1a3>	retq
422 :   store i1 %158, i1* %FPU_C2, align 1, !mcsema_real_eip !17 :          <1a3>	retq
423 :   %159 = load i1* %FPU_C1_val, !mcsema_real_eip !17 :          <1a3>	retq
424 :   store i1 %159, i1* %FPU_C1, align 1, !mcsema_real_eip !17 :          <1a3>	retq
425 :   %160 = load i1* %FPU_C0_val, !mcsema_real_eip !17 :          <1a3>	retq
426 :   store i1 %160, i1* %FPU_C0, align 1, !mcsema_real_eip !17 :          <1a3>	retq
427 :   %161 = load i1* %FPU_ES_val, !mcsema_real_eip !17 :          <1a3>	retq
428 :   store i1 %161, i1* %FPU_ES, align 1, !mcsema_real_eip !17 :          <1a3>	retq
429 :   %162 = load i1* %FPU_SF_val, !mcsema_real_eip !17 :          <1a3>	retq
430 :   store i1 %162, i1* %FPU_SF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
431 :   %163 = load i1* %FPU_PE_val, !mcsema_real_eip !17 :          <1a3>	retq
432 :   store i1 %163, i1* %FPU_PE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
433 :   %164 = load i1* %FPU_UE_val, !mcsema_real_eip !17 :          <1a3>	retq
434 :   store i1 %164, i1* %FPU_UE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
435 :   %165 = load i1* %FPU_OE_val, !mcsema_real_eip !17 :          <1a3>	retq
436 :   store i1 %165, i1* %FPU_OE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
437 :   %166 = load i1* %FPU_ZE_val, !mcsema_real_eip !17 :          <1a3>	retq
438 :   store i1 %166, i1* %FPU_ZE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
439 :   %167 = load i1* %FPU_DE_val, !mcsema_real_eip !17 :          <1a3>	retq
440 :   store i1 %167, i1* %FPU_DE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
441 :   %168 = load i1* %FPU_IE_val, !mcsema_real_eip !17 :          <1a3>	retq
442 :   store i1 %168, i1* %FPU_IE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
443 :   %169 = load i1* %FPU_X_val, !mcsema_real_eip !17 :          <1a3>	retq
444 :   store i1 %169, i1* %FPU_X, align 1, !mcsema_real_eip !17 :          <1a3>	retq
445 :   %170 = load i2* %FPU_RC_val, !mcsema_real_eip !17 :          <1a3>	retq
446 :   store i2 %170, i2* %FPU_RC, align 1, !mcsema_real_eip !17 :          <1a3>	retq
447 :   %171 = load i2* %FPU_PC_val, !mcsema_real_eip !17 :          <1a3>	retq
448 :   store i2 %171, i2* %FPU_PC, align 1, !mcsema_real_eip !17 :          <1a3>	retq
449 :   %172 = load i1* %FPU_PM_val, !mcsema_real_eip !17 :          <1a3>	retq
450 :   store i1 %172, i1* %FPU_PM, align 1, !mcsema_real_eip !17 :          <1a3>	retq
451 :   %173 = load i1* %FPU_UM_val, !mcsema_real_eip !17 :          <1a3>	retq
452 :   store i1 %173, i1* %FPU_UM, align 1, !mcsema_real_eip !17 :          <1a3>	retq
453 :   %174 = load i1* %FPU_OM_val, !mcsema_real_eip !17 :          <1a3>	retq
454 :   store i1 %174, i1* %FPU_OM, align 1, !mcsema_real_eip !17 :          <1a3>	retq
455 :   %175 = load i1* %FPU_ZM_val, !mcsema_real_eip !17 :          <1a3>	retq
456 :   store i1 %175, i1* %FPU_ZM, align 1, !mcsema_real_eip !17 :          <1a3>	retq
457 :   %176 = load i1* %FPU_DM_val, !mcsema_real_eip !17 :          <1a3>	retq
458 :   store i1 %176, i1* %FPU_DM, align 1, !mcsema_real_eip !17 :          <1a3>	retq
459 :   %177 = load i1* %FPU_IM_val, !mcsema_real_eip !17 :          <1a3>	retq
460 :   store i1 %177, i1* %FPU_IM, align 1, !mcsema_real_eip !17 :          <1a3>	retq

461 :   %178 = load i64* %53, align 4 : NIL
462 :   store i64 %178, i64* %52, align 4 : NIL

463 :   %179 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !17 :          <1a3>	retq
464 :   store i16 %179, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !17 :          <1a3>	retq
465 :   %180 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !17 :          <1a3>	retq
466 :   store i64 %180, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
467 :   %181 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !17 :          <1a3>	retq
468 :   store i16 %181, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !17 :          <1a3>	retq
469 :   %182 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !17 :          <1a3>	retq
470 :   store i64 %182, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !17 :          <1a3>	retq
471 :   %183 = load i128* %XMM0_val, !mcsema_real_eip !17 :          <1a3>	retq
472 :   store i128 %183, i128* %XMM0, align 1, !mcsema_real_eip !17 :          <1a3>	retq
473 :   %184 = load i128* %XMM1_val, !mcsema_real_eip !17 :          <1a3>	retq
474 :   store i128 %184, i128* %XMM1, align 1, !mcsema_real_eip !17 :          <1a3>	retq
475 :   %185 = load i128* %XMM2_val, !mcsema_real_eip !17 :          <1a3>	retq
476 :   store i128 %185, i128* %XMM2, align 1, !mcsema_real_eip !17 :          <1a3>	retq
477 :   %186 = load i128* %XMM3_val, !mcsema_real_eip !17 :          <1a3>	retq
478 :   store i128 %186, i128* %XMM3, align 1, !mcsema_real_eip !17 :          <1a3>	retq
479 :   %187 = load i128* %XMM4_val, !mcsema_real_eip !17 :          <1a3>	retq
480 :   store i128 %187, i128* %XMM4, align 1, !mcsema_real_eip !17 :          <1a3>	retq
481 :   %188 = load i128* %XMM5_val, !mcsema_real_eip !17 :          <1a3>	retq
482 :   store i128 %188, i128* %XMM5, align 1, !mcsema_real_eip !17 :          <1a3>	retq
483 :   %189 = load i128* %XMM6_val, !mcsema_real_eip !17 :          <1a3>	retq
484 :   store i128 %189, i128* %XMM6, align 1, !mcsema_real_eip !17 :          <1a3>	retq
485 :   %190 = load i128* %XMM7_val, !mcsema_real_eip !17 :          <1a3>	retq
486 :   store i128 %190, i128* %XMM7, align 1, !mcsema_real_eip !17 :          <1a3>	retq
487 :   %191 = load i128* %XMM8_val, !mcsema_real_eip !17 :          <1a3>	retq
488 :   store i128 %191, i128* %XMM8, align 1, !mcsema_real_eip !17 :          <1a3>	retq
489 :   %192 = load i128* %XMM9_val, !mcsema_real_eip !17 :          <1a3>	retq
490 :   store i128 %192, i128* %XMM9, align 1, !mcsema_real_eip !17 :          <1a3>	retq
491 :   %193 = load i128* %XMM10_val, !mcsema_real_eip !17 :          <1a3>	retq
492 :   store i128 %193, i128* %XMM10, align 1, !mcsema_real_eip !17 :          <1a3>	retq
493 :   %194 = load i128* %XMM11_val, !mcsema_real_eip !17 :          <1a3>	retq
494 :   store i128 %194, i128* %XMM11, align 1, !mcsema_real_eip !17 :          <1a3>	retq
495 :   %195 = load i128* %XMM12_val, !mcsema_real_eip !17 :          <1a3>	retq
496 :   store i128 %195, i128* %XMM12, align 1, !mcsema_real_eip !17 :          <1a3>	retq
497 :   %196 = load i128* %XMM13_val, !mcsema_real_eip !17 :          <1a3>	retq
498 :   store i128 %196, i128* %XMM13, align 1, !mcsema_real_eip !17 :          <1a3>	retq
499 :   %197 = load i128* %XMM14_val, !mcsema_real_eip !17 :          <1a3>	retq
500 :   store i128 %197, i128* %XMM14, align 1, !mcsema_real_eip !17 :          <1a3>	retq
501 :   %198 = load i128* %XMM15_val, !mcsema_real_eip !17 :          <1a3>	retq
502 :   store i128 %198, i128* %XMM15, align 1, !mcsema_real_eip !17 :          <1a3>	retq
503 :   %199 = load i64* %STACK_BASE_val, !mcsema_real_eip !17 :          <1a3>	retq
504 :   store i64 %199, i64* %STACK_BASE, align 1, !mcsema_real_eip !17 :          <1a3>	retq
505 :   %200 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !17 :          <1a3>	retq
506 :   store i64 %200, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !17 :          <1a3>	retq
507 :   ret void, !mcsema_real_eip !17 :          <1a3>	retq

508 :   %201 = load i64* %RBP_val, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax
509 :   %202 = add i64 %201, -33, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax
510 :   %203 = inttoptr i64 %202 to i64*, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax

511 :   %204 = bitcast i64* %203 to i8* : NIL

512 :   %205 = load i8* %204, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax
513 :   %206 = sext i8 %205 to i32, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax
514 :   %207 = zext i32 %206 to i64, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax
515 :   store i64 %207, i64* %RAX_val, !mcsema_real_eip !18 :          <154>	movsbl	-33(%rbp), %eax

516 :   %208 = add nsw i32 %206, -47 : NIL

517 :   %209 = xor i32 %208, %206, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
518 :   %210 = and i32 %209, 16, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
519 :   %211 = icmp ne i32 %210, 0, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
520 :   store i1 %211, i1* %AF_val, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
521 :   %212 = trunc i32 %208 to i8, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
522 :   %213 = tail call i8 @llvm.ctpop.i8(i8 %212), !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax

523 :   %214 = and i8 %213, 1 : NIL
524 :   %215 = icmp eq i8 %214, 0 : NIL

525 :   store i1 %215, i1* %PF_val, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
526 :   %216 = icmp eq i32 %208, 0, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
527 :   store i1 %216, i1* %ZF_val, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax

528 :   %217 = icmp slt i32 %208, 0 : NIL

529 :   store i1 %217, i1* %SF_val, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax

530 :   %218 = icmp ult i8 %205, 47 : NIL

531 :   store i1 %218, i1* %CF_val, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax
532 :   %219 = and i32 %209, %206, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax

533 :   %220 = icmp slt i32 %219, 0 : NIL

534 :   store i1 %220, i1* %OF_val, !mcsema_real_eip !19 :          <158>	cmpl	$47, %eax

535 :   %221 = load i1* %ZF_val, !mcsema_real_eip !20 :          <15d>	jne	12

536 :   %222 = load i64* %RBP_val, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al

537 :   br i1 %221, label %block_0x163, label %block_0x16f, !mcsema_real_eip !20 :          <15d>	jne	12

538 :   %223 = add i64 %222, -33, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al
539 :   %224 = inttoptr i64 %223 to i64*, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al

540 :   %225 = bitcast i64* %224 to i8* : NIL

541 :   %226 = load i8* %225, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al
542 :   %227 = zext i8 %226 to i64, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al
543 :   %228 = load i64* %RAX_val, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al
544 :   %229 = and i64 %228, -256, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al

545 :   %230 = or i64 %229, %227 : NIL

546 :   store i64 %230, i64* %RAX_val, !mcsema_real_eip !21 :          <16f>	movb	-33(%rbp), %al

547 :   %231 = load i64* %RBP_val, !mcsema_real_eip !22 :          <172>	movq	-32(%rbp), %rcx
548 :   %232 = add i64 %231, -32, !mcsema_real_eip !22 :          <172>	movq	-32(%rbp), %rcx
549 :   %233 = inttoptr i64 %232 to i64*, !mcsema_real_eip !22 :          <172>	movq	-32(%rbp), %rcx
550 :   %234 = load i64* %233, !mcsema_real_eip !22 :          <172>	movq	-32(%rbp), %rcx
551 :   store i64 %234, i64* %RCX_val, !mcsema_real_eip !22 :          <172>	movq	-32(%rbp), %rcx

552 :   %235 = inttoptr i64 %234 to i64*, !mcsema_real_eip !23 :          <176>	movb	%al, (%rcx)
553 :   %236 = load i64* %RAX_val, !mcsema_real_eip !23 :          <176>	movb	%al, (%rcx)
554 :   %237 = trunc i64 %236 to i8, !mcsema_real_eip !23 :          <176>	movb	%al, (%rcx)

555 :   %238 = bitcast i64* %235 to i8* : NIL

556 :   store i8 %237, i8* %238, !mcsema_real_eip !23 :          <176>	movb	%al, (%rcx)

557 :   %239 = load i64* %RBP_val, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax
558 :   %240 = add i64 %239, -24, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax
559 :   %241 = inttoptr i64 %240 to i64*, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax
560 :   %242 = load i64* %241, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax

561 :   %uadd71 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %242, i64 1) : NIL
562 :   %243 = extractvalue { i64, i1 } %uadd71, 0 : NIL

563 :   %244 = xor i64 %243, %242, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
564 :   %245 = and i64 %244, 16, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
565 :   %246 = icmp ne i64 %245, 0, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
566 :   store i1 %246, i1* %AF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

567 :   %247 = icmp slt i64 %243, 0 : NIL

568 :   store i1 %247, i1* %SF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
569 :   %248 = icmp eq i64 %243, 0, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
570 :   store i1 %248, i1* %ZF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
571 :   %249 = xor i64 %242, -9223372036854775808, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
572 :   %250 = and i64 %244, %249, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

573 :   %251 = icmp slt i64 %250, 0 : NIL

574 :   store i1 %251, i1* %OF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
575 :   %252 = trunc i64 %243 to i8, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
576 :   %253 = tail call i8 @llvm.ctpop.i8(i8 %252), !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

577 :   %254 = and i8 %253, 1 : NIL
578 :   %255 = icmp eq i8 %254, 0 : NIL

579 :   store i1 %255, i1* %PF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

580 :   %256 = extractvalue { i64, i1 } %uadd71, 1 : NIL

581 :   store i1 %256, i1* %CF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
582 :   store i64 %243, i64* %RAX_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

583 :   %257 = load i64* %RBP_val, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)
584 :   %258 = add i64 %257, -24, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)
585 :   %259 = inttoptr i64 %258 to i64*, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)
586 :   store i64 %243, i64* %259, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)

587 :   %260 = load i64* %RBP_val, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax
588 :   %261 = add i64 %260, -32, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax
589 :   %262 = inttoptr i64 %261 to i64*, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax
590 :   %263 = load i64* %262, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax

591 :   %uadd72 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %263, i64 1) : NIL
592 :   %264 = extractvalue { i64, i1 } %uadd72, 0 : NIL

593 :   %265 = xor i64 %264, %263, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
594 :   %266 = and i64 %265, 16, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
595 :   %267 = icmp ne i64 %266, 0, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
596 :   store i1 %267, i1* %AF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

597 :   %268 = icmp slt i64 %264, 0 : NIL

598 :   store i1 %268, i1* %SF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
599 :   %269 = icmp eq i64 %264, 0, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
600 :   store i1 %269, i1* %ZF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
601 :   %270 = xor i64 %263, -9223372036854775808, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
602 :   %271 = and i64 %265, %270, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

603 :   %272 = icmp slt i64 %271, 0 : NIL

604 :   store i1 %272, i1* %OF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
605 :   %273 = trunc i64 %264 to i8, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
606 :   %274 = tail call i8 @llvm.ctpop.i8(i8 %273), !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

607 :   %275 = and i8 %274, 1 : NIL
608 :   %276 = icmp eq i8 %275, 0 : NIL

609 :   store i1 %276, i1* %PF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

610 :   %277 = extractvalue { i64, i1 } %uadd72, 1 : NIL

611 :   store i1 %277, i1* %CF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
612 :   store i64 %264, i64* %RAX_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

613 :   %278 = load i64* %RBP_val, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)
614 :   %279 = add i64 %278, -32, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)
615 :   %280 = inttoptr i64 %279 to i64*, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)
616 :   store i64 %264, i64* %280, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)

617 :   %281 = load i64* %RBP_val, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
618 :   %282 = add i64 %281, -24, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
619 :   %283 = inttoptr i64 %282 to i64*, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
620 :   %284 = load i64* %283, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
621 :   store i64 %284, i64* %RAX_val, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax

622 :   %285 = inttoptr i64 %284 to i64*, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl

623 :   %286 = bitcast i64* %285 to i8* : NIL

624 :   %287 = load i8* %286, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl
625 :   %288 = zext i8 %287 to i64, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl
626 :   %289 = load i64* %RCX_val, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl
627 :   %290 = and i64 %289, -256, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl

628 :   %291 = or i64 %290, %288 : NIL

629 :   store i64 %291, i64* %RCX_val, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl

630 :   %292 = load i64* %RBP_val, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)
631 :   %293 = add i64 %292, -33, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)
632 :   %294 = inttoptr i64 %293 to i64*, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)

633 :   %295 = bitcast i64* %294 to i8* : NIL

634 :   store i8 %287, i8* %295, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)

635 :   br label %block_0x145, !mcsema_real_eip !33 :          <19d>	jmp	-93

636 :   %296 = add i64 %222, -32, !mcsema_real_eip !34 :          <163>	movq	-32(%rbp), %rax
637 :   %297 = inttoptr i64 %296 to i64*, !mcsema_real_eip !34 :          <163>	movq	-32(%rbp), %rax
638 :   %298 = load i64* %297, !mcsema_real_eip !34 :          <163>	movq	-32(%rbp), %rax
639 :   store i64 %298, i64* %RAX_val, !mcsema_real_eip !34 :          <163>	movq	-32(%rbp), %rax

640 :   %299 = inttoptr i64 %298 to i64*, !mcsema_real_eip !35 :          <167>	movb	$92, (%rax)

641 :   %300 = bitcast i64* %299 to i8* : NIL

642 :   store i8 92, i8* %300, !mcsema_real_eip !35 :          <167>	movb	$92, (%rax)

643 :   %301 = load i64* %RBP_val, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax
644 :   %302 = add i64 %301, -24, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax
645 :   %303 = inttoptr i64 %302 to i64*, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax
646 :   %304 = load i64* %303, !mcsema_real_eip !24 :          <178>	movq	-24(%rbp), %rax

647 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %304, i64 1) : NIL
648 :   %305 = extractvalue { i64, i1 } %uadd, 0 : NIL

649 :   %306 = xor i64 %305, %304, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
650 :   %307 = and i64 %306, 16, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
651 :   %308 = icmp ne i64 %307, 0, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
652 :   store i1 %308, i1* %AF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

653 :   %309 = icmp slt i64 %305, 0 : NIL

654 :   store i1 %309, i1* %SF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
655 :   %310 = icmp eq i64 %305, 0, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
656 :   store i1 %310, i1* %ZF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
657 :   %311 = xor i64 %304, -9223372036854775808, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
658 :   %312 = and i64 %306, %311, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

659 :   %313 = icmp slt i64 %312, 0 : NIL

660 :   store i1 %313, i1* %OF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
661 :   %314 = trunc i64 %305 to i8, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
662 :   %315 = tail call i8 @llvm.ctpop.i8(i8 %314), !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

663 :   %316 = and i8 %315, 1 : NIL
664 :   %317 = icmp eq i8 %316, 0 : NIL

665 :   store i1 %317, i1* %PF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

666 :   %318 = extractvalue { i64, i1 } %uadd, 1 : NIL

667 :   store i1 %318, i1* %CF_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax
668 :   store i64 %305, i64* %RAX_val, !mcsema_real_eip !25 :          <17c>	addq	$1, %rax

669 :   %319 = load i64* %RBP_val, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)
670 :   %320 = add i64 %319, -24, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)
671 :   %321 = inttoptr i64 %320 to i64*, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)
672 :   store i64 %305, i64* %321, !mcsema_real_eip !26 :          <182>	movq	%rax, -24(%rbp)

673 :   %322 = load i64* %RBP_val, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax
674 :   %323 = add i64 %322, -32, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax
675 :   %324 = inttoptr i64 %323 to i64*, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax
676 :   %325 = load i64* %324, !mcsema_real_eip !27 :          <186>	movq	-32(%rbp), %rax

677 :   %uadd70 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %325, i64 1) : NIL
678 :   %326 = extractvalue { i64, i1 } %uadd70, 0 : NIL

679 :   %327 = xor i64 %326, %325, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
680 :   %328 = and i64 %327, 16, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
681 :   %329 = icmp ne i64 %328, 0, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
682 :   store i1 %329, i1* %AF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

683 :   %330 = icmp slt i64 %326, 0 : NIL

684 :   store i1 %330, i1* %SF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
685 :   %331 = icmp eq i64 %326, 0, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
686 :   store i1 %331, i1* %ZF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
687 :   %332 = xor i64 %325, -9223372036854775808, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
688 :   %333 = and i64 %327, %332, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

689 :   %334 = icmp slt i64 %333, 0 : NIL

690 :   store i1 %334, i1* %OF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
691 :   %335 = trunc i64 %326 to i8, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
692 :   %336 = tail call i8 @llvm.ctpop.i8(i8 %335), !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

693 :   %337 = and i8 %336, 1 : NIL
694 :   %338 = icmp eq i8 %337, 0 : NIL

695 :   store i1 %338, i1* %PF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

696 :   %339 = extractvalue { i64, i1 } %uadd70, 1 : NIL

697 :   store i1 %339, i1* %CF_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax
698 :   store i64 %326, i64* %RAX_val, !mcsema_real_eip !28 :          <18a>	addq	$1, %rax

699 :   %340 = load i64* %RBP_val, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)
700 :   %341 = add i64 %340, -32, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)
701 :   %342 = inttoptr i64 %341 to i64*, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)
702 :   store i64 %326, i64* %342, !mcsema_real_eip !29 :          <190>	movq	%rax, -32(%rbp)

703 :   %343 = load i64* %RBP_val, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
704 :   %344 = add i64 %343, -24, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
705 :   %345 = inttoptr i64 %344 to i64*, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
706 :   %346 = load i64* %345, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax
707 :   store i64 %346, i64* %RAX_val, !mcsema_real_eip !30 :          <194>	movq	-24(%rbp), %rax

708 :   %347 = inttoptr i64 %346 to i64*, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl

709 :   %348 = bitcast i64* %347 to i8* : NIL

710 :   %349 = load i8* %348, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl
711 :   %350 = zext i8 %349 to i64, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl
712 :   %351 = load i64* %RCX_val, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl
713 :   %352 = and i64 %351, -256, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl

714 :   %353 = or i64 %352, %350 : NIL

715 :   store i64 %353, i64* %RCX_val, !mcsema_real_eip !31 :          <198>	movb	(%rax), %cl

716 :   %354 = load i64* %RBP_val, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)
717 :   %355 = add i64 %354, -33, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)
718 :   %356 = inttoptr i64 %355 to i64*, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)

719 :   %357 = bitcast i64* %356 to i8* : NIL

720 :   store i8 %349, i8* %357, !mcsema_real_eip !32 :          <19a>	movb	%cl, -33(%rbp)

721 :   br label %block_0x145, !mcsema_real_eip !33 :          <19d>	jmp	-93

722 :   %358 = load i64* %RBP_val, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
723 :   %359 = add i64 %358, -33, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
724 :   %360 = inttoptr i64 %359 to i64*, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax

725 :   %361 = bitcast i64* %360 to i8* : NIL

726 :   %362 = load i8* %361, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
727 :   %363 = sext i8 %362 to i32, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
728 :   %364 = zext i32 %363 to i64, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax
729 :   store i64 %364, i64* %RAX_val, !mcsema_real_eip !13 :          <145>	movsbl	-33(%rbp), %eax

730 :   store i1 false, i1* %AF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax
731 :   %365 = tail call i8 @llvm.ctpop.i8(i8 %362), !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

732 :   %366 = and i8 %365, 1 : NIL
733 :   %367 = icmp eq i8 %366, 0 : NIL

734 :   store i1 %367, i1* %PF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

735 :   %368 = icmp eq i8 %362, 0 : NIL

736 :   store i1 %368, i1* %ZF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

737 :   %369 = icmp slt i8 %362, 0 : NIL

738 :   store i1 %369, i1* %SF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax
739 :   store i1 false, i1* %CF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax
740 :   store i1 false, i1* %OF_val, !mcsema_real_eip !14 :          <149>	cmpl	$0, %eax

741 :   br i1 %368, label %block_0x1a2.loopexit, label %block_0x154, !mcsema_real_eip !15 :          <14e>	je	78
========================================================
Source line mapping for function: sub_a0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <a0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <a0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <a0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <a0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <a0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <a0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <a0>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <a1>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -40 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
296 :   %83 = and i64 %82, 16, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
297 :   %84 = icmp ne i64 %83, 0, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
308 :   %91 = icmp ult i64 %79, 32, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <a4>	subq	$32, %rsp

314 :   %94 = load i64* %RBP_val, !mcsema_real_eip !5 :          <a8>	movq	%rdi, -8(%rbp)
315 :   %95 = add i64 %94, -8, !mcsema_real_eip !5 :          <a8>	movq	%rdi, -8(%rbp)
316 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !5 :          <a8>	movq	%rdi, -8(%rbp)
317 :   %97 = load i64* %RDI_val, !mcsema_real_eip !5 :          <a8>	movq	%rdi, -8(%rbp)
318 :   store i64 %97, i64* %96, !mcsema_real_eip !5 :          <a8>	movq	%rdi, -8(%rbp)

319 :   %98 = load i64* %RBP_val, !mcsema_real_eip !6 :          <ac>	movl	$1, -12(%rbp)
320 :   %99 = add i64 %98, -12, !mcsema_real_eip !6 :          <ac>	movl	$1, -12(%rbp)
321 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !6 :          <ac>	movl	$1, -12(%rbp)

322 :   %101 = bitcast i64* %100 to i32* : NIL

323 :   store i32 1, i32* %101, !mcsema_real_eip !6 :          <ac>	movl	$1, -12(%rbp)

324 :   %102 = load i64* %RBP_val, !mcsema_real_eip !7 :          <b3>	movq	-8(%rbp), %rdi
325 :   %103 = add i64 %102, -8, !mcsema_real_eip !7 :          <b3>	movq	-8(%rbp), %rdi
326 :   %104 = inttoptr i64 %103 to i64*, !mcsema_real_eip !7 :          <b3>	movq	-8(%rbp), %rdi
327 :   %105 = load i64* %104, !mcsema_real_eip !7 :          <b3>	movq	-8(%rbp), %rdi
328 :   store i64 %105, i64* %RDI_val, !mcsema_real_eip !7 :          <b3>	movq	-8(%rbp), %rdi

329 :   %106 = tail call x86_64_sysvcc i64 @strlen(i64 %105), !mcsema_real_eip !8 :          <b7>	callq	0
330 :   store i64 %106, i64* %RAX_val, !mcsema_real_eip !8 :          <b7>	callq	0

331 :   %107 = and i64 %106, 4294967295 : NIL

332 :   store i64 %107, i64* %RCX_val, !mcsema_real_eip !9 :          <bc>	movl	%eax, %ecx

333 :   %108 = load i64* %RBP_val, !mcsema_real_eip !10 :          <be>	movl	%ecx, -16(%rbp)
334 :   %109 = add i64 %108, -16, !mcsema_real_eip !10 :          <be>	movl	%ecx, -16(%rbp)
335 :   %110 = inttoptr i64 %109 to i64*, !mcsema_real_eip !10 :          <be>	movl	%ecx, -16(%rbp)
336 :   %111 = trunc i64 %106 to i32, !mcsema_real_eip !10 :          <be>	movl	%ecx, -16(%rbp)

337 :   %112 = bitcast i64* %110 to i32* : NIL

338 :   store i32 %111, i32* %112, !mcsema_real_eip !10 :          <be>	movl	%ecx, -16(%rbp)

339 :   %113 = load i64* %RBP_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
340 :   %114 = add i64 %113, -16, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
341 :   %115 = inttoptr i64 %114 to i64*, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

342 :   %116 = bitcast i64* %115 to i32* : NIL

343 :   %117 = load i32* %116, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

344 :   %118 = add i32 %117, -1 : NIL

345 :   %119 = xor i32 %118, %117, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
346 :   %120 = and i32 %119, 16, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
347 :   %121 = icmp ne i32 %120, 0, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
348 :   store i1 %121, i1* %AF_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
349 :   %122 = trunc i32 %118 to i8, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
350 :   %123 = tail call i8 @llvm.ctpop.i8(i8 %122), !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

351 :   %124 = and i8 %123, 1 : NIL
352 :   %125 = icmp eq i8 %124, 0 : NIL

353 :   store i1 %125, i1* %PF_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
354 :   %126 = icmp eq i32 %118, 0, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
355 :   store i1 %126, i1* %ZF_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

356 :   %127 = icmp slt i32 %118, 0 : NIL

357 :   store i1 %127, i1* %SF_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

358 :   %128 = icmp eq i32 %117, 0 : NIL

359 :   store i1 %128, i1* %CF_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)
360 :   %129 = and i32 %119, %117, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

361 :   %130 = icmp slt i32 %129, 0 : NIL

362 :   store i1 %130, i1* %OF_val, !mcsema_real_eip !11 :          <c1>	cmpl	$1, -16(%rbp)

363 :   %131 = xor i1 %127, %130 : NIL

364 :   %132 = load i1* %ZF_val, !mcsema_real_eip !12 :          <c8>	jle	59
365 :   %133 = or i1 %132, %131, !mcsema_real_eip !12 :          <c8>	jle	59
366 :   br i1 %133, label %block_0x109, label %block_0xce, !mcsema_real_eip !12 :          <c8>	jle	59

367 :   %134 = load i64* %RBP_val, !mcsema_real_eip !13 :          <109>	movl	-12(%rbp), %eax
368 :   %135 = add i64 %134, -12, !mcsema_real_eip !13 :          <109>	movl	-12(%rbp), %eax
369 :   %136 = inttoptr i64 %135 to i64*, !mcsema_real_eip !13 :          <109>	movl	-12(%rbp), %eax

370 :   %137 = bitcast i64* %136 to i32* : NIL

371 :   %138 = load i32* %137, !mcsema_real_eip !13 :          <109>	movl	-12(%rbp), %eax
372 :   %139 = zext i32 %138 to i64, !mcsema_real_eip !13 :          <109>	movl	-12(%rbp), %eax
373 :   store i64 %139, i64* %RAX_val, !mcsema_real_eip !13 :          <109>	movl	-12(%rbp), %eax

374 :   %140 = load i64* %RSP_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp

375 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %140, i64 32) : NIL
376 :   %141 = extractvalue { i64, i1 } %uadd, 0 : NIL

377 :   %142 = xor i64 %141, %140, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
378 :   %143 = and i64 %142, 16, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
379 :   %144 = icmp ne i64 %143, 0, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
380 :   store i1 %144, i1* %AF_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp

381 :   %145 = icmp slt i64 %141, 0 : NIL

382 :   store i1 %145, i1* %SF_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
383 :   %146 = icmp eq i64 %141, 0, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
384 :   store i1 %146, i1* %ZF_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
385 :   %147 = xor i64 %140, -9223372036854775808, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
386 :   %148 = and i64 %142, %147, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp

387 :   %149 = icmp slt i64 %148, 0 : NIL

388 :   store i1 %149, i1* %OF_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
389 :   %150 = trunc i64 %141 to i8, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
390 :   %151 = tail call i8 @llvm.ctpop.i8(i8 %150), !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp

391 :   %152 = and i8 %151, 1 : NIL
392 :   %153 = icmp eq i8 %152, 0 : NIL

393 :   store i1 %153, i1* %PF_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp

394 :   %154 = extractvalue { i64, i1 } %uadd, 1 : NIL

395 :   store i1 %154, i1* %CF_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp
396 :   store i64 %141, i64* %RSP_val, !mcsema_real_eip !14 :          <10c>	addq	$32, %rsp

397 :   %155 = inttoptr i64 %141 to i64*, !mcsema_real_eip !15 :          <110>	popq	%rbp
398 :   %156 = load i64* %155, !mcsema_real_eip !15 :          <110>	popq	%rbp
399 :   store i64 %156, i64* %RBP_val, !mcsema_real_eip !15 :          <110>	popq	%rbp

400 :   %157 = add i64 %141, 16, !mcsema_real_eip !16 :          <111>	retq
401 :   store i64 %157, i64* %RSP_val, !mcsema_real_eip !16 :          <111>	retq
402 :   %158 = load i64* %RAX_val, !mcsema_real_eip !16 :          <111>	retq
403 :   store i64 %158, i64* %RAX, !mcsema_real_eip !16 :          <111>	retq
404 :   %159 = load i64* %RBX_val, !mcsema_real_eip !16 :          <111>	retq
405 :   store i64 %159, i64* %RBX, !mcsema_real_eip !16 :          <111>	retq
406 :   %160 = load i64* %RCX_val, !mcsema_real_eip !16 :          <111>	retq
407 :   store i64 %160, i64* %RCX, !mcsema_real_eip !16 :          <111>	retq
408 :   %161 = load i64* %RDX_val, !mcsema_real_eip !16 :          <111>	retq
409 :   store i64 %161, i64* %RDX, !mcsema_real_eip !16 :          <111>	retq
410 :   %162 = load i64* %RSI_val, !mcsema_real_eip !16 :          <111>	retq
411 :   store i64 %162, i64* %RSI, !mcsema_real_eip !16 :          <111>	retq
412 :   %163 = load i64* %RDI_val, !mcsema_real_eip !16 :          <111>	retq
413 :   store i64 %163, i64* %RDI, !mcsema_real_eip !16 :          <111>	retq
414 :   %164 = load i64* %RSP_val, !mcsema_real_eip !16 :          <111>	retq
415 :   store i64 %164, i64* %RSP, !mcsema_real_eip !16 :          <111>	retq
416 :   %165 = load i64* %RBP_val, !mcsema_real_eip !16 :          <111>	retq
417 :   store i64 %165, i64* %RBP, !mcsema_real_eip !16 :          <111>	retq
418 :   %166 = load i64* %R8_val, !mcsema_real_eip !16 :          <111>	retq
419 :   store i64 %166, i64* %R8, !mcsema_real_eip !16 :          <111>	retq
420 :   %167 = load i64* %R9_val, !mcsema_real_eip !16 :          <111>	retq
421 :   store i64 %167, i64* %R9, !mcsema_real_eip !16 :          <111>	retq
422 :   %168 = load i64* %R10_val, !mcsema_real_eip !16 :          <111>	retq
423 :   store i64 %168, i64* %R10, !mcsema_real_eip !16 :          <111>	retq
424 :   %169 = load i64* %R11_val, !mcsema_real_eip !16 :          <111>	retq
425 :   store i64 %169, i64* %R11, !mcsema_real_eip !16 :          <111>	retq
426 :   %170 = load i64* %R12_val, !mcsema_real_eip !16 :          <111>	retq
427 :   store i64 %170, i64* %R12, !mcsema_real_eip !16 :          <111>	retq
428 :   %171 = load i64* %R13_val, !mcsema_real_eip !16 :          <111>	retq
429 :   store i64 %171, i64* %R13, !mcsema_real_eip !16 :          <111>	retq
430 :   %172 = load i64* %R14_val, !mcsema_real_eip !16 :          <111>	retq
431 :   store i64 %172, i64* %R14, !mcsema_real_eip !16 :          <111>	retq
432 :   %173 = load i64* %R15_val, !mcsema_real_eip !16 :          <111>	retq
433 :   store i64 %173, i64* %R15, !mcsema_real_eip !16 :          <111>	retq
434 :   %174 = load i64* %RIP_val, !mcsema_real_eip !16 :          <111>	retq
435 :   store i64 %174, i64* %RIP, !mcsema_real_eip !16 :          <111>	retq
436 :   %175 = load i1* %CF_val, !mcsema_real_eip !16 :          <111>	retq
437 :   store i1 %175, i1* %CF, align 1, !mcsema_real_eip !16 :          <111>	retq
438 :   %176 = load i1* %PF_val, !mcsema_real_eip !16 :          <111>	retq
439 :   store i1 %176, i1* %PF, align 1, !mcsema_real_eip !16 :          <111>	retq
440 :   %177 = load i1* %AF_val, !mcsema_real_eip !16 :          <111>	retq
441 :   store i1 %177, i1* %AF, align 1, !mcsema_real_eip !16 :          <111>	retq
442 :   %178 = load i1* %ZF_val, !mcsema_real_eip !16 :          <111>	retq
443 :   store i1 %178, i1* %ZF, align 1, !mcsema_real_eip !16 :          <111>	retq
444 :   %179 = load i1* %SF_val, !mcsema_real_eip !16 :          <111>	retq
445 :   store i1 %179, i1* %SF, align 1, !mcsema_real_eip !16 :          <111>	retq
446 :   %180 = load i1* %OF_val, !mcsema_real_eip !16 :          <111>	retq
447 :   store i1 %180, i1* %OF, align 1, !mcsema_real_eip !16 :          <111>	retq
448 :   %181 = load i1* %DF_val, !mcsema_real_eip !16 :          <111>	retq
449 :   store i1 %181, i1* %DF, align 1, !mcsema_real_eip !16 :          <111>	retq
450 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !16 :          <111>	retq
451 :   %182 = load i1* %FPU_B_val, !mcsema_real_eip !16 :          <111>	retq
452 :   store i1 %182, i1* %FPU_B, align 1, !mcsema_real_eip !16 :          <111>	retq
453 :   %183 = load i1* %FPU_C3_val, !mcsema_real_eip !16 :          <111>	retq
454 :   store i1 %183, i1* %FPU_C3, align 1, !mcsema_real_eip !16 :          <111>	retq
455 :   %184 = load i3* %FPU_TOP_val, !mcsema_real_eip !16 :          <111>	retq
456 :   store i3 %184, i3* %FPU_TOP, align 1, !mcsema_real_eip !16 :          <111>	retq
457 :   %185 = load i1* %FPU_C2_val, !mcsema_real_eip !16 :          <111>	retq
458 :   store i1 %185, i1* %FPU_C2, align 1, !mcsema_real_eip !16 :          <111>	retq
459 :   %186 = load i1* %FPU_C1_val, !mcsema_real_eip !16 :          <111>	retq
460 :   store i1 %186, i1* %FPU_C1, align 1, !mcsema_real_eip !16 :          <111>	retq
461 :   %187 = load i1* %FPU_C0_val, !mcsema_real_eip !16 :          <111>	retq
462 :   store i1 %187, i1* %FPU_C0, align 1, !mcsema_real_eip !16 :          <111>	retq
463 :   %188 = load i1* %FPU_ES_val, !mcsema_real_eip !16 :          <111>	retq
464 :   store i1 %188, i1* %FPU_ES, align 1, !mcsema_real_eip !16 :          <111>	retq
465 :   %189 = load i1* %FPU_SF_val, !mcsema_real_eip !16 :          <111>	retq
466 :   store i1 %189, i1* %FPU_SF, align 1, !mcsema_real_eip !16 :          <111>	retq
467 :   %190 = load i1* %FPU_PE_val, !mcsema_real_eip !16 :          <111>	retq
468 :   store i1 %190, i1* %FPU_PE, align 1, !mcsema_real_eip !16 :          <111>	retq
469 :   %191 = load i1* %FPU_UE_val, !mcsema_real_eip !16 :          <111>	retq
470 :   store i1 %191, i1* %FPU_UE, align 1, !mcsema_real_eip !16 :          <111>	retq
471 :   %192 = load i1* %FPU_OE_val, !mcsema_real_eip !16 :          <111>	retq
472 :   store i1 %192, i1* %FPU_OE, align 1, !mcsema_real_eip !16 :          <111>	retq
473 :   %193 = load i1* %FPU_ZE_val, !mcsema_real_eip !16 :          <111>	retq
474 :   store i1 %193, i1* %FPU_ZE, align 1, !mcsema_real_eip !16 :          <111>	retq
475 :   %194 = load i1* %FPU_DE_val, !mcsema_real_eip !16 :          <111>	retq
476 :   store i1 %194, i1* %FPU_DE, align 1, !mcsema_real_eip !16 :          <111>	retq
477 :   %195 = load i1* %FPU_IE_val, !mcsema_real_eip !16 :          <111>	retq
478 :   store i1 %195, i1* %FPU_IE, align 1, !mcsema_real_eip !16 :          <111>	retq
479 :   %196 = load i1* %FPU_X_val, !mcsema_real_eip !16 :          <111>	retq
480 :   store i1 %196, i1* %FPU_X, align 1, !mcsema_real_eip !16 :          <111>	retq
481 :   %197 = load i2* %FPU_RC_val, !mcsema_real_eip !16 :          <111>	retq
482 :   store i2 %197, i2* %FPU_RC, align 1, !mcsema_real_eip !16 :          <111>	retq
483 :   %198 = load i2* %FPU_PC_val, !mcsema_real_eip !16 :          <111>	retq
484 :   store i2 %198, i2* %FPU_PC, align 1, !mcsema_real_eip !16 :          <111>	retq
485 :   %199 = load i1* %FPU_PM_val, !mcsema_real_eip !16 :          <111>	retq
486 :   store i1 %199, i1* %FPU_PM, align 1, !mcsema_real_eip !16 :          <111>	retq
487 :   %200 = load i1* %FPU_UM_val, !mcsema_real_eip !16 :          <111>	retq
488 :   store i1 %200, i1* %FPU_UM, align 1, !mcsema_real_eip !16 :          <111>	retq
489 :   %201 = load i1* %FPU_OM_val, !mcsema_real_eip !16 :          <111>	retq
490 :   store i1 %201, i1* %FPU_OM, align 1, !mcsema_real_eip !16 :          <111>	retq
491 :   %202 = load i1* %FPU_ZM_val, !mcsema_real_eip !16 :          <111>	retq
492 :   store i1 %202, i1* %FPU_ZM, align 1, !mcsema_real_eip !16 :          <111>	retq
493 :   %203 = load i1* %FPU_DM_val, !mcsema_real_eip !16 :          <111>	retq
494 :   store i1 %203, i1* %FPU_DM, align 1, !mcsema_real_eip !16 :          <111>	retq
495 :   %204 = load i1* %FPU_IM_val, !mcsema_real_eip !16 :          <111>	retq
496 :   store i1 %204, i1* %FPU_IM, align 1, !mcsema_real_eip !16 :          <111>	retq

497 :   %205 = load i64* %53, align 4 : NIL
498 :   store i64 %205, i64* %52, align 4 : NIL

499 :   %206 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !16 :          <111>	retq
500 :   store i16 %206, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !16 :          <111>	retq
501 :   %207 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !16 :          <111>	retq
502 :   store i64 %207, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !16 :          <111>	retq
503 :   %208 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !16 :          <111>	retq
504 :   store i16 %208, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !16 :          <111>	retq
505 :   %209 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !16 :          <111>	retq
506 :   store i64 %209, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !16 :          <111>	retq
507 :   %210 = load i128* %XMM0_val, !mcsema_real_eip !16 :          <111>	retq
508 :   store i128 %210, i128* %XMM0, align 1, !mcsema_real_eip !16 :          <111>	retq
509 :   %211 = load i128* %XMM1_val, !mcsema_real_eip !16 :          <111>	retq
510 :   store i128 %211, i128* %XMM1, align 1, !mcsema_real_eip !16 :          <111>	retq
511 :   %212 = load i128* %XMM2_val, !mcsema_real_eip !16 :          <111>	retq
512 :   store i128 %212, i128* %XMM2, align 1, !mcsema_real_eip !16 :          <111>	retq
513 :   %213 = load i128* %XMM3_val, !mcsema_real_eip !16 :          <111>	retq
514 :   store i128 %213, i128* %XMM3, align 1, !mcsema_real_eip !16 :          <111>	retq
515 :   %214 = load i128* %XMM4_val, !mcsema_real_eip !16 :          <111>	retq
516 :   store i128 %214, i128* %XMM4, align 1, !mcsema_real_eip !16 :          <111>	retq
517 :   %215 = load i128* %XMM5_val, !mcsema_real_eip !16 :          <111>	retq
518 :   store i128 %215, i128* %XMM5, align 1, !mcsema_real_eip !16 :          <111>	retq
519 :   %216 = load i128* %XMM6_val, !mcsema_real_eip !16 :          <111>	retq
520 :   store i128 %216, i128* %XMM6, align 1, !mcsema_real_eip !16 :          <111>	retq
521 :   %217 = load i128* %XMM7_val, !mcsema_real_eip !16 :          <111>	retq
522 :   store i128 %217, i128* %XMM7, align 1, !mcsema_real_eip !16 :          <111>	retq
523 :   %218 = load i128* %XMM8_val, !mcsema_real_eip !16 :          <111>	retq
524 :   store i128 %218, i128* %XMM8, align 1, !mcsema_real_eip !16 :          <111>	retq
525 :   %219 = load i128* %XMM9_val, !mcsema_real_eip !16 :          <111>	retq
526 :   store i128 %219, i128* %XMM9, align 1, !mcsema_real_eip !16 :          <111>	retq
527 :   %220 = load i128* %XMM10_val, !mcsema_real_eip !16 :          <111>	retq
528 :   store i128 %220, i128* %XMM10, align 1, !mcsema_real_eip !16 :          <111>	retq
529 :   %221 = load i128* %XMM11_val, !mcsema_real_eip !16 :          <111>	retq
530 :   store i128 %221, i128* %XMM11, align 1, !mcsema_real_eip !16 :          <111>	retq
531 :   %222 = load i128* %XMM12_val, !mcsema_real_eip !16 :          <111>	retq
532 :   store i128 %222, i128* %XMM12, align 1, !mcsema_real_eip !16 :          <111>	retq
533 :   %223 = load i128* %XMM13_val, !mcsema_real_eip !16 :          <111>	retq
534 :   store i128 %223, i128* %XMM13, align 1, !mcsema_real_eip !16 :          <111>	retq
535 :   %224 = load i128* %XMM14_val, !mcsema_real_eip !16 :          <111>	retq
536 :   store i128 %224, i128* %XMM14, align 1, !mcsema_real_eip !16 :          <111>	retq
537 :   %225 = load i128* %XMM15_val, !mcsema_real_eip !16 :          <111>	retq
538 :   store i128 %225, i128* %XMM15, align 1, !mcsema_real_eip !16 :          <111>	retq
539 :   %226 = load i64* %STACK_BASE_val, !mcsema_real_eip !16 :          <111>	retq
540 :   store i64 %226, i64* %STACK_BASE, align 1, !mcsema_real_eip !16 :          <111>	retq
541 :   %227 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !16 :          <111>	retq
542 :   store i64 %227, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !16 :          <111>	retq
543 :   ret void, !mcsema_real_eip !16 :          <111>	retq

544 :   %228 = load i64* %RBP_val, !mcsema_real_eip !17 :          <ce>	movq	-8(%rbp), %rax
545 :   %229 = add i64 %228, -8, !mcsema_real_eip !17 :          <ce>	movq	-8(%rbp), %rax
546 :   %230 = inttoptr i64 %229 to i64*, !mcsema_real_eip !17 :          <ce>	movq	-8(%rbp), %rax
547 :   %231 = load i64* %230, !mcsema_real_eip !17 :          <ce>	movq	-8(%rbp), %rax
548 :   store i64 %231, i64* %RAX_val, !mcsema_real_eip !17 :          <ce>	movq	-8(%rbp), %rax

549 :   %232 = inttoptr i64 %231 to i64*, !mcsema_real_eip !18 :          <d2>	movb	(%rax), %cl

550 :   %233 = bitcast i64* %232 to i8* : NIL

551 :   %234 = load i8* %233, !mcsema_real_eip !18 :          <d2>	movb	(%rax), %cl
552 :   %235 = zext i8 %234 to i64, !mcsema_real_eip !18 :          <d2>	movb	(%rax), %cl
553 :   %236 = load i64* %RCX_val, !mcsema_real_eip !18 :          <d2>	movb	(%rax), %cl
554 :   %237 = and i64 %236, -256, !mcsema_real_eip !18 :          <d2>	movb	(%rax), %cl

555 :   %238 = or i64 %237, %235 : NIL

556 :   store i64 %238, i64* %RCX_val, !mcsema_real_eip !18 :          <d2>	movb	(%rax), %cl

557 :   %239 = load i64* %RBP_val, !mcsema_real_eip !19 :          <d4>	movb	%cl, -17(%rbp)
558 :   %240 = add i64 %239, -17, !mcsema_real_eip !19 :          <d4>	movb	%cl, -17(%rbp)
559 :   %241 = inttoptr i64 %240 to i64*, !mcsema_real_eip !19 :          <d4>	movb	%cl, -17(%rbp)

560 :   %242 = bitcast i64* %241 to i8* : NIL

561 :   store i8 %234, i8* %242, !mcsema_real_eip !19 :          <d4>	movb	%cl, -17(%rbp)

562 :   %243 = load i64* %RBP_val, !mcsema_real_eip !20 :          <d7>	movl	-16(%rbp), %edx
563 :   %244 = add i64 %243, -16, !mcsema_real_eip !20 :          <d7>	movl	-16(%rbp), %edx
564 :   %245 = inttoptr i64 %244 to i64*, !mcsema_real_eip !20 :          <d7>	movl	-16(%rbp), %edx

565 :   %246 = bitcast i64* %245 to i32* : NIL

566 :   %247 = load i32* %246, !mcsema_real_eip !20 :          <d7>	movl	-16(%rbp), %edx

567 :   %248 = add i32 %247, -1 : NIL

568 :   %249 = xor i32 %248, %247, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
569 :   %250 = and i32 %249, 16, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
570 :   %251 = icmp ne i32 %250, 0, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
571 :   store i1 %251, i1* %AF_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
572 :   %252 = trunc i32 %248 to i8, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
573 :   %253 = tail call i8 @llvm.ctpop.i8(i8 %252), !mcsema_real_eip !21 :          <da>	subl	$1, %edx

574 :   %254 = and i8 %253, 1 : NIL
575 :   %255 = icmp eq i8 %254, 0 : NIL

576 :   store i1 %255, i1* %PF_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
577 :   %256 = icmp eq i32 %248, 0, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
578 :   store i1 %256, i1* %ZF_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx

579 :   %257 = icmp slt i32 %248, 0 : NIL

580 :   store i1 %257, i1* %SF_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx

581 :   %258 = icmp eq i32 %247, 0 : NIL

582 :   store i1 %258, i1* %CF_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
583 :   %259 = and i32 %249, %247, !mcsema_real_eip !21 :          <da>	subl	$1, %edx

584 :   %260 = icmp slt i32 %259, 0 : NIL

585 :   store i1 %260, i1* %OF_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
586 :   %261 = zext i32 %248 to i64, !mcsema_real_eip !21 :          <da>	subl	$1, %edx
587 :   store i64 %261, i64* %RDX_val, !mcsema_real_eip !21 :          <da>	subl	$1, %edx

588 :   %262 = sext i32 %248 to i64, !mcsema_real_eip !22 :          <e0>	movslq	%edx, %rax
589 :   store i64 %262, i64* %RAX_val, !mcsema_real_eip !22 :          <e0>	movslq	%edx, %rax

590 :   %263 = load i64* %RBP_val, !mcsema_real_eip !23 :          <e3>	movq	-8(%rbp), %rsi
591 :   %264 = add i64 %263, -8, !mcsema_real_eip !23 :          <e3>	movq	-8(%rbp), %rsi
592 :   %265 = inttoptr i64 %264 to i64*, !mcsema_real_eip !23 :          <e3>	movq	-8(%rbp), %rsi
593 :   %266 = load i64* %265, !mcsema_real_eip !23 :          <e3>	movq	-8(%rbp), %rsi
594 :   store i64 %266, i64* %RSI_val, !mcsema_real_eip !23 :          <e3>	movq	-8(%rbp), %rsi

595 :   %267 = add i64 %266, %262, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl
596 :   %268 = inttoptr i64 %267 to i64*, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl

597 :   %269 = bitcast i64* %268 to i8* : NIL

598 :   %270 = load i8* %269, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl
599 :   %271 = zext i8 %270 to i64, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl
600 :   %272 = load i64* %RCX_val, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl
601 :   %273 = and i64 %272, -256, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl

602 :   %274 = or i64 %273, %271 : NIL

603 :   store i64 %274, i64* %RCX_val, !mcsema_real_eip !24 :          <e7>	movb	(%rsi,%rax), %cl

604 :   %275 = load i64* %RBP_val, !mcsema_real_eip !25 :          <ea>	movb	%cl, -18(%rbp)
605 :   %276 = add i64 %275, -18, !mcsema_real_eip !25 :          <ea>	movb	%cl, -18(%rbp)
606 :   %277 = inttoptr i64 %276 to i64*, !mcsema_real_eip !25 :          <ea>	movb	%cl, -18(%rbp)

607 :   %278 = bitcast i64* %277 to i8* : NIL

608 :   store i8 %270, i8* %278, !mcsema_real_eip !25 :          <ea>	movb	%cl, -18(%rbp)

609 :   %279 = load i64* %RBP_val, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx
610 :   %280 = add i64 %279, -17, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx
611 :   %281 = inttoptr i64 %280 to i64*, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx

612 :   %282 = bitcast i64* %281 to i8* : NIL

613 :   %283 = load i8* %282, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx
614 :   %284 = sext i8 %283 to i32, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx
615 :   %285 = zext i32 %284 to i64, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx
616 :   store i64 %285, i64* %RDX_val, !mcsema_real_eip !26 :          <ed>	movsbl	-17(%rbp), %edx

617 :   %286 = load i64* %RBP_val, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi
618 :   %287 = add i64 %286, -18, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi
619 :   %288 = inttoptr i64 %287 to i64*, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi

620 :   %289 = bitcast i64* %288 to i8* : NIL

621 :   %290 = load i8* %289, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi
622 :   %291 = sext i8 %290 to i32, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi
623 :   %292 = zext i32 %291 to i64, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi
624 :   store i64 %292, i64* %RDI_val, !mcsema_real_eip !27 :          <f1>	movsbl	-18(%rbp), %edi

625 :   %293 = load i64* %RDX_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
626 :   %294 = trunc i64 %293 to i32, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
627 :   %295 = sub i32 %294, %291, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
628 :   %296 = xor i32 %295, %294, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
629 :   %297 = xor i32 %296, %291, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
630 :   %298 = and i32 %297, 16, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
631 :   %299 = icmp ne i32 %298, 0, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
632 :   store i1 %299, i1* %AF_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
633 :   %300 = trunc i32 %295 to i8, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
634 :   %301 = tail call i8 @llvm.ctpop.i8(i8 %300), !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx

635 :   %302 = and i8 %301, 1 : NIL
636 :   %303 = icmp eq i8 %302, 0 : NIL

637 :   store i1 %303, i1* %PF_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx

638 :   %304 = icmp eq i32 %294, %291 : NIL

639 :   store i1 %304, i1* %ZF_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx

640 :   %305 = icmp slt i32 %295, 0 : NIL

641 :   store i1 %305, i1* %SF_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
642 :   %306 = icmp ult i32 %294, %291, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
643 :   store i1 %306, i1* %CF_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
644 :   %307 = xor i32 %294, %291, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx
645 :   %308 = and i32 %296, %307, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx

646 :   %309 = icmp slt i32 %308, 0 : NIL

647 :   store i1 %309, i1* %OF_val, !mcsema_real_eip !28 :          <f5>	cmpl	%edi, %edx

648 :   %310 = load i1* %ZF_val, !mcsema_real_eip !29 :          <f7>	jne	7
649 :   br i1 %310, label %block_0xfd, label %block_0x109, !mcsema_real_eip !29 :          <f7>	jne	7

650 :   %311 = load i64* %RBP_val, !mcsema_real_eip !30 :          <fd>	movl	$0, -12(%rbp)
651 :   %312 = add i64 %311, -12, !mcsema_real_eip !30 :          <fd>	movl	$0, -12(%rbp)
652 :   %313 = inttoptr i64 %312 to i64*, !mcsema_real_eip !30 :          <fd>	movl	$0, -12(%rbp)

653 :   %314 = bitcast i64* %313 to i32* : NIL

654 :   store i32 0, i32* %314, !mcsema_real_eip !30 :          <fd>	movl	$0, -12(%rbp)

655 :   br label %block_0x109, !mcsema_real_eip !31 :          <104>	jmp	0
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_10(%struct.regs* %0) : NIL
2 :   ret void : NIL
