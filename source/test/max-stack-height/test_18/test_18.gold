Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_18.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_0
==========================================
----------------------------------
sub_0::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -24 :::  [I] = -24 : Inst :: 0:-24:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -24:-24:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -24:-24:-8:0
  %95 = add i64 %94, -4, !mcsema_real_eip !5 :::  [I] = -12 : Inst :: -24:-24:-8:-12
  %98 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -24:-24:-8:-12
  %99 = add i64 %98, -4, !mcsema_real_eip !6 :::  [I] = -12 : Inst :: -24:-24:-8:-12
Gen :: -24:-24:-8:-12
----------------------------------
sub_0::block_0x1f.preheader
----------------------------------
Gen :: 0:0:0:0
----------------------------------
sub_0::block_0x7b.loopexit
----------------------------------
Gen :: 0:0:0:0
----------------------------------
sub_0::block_0x7b
----------------------------------
  %117 = load i64* %RSP_val, !mcsema_real_eip !10 :::  [I] = 0 : Inst :: 0:0:0:0
  %uadd70 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %117, i64 16) :::  [I] = 16 : Inst :: 0:0:0:0
  %118 = extractvalue { i64, i1 } %uadd70, 0 :::  [I] = 16 : Inst :: 0:0:0:0
  %131 = extractvalue { i64, i1 } %uadd70, 1 :::  [I] = 16 : Inst :: 0:0:0:0
  store i64 %118, i64* %RSP_val, !mcsema_real_eip !10 :::  [I] = NULL : Inst :: 16:0:0:0
  %134 = add i64 %118, 16, !mcsema_real_eip !12 :::  [I] = 32 : Inst :: 16:0:0:0
  store i64 %134, i64* %RSP_val, !mcsema_real_eip !12 :::  [I] = NULL : Inst :: 32:0:0:0
  %141 = load i64* %RSP_val, !mcsema_real_eip !12 :::  [I] = 32 : Inst :: 32:0:0:0
  %142 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = 0 : Inst :: 32:0:0:0
Gen :: 32:0:0:0
----------------------------------
sub_0::block_0x1f
----------------------------------
  %205 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = 0 : Inst :: 0:0:0:0
  %206 = add i64 %205, -4, !mcsema_real_eip !13 :::  [I] = -4 : Inst :: 0:0:0:-4
Gen :: 0:0:0:-4
----------------------------------
sub_0::block_0x35
----------------------------------
  %221 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = 0 : Inst :: 0:0:0:0
  %222 = add i64 %221, -4, !mcsema_real_eip !17 :::  [I] = -4 : Inst :: 0:0:0:-4
  %227 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = 0 : Inst :: 0:0:0:-4
  %228 = add i64 %227, -4, !mcsema_real_eip !18 :::  [I] = -4 : Inst :: 0:0:0:-4
  %237 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = 0 : Inst :: 0:0:0:-4
  %238 = add i64 %237, -4, !mcsema_real_eip !20 :::  [I] = -4 : Inst :: 0:0:0:-4
  %255 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = 0 : Inst :: 0:0:0:-4
  %256 = add i64 %255, -8, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: 0:0:0:-8
Gen :: 0:0:0:-8
----------------------------------
sub_0::block_0x6b
----------------------------------
  %260 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = 0 : Inst :: 0:0:0:0
  %261 = add i64 %260, -4, !mcsema_real_eip !26 :::  [I] = -4 : Inst :: 0:0:0:-4
  %280 = load i64* %RBP_val, !mcsema_real_eip !28 :::  [I] = 0 : Inst :: 0:0:0:-4
  %281 = add i64 %280, -4, !mcsema_real_eip !28 :::  [I] = -4 : Inst :: 0:0:0:-4
  %284 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = 0 : Inst :: 0:0:0:-4
  %285 = add i64 %284, -4, !mcsema_real_eip !6 :::  [I] = -4 : Inst :: 0:0:0:-4
Gen :: 0:0:0:-4


DFA Analysis: 
sub_0::entry
	Gen :: -24:-24:-8:-12
	Out :: -24:-24:-8:-12
sub_0::block_0x1f.preheader
	Pred :: entry: -24:-24:-8:-12
	Gen :: 0:0:0:0
	Out :: -24:-24:-8:-12
sub_0::block_0x1f
	Pred :: block_0x6b: -3:-3:-3:-3
	Pred :: block_0x1f.preheader: -24:-24:-8:-12
	Gen :: 0:0:0:-4
	Out :: -24:-24:-8:-12
sub_0::block_0x35
	Pred :: block_0x1f: -24:-24:-8:-12
	Gen :: 0:0:0:-8
	Out :: -24:-24:-8:-16
sub_0::block_0x6b
	Pred :: block_0x35: -24:-24:-8:-16
	Pred :: block_0x1f: -24:-24:-8:-12
	Gen :: 0:0:0:-4
	Out :: -24:-24:-8:-16
sub_0::block_0x7b.loopexit
	Pred :: block_0x6b: -24:-24:-8:-16
	Gen :: 0:0:0:0
	Out :: -24:-24:-8:-16
sub_0::block_0x7b
	Pred :: block_0x7b.loopexit: -24:-24:-8:-16
	Pred :: entry: -24:-24:-8:-12
	Gen :: 32:0:0:0
	Out :: 8:-24:-8:-16
sub_0::entry
	Gen :: -24:-24:-8:-12
	Out :: -24:-24:-8:-12
sub_0::block_0x1f.preheader
	Pred :: entry: -24:-24:-8:-12
	Gen :: 0:0:0:0
	Out :: -24:-24:-8:-12
sub_0::block_0x1f
	Pred :: block_0x6b: -24:-24:-8:-16
	Pred :: block_0x1f.preheader: -24:-24:-8:-12
	Gen :: 0:0:0:-4
	Out :: -24:-24:-8:-16
sub_0::block_0x35
	Pred :: block_0x1f: -24:-24:-8:-16
	Gen :: 0:0:0:-8
	Out :: -24:-24:-8:-16
sub_0::block_0x6b
	Pred :: block_0x35: -24:-24:-8:-16
	Pred :: block_0x1f: -24:-24:-8:-16
	Gen :: 0:0:0:-4
	Out :: -24:-24:-8:-16
sub_0::block_0x7b.loopexit
	Pred :: block_0x6b: -24:-24:-8:-16
	Gen :: 0:0:0:0
	Out :: -24:-24:-8:-16
sub_0::block_0x7b
	Pred :: block_0x7b.loopexit: -24:-24:-8:-16
	Pred :: entry: -24:-24:-8:-12
	Gen :: 32:0:0:0
	Out :: 8:-24:-8:-16
sub_0::entry
	Gen :: -24:-24:-8:-12
	Out :: -24:-24:-8:-12
sub_0::block_0x1f.preheader
	Pred :: entry: -24:-24:-8:-12
	Gen :: 0:0:0:0
	Out :: -24:-24:-8:-12
sub_0::block_0x1f
	Pred :: block_0x6b: -24:-24:-8:-16
	Pred :: block_0x1f.preheader: -24:-24:-8:-12
	Gen :: 0:0:0:-4
	Out :: -24:-24:-8:-16
sub_0::block_0x35
	Pred :: block_0x1f: -24:-24:-8:-16
	Gen :: 0:0:0:-8
	Out :: -24:-24:-8:-16
sub_0::block_0x6b
	Pred :: block_0x35: -24:-24:-8:-16
	Pred :: block_0x1f: -24:-24:-8:-16
	Gen :: 0:0:0:-4
	Out :: -24:-24:-8:-16
sub_0::block_0x7b.loopexit
	Pred :: block_0x6b: -24:-24:-8:-16
	Gen :: 0:0:0:0
	Out :: -24:-24:-8:-16
sub_0::block_0x7b
	Pred :: block_0x7b.loopexit: -24:-24:-8:-16
	Pred :: entry: -24:-24:-8:-12
	Gen :: 32:0:0:0
	Out :: 8:-24:-8:-16
Height[ sub_0 ] : -24
==========================================
Function : mcsema_main
==========================================
