========================================================
Source line mapping for function: sub_5f
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <5f>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <5f>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <5f>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <5f>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <5f>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <5f>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <5f>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <60>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -40 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
296 :   %83 = and i64 %82, 16, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
297 :   %84 = icmp ne i64 %83, 0, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <63>	subq	$32, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
308 :   %91 = icmp ult i64 %79, 32, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <63>	subq	$32, %rsp

314 :   %94 = load i64* %RBP_val, !mcsema_real_eip !5 :          <67>	movl	$10, -16(%rbp)
315 :   %95 = add i64 %94, -16, !mcsema_real_eip !5 :          <67>	movl	$10, -16(%rbp)
316 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !5 :          <67>	movl	$10, -16(%rbp)

317 :   %97 = bitcast i64* %96 to i32* : NIL

318 :   store i32 10, i32* %97, !mcsema_real_eip !5 :          <67>	movl	$10, -16(%rbp)

319 :   %98 = load i64* %RBP_val, !mcsema_real_eip !6 :          <6e>	movl	$20, -12(%rbp)
320 :   %99 = add i64 %98, -12, !mcsema_real_eip !6 :          <6e>	movl	$20, -12(%rbp)
321 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !6 :          <6e>	movl	$20, -12(%rbp)

322 :   %101 = bitcast i64* %100 to i32* : NIL

323 :   store i32 20, i32* %101, !mcsema_real_eip !6 :          <6e>	movl	$20, -12(%rbp)

324 :   %102 = load i64* %RBP_val, !mcsema_real_eip !7 :          <75>	movl	$30, -8(%rbp)
325 :   %103 = add i64 %102, -8, !mcsema_real_eip !7 :          <75>	movl	$30, -8(%rbp)
326 :   %104 = inttoptr i64 %103 to i64*, !mcsema_real_eip !7 :          <75>	movl	$30, -8(%rbp)

327 :   %105 = bitcast i64* %104 to i32* : NIL

328 :   store i32 30, i32* %105, !mcsema_real_eip !7 :          <75>	movl	$30, -8(%rbp)

329 :   %106 = load i64* %RBP_val, !mcsema_real_eip !8 :          <7c>	movq	-16(%rbp), %rax
330 :   %107 = add i64 %106, -16, !mcsema_real_eip !8 :          <7c>	movq	-16(%rbp), %rax
331 :   %108 = inttoptr i64 %107 to i64*, !mcsema_real_eip !8 :          <7c>	movq	-16(%rbp), %rax
332 :   %109 = load i64* %108, !mcsema_real_eip !8 :          <7c>	movq	-16(%rbp), %rax
333 :   store i64 %109, i64* %RAX_val, !mcsema_real_eip !8 :          <7c>	movq	-16(%rbp), %rax

334 :   %110 = load i64* %RSP_val, !mcsema_real_eip !9 :          <80>	movq	%rax, (%rsp)
335 :   %111 = inttoptr i64 %110 to i64*, !mcsema_real_eip !9 :          <80>	movq	%rax, (%rsp)
336 :   store i64 %109, i64* %111, !mcsema_real_eip !9 :          <80>	movq	%rax, (%rsp)

337 :   %112 = load i64* %RBP_val, !mcsema_real_eip !10 :          <84>	movl	-8(%rbp), %eax
338 :   %113 = add i64 %112, -8, !mcsema_real_eip !10 :          <84>	movl	-8(%rbp), %eax
339 :   %114 = inttoptr i64 %113 to i64*, !mcsema_real_eip !10 :          <84>	movl	-8(%rbp), %eax

340 :   %115 = bitcast i64* %114 to i32* : NIL

341 :   %116 = load i32* %115, !mcsema_real_eip !10 :          <84>	movl	-8(%rbp), %eax
342 :   %117 = zext i32 %116 to i64, !mcsema_real_eip !10 :          <84>	movl	-8(%rbp), %eax
343 :   store i64 %117, i64* %RAX_val, !mcsema_real_eip !10 :          <84>	movl	-8(%rbp), %eax

344 :   %118 = load i64* %RSP_val, !mcsema_real_eip !11 :          <87>	movl	%eax, 8(%rsp)
345 :   %119 = add i64 %118, 8, !mcsema_real_eip !11 :          <87>	movl	%eax, 8(%rsp)
346 :   %120 = inttoptr i64 %119 to i64*, !mcsema_real_eip !11 :          <87>	movl	%eax, 8(%rsp)

347 :   %121 = bitcast i64* %120 to i32* : NIL

348 :   store i32 %116, i32* %121, !mcsema_real_eip !11 :          <87>	movl	%eax, 8(%rsp)

349 :   store i64 6, i64* %R9_val, !mcsema_real_eip !12 :          <8b>	movl	$6, %r9d

350 :   store i64 5, i64* %R8_val, !mcsema_real_eip !13 :          <91>	movl	$5, %r8d

351 :   store i64 4, i64* %RCX_val, !mcsema_real_eip !14 :          <97>	movl	$4, %ecx

352 :   store i64 3, i64* %RDX_val, !mcsema_real_eip !15 :          <9c>	movl	$3, %edx

353 :   store i64 2, i64* %RSI_val, !mcsema_real_eip !16 :          <a1>	movl	$2, %esi

354 :   store i64 1, i64* %RDI_val, !mcsema_real_eip !17 :          <a6>	movl	$1, %edi

355 :   %122 = load i64* %RSP_val, !mcsema_real_eip !18 :          <ab>	callq	0

356 :   %123 = add i64 %122, -8 : NIL

357 :   %124 = inttoptr i64 %123 to i64*, !mcsema_real_eip !18 :          <ab>	callq	0
358 :   store i64 -4981261766360305936, i64* %124, !mcsema_real_eip !18 :          <ab>	callq	0
359 :   store i64 %123, i64* %RSP_val, !mcsema_real_eip !18 :          <ab>	callq	0
360 :   %125 = load i64* %RAX_val, !mcsema_real_eip !18 :          <ab>	callq	0
361 :   store i64 %125, i64* %RAX, !mcsema_real_eip !18 :          <ab>	callq	0
362 :   %126 = load i64* %RBX_val, !mcsema_real_eip !18 :          <ab>	callq	0
363 :   store i64 %126, i64* %RBX, !mcsema_real_eip !18 :          <ab>	callq	0
364 :   %127 = load i64* %RCX_val, !mcsema_real_eip !18 :          <ab>	callq	0
365 :   store i64 %127, i64* %RCX, !mcsema_real_eip !18 :          <ab>	callq	0
366 :   %128 = load i64* %RDX_val, !mcsema_real_eip !18 :          <ab>	callq	0
367 :   store i64 %128, i64* %RDX, !mcsema_real_eip !18 :          <ab>	callq	0
368 :   %129 = load i64* %RSI_val, !mcsema_real_eip !18 :          <ab>	callq	0
369 :   store i64 %129, i64* %RSI, !mcsema_real_eip !18 :          <ab>	callq	0
370 :   %130 = load i64* %RDI_val, !mcsema_real_eip !18 :          <ab>	callq	0
371 :   store i64 %130, i64* %RDI, !mcsema_real_eip !18 :          <ab>	callq	0
372 :   %131 = load i64* %RSP_val, !mcsema_real_eip !18 :          <ab>	callq	0
373 :   store i64 %131, i64* %RSP, !mcsema_real_eip !18 :          <ab>	callq	0
374 :   %132 = load i64* %RBP_val, !mcsema_real_eip !18 :          <ab>	callq	0
375 :   store i64 %132, i64* %RBP, !mcsema_real_eip !18 :          <ab>	callq	0
376 :   %133 = load i64* %R8_val, !mcsema_real_eip !18 :          <ab>	callq	0
377 :   store i64 %133, i64* %R8, !mcsema_real_eip !18 :          <ab>	callq	0
378 :   %134 = load i64* %R9_val, !mcsema_real_eip !18 :          <ab>	callq	0
379 :   store i64 %134, i64* %R9, !mcsema_real_eip !18 :          <ab>	callq	0
380 :   %135 = load i64* %R10_val, !mcsema_real_eip !18 :          <ab>	callq	0
381 :   store i64 %135, i64* %R10, !mcsema_real_eip !18 :          <ab>	callq	0
382 :   %136 = load i64* %R11_val, !mcsema_real_eip !18 :          <ab>	callq	0
383 :   store i64 %136, i64* %R11, !mcsema_real_eip !18 :          <ab>	callq	0
384 :   %137 = load i64* %R12_val, !mcsema_real_eip !18 :          <ab>	callq	0
385 :   store i64 %137, i64* %R12, !mcsema_real_eip !18 :          <ab>	callq	0
386 :   %138 = load i64* %R13_val, !mcsema_real_eip !18 :          <ab>	callq	0
387 :   store i64 %138, i64* %R13, !mcsema_real_eip !18 :          <ab>	callq	0
388 :   %139 = load i64* %R14_val, !mcsema_real_eip !18 :          <ab>	callq	0
389 :   store i64 %139, i64* %R14, !mcsema_real_eip !18 :          <ab>	callq	0
390 :   %140 = load i64* %R15_val, !mcsema_real_eip !18 :          <ab>	callq	0
391 :   store i64 %140, i64* %R15, !mcsema_real_eip !18 :          <ab>	callq	0
392 :   %141 = load i64* %RIP_val, !mcsema_real_eip !18 :          <ab>	callq	0
393 :   store i64 %141, i64* %RIP, !mcsema_real_eip !18 :          <ab>	callq	0
394 :   %142 = load i1* %CF_val, !mcsema_real_eip !18 :          <ab>	callq	0
395 :   store i1 %142, i1* %CF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
396 :   %143 = load i1* %PF_val, !mcsema_real_eip !18 :          <ab>	callq	0
397 :   store i1 %143, i1* %PF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
398 :   %144 = load i1* %AF_val, !mcsema_real_eip !18 :          <ab>	callq	0
399 :   store i1 %144, i1* %AF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
400 :   %145 = load i1* %ZF_val, !mcsema_real_eip !18 :          <ab>	callq	0
401 :   store i1 %145, i1* %ZF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
402 :   %146 = load i1* %SF_val, !mcsema_real_eip !18 :          <ab>	callq	0
403 :   store i1 %146, i1* %SF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
404 :   %147 = load i1* %OF_val, !mcsema_real_eip !18 :          <ab>	callq	0
405 :   store i1 %147, i1* %OF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
406 :   %148 = load i1* %DF_val, !mcsema_real_eip !18 :          <ab>	callq	0
407 :   store i1 %148, i1* %DF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
408 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !18 :          <ab>	callq	0
409 :   %149 = load i1* %FPU_B_val, !mcsema_real_eip !18 :          <ab>	callq	0
410 :   store i1 %149, i1* %FPU_B, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
411 :   %150 = load i1* %FPU_C3_val, !mcsema_real_eip !18 :          <ab>	callq	0
412 :   store i1 %150, i1* %FPU_C3, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
413 :   %151 = load i3* %FPU_TOP_val, !mcsema_real_eip !18 :          <ab>	callq	0
414 :   store i3 %151, i3* %FPU_TOP, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
415 :   %152 = load i1* %FPU_C2_val, !mcsema_real_eip !18 :          <ab>	callq	0
416 :   store i1 %152, i1* %FPU_C2, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
417 :   %153 = load i1* %FPU_C1_val, !mcsema_real_eip !18 :          <ab>	callq	0
418 :   store i1 %153, i1* %FPU_C1, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
419 :   %154 = load i1* %FPU_C0_val, !mcsema_real_eip !18 :          <ab>	callq	0
420 :   store i1 %154, i1* %FPU_C0, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
421 :   %155 = load i1* %FPU_ES_val, !mcsema_real_eip !18 :          <ab>	callq	0
422 :   store i1 %155, i1* %FPU_ES, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
423 :   %156 = load i1* %FPU_SF_val, !mcsema_real_eip !18 :          <ab>	callq	0
424 :   store i1 %156, i1* %FPU_SF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
425 :   %157 = load i1* %FPU_PE_val, !mcsema_real_eip !18 :          <ab>	callq	0
426 :   store i1 %157, i1* %FPU_PE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
427 :   %158 = load i1* %FPU_UE_val, !mcsema_real_eip !18 :          <ab>	callq	0
428 :   store i1 %158, i1* %FPU_UE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
429 :   %159 = load i1* %FPU_OE_val, !mcsema_real_eip !18 :          <ab>	callq	0
430 :   store i1 %159, i1* %FPU_OE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
431 :   %160 = load i1* %FPU_ZE_val, !mcsema_real_eip !18 :          <ab>	callq	0
432 :   store i1 %160, i1* %FPU_ZE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
433 :   %161 = load i1* %FPU_DE_val, !mcsema_real_eip !18 :          <ab>	callq	0
434 :   store i1 %161, i1* %FPU_DE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
435 :   %162 = load i1* %FPU_IE_val, !mcsema_real_eip !18 :          <ab>	callq	0
436 :   store i1 %162, i1* %FPU_IE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
437 :   %163 = load i1* %FPU_X_val, !mcsema_real_eip !18 :          <ab>	callq	0
438 :   store i1 %163, i1* %FPU_X, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
439 :   %164 = load i2* %FPU_RC_val, !mcsema_real_eip !18 :          <ab>	callq	0
440 :   store i2 %164, i2* %FPU_RC, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
441 :   %165 = load i2* %FPU_PC_val, !mcsema_real_eip !18 :          <ab>	callq	0
442 :   store i2 %165, i2* %FPU_PC, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
443 :   %166 = load i1* %FPU_PM_val, !mcsema_real_eip !18 :          <ab>	callq	0
444 :   store i1 %166, i1* %FPU_PM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
445 :   %167 = load i1* %FPU_UM_val, !mcsema_real_eip !18 :          <ab>	callq	0
446 :   store i1 %167, i1* %FPU_UM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
447 :   %168 = load i1* %FPU_OM_val, !mcsema_real_eip !18 :          <ab>	callq	0
448 :   store i1 %168, i1* %FPU_OM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
449 :   %169 = load i1* %FPU_ZM_val, !mcsema_real_eip !18 :          <ab>	callq	0
450 :   store i1 %169, i1* %FPU_ZM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
451 :   %170 = load i1* %FPU_DM_val, !mcsema_real_eip !18 :          <ab>	callq	0
452 :   store i1 %170, i1* %FPU_DM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
453 :   %171 = load i1* %FPU_IM_val, !mcsema_real_eip !18 :          <ab>	callq	0
454 :   store i1 %171, i1* %FPU_IM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0

455 :   %172 = load i64* %53, align 4 : NIL
456 :   store i64 %172, i64* %52, align 4 : NIL

457 :   %173 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !18 :          <ab>	callq	0
458 :   store i16 %173, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
459 :   %174 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !18 :          <ab>	callq	0
460 :   store i64 %174, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
461 :   %175 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !18 :          <ab>	callq	0
462 :   store i16 %175, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
463 :   %176 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !18 :          <ab>	callq	0
464 :   store i64 %176, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
465 :   %177 = load i128* %XMM0_val, !mcsema_real_eip !18 :          <ab>	callq	0
466 :   store i128 %177, i128* %XMM0, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
467 :   %178 = load i128* %XMM1_val, !mcsema_real_eip !18 :          <ab>	callq	0
468 :   store i128 %178, i128* %XMM1, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
469 :   %179 = load i128* %XMM2_val, !mcsema_real_eip !18 :          <ab>	callq	0
470 :   store i128 %179, i128* %XMM2, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
471 :   %180 = load i128* %XMM3_val, !mcsema_real_eip !18 :          <ab>	callq	0
472 :   store i128 %180, i128* %XMM3, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
473 :   %181 = load i128* %XMM4_val, !mcsema_real_eip !18 :          <ab>	callq	0
474 :   store i128 %181, i128* %XMM4, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
475 :   %182 = load i128* %XMM5_val, !mcsema_real_eip !18 :          <ab>	callq	0
476 :   store i128 %182, i128* %XMM5, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
477 :   %183 = load i128* %XMM6_val, !mcsema_real_eip !18 :          <ab>	callq	0
478 :   store i128 %183, i128* %XMM6, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
479 :   %184 = load i128* %XMM7_val, !mcsema_real_eip !18 :          <ab>	callq	0
480 :   store i128 %184, i128* %XMM7, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
481 :   %185 = load i128* %XMM8_val, !mcsema_real_eip !18 :          <ab>	callq	0
482 :   store i128 %185, i128* %XMM8, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
483 :   %186 = load i128* %XMM9_val, !mcsema_real_eip !18 :          <ab>	callq	0
484 :   store i128 %186, i128* %XMM9, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
485 :   %187 = load i128* %XMM10_val, !mcsema_real_eip !18 :          <ab>	callq	0
486 :   store i128 %187, i128* %XMM10, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
487 :   %188 = load i128* %XMM11_val, !mcsema_real_eip !18 :          <ab>	callq	0
488 :   store i128 %188, i128* %XMM11, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
489 :   %189 = load i128* %XMM12_val, !mcsema_real_eip !18 :          <ab>	callq	0
490 :   store i128 %189, i128* %XMM12, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
491 :   %190 = load i128* %XMM13_val, !mcsema_real_eip !18 :          <ab>	callq	0
492 :   store i128 %190, i128* %XMM13, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
493 :   %191 = load i128* %XMM14_val, !mcsema_real_eip !18 :          <ab>	callq	0
494 :   store i128 %191, i128* %XMM14, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
495 :   %192 = load i128* %XMM15_val, !mcsema_real_eip !18 :          <ab>	callq	0
496 :   store i128 %192, i128* %XMM15, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
497 :   %193 = load i64* %STACK_BASE_val, !mcsema_real_eip !18 :          <ab>	callq	0
498 :   store i64 %193, i64* %STACK_BASE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
499 :   %194 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !18 :          <ab>	callq	0
500 :   store i64 %194, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
501 :   tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !18 :          <ab>	callq	0
502 :   %195 = load i64* %RAX, !mcsema_real_eip !18 :          <ab>	callq	0
503 :   store i64 %195, i64* %RAX_val, !mcsema_real_eip !18 :          <ab>	callq	0
504 :   %196 = load i64* %RBX, !mcsema_real_eip !18 :          <ab>	callq	0
505 :   store i64 %196, i64* %RBX_val, !mcsema_real_eip !18 :          <ab>	callq	0
506 :   %197 = load i64* %RCX, !mcsema_real_eip !18 :          <ab>	callq	0
507 :   store i64 %197, i64* %RCX_val, !mcsema_real_eip !18 :          <ab>	callq	0
508 :   %198 = load i64* %RDX, !mcsema_real_eip !18 :          <ab>	callq	0
509 :   store i64 %198, i64* %RDX_val, !mcsema_real_eip !18 :          <ab>	callq	0
510 :   %199 = load i64* %RSI, !mcsema_real_eip !18 :          <ab>	callq	0
511 :   store i64 %199, i64* %RSI_val, !mcsema_real_eip !18 :          <ab>	callq	0
512 :   %200 = load i64* %RDI, !mcsema_real_eip !18 :          <ab>	callq	0
513 :   store i64 %200, i64* %RDI_val, !mcsema_real_eip !18 :          <ab>	callq	0
514 :   %201 = load i64* %RSP, !mcsema_real_eip !18 :          <ab>	callq	0
515 :   store i64 %201, i64* %RSP_val, !mcsema_real_eip !18 :          <ab>	callq	0
516 :   %202 = load i64* %RBP, !mcsema_real_eip !18 :          <ab>	callq	0
517 :   store i64 %202, i64* %RBP_val, !mcsema_real_eip !18 :          <ab>	callq	0
518 :   %203 = load i64* %R8, !mcsema_real_eip !18 :          <ab>	callq	0
519 :   store i64 %203, i64* %R8_val, !mcsema_real_eip !18 :          <ab>	callq	0
520 :   %204 = load i64* %R9, !mcsema_real_eip !18 :          <ab>	callq	0
521 :   store i64 %204, i64* %R9_val, !mcsema_real_eip !18 :          <ab>	callq	0
522 :   %205 = load i64* %R10, !mcsema_real_eip !18 :          <ab>	callq	0
523 :   store i64 %205, i64* %R10_val, !mcsema_real_eip !18 :          <ab>	callq	0
524 :   %206 = load i64* %R11, !mcsema_real_eip !18 :          <ab>	callq	0
525 :   store i64 %206, i64* %R11_val, !mcsema_real_eip !18 :          <ab>	callq	0
526 :   %207 = load i64* %R12, !mcsema_real_eip !18 :          <ab>	callq	0
527 :   store i64 %207, i64* %R12_val, !mcsema_real_eip !18 :          <ab>	callq	0
528 :   %208 = load i64* %R13, !mcsema_real_eip !18 :          <ab>	callq	0
529 :   store i64 %208, i64* %R13_val, !mcsema_real_eip !18 :          <ab>	callq	0
530 :   %209 = load i64* %R14, !mcsema_real_eip !18 :          <ab>	callq	0
531 :   store i64 %209, i64* %R14_val, !mcsema_real_eip !18 :          <ab>	callq	0
532 :   %210 = load i64* %R15, !mcsema_real_eip !18 :          <ab>	callq	0
533 :   store i64 %210, i64* %R15_val, !mcsema_real_eip !18 :          <ab>	callq	0
534 :   %211 = load i64* %RIP, !mcsema_real_eip !18 :          <ab>	callq	0
535 :   store i64 %211, i64* %RIP_val, !mcsema_real_eip !18 :          <ab>	callq	0
536 :   %212 = load i1* %CF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
537 :   store i1 %212, i1* %CF_val, !mcsema_real_eip !18 :          <ab>	callq	0
538 :   %213 = load i1* %PF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
539 :   store i1 %213, i1* %PF_val, !mcsema_real_eip !18 :          <ab>	callq	0
540 :   %214 = load i1* %AF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
541 :   store i1 %214, i1* %AF_val, !mcsema_real_eip !18 :          <ab>	callq	0
542 :   %215 = load i1* %ZF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
543 :   store i1 %215, i1* %ZF_val, !mcsema_real_eip !18 :          <ab>	callq	0
544 :   %216 = load i1* %SF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
545 :   store i1 %216, i1* %SF_val, !mcsema_real_eip !18 :          <ab>	callq	0
546 :   %217 = load i1* %OF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
547 :   store i1 %217, i1* %OF_val, !mcsema_real_eip !18 :          <ab>	callq	0
548 :   %218 = load i1* %DF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
549 :   store i1 %218, i1* %DF_val, !mcsema_real_eip !18 :          <ab>	callq	0
550 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !18 :          <ab>	callq	0
551 :   %219 = load i1* %FPU_B, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
552 :   store i1 %219, i1* %FPU_B_val, !mcsema_real_eip !18 :          <ab>	callq	0
553 :   %220 = load i1* %FPU_C3, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
554 :   store i1 %220, i1* %FPU_C3_val, !mcsema_real_eip !18 :          <ab>	callq	0
555 :   %221 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
556 :   store i3 %221, i3* %FPU_TOP_val, !mcsema_real_eip !18 :          <ab>	callq	0
557 :   %222 = load i1* %FPU_C2, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
558 :   store i1 %222, i1* %FPU_C2_val, !mcsema_real_eip !18 :          <ab>	callq	0
559 :   %223 = load i1* %FPU_C1, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
560 :   store i1 %223, i1* %FPU_C1_val, !mcsema_real_eip !18 :          <ab>	callq	0
561 :   %224 = load i1* %FPU_C0, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
562 :   store i1 %224, i1* %FPU_C0_val, !mcsema_real_eip !18 :          <ab>	callq	0
563 :   %225 = load i1* %FPU_ES, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
564 :   store i1 %225, i1* %FPU_ES_val, !mcsema_real_eip !18 :          <ab>	callq	0
565 :   %226 = load i1* %FPU_SF, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
566 :   store i1 %226, i1* %FPU_SF_val, !mcsema_real_eip !18 :          <ab>	callq	0
567 :   %227 = load i1* %FPU_PE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
568 :   store i1 %227, i1* %FPU_PE_val, !mcsema_real_eip !18 :          <ab>	callq	0
569 :   %228 = load i1* %FPU_UE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
570 :   store i1 %228, i1* %FPU_UE_val, !mcsema_real_eip !18 :          <ab>	callq	0
571 :   %229 = load i1* %FPU_OE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
572 :   store i1 %229, i1* %FPU_OE_val, !mcsema_real_eip !18 :          <ab>	callq	0
573 :   %230 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
574 :   store i1 %230, i1* %FPU_ZE_val, !mcsema_real_eip !18 :          <ab>	callq	0
575 :   %231 = load i1* %FPU_DE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
576 :   store i1 %231, i1* %FPU_DE_val, !mcsema_real_eip !18 :          <ab>	callq	0
577 :   %232 = load i1* %FPU_IE, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
578 :   store i1 %232, i1* %FPU_IE_val, !mcsema_real_eip !18 :          <ab>	callq	0
579 :   %233 = load i1* %FPU_X, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
580 :   store i1 %233, i1* %FPU_X_val, !mcsema_real_eip !18 :          <ab>	callq	0
581 :   %234 = load i2* %FPU_RC, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
582 :   store i2 %234, i2* %FPU_RC_val, !mcsema_real_eip !18 :          <ab>	callq	0
583 :   %235 = load i2* %FPU_PC, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
584 :   store i2 %235, i2* %FPU_PC_val, !mcsema_real_eip !18 :          <ab>	callq	0
585 :   %236 = load i1* %FPU_PM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
586 :   store i1 %236, i1* %FPU_PM_val, !mcsema_real_eip !18 :          <ab>	callq	0
587 :   %237 = load i1* %FPU_UM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
588 :   store i1 %237, i1* %FPU_UM_val, !mcsema_real_eip !18 :          <ab>	callq	0
589 :   %238 = load i1* %FPU_OM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
590 :   store i1 %238, i1* %FPU_OM_val, !mcsema_real_eip !18 :          <ab>	callq	0
591 :   %239 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
592 :   store i1 %239, i1* %FPU_ZM_val, !mcsema_real_eip !18 :          <ab>	callq	0
593 :   %240 = load i1* %FPU_DM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
594 :   store i1 %240, i1* %FPU_DM_val, !mcsema_real_eip !18 :          <ab>	callq	0
595 :   %241 = load i1* %FPU_IM, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
596 :   store i1 %241, i1* %FPU_IM_val, !mcsema_real_eip !18 :          <ab>	callq	0

597 :   %242 = load i64* %52, align 4 : NIL
598 :   store i64 %242, i64* %53, align 4 : NIL

599 :   %243 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
600 :   store i16 %243, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !18 :          <ab>	callq	0
601 :   %244 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !18 :          <ab>	callq	0
602 :   store i64 %244, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !18 :          <ab>	callq	0
603 :   %245 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
604 :   store i16 %245, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !18 :          <ab>	callq	0
605 :   %246 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !18 :          <ab>	callq	0
606 :   store i64 %246, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !18 :          <ab>	callq	0
607 :   %247 = load i128* %XMM0, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
608 :   store i128 %247, i128* %XMM0_val, !mcsema_real_eip !18 :          <ab>	callq	0
609 :   %248 = load i128* %XMM1, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
610 :   store i128 %248, i128* %XMM1_val, !mcsema_real_eip !18 :          <ab>	callq	0
611 :   %249 = load i128* %XMM2, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
612 :   store i128 %249, i128* %XMM2_val, !mcsema_real_eip !18 :          <ab>	callq	0
613 :   %250 = load i128* %XMM3, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
614 :   store i128 %250, i128* %XMM3_val, !mcsema_real_eip !18 :          <ab>	callq	0
615 :   %251 = load i128* %XMM4, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
616 :   store i128 %251, i128* %XMM4_val, !mcsema_real_eip !18 :          <ab>	callq	0
617 :   %252 = load i128* %XMM5, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
618 :   store i128 %252, i128* %XMM5_val, !mcsema_real_eip !18 :          <ab>	callq	0
619 :   %253 = load i128* %XMM6, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
620 :   store i128 %253, i128* %XMM6_val, !mcsema_real_eip !18 :          <ab>	callq	0
621 :   %254 = load i128* %XMM7, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
622 :   store i128 %254, i128* %XMM7_val, !mcsema_real_eip !18 :          <ab>	callq	0
623 :   %255 = load i128* %XMM8, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
624 :   store i128 %255, i128* %XMM8_val, !mcsema_real_eip !18 :          <ab>	callq	0
625 :   %256 = load i128* %XMM9, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
626 :   store i128 %256, i128* %XMM9_val, !mcsema_real_eip !18 :          <ab>	callq	0
627 :   %257 = load i128* %XMM10, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
628 :   store i128 %257, i128* %XMM10_val, !mcsema_real_eip !18 :          <ab>	callq	0
629 :   %258 = load i128* %XMM11, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
630 :   store i128 %258, i128* %XMM11_val, !mcsema_real_eip !18 :          <ab>	callq	0
631 :   %259 = load i128* %XMM12, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
632 :   store i128 %259, i128* %XMM12_val, !mcsema_real_eip !18 :          <ab>	callq	0
633 :   %260 = load i128* %XMM13, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
634 :   store i128 %260, i128* %XMM13_val, !mcsema_real_eip !18 :          <ab>	callq	0
635 :   %261 = load i128* %XMM14, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
636 :   store i128 %261, i128* %XMM14_val, !mcsema_real_eip !18 :          <ab>	callq	0
637 :   %262 = load i128* %XMM15, align 1, !mcsema_real_eip !18 :          <ab>	callq	0
638 :   store i128 %262, i128* %XMM15_val, !mcsema_real_eip !18 :          <ab>	callq	0
639 :   %263 = load i64* %STACK_BASE, !mcsema_real_eip !18 :          <ab>	callq	0
640 :   store i64 %263, i64* %STACK_BASE_val, !mcsema_real_eip !18 :          <ab>	callq	0
641 :   %264 = load i64* %STACK_LIMIT, !mcsema_real_eip !18 :          <ab>	callq	0
642 :   store i64 %264, i64* %STACK_LIMIT_val, !mcsema_real_eip !18 :          <ab>	callq	0

643 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !19 :          <b0>	movl	$0, %eax

644 :   %265 = load i64* %RBP_val, !mcsema_real_eip !20 :          <b5>	leave
645 :   store i64 %265, i64* %RSP_val, !mcsema_real_eip !20 :          <b5>	leave
646 :   %266 = inttoptr i64 %265 to i64*, !mcsema_real_eip !20 :          <b5>	leave
647 :   %267 = load i64* %266, !mcsema_real_eip !20 :          <b5>	leave
648 :   store i64 %267, i64* %RBP_val, !mcsema_real_eip !20 :          <b5>	leave

649 :   %268 = add i64 %265, 16, !mcsema_real_eip !21 :          <b6>	retq
650 :   store i64 %268, i64* %RSP_val, !mcsema_real_eip !21 :          <b6>	retq
651 :   %269 = load i64* %RAX_val, !mcsema_real_eip !21 :          <b6>	retq
652 :   store i64 %269, i64* %RAX, !mcsema_real_eip !21 :          <b6>	retq
653 :   %270 = load i64* %RBX_val, !mcsema_real_eip !21 :          <b6>	retq
654 :   store i64 %270, i64* %RBX, !mcsema_real_eip !21 :          <b6>	retq
655 :   %271 = load i64* %RCX_val, !mcsema_real_eip !21 :          <b6>	retq
656 :   store i64 %271, i64* %RCX, !mcsema_real_eip !21 :          <b6>	retq
657 :   %272 = load i64* %RDX_val, !mcsema_real_eip !21 :          <b6>	retq
658 :   store i64 %272, i64* %RDX, !mcsema_real_eip !21 :          <b6>	retq
659 :   %273 = load i64* %RSI_val, !mcsema_real_eip !21 :          <b6>	retq
660 :   store i64 %273, i64* %RSI, !mcsema_real_eip !21 :          <b6>	retq
661 :   %274 = load i64* %RDI_val, !mcsema_real_eip !21 :          <b6>	retq
662 :   store i64 %274, i64* %RDI, !mcsema_real_eip !21 :          <b6>	retq
663 :   %275 = load i64* %RSP_val, !mcsema_real_eip !21 :          <b6>	retq
664 :   store i64 %275, i64* %RSP, !mcsema_real_eip !21 :          <b6>	retq
665 :   %276 = load i64* %RBP_val, !mcsema_real_eip !21 :          <b6>	retq
666 :   store i64 %276, i64* %RBP, !mcsema_real_eip !21 :          <b6>	retq
667 :   %277 = load i64* %R8_val, !mcsema_real_eip !21 :          <b6>	retq
668 :   store i64 %277, i64* %R8, !mcsema_real_eip !21 :          <b6>	retq
669 :   %278 = load i64* %R9_val, !mcsema_real_eip !21 :          <b6>	retq
670 :   store i64 %278, i64* %R9, !mcsema_real_eip !21 :          <b6>	retq
671 :   %279 = load i64* %R10_val, !mcsema_real_eip !21 :          <b6>	retq
672 :   store i64 %279, i64* %R10, !mcsema_real_eip !21 :          <b6>	retq
673 :   %280 = load i64* %R11_val, !mcsema_real_eip !21 :          <b6>	retq
674 :   store i64 %280, i64* %R11, !mcsema_real_eip !21 :          <b6>	retq
675 :   %281 = load i64* %R12_val, !mcsema_real_eip !21 :          <b6>	retq
676 :   store i64 %281, i64* %R12, !mcsema_real_eip !21 :          <b6>	retq
677 :   %282 = load i64* %R13_val, !mcsema_real_eip !21 :          <b6>	retq
678 :   store i64 %282, i64* %R13, !mcsema_real_eip !21 :          <b6>	retq
679 :   %283 = load i64* %R14_val, !mcsema_real_eip !21 :          <b6>	retq
680 :   store i64 %283, i64* %R14, !mcsema_real_eip !21 :          <b6>	retq
681 :   %284 = load i64* %R15_val, !mcsema_real_eip !21 :          <b6>	retq
682 :   store i64 %284, i64* %R15, !mcsema_real_eip !21 :          <b6>	retq
683 :   %285 = load i64* %RIP_val, !mcsema_real_eip !21 :          <b6>	retq
684 :   store i64 %285, i64* %RIP, !mcsema_real_eip !21 :          <b6>	retq
685 :   %286 = load i1* %CF_val, !mcsema_real_eip !21 :          <b6>	retq
686 :   store i1 %286, i1* %CF, align 1, !mcsema_real_eip !21 :          <b6>	retq
687 :   %287 = load i1* %PF_val, !mcsema_real_eip !21 :          <b6>	retq
688 :   store i1 %287, i1* %PF, align 1, !mcsema_real_eip !21 :          <b6>	retq
689 :   %288 = load i1* %AF_val, !mcsema_real_eip !21 :          <b6>	retq
690 :   store i1 %288, i1* %AF, align 1, !mcsema_real_eip !21 :          <b6>	retq
691 :   %289 = load i1* %ZF_val, !mcsema_real_eip !21 :          <b6>	retq
692 :   store i1 %289, i1* %ZF, align 1, !mcsema_real_eip !21 :          <b6>	retq
693 :   %290 = load i1* %SF_val, !mcsema_real_eip !21 :          <b6>	retq
694 :   store i1 %290, i1* %SF, align 1, !mcsema_real_eip !21 :          <b6>	retq
695 :   %291 = load i1* %OF_val, !mcsema_real_eip !21 :          <b6>	retq
696 :   store i1 %291, i1* %OF, align 1, !mcsema_real_eip !21 :          <b6>	retq
697 :   %292 = load i1* %DF_val, !mcsema_real_eip !21 :          <b6>	retq
698 :   store i1 %292, i1* %DF, align 1, !mcsema_real_eip !21 :          <b6>	retq
699 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !21 :          <b6>	retq
700 :   %293 = load i1* %FPU_B_val, !mcsema_real_eip !21 :          <b6>	retq
701 :   store i1 %293, i1* %FPU_B, align 1, !mcsema_real_eip !21 :          <b6>	retq
702 :   %294 = load i1* %FPU_C3_val, !mcsema_real_eip !21 :          <b6>	retq
703 :   store i1 %294, i1* %FPU_C3, align 1, !mcsema_real_eip !21 :          <b6>	retq
704 :   %295 = load i3* %FPU_TOP_val, !mcsema_real_eip !21 :          <b6>	retq
705 :   store i3 %295, i3* %FPU_TOP, align 1, !mcsema_real_eip !21 :          <b6>	retq
706 :   %296 = load i1* %FPU_C2_val, !mcsema_real_eip !21 :          <b6>	retq
707 :   store i1 %296, i1* %FPU_C2, align 1, !mcsema_real_eip !21 :          <b6>	retq
708 :   %297 = load i1* %FPU_C1_val, !mcsema_real_eip !21 :          <b6>	retq
709 :   store i1 %297, i1* %FPU_C1, align 1, !mcsema_real_eip !21 :          <b6>	retq
710 :   %298 = load i1* %FPU_C0_val, !mcsema_real_eip !21 :          <b6>	retq
711 :   store i1 %298, i1* %FPU_C0, align 1, !mcsema_real_eip !21 :          <b6>	retq
712 :   %299 = load i1* %FPU_ES_val, !mcsema_real_eip !21 :          <b6>	retq
713 :   store i1 %299, i1* %FPU_ES, align 1, !mcsema_real_eip !21 :          <b6>	retq
714 :   %300 = load i1* %FPU_SF_val, !mcsema_real_eip !21 :          <b6>	retq
715 :   store i1 %300, i1* %FPU_SF, align 1, !mcsema_real_eip !21 :          <b6>	retq
716 :   %301 = load i1* %FPU_PE_val, !mcsema_real_eip !21 :          <b6>	retq
717 :   store i1 %301, i1* %FPU_PE, align 1, !mcsema_real_eip !21 :          <b6>	retq
718 :   %302 = load i1* %FPU_UE_val, !mcsema_real_eip !21 :          <b6>	retq
719 :   store i1 %302, i1* %FPU_UE, align 1, !mcsema_real_eip !21 :          <b6>	retq
720 :   %303 = load i1* %FPU_OE_val, !mcsema_real_eip !21 :          <b6>	retq
721 :   store i1 %303, i1* %FPU_OE, align 1, !mcsema_real_eip !21 :          <b6>	retq
722 :   %304 = load i1* %FPU_ZE_val, !mcsema_real_eip !21 :          <b6>	retq
723 :   store i1 %304, i1* %FPU_ZE, align 1, !mcsema_real_eip !21 :          <b6>	retq
724 :   %305 = load i1* %FPU_DE_val, !mcsema_real_eip !21 :          <b6>	retq
725 :   store i1 %305, i1* %FPU_DE, align 1, !mcsema_real_eip !21 :          <b6>	retq
726 :   %306 = load i1* %FPU_IE_val, !mcsema_real_eip !21 :          <b6>	retq
727 :   store i1 %306, i1* %FPU_IE, align 1, !mcsema_real_eip !21 :          <b6>	retq
728 :   %307 = load i1* %FPU_X_val, !mcsema_real_eip !21 :          <b6>	retq
729 :   store i1 %307, i1* %FPU_X, align 1, !mcsema_real_eip !21 :          <b6>	retq
730 :   %308 = load i2* %FPU_RC_val, !mcsema_real_eip !21 :          <b6>	retq
731 :   store i2 %308, i2* %FPU_RC, align 1, !mcsema_real_eip !21 :          <b6>	retq
732 :   %309 = load i2* %FPU_PC_val, !mcsema_real_eip !21 :          <b6>	retq
733 :   store i2 %309, i2* %FPU_PC, align 1, !mcsema_real_eip !21 :          <b6>	retq
734 :   %310 = load i1* %FPU_PM_val, !mcsema_real_eip !21 :          <b6>	retq
735 :   store i1 %310, i1* %FPU_PM, align 1, !mcsema_real_eip !21 :          <b6>	retq
736 :   %311 = load i1* %FPU_UM_val, !mcsema_real_eip !21 :          <b6>	retq
737 :   store i1 %311, i1* %FPU_UM, align 1, !mcsema_real_eip !21 :          <b6>	retq
738 :   %312 = load i1* %FPU_OM_val, !mcsema_real_eip !21 :          <b6>	retq
739 :   store i1 %312, i1* %FPU_OM, align 1, !mcsema_real_eip !21 :          <b6>	retq
740 :   %313 = load i1* %FPU_ZM_val, !mcsema_real_eip !21 :          <b6>	retq
741 :   store i1 %313, i1* %FPU_ZM, align 1, !mcsema_real_eip !21 :          <b6>	retq
742 :   %314 = load i1* %FPU_DM_val, !mcsema_real_eip !21 :          <b6>	retq
743 :   store i1 %314, i1* %FPU_DM, align 1, !mcsema_real_eip !21 :          <b6>	retq
744 :   %315 = load i1* %FPU_IM_val, !mcsema_real_eip !21 :          <b6>	retq
745 :   store i1 %315, i1* %FPU_IM, align 1, !mcsema_real_eip !21 :          <b6>	retq

746 :   %316 = load i64* %53, align 4 : NIL
747 :   store i64 %316, i64* %52, align 4 : NIL

748 :   %317 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !21 :          <b6>	retq
749 :   store i16 %317, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !21 :          <b6>	retq
750 :   %318 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !21 :          <b6>	retq
751 :   store i64 %318, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !21 :          <b6>	retq
752 :   %319 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !21 :          <b6>	retq
753 :   store i16 %319, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !21 :          <b6>	retq
754 :   %320 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !21 :          <b6>	retq
755 :   store i64 %320, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !21 :          <b6>	retq
756 :   %321 = load i128* %XMM0_val, !mcsema_real_eip !21 :          <b6>	retq
757 :   store i128 %321, i128* %XMM0, align 1, !mcsema_real_eip !21 :          <b6>	retq
758 :   %322 = load i128* %XMM1_val, !mcsema_real_eip !21 :          <b6>	retq
759 :   store i128 %322, i128* %XMM1, align 1, !mcsema_real_eip !21 :          <b6>	retq
760 :   %323 = load i128* %XMM2_val, !mcsema_real_eip !21 :          <b6>	retq
761 :   store i128 %323, i128* %XMM2, align 1, !mcsema_real_eip !21 :          <b6>	retq
762 :   %324 = load i128* %XMM3_val, !mcsema_real_eip !21 :          <b6>	retq
763 :   store i128 %324, i128* %XMM3, align 1, !mcsema_real_eip !21 :          <b6>	retq
764 :   %325 = load i128* %XMM4_val, !mcsema_real_eip !21 :          <b6>	retq
765 :   store i128 %325, i128* %XMM4, align 1, !mcsema_real_eip !21 :          <b6>	retq
766 :   %326 = load i128* %XMM5_val, !mcsema_real_eip !21 :          <b6>	retq
767 :   store i128 %326, i128* %XMM5, align 1, !mcsema_real_eip !21 :          <b6>	retq
768 :   %327 = load i128* %XMM6_val, !mcsema_real_eip !21 :          <b6>	retq
769 :   store i128 %327, i128* %XMM6, align 1, !mcsema_real_eip !21 :          <b6>	retq
770 :   %328 = load i128* %XMM7_val, !mcsema_real_eip !21 :          <b6>	retq
771 :   store i128 %328, i128* %XMM7, align 1, !mcsema_real_eip !21 :          <b6>	retq
772 :   %329 = load i128* %XMM8_val, !mcsema_real_eip !21 :          <b6>	retq
773 :   store i128 %329, i128* %XMM8, align 1, !mcsema_real_eip !21 :          <b6>	retq
774 :   %330 = load i128* %XMM9_val, !mcsema_real_eip !21 :          <b6>	retq
775 :   store i128 %330, i128* %XMM9, align 1, !mcsema_real_eip !21 :          <b6>	retq
776 :   %331 = load i128* %XMM10_val, !mcsema_real_eip !21 :          <b6>	retq
777 :   store i128 %331, i128* %XMM10, align 1, !mcsema_real_eip !21 :          <b6>	retq
778 :   %332 = load i128* %XMM11_val, !mcsema_real_eip !21 :          <b6>	retq
779 :   store i128 %332, i128* %XMM11, align 1, !mcsema_real_eip !21 :          <b6>	retq
780 :   %333 = load i128* %XMM12_val, !mcsema_real_eip !21 :          <b6>	retq
781 :   store i128 %333, i128* %XMM12, align 1, !mcsema_real_eip !21 :          <b6>	retq
782 :   %334 = load i128* %XMM13_val, !mcsema_real_eip !21 :          <b6>	retq
783 :   store i128 %334, i128* %XMM13, align 1, !mcsema_real_eip !21 :          <b6>	retq
784 :   %335 = load i128* %XMM14_val, !mcsema_real_eip !21 :          <b6>	retq
785 :   store i128 %335, i128* %XMM14, align 1, !mcsema_real_eip !21 :          <b6>	retq
786 :   %336 = load i128* %XMM15_val, !mcsema_real_eip !21 :          <b6>	retq
787 :   store i128 %336, i128* %XMM15, align 1, !mcsema_real_eip !21 :          <b6>	retq
788 :   %337 = load i64* %STACK_BASE_val, !mcsema_real_eip !21 :          <b6>	retq
789 :   store i64 %337, i64* %STACK_BASE, align 1, !mcsema_real_eip !21 :          <b6>	retq
790 :   %338 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !21 :          <b6>	retq
791 :   store i64 %338, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !21 :          <b6>	retq
792 :   ret void, !mcsema_real_eip !21 :          <b6>	retq
========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, -44, !mcsema_real_eip !4 :          <4>	movl	%edi, -36(%rbp)
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <4>	movl	%edi, -36(%rbp)
297 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <4>	movl	%edi, -36(%rbp)
298 :   %84 = trunc i64 %83 to i32, !mcsema_real_eip !4 :          <4>	movl	%edi, -36(%rbp)

299 :   %85 = bitcast i64* %82 to i32* : NIL

300 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <4>	movl	%edi, -36(%rbp)

301 :   %86 = load i64* %RBP_val, !mcsema_real_eip !5 :          <7>	movl	%esi, -40(%rbp)
302 :   %87 = add i64 %86, -40, !mcsema_real_eip !5 :          <7>	movl	%esi, -40(%rbp)
303 :   %88 = inttoptr i64 %87 to i64*, !mcsema_real_eip !5 :          <7>	movl	%esi, -40(%rbp)
304 :   %89 = load i64* %RSI_val, !mcsema_real_eip !5 :          <7>	movl	%esi, -40(%rbp)
305 :   %90 = trunc i64 %89 to i32, !mcsema_real_eip !5 :          <7>	movl	%esi, -40(%rbp)

306 :   %91 = bitcast i64* %88 to i32* : NIL

307 :   store i32 %90, i32* %91, !mcsema_real_eip !5 :          <7>	movl	%esi, -40(%rbp)

308 :   %92 = load i64* %RBP_val, !mcsema_real_eip !6 :          <a>	movl	%edx, -44(%rbp)
309 :   %93 = add i64 %92, -44, !mcsema_real_eip !6 :          <a>	movl	%edx, -44(%rbp)
310 :   %94 = inttoptr i64 %93 to i64*, !mcsema_real_eip !6 :          <a>	movl	%edx, -44(%rbp)
311 :   %95 = load i64* %RDX_val, !mcsema_real_eip !6 :          <a>	movl	%edx, -44(%rbp)
312 :   %96 = trunc i64 %95 to i32, !mcsema_real_eip !6 :          <a>	movl	%edx, -44(%rbp)

313 :   %97 = bitcast i64* %94 to i32* : NIL

314 :   store i32 %96, i32* %97, !mcsema_real_eip !6 :          <a>	movl	%edx, -44(%rbp)

315 :   %98 = load i64* %RBP_val, !mcsema_real_eip !7 :          <d>	movl	%ecx, -48(%rbp)
316 :   %99 = add i64 %98, -48, !mcsema_real_eip !7 :          <d>	movl	%ecx, -48(%rbp)
317 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !7 :          <d>	movl	%ecx, -48(%rbp)
318 :   %101 = load i64* %RCX_val, !mcsema_real_eip !7 :          <d>	movl	%ecx, -48(%rbp)
319 :   %102 = trunc i64 %101 to i32, !mcsema_real_eip !7 :          <d>	movl	%ecx, -48(%rbp)

320 :   %103 = bitcast i64* %100 to i32* : NIL

321 :   store i32 %102, i32* %103, !mcsema_real_eip !7 :          <d>	movl	%ecx, -48(%rbp)

322 :   %104 = load i64* %RBP_val, !mcsema_real_eip !8 :          <10>	movl	%r8d, -52(%rbp)
323 :   %105 = add i64 %104, -52, !mcsema_real_eip !8 :          <10>	movl	%r8d, -52(%rbp)
324 :   %106 = inttoptr i64 %105 to i64*, !mcsema_real_eip !8 :          <10>	movl	%r8d, -52(%rbp)
325 :   %107 = load i64* %R8_val, !mcsema_real_eip !8 :          <10>	movl	%r8d, -52(%rbp)
326 :   %108 = trunc i64 %107 to i32, !mcsema_real_eip !8 :          <10>	movl	%r8d, -52(%rbp)

327 :   %109 = bitcast i64* %106 to i32* : NIL

328 :   store i32 %108, i32* %109, !mcsema_real_eip !8 :          <10>	movl	%r8d, -52(%rbp)

329 :   %110 = load i64* %RBP_val, !mcsema_real_eip !9 :          <14>	movl	%r9d, -56(%rbp)
330 :   %111 = add i64 %110, -56, !mcsema_real_eip !9 :          <14>	movl	%r9d, -56(%rbp)
331 :   %112 = inttoptr i64 %111 to i64*, !mcsema_real_eip !9 :          <14>	movl	%r9d, -56(%rbp)
332 :   %113 = load i64* %R9_val, !mcsema_real_eip !9 :          <14>	movl	%r9d, -56(%rbp)
333 :   %114 = trunc i64 %113 to i32, !mcsema_real_eip !9 :          <14>	movl	%r9d, -56(%rbp)

334 :   %115 = bitcast i64* %112 to i32* : NIL

335 :   store i32 %114, i32* %115, !mcsema_real_eip !9 :          <14>	movl	%r9d, -56(%rbp)

336 :   %116 = load i64* %RBP_val, !mcsema_real_eip !10 :          <18>	movl	16(%rbp), %edx
337 :   %117 = add i64 %116, 16, !mcsema_real_eip !10 :          <18>	movl	16(%rbp), %edx
338 :   %118 = inttoptr i64 %117 to i64*, !mcsema_real_eip !10 :          <18>	movl	16(%rbp), %edx

339 :   %119 = bitcast i64* %118 to i32* : NIL

340 :   %120 = load i32* %119, !mcsema_real_eip !10 :          <18>	movl	16(%rbp), %edx
341 :   %121 = zext i32 %120 to i64, !mcsema_real_eip !10 :          <18>	movl	16(%rbp), %edx
342 :   store i64 %121, i64* %RDX_val, !mcsema_real_eip !10 :          <18>	movl	16(%rbp), %edx

343 :   %122 = load i64* %RBP_val, !mcsema_real_eip !11 :          <1b>	movl	-36(%rbp), %eax
344 :   %123 = add i64 %122, -36, !mcsema_real_eip !11 :          <1b>	movl	-36(%rbp), %eax
345 :   %124 = inttoptr i64 %123 to i64*, !mcsema_real_eip !11 :          <1b>	movl	-36(%rbp), %eax

346 :   %125 = bitcast i64* %124 to i32* : NIL

347 :   %126 = load i32* %125, !mcsema_real_eip !11 :          <1b>	movl	-36(%rbp), %eax
348 :   %127 = zext i32 %126 to i64, !mcsema_real_eip !11 :          <1b>	movl	-36(%rbp), %eax
349 :   store i64 %127, i64* %RAX_val, !mcsema_real_eip !11 :          <1b>	movl	-36(%rbp), %eax

350 :   %128 = load i64* %RDX_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
351 :   %129 = trunc i64 %128 to i32, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx

352 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %126, i32 %129) : NIL
353 :   %130 = extractvalue { i32, i1 } %uadd, 0 : NIL

354 :   %131 = xor i32 %130, %129, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
355 :   %132 = xor i32 %131, %126, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
356 :   %133 = and i32 %132, 16, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
357 :   %134 = icmp ne i32 %133, 0, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
358 :   store i1 %134, i1* %AF_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx

359 :   %135 = icmp slt i32 %130, 0 : NIL

360 :   store i1 %135, i1* %SF_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
361 :   %136 = icmp eq i32 %130, 0, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
362 :   store i1 %136, i1* %ZF_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
363 :   %137 = xor i32 %126, -2147483648, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
364 :   %138 = xor i32 %137, %129, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
365 :   %139 = and i32 %131, %138, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx

366 :   %140 = icmp slt i32 %139, 0 : NIL

367 :   store i1 %140, i1* %OF_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
368 :   %141 = trunc i32 %130 to i8, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
369 :   %142 = tail call i8 @llvm.ctpop.i8(i8 %141), !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx

370 :   %143 = and i8 %142, 1 : NIL
371 :   %144 = icmp eq i8 %143, 0 : NIL

372 :   store i1 %144, i1* %PF_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx

373 :   %145 = extractvalue { i32, i1 } %uadd, 1 : NIL

374 :   store i1 %145, i1* %CF_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
375 :   %146 = zext i32 %130 to i64, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx
376 :   store i64 %146, i64* %RDX_val, !mcsema_real_eip !12 :          <1e>	addl	%eax, %edx

377 :   %147 = load i64* %RBP_val, !mcsema_real_eip !13 :          <20>	movl	-40(%rbp), %eax
378 :   %148 = add i64 %147, -40, !mcsema_real_eip !13 :          <20>	movl	-40(%rbp), %eax
379 :   %149 = inttoptr i64 %148 to i64*, !mcsema_real_eip !13 :          <20>	movl	-40(%rbp), %eax

380 :   %150 = bitcast i64* %149 to i32* : NIL

381 :   %151 = load i32* %150, !mcsema_real_eip !13 :          <20>	movl	-40(%rbp), %eax
382 :   %152 = zext i32 %151 to i64, !mcsema_real_eip !13 :          <20>	movl	-40(%rbp), %eax
383 :   store i64 %152, i64* %RAX_val, !mcsema_real_eip !13 :          <20>	movl	-40(%rbp), %eax

384 :   %153 = load i64* %RDX_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
385 :   %154 = trunc i64 %153 to i32, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx

386 :   %uadd70 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %151, i32 %154) : NIL
387 :   %155 = extractvalue { i32, i1 } %uadd70, 0 : NIL

388 :   %156 = xor i32 %155, %154, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
389 :   %157 = xor i32 %156, %151, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
390 :   %158 = and i32 %157, 16, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
391 :   %159 = icmp ne i32 %158, 0, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
392 :   store i1 %159, i1* %AF_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx

393 :   %160 = icmp slt i32 %155, 0 : NIL

394 :   store i1 %160, i1* %SF_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
395 :   %161 = icmp eq i32 %155, 0, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
396 :   store i1 %161, i1* %ZF_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
397 :   %162 = xor i32 %151, -2147483648, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
398 :   %163 = xor i32 %162, %154, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
399 :   %164 = and i32 %156, %163, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx

400 :   %165 = icmp slt i32 %164, 0 : NIL

401 :   store i1 %165, i1* %OF_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
402 :   %166 = trunc i32 %155 to i8, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
403 :   %167 = tail call i8 @llvm.ctpop.i8(i8 %166), !mcsema_real_eip !14 :          <23>	addl	%eax, %edx

404 :   %168 = and i8 %167, 1 : NIL
405 :   %169 = icmp eq i8 %168, 0 : NIL

406 :   store i1 %169, i1* %PF_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx

407 :   %170 = extractvalue { i32, i1 } %uadd70, 1 : NIL

408 :   store i1 %170, i1* %CF_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
409 :   %171 = zext i32 %155 to i64, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx
410 :   store i64 %171, i64* %RDX_val, !mcsema_real_eip !14 :          <23>	addl	%eax, %edx

411 :   %172 = load i64* %RBP_val, !mcsema_real_eip !15 :          <25>	movl	-44(%rbp), %eax
412 :   %173 = add i64 %172, -44, !mcsema_real_eip !15 :          <25>	movl	-44(%rbp), %eax
413 :   %174 = inttoptr i64 %173 to i64*, !mcsema_real_eip !15 :          <25>	movl	-44(%rbp), %eax

414 :   %175 = bitcast i64* %174 to i32* : NIL

415 :   %176 = load i32* %175, !mcsema_real_eip !15 :          <25>	movl	-44(%rbp), %eax

416 :   %uadd71 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %155, i32 %176) : NIL
417 :   %177 = extractvalue { i32, i1 } %uadd71, 0 : NIL

418 :   %178 = xor i32 %177, %176, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
419 :   %179 = xor i32 %178, %155, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
420 :   %180 = and i32 %179, 16, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
421 :   %181 = icmp ne i32 %180, 0, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
422 :   store i1 %181, i1* %AF_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax

423 :   %182 = icmp slt i32 %177, 0 : NIL

424 :   store i1 %182, i1* %SF_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
425 :   %183 = icmp eq i32 %177, 0, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
426 :   store i1 %183, i1* %ZF_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
427 :   %184 = xor i32 %176, -2147483648, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
428 :   %185 = xor i32 %184, %155, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
429 :   %186 = and i32 %178, %185, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax

430 :   %187 = icmp slt i32 %186, 0 : NIL

431 :   store i1 %187, i1* %OF_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
432 :   %188 = trunc i32 %177 to i8, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
433 :   %189 = tail call i8 @llvm.ctpop.i8(i8 %188), !mcsema_real_eip !16 :          <28>	addl	%edx, %eax

434 :   %190 = and i8 %189, 1 : NIL
435 :   %191 = icmp eq i8 %190, 0 : NIL

436 :   store i1 %191, i1* %PF_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax

437 :   %192 = extractvalue { i32, i1 } %uadd71, 1 : NIL

438 :   store i1 %192, i1* %CF_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
439 :   %193 = zext i32 %177 to i64, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax
440 :   store i64 %193, i64* %RAX_val, !mcsema_real_eip !16 :          <28>	addl	%edx, %eax

441 :   %194 = load i64* %RBP_val, !mcsema_real_eip !17 :          <2a>	movl	%eax, -32(%rbp)
442 :   %195 = add i64 %194, -32, !mcsema_real_eip !17 :          <2a>	movl	%eax, -32(%rbp)
443 :   %196 = inttoptr i64 %195 to i64*, !mcsema_real_eip !17 :          <2a>	movl	%eax, -32(%rbp)

444 :   %197 = bitcast i64* %196 to i32* : NIL

445 :   store i32 %177, i32* %197, !mcsema_real_eip !17 :          <2a>	movl	%eax, -32(%rbp)

446 :   %198 = load i64* %RBP_val, !mcsema_real_eip !18 :          <2d>	movl	20(%rbp), %edx
447 :   %199 = add i64 %198, 20, !mcsema_real_eip !18 :          <2d>	movl	20(%rbp), %edx
448 :   %200 = inttoptr i64 %199 to i64*, !mcsema_real_eip !18 :          <2d>	movl	20(%rbp), %edx

449 :   %201 = bitcast i64* %200 to i32* : NIL

450 :   %202 = load i32* %201, !mcsema_real_eip !18 :          <2d>	movl	20(%rbp), %edx
451 :   %203 = zext i32 %202 to i64, !mcsema_real_eip !18 :          <2d>	movl	20(%rbp), %edx
452 :   store i64 %203, i64* %RDX_val, !mcsema_real_eip !18 :          <2d>	movl	20(%rbp), %edx

453 :   %204 = load i64* %RBP_val, !mcsema_real_eip !19 :          <30>	movl	-48(%rbp), %eax
454 :   %205 = add i64 %204, -48, !mcsema_real_eip !19 :          <30>	movl	-48(%rbp), %eax
455 :   %206 = inttoptr i64 %205 to i64*, !mcsema_real_eip !19 :          <30>	movl	-48(%rbp), %eax

456 :   %207 = bitcast i64* %206 to i32* : NIL

457 :   %208 = load i32* %207, !mcsema_real_eip !19 :          <30>	movl	-48(%rbp), %eax
458 :   %209 = zext i32 %208 to i64, !mcsema_real_eip !19 :          <30>	movl	-48(%rbp), %eax
459 :   store i64 %209, i64* %RAX_val, !mcsema_real_eip !19 :          <30>	movl	-48(%rbp), %eax

460 :   %210 = load i64* %RDX_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
461 :   %211 = trunc i64 %210 to i32, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx

462 :   %uadd72 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %208, i32 %211) : NIL
463 :   %212 = extractvalue { i32, i1 } %uadd72, 0 : NIL

464 :   %213 = xor i32 %212, %211, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
465 :   %214 = xor i32 %213, %208, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
466 :   %215 = and i32 %214, 16, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
467 :   %216 = icmp ne i32 %215, 0, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
468 :   store i1 %216, i1* %AF_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx

469 :   %217 = icmp slt i32 %212, 0 : NIL

470 :   store i1 %217, i1* %SF_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
471 :   %218 = icmp eq i32 %212, 0, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
472 :   store i1 %218, i1* %ZF_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
473 :   %219 = xor i32 %208, -2147483648, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
474 :   %220 = xor i32 %219, %211, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
475 :   %221 = and i32 %213, %220, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx

476 :   %222 = icmp slt i32 %221, 0 : NIL

477 :   store i1 %222, i1* %OF_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
478 :   %223 = trunc i32 %212 to i8, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
479 :   %224 = tail call i8 @llvm.ctpop.i8(i8 %223), !mcsema_real_eip !20 :          <33>	addl	%eax, %edx

480 :   %225 = and i8 %224, 1 : NIL
481 :   %226 = icmp eq i8 %225, 0 : NIL

482 :   store i1 %226, i1* %PF_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx

483 :   %227 = extractvalue { i32, i1 } %uadd72, 1 : NIL

484 :   store i1 %227, i1* %CF_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
485 :   %228 = zext i32 %212 to i64, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx
486 :   store i64 %228, i64* %RDX_val, !mcsema_real_eip !20 :          <33>	addl	%eax, %edx

487 :   %229 = load i64* %RBP_val, !mcsema_real_eip !21 :          <35>	movl	-52(%rbp), %eax
488 :   %230 = add i64 %229, -52, !mcsema_real_eip !21 :          <35>	movl	-52(%rbp), %eax
489 :   %231 = inttoptr i64 %230 to i64*, !mcsema_real_eip !21 :          <35>	movl	-52(%rbp), %eax

490 :   %232 = bitcast i64* %231 to i32* : NIL

491 :   %233 = load i32* %232, !mcsema_real_eip !21 :          <35>	movl	-52(%rbp), %eax
492 :   %234 = zext i32 %233 to i64, !mcsema_real_eip !21 :          <35>	movl	-52(%rbp), %eax
493 :   store i64 %234, i64* %RAX_val, !mcsema_real_eip !21 :          <35>	movl	-52(%rbp), %eax

494 :   %235 = load i64* %RDX_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
495 :   %236 = trunc i64 %235 to i32, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx

496 :   %uadd73 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %233, i32 %236) : NIL
497 :   %237 = extractvalue { i32, i1 } %uadd73, 0 : NIL

498 :   %238 = xor i32 %237, %236, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
499 :   %239 = xor i32 %238, %233, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
500 :   %240 = and i32 %239, 16, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
501 :   %241 = icmp ne i32 %240, 0, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
502 :   store i1 %241, i1* %AF_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx

503 :   %242 = icmp slt i32 %237, 0 : NIL

504 :   store i1 %242, i1* %SF_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
505 :   %243 = icmp eq i32 %237, 0, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
506 :   store i1 %243, i1* %ZF_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
507 :   %244 = xor i32 %233, -2147483648, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
508 :   %245 = xor i32 %244, %236, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
509 :   %246 = and i32 %238, %245, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx

510 :   %247 = icmp slt i32 %246, 0 : NIL

511 :   store i1 %247, i1* %OF_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
512 :   %248 = trunc i32 %237 to i8, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
513 :   %249 = tail call i8 @llvm.ctpop.i8(i8 %248), !mcsema_real_eip !22 :          <38>	addl	%eax, %edx

514 :   %250 = and i8 %249, 1 : NIL
515 :   %251 = icmp eq i8 %250, 0 : NIL

516 :   store i1 %251, i1* %PF_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx

517 :   %252 = extractvalue { i32, i1 } %uadd73, 1 : NIL

518 :   store i1 %252, i1* %CF_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
519 :   %253 = zext i32 %237 to i64, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx
520 :   store i64 %253, i64* %RDX_val, !mcsema_real_eip !22 :          <38>	addl	%eax, %edx

521 :   %254 = load i64* %RBP_val, !mcsema_real_eip !23 :          <3a>	movl	-56(%rbp), %eax
522 :   %255 = add i64 %254, -56, !mcsema_real_eip !23 :          <3a>	movl	-56(%rbp), %eax
523 :   %256 = inttoptr i64 %255 to i64*, !mcsema_real_eip !23 :          <3a>	movl	-56(%rbp), %eax

524 :   %257 = bitcast i64* %256 to i32* : NIL

525 :   %258 = load i32* %257, !mcsema_real_eip !23 :          <3a>	movl	-56(%rbp), %eax

526 :   %uadd74 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %237, i32 %258) : NIL
527 :   %259 = extractvalue { i32, i1 } %uadd74, 0 : NIL

528 :   %260 = xor i32 %259, %258, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
529 :   %261 = xor i32 %260, %237, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
530 :   %262 = and i32 %261, 16, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
531 :   %263 = icmp ne i32 %262, 0, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
532 :   store i1 %263, i1* %AF_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax

533 :   %264 = icmp slt i32 %259, 0 : NIL

534 :   store i1 %264, i1* %SF_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
535 :   %265 = icmp eq i32 %259, 0, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
536 :   store i1 %265, i1* %ZF_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
537 :   %266 = xor i32 %258, -2147483648, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
538 :   %267 = xor i32 %266, %237, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
539 :   %268 = and i32 %260, %267, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax

540 :   %269 = icmp slt i32 %268, 0 : NIL

541 :   store i1 %269, i1* %OF_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
542 :   %270 = trunc i32 %259 to i8, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
543 :   %271 = tail call i8 @llvm.ctpop.i8(i8 %270), !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax

544 :   %272 = and i8 %271, 1 : NIL
545 :   %273 = icmp eq i8 %272, 0 : NIL

546 :   store i1 %273, i1* %PF_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax

547 :   %274 = extractvalue { i32, i1 } %uadd74, 1 : NIL

548 :   store i1 %274, i1* %CF_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
549 :   %275 = zext i32 %259 to i64, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax
550 :   store i64 %275, i64* %RAX_val, !mcsema_real_eip !24 :          <3d>	addl	%edx, %eax

551 :   %276 = load i64* %RBP_val, !mcsema_real_eip !25 :          <3f>	movl	%eax, -28(%rbp)
552 :   %277 = add i64 %276, -28, !mcsema_real_eip !25 :          <3f>	movl	%eax, -28(%rbp)
553 :   %278 = inttoptr i64 %277 to i64*, !mcsema_real_eip !25 :          <3f>	movl	%eax, -28(%rbp)

554 :   %279 = bitcast i64* %278 to i32* : NIL

555 :   store i32 %259, i32* %279, !mcsema_real_eip !25 :          <3f>	movl	%eax, -28(%rbp)

556 :   %280 = load i64* %RBP_val, !mcsema_real_eip !26 :          <42>	movl	24(%rbp), %eax
557 :   %281 = add i64 %280, 24, !mcsema_real_eip !26 :          <42>	movl	24(%rbp), %eax
558 :   %282 = inttoptr i64 %281 to i64*, !mcsema_real_eip !26 :          <42>	movl	24(%rbp), %eax

559 :   %283 = bitcast i64* %282 to i32* : NIL

560 :   %284 = load i32* %283, !mcsema_real_eip !26 :          <42>	movl	24(%rbp), %eax
561 :   %285 = zext i32 %284 to i64, !mcsema_real_eip !26 :          <42>	movl	24(%rbp), %eax
562 :   store i64 %285, i64* %RAX_val, !mcsema_real_eip !26 :          <42>	movl	24(%rbp), %eax

563 :   %286 = load i64* %RBP_val, !mcsema_real_eip !27 :          <45>	movl	%eax, -24(%rbp)
564 :   %287 = add i64 %286, -24, !mcsema_real_eip !27 :          <45>	movl	%eax, -24(%rbp)
565 :   %288 = inttoptr i64 %287 to i64*, !mcsema_real_eip !27 :          <45>	movl	%eax, -24(%rbp)

566 :   %289 = bitcast i64* %288 to i32* : NIL

567 :   store i32 %284, i32* %289, !mcsema_real_eip !27 :          <45>	movl	%eax, -24(%rbp)

568 :   %290 = load i64* %RBP_val, !mcsema_real_eip !28 :          <48>	movq	-32(%rbp), %rax
569 :   %291 = add i64 %290, -32, !mcsema_real_eip !28 :          <48>	movq	-32(%rbp), %rax
570 :   %292 = inttoptr i64 %291 to i64*, !mcsema_real_eip !28 :          <48>	movq	-32(%rbp), %rax
571 :   %293 = load i64* %292, !mcsema_real_eip !28 :          <48>	movq	-32(%rbp), %rax
572 :   store i64 %293, i64* %RAX_val, !mcsema_real_eip !28 :          <48>	movq	-32(%rbp), %rax

573 :   %294 = add i64 %290, -16, !mcsema_real_eip !29 :          <4c>	movq	%rax, -16(%rbp)
574 :   %295 = inttoptr i64 %294 to i64*, !mcsema_real_eip !29 :          <4c>	movq	%rax, -16(%rbp)
575 :   store i64 %293, i64* %295, !mcsema_real_eip !29 :          <4c>	movq	%rax, -16(%rbp)

576 :   %296 = load i64* %RBP_val, !mcsema_real_eip !30 :          <50>	movl	-24(%rbp), %eax
577 :   %297 = add i64 %296, -24, !mcsema_real_eip !30 :          <50>	movl	-24(%rbp), %eax
578 :   %298 = inttoptr i64 %297 to i64*, !mcsema_real_eip !30 :          <50>	movl	-24(%rbp), %eax

579 :   %299 = bitcast i64* %298 to i32* : NIL

580 :   %300 = load i32* %299, !mcsema_real_eip !30 :          <50>	movl	-24(%rbp), %eax
581 :   %301 = zext i32 %300 to i64, !mcsema_real_eip !30 :          <50>	movl	-24(%rbp), %eax
582 :   store i64 %301, i64* %RAX_val, !mcsema_real_eip !30 :          <50>	movl	-24(%rbp), %eax

583 :   %302 = load i64* %RBP_val, !mcsema_real_eip !31 :          <53>	movl	%eax, -8(%rbp)
584 :   %303 = add i64 %302, -8, !mcsema_real_eip !31 :          <53>	movl	%eax, -8(%rbp)
585 :   %304 = inttoptr i64 %303 to i64*, !mcsema_real_eip !31 :          <53>	movl	%eax, -8(%rbp)

586 :   %305 = bitcast i64* %304 to i32* : NIL

587 :   store i32 %300, i32* %305, !mcsema_real_eip !31 :          <53>	movl	%eax, -8(%rbp)

588 :   %306 = load i64* %RBP_val, !mcsema_real_eip !32 :          <56>	movq	-16(%rbp), %rax
589 :   %307 = add i64 %306, -16, !mcsema_real_eip !32 :          <56>	movq	-16(%rbp), %rax
590 :   %308 = inttoptr i64 %307 to i64*, !mcsema_real_eip !32 :          <56>	movq	-16(%rbp), %rax
591 :   %309 = load i64* %308, !mcsema_real_eip !32 :          <56>	movq	-16(%rbp), %rax
592 :   store i64 %309, i64* %RAX_val, !mcsema_real_eip !32 :          <56>	movq	-16(%rbp), %rax

593 :   %310 = add i64 %306, -8, !mcsema_real_eip !33 :          <5a>	movl	-8(%rbp), %edx
594 :   %311 = inttoptr i64 %310 to i64*, !mcsema_real_eip !33 :          <5a>	movl	-8(%rbp), %edx

595 :   %312 = bitcast i64* %311 to i32* : NIL

596 :   %313 = load i32* %312, !mcsema_real_eip !33 :          <5a>	movl	-8(%rbp), %edx
597 :   %314 = zext i32 %313 to i64, !mcsema_real_eip !33 :          <5a>	movl	-8(%rbp), %edx
598 :   store i64 %314, i64* %RDX_val, !mcsema_real_eip !33 :          <5a>	movl	-8(%rbp), %edx

599 :   %315 = load i64* %RSP_val, !mcsema_real_eip !34 :          <5d>	popq	%rbp
600 :   %316 = inttoptr i64 %315 to i64*, !mcsema_real_eip !34 :          <5d>	popq	%rbp
601 :   %317 = load i64* %316, !mcsema_real_eip !34 :          <5d>	popq	%rbp
602 :   store i64 %317, i64* %RBP_val, !mcsema_real_eip !34 :          <5d>	popq	%rbp

603 :   %318 = add i64 %315, 16, !mcsema_real_eip !35 :          <5e>	retq
604 :   store i64 %318, i64* %RSP_val, !mcsema_real_eip !35 :          <5e>	retq
605 :   %319 = load i64* %RAX_val, !mcsema_real_eip !35 :          <5e>	retq
606 :   store i64 %319, i64* %RAX, !mcsema_real_eip !35 :          <5e>	retq
607 :   %320 = load i64* %RBX_val, !mcsema_real_eip !35 :          <5e>	retq
608 :   store i64 %320, i64* %RBX, !mcsema_real_eip !35 :          <5e>	retq
609 :   %321 = load i64* %RCX_val, !mcsema_real_eip !35 :          <5e>	retq
610 :   store i64 %321, i64* %RCX, !mcsema_real_eip !35 :          <5e>	retq
611 :   %322 = load i64* %RDX_val, !mcsema_real_eip !35 :          <5e>	retq
612 :   store i64 %322, i64* %RDX, !mcsema_real_eip !35 :          <5e>	retq
613 :   %323 = load i64* %RSI_val, !mcsema_real_eip !35 :          <5e>	retq
614 :   store i64 %323, i64* %RSI, !mcsema_real_eip !35 :          <5e>	retq
615 :   %324 = load i64* %RDI_val, !mcsema_real_eip !35 :          <5e>	retq
616 :   store i64 %324, i64* %RDI, !mcsema_real_eip !35 :          <5e>	retq
617 :   %325 = load i64* %RSP_val, !mcsema_real_eip !35 :          <5e>	retq
618 :   store i64 %325, i64* %RSP, !mcsema_real_eip !35 :          <5e>	retq
619 :   %326 = load i64* %RBP_val, !mcsema_real_eip !35 :          <5e>	retq
620 :   store i64 %326, i64* %RBP, !mcsema_real_eip !35 :          <5e>	retq
621 :   %327 = load i64* %R8_val, !mcsema_real_eip !35 :          <5e>	retq
622 :   store i64 %327, i64* %R8, !mcsema_real_eip !35 :          <5e>	retq
623 :   %328 = load i64* %R9_val, !mcsema_real_eip !35 :          <5e>	retq
624 :   store i64 %328, i64* %R9, !mcsema_real_eip !35 :          <5e>	retq
625 :   %329 = load i64* %R10_val, !mcsema_real_eip !35 :          <5e>	retq
626 :   store i64 %329, i64* %R10, !mcsema_real_eip !35 :          <5e>	retq
627 :   %330 = load i64* %R11_val, !mcsema_real_eip !35 :          <5e>	retq
628 :   store i64 %330, i64* %R11, !mcsema_real_eip !35 :          <5e>	retq
629 :   %331 = load i64* %R12_val, !mcsema_real_eip !35 :          <5e>	retq
630 :   store i64 %331, i64* %R12, !mcsema_real_eip !35 :          <5e>	retq
631 :   %332 = load i64* %R13_val, !mcsema_real_eip !35 :          <5e>	retq
632 :   store i64 %332, i64* %R13, !mcsema_real_eip !35 :          <5e>	retq
633 :   %333 = load i64* %R14_val, !mcsema_real_eip !35 :          <5e>	retq
634 :   store i64 %333, i64* %R14, !mcsema_real_eip !35 :          <5e>	retq
635 :   %334 = load i64* %R15_val, !mcsema_real_eip !35 :          <5e>	retq
636 :   store i64 %334, i64* %R15, !mcsema_real_eip !35 :          <5e>	retq
637 :   %335 = load i64* %RIP_val, !mcsema_real_eip !35 :          <5e>	retq
638 :   store i64 %335, i64* %RIP, !mcsema_real_eip !35 :          <5e>	retq
639 :   %336 = load i1* %CF_val, !mcsema_real_eip !35 :          <5e>	retq
640 :   store i1 %336, i1* %CF, align 1, !mcsema_real_eip !35 :          <5e>	retq
641 :   %337 = load i1* %PF_val, !mcsema_real_eip !35 :          <5e>	retq
642 :   store i1 %337, i1* %PF, align 1, !mcsema_real_eip !35 :          <5e>	retq
643 :   %338 = load i1* %AF_val, !mcsema_real_eip !35 :          <5e>	retq
644 :   store i1 %338, i1* %AF, align 1, !mcsema_real_eip !35 :          <5e>	retq
645 :   %339 = load i1* %ZF_val, !mcsema_real_eip !35 :          <5e>	retq
646 :   store i1 %339, i1* %ZF, align 1, !mcsema_real_eip !35 :          <5e>	retq
647 :   %340 = load i1* %SF_val, !mcsema_real_eip !35 :          <5e>	retq
648 :   store i1 %340, i1* %SF, align 1, !mcsema_real_eip !35 :          <5e>	retq
649 :   %341 = load i1* %OF_val, !mcsema_real_eip !35 :          <5e>	retq
650 :   store i1 %341, i1* %OF, align 1, !mcsema_real_eip !35 :          <5e>	retq
651 :   %342 = load i1* %DF_val, !mcsema_real_eip !35 :          <5e>	retq
652 :   store i1 %342, i1* %DF, align 1, !mcsema_real_eip !35 :          <5e>	retq
653 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !35 :          <5e>	retq
654 :   %343 = load i1* %FPU_B_val, !mcsema_real_eip !35 :          <5e>	retq
655 :   store i1 %343, i1* %FPU_B, align 1, !mcsema_real_eip !35 :          <5e>	retq
656 :   %344 = load i1* %FPU_C3_val, !mcsema_real_eip !35 :          <5e>	retq
657 :   store i1 %344, i1* %FPU_C3, align 1, !mcsema_real_eip !35 :          <5e>	retq
658 :   %345 = load i3* %FPU_TOP_val, !mcsema_real_eip !35 :          <5e>	retq
659 :   store i3 %345, i3* %FPU_TOP, align 1, !mcsema_real_eip !35 :          <5e>	retq
660 :   %346 = load i1* %FPU_C2_val, !mcsema_real_eip !35 :          <5e>	retq
661 :   store i1 %346, i1* %FPU_C2, align 1, !mcsema_real_eip !35 :          <5e>	retq
662 :   %347 = load i1* %FPU_C1_val, !mcsema_real_eip !35 :          <5e>	retq
663 :   store i1 %347, i1* %FPU_C1, align 1, !mcsema_real_eip !35 :          <5e>	retq
664 :   %348 = load i1* %FPU_C0_val, !mcsema_real_eip !35 :          <5e>	retq
665 :   store i1 %348, i1* %FPU_C0, align 1, !mcsema_real_eip !35 :          <5e>	retq
666 :   %349 = load i1* %FPU_ES_val, !mcsema_real_eip !35 :          <5e>	retq
667 :   store i1 %349, i1* %FPU_ES, align 1, !mcsema_real_eip !35 :          <5e>	retq
668 :   %350 = load i1* %FPU_SF_val, !mcsema_real_eip !35 :          <5e>	retq
669 :   store i1 %350, i1* %FPU_SF, align 1, !mcsema_real_eip !35 :          <5e>	retq
670 :   %351 = load i1* %FPU_PE_val, !mcsema_real_eip !35 :          <5e>	retq
671 :   store i1 %351, i1* %FPU_PE, align 1, !mcsema_real_eip !35 :          <5e>	retq
672 :   %352 = load i1* %FPU_UE_val, !mcsema_real_eip !35 :          <5e>	retq
673 :   store i1 %352, i1* %FPU_UE, align 1, !mcsema_real_eip !35 :          <5e>	retq
674 :   %353 = load i1* %FPU_OE_val, !mcsema_real_eip !35 :          <5e>	retq
675 :   store i1 %353, i1* %FPU_OE, align 1, !mcsema_real_eip !35 :          <5e>	retq
676 :   %354 = load i1* %FPU_ZE_val, !mcsema_real_eip !35 :          <5e>	retq
677 :   store i1 %354, i1* %FPU_ZE, align 1, !mcsema_real_eip !35 :          <5e>	retq
678 :   %355 = load i1* %FPU_DE_val, !mcsema_real_eip !35 :          <5e>	retq
679 :   store i1 %355, i1* %FPU_DE, align 1, !mcsema_real_eip !35 :          <5e>	retq
680 :   %356 = load i1* %FPU_IE_val, !mcsema_real_eip !35 :          <5e>	retq
681 :   store i1 %356, i1* %FPU_IE, align 1, !mcsema_real_eip !35 :          <5e>	retq
682 :   %357 = load i1* %FPU_X_val, !mcsema_real_eip !35 :          <5e>	retq
683 :   store i1 %357, i1* %FPU_X, align 1, !mcsema_real_eip !35 :          <5e>	retq
684 :   %358 = load i2* %FPU_RC_val, !mcsema_real_eip !35 :          <5e>	retq
685 :   store i2 %358, i2* %FPU_RC, align 1, !mcsema_real_eip !35 :          <5e>	retq
686 :   %359 = load i2* %FPU_PC_val, !mcsema_real_eip !35 :          <5e>	retq
687 :   store i2 %359, i2* %FPU_PC, align 1, !mcsema_real_eip !35 :          <5e>	retq
688 :   %360 = load i1* %FPU_PM_val, !mcsema_real_eip !35 :          <5e>	retq
689 :   store i1 %360, i1* %FPU_PM, align 1, !mcsema_real_eip !35 :          <5e>	retq
690 :   %361 = load i1* %FPU_UM_val, !mcsema_real_eip !35 :          <5e>	retq
691 :   store i1 %361, i1* %FPU_UM, align 1, !mcsema_real_eip !35 :          <5e>	retq
692 :   %362 = load i1* %FPU_OM_val, !mcsema_real_eip !35 :          <5e>	retq
693 :   store i1 %362, i1* %FPU_OM, align 1, !mcsema_real_eip !35 :          <5e>	retq
694 :   %363 = load i1* %FPU_ZM_val, !mcsema_real_eip !35 :          <5e>	retq
695 :   store i1 %363, i1* %FPU_ZM, align 1, !mcsema_real_eip !35 :          <5e>	retq
696 :   %364 = load i1* %FPU_DM_val, !mcsema_real_eip !35 :          <5e>	retq
697 :   store i1 %364, i1* %FPU_DM, align 1, !mcsema_real_eip !35 :          <5e>	retq
698 :   %365 = load i1* %FPU_IM_val, !mcsema_real_eip !35 :          <5e>	retq
699 :   store i1 %365, i1* %FPU_IM, align 1, !mcsema_real_eip !35 :          <5e>	retq

700 :   %366 = load i64* %53, align 4 : NIL
701 :   store i64 %366, i64* %52, align 4 : NIL

702 :   %367 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !35 :          <5e>	retq
703 :   store i16 %367, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !35 :          <5e>	retq
704 :   %368 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !35 :          <5e>	retq
705 :   store i64 %368, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !35 :          <5e>	retq
706 :   %369 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !35 :          <5e>	retq
707 :   store i16 %369, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !35 :          <5e>	retq
708 :   %370 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !35 :          <5e>	retq
709 :   store i64 %370, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !35 :          <5e>	retq
710 :   %371 = load i128* %XMM0_val, !mcsema_real_eip !35 :          <5e>	retq
711 :   store i128 %371, i128* %XMM0, align 1, !mcsema_real_eip !35 :          <5e>	retq
712 :   %372 = load i128* %XMM1_val, !mcsema_real_eip !35 :          <5e>	retq
713 :   store i128 %372, i128* %XMM1, align 1, !mcsema_real_eip !35 :          <5e>	retq
714 :   %373 = load i128* %XMM2_val, !mcsema_real_eip !35 :          <5e>	retq
715 :   store i128 %373, i128* %XMM2, align 1, !mcsema_real_eip !35 :          <5e>	retq
716 :   %374 = load i128* %XMM3_val, !mcsema_real_eip !35 :          <5e>	retq
717 :   store i128 %374, i128* %XMM3, align 1, !mcsema_real_eip !35 :          <5e>	retq
718 :   %375 = load i128* %XMM4_val, !mcsema_real_eip !35 :          <5e>	retq
719 :   store i128 %375, i128* %XMM4, align 1, !mcsema_real_eip !35 :          <5e>	retq
720 :   %376 = load i128* %XMM5_val, !mcsema_real_eip !35 :          <5e>	retq
721 :   store i128 %376, i128* %XMM5, align 1, !mcsema_real_eip !35 :          <5e>	retq
722 :   %377 = load i128* %XMM6_val, !mcsema_real_eip !35 :          <5e>	retq
723 :   store i128 %377, i128* %XMM6, align 1, !mcsema_real_eip !35 :          <5e>	retq
724 :   %378 = load i128* %XMM7_val, !mcsema_real_eip !35 :          <5e>	retq
725 :   store i128 %378, i128* %XMM7, align 1, !mcsema_real_eip !35 :          <5e>	retq
726 :   %379 = load i128* %XMM8_val, !mcsema_real_eip !35 :          <5e>	retq
727 :   store i128 %379, i128* %XMM8, align 1, !mcsema_real_eip !35 :          <5e>	retq
728 :   %380 = load i128* %XMM9_val, !mcsema_real_eip !35 :          <5e>	retq
729 :   store i128 %380, i128* %XMM9, align 1, !mcsema_real_eip !35 :          <5e>	retq
730 :   %381 = load i128* %XMM10_val, !mcsema_real_eip !35 :          <5e>	retq
731 :   store i128 %381, i128* %XMM10, align 1, !mcsema_real_eip !35 :          <5e>	retq
732 :   %382 = load i128* %XMM11_val, !mcsema_real_eip !35 :          <5e>	retq
733 :   store i128 %382, i128* %XMM11, align 1, !mcsema_real_eip !35 :          <5e>	retq
734 :   %383 = load i128* %XMM12_val, !mcsema_real_eip !35 :          <5e>	retq
735 :   store i128 %383, i128* %XMM12, align 1, !mcsema_real_eip !35 :          <5e>	retq
736 :   %384 = load i128* %XMM13_val, !mcsema_real_eip !35 :          <5e>	retq
737 :   store i128 %384, i128* %XMM13, align 1, !mcsema_real_eip !35 :          <5e>	retq
738 :   %385 = load i128* %XMM14_val, !mcsema_real_eip !35 :          <5e>	retq
739 :   store i128 %385, i128* %XMM14, align 1, !mcsema_real_eip !35 :          <5e>	retq
740 :   %386 = load i128* %XMM15_val, !mcsema_real_eip !35 :          <5e>	retq
741 :   store i128 %386, i128* %XMM15, align 1, !mcsema_real_eip !35 :          <5e>	retq
742 :   %387 = load i64* %STACK_BASE_val, !mcsema_real_eip !35 :          <5e>	retq
743 :   store i64 %387, i64* %STACK_BASE, align 1, !mcsema_real_eip !35 :          <5e>	retq
744 :   %388 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !35 :          <5e>	retq
745 :   store i64 %388, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !35 :          <5e>	retq
746 :   ret void, !mcsema_real_eip !35 :          <5e>	retq
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_5f(%struct.regs* %0) : NIL
2 :   ret void : NIL
