Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_3.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_0
==========================================
----------------------------------
sub_0::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, -12, !mcsema_real_eip !4 :::  [I] = -12 : Inst :: -8:-12:-8:0
  %86 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -8:-12:-8:0
  %87 = add i64 %86, -8, !mcsema_real_eip !5 :::  [I] = -16 : Inst :: -8:-12:-8:-16
  %92 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-12:-8:-16
  %93 = add i64 %92, -4, !mcsema_real_eip !6 :::  [I] = -12 : Inst :: -8:-12:-8:-16
  %98 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -8:-12:-8:-16
  %99 = add i64 %98, -8, !mcsema_real_eip !7 :::  [I] = -16 : Inst :: -8:-12:-8:-16
  %120 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -8:-12:-8:-16
  %121 = add i64 %120, -12, !mcsema_real_eip !8 :::  [I] = -20 : Inst :: -8:-12:-8:-20
  %124 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -8:-12:-8:-20
  %125 = add i64 %124, -4, !mcsema_real_eip !9 :::  [I] = -12 : Inst :: -8:-12:-8:-20
  %145 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -8:-12:-8:-20
  %146 = add i64 %145, -12, !mcsema_real_eip !11 :::  [I] = -20 : Inst :: -8:-12:-8:-20
Gen :: -8:-12:-8:-20
----------------------------------
sub_0::block_0x30
----------------------------------
  %165 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = 0 : Inst :: 0:0:0:0
  %166 = add i64 %165, -16, !mcsema_real_eip !13 :::  [I] = -16 : Inst :: 0:0:0:-16
  %169 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = 0 : Inst :: 0:0:0:-16
  %170 = add i64 %169, -12, !mcsema_real_eip !14 :::  [I] = -12 : Inst :: 0:0:0:-16
  %175 = load i64* %RSP_val, !mcsema_real_eip !15 :::  [I] = 0 : Inst :: 0:0:0:-16
  %178 = add i64 %175, 16, !mcsema_real_eip !16 :::  [I] = 16 : Inst :: 0:0:0:-16
  store i64 %178, i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = NULL : Inst :: 16:0:0:-16
  %185 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = 16 : Inst :: 16:0:0:-16
  %186 = load i64* %RBP_val, !mcsema_real_eip !16 :::  [I] = 0 : Inst :: 16:0:0:-16
Gen :: 16:0:0:-16
----------------------------------
sub_0::block_0x20
----------------------------------
  %264 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = 0 : Inst :: 0:0:0:0
  %265 = add i64 %264, -12, !mcsema_real_eip !18 :::  [I] = -12 : Inst :: 0:0:0:-12
  %268 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = 0 : Inst :: 0:0:0:-12
  %269 = add i64 %268, -12, !mcsema_real_eip !14 :::  [I] = -12 : Inst :: 0:0:0:-12
  %274 = load i64* %RSP_val, !mcsema_real_eip !15 :::  [I] = 0 : Inst :: 0:0:0:-12
  %277 = add i64 %274, 16, !mcsema_real_eip !16 :::  [I] = 16 : Inst :: 0:0:0:-12
  store i64 %277, i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = NULL : Inst :: 16:0:0:-12
  %284 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = 16 : Inst :: 16:0:0:-12
  %285 = load i64* %RBP_val, !mcsema_real_eip !16 :::  [I] = 0 : Inst :: 16:0:0:-12
Gen :: 16:0:0:-12


DFA Analysis: 
sub_0::entry
	Gen :: -8:-12:-8:-20
	Out :: -8:-12:-8:-20
sub_0::block_0x20
	Pred :: entry: -8:-12:-8:-20
	Gen :: 16:0:0:-12
	Out :: 8:-12:-8:-20
sub_0::block_0x30
	Pred :: entry: -8:-12:-8:-20
	Gen :: 16:0:0:-16
	Out :: 8:-12:-8:-24
sub_0::entry
	Gen :: -8:-12:-8:-20
	Out :: -8:-12:-8:-20
sub_0::block_0x20
	Pred :: entry: -8:-12:-8:-20
	Gen :: 16:0:0:-12
	Out :: 8:-12:-8:-20
sub_0::block_0x30
	Pred :: entry: -8:-12:-8:-20
	Gen :: 16:0:0:-16
	Out :: 8:-12:-8:-24
Height[ sub_0 ] : -24
==========================================
Function : mcsema_main
==========================================
----------------------------------
mcsema_main::driverBlockRaw
----------------------------------
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0) :::  [I] = NULL : Inst :: 8:0:0:0
Gen :: 8:0:0:0


DFA Analysis: 
mcsema_main::driverBlockRaw
	Gen :: 8:0:0:0
	Out :: 8:0:0:0
mcsema_main::driverBlockRaw
	Gen :: 8:0:0:0
	Out :: 8:0:0:0
Height[ mcsema_main ] : 0
