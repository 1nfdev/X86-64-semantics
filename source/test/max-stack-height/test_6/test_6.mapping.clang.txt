========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -120 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp

296 :   %83 = and i64 %82, 16 : NIL
297 :   %84 = icmp eq i64 %83, 0 : NIL

298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <4>	subq	$112, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
308 :   %91 = icmp ult i64 %79, 112, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <4>	subq	$112, %rsp

314 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <8>	movl	$0, %eax

315 :   %94 = load i64* %RBP_val, !mcsema_real_eip !6 :          <d>	movl	$0, -4(%rbp)
316 :   %95 = add i64 %94, -4, !mcsema_real_eip !6 :          <d>	movl	$0, -4(%rbp)
317 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !6 :          <d>	movl	$0, -4(%rbp)

318 :   %97 = bitcast i64* %96 to i32* : NIL

319 :   store i32 0, i32* %97, !mcsema_real_eip !6 :          <d>	movl	$0, -4(%rbp)

320 :   %98 = load i64* %RBP_val, !mcsema_real_eip !7 :          <14>	movl	-8(%rbp), %ecx
321 :   %99 = add i64 %98, -8, !mcsema_real_eip !7 :          <14>	movl	-8(%rbp), %ecx
322 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !7 :          <14>	movl	-8(%rbp), %ecx

323 :   %101 = bitcast i64* %100 to i32* : NIL

324 :   %102 = load i32* %101, !mcsema_real_eip !7 :          <14>	movl	-8(%rbp), %ecx
325 :   %103 = zext i32 %102 to i64, !mcsema_real_eip !7 :          <14>	movl	-8(%rbp), %ecx
326 :   store i64 %103, i64* %RCX_val, !mcsema_real_eip !7 :          <14>	movl	-8(%rbp), %ecx

327 :   %104 = load i64* %RBP_val, !mcsema_real_eip !8 :          <17>	movl	%ecx, -40(%rbp)
328 :   %105 = add i64 %104, -40, !mcsema_real_eip !8 :          <17>	movl	%ecx, -40(%rbp)
329 :   %106 = inttoptr i64 %105 to i64*, !mcsema_real_eip !8 :          <17>	movl	%ecx, -40(%rbp)

330 :   %107 = bitcast i64* %106 to i32* : NIL

331 :   store i32 %102, i32* %107, !mcsema_real_eip !8 :          <17>	movl	%ecx, -40(%rbp)

332 :   %108 = load i64* %RBP_val, !mcsema_real_eip !9 :          <1a>	movq	-16(%rbp), %rdx
333 :   %109 = add i64 %108, -16, !mcsema_real_eip !9 :          <1a>	movq	-16(%rbp), %rdx
334 :   %110 = inttoptr i64 %109 to i64*, !mcsema_real_eip !9 :          <1a>	movq	-16(%rbp), %rdx
335 :   %111 = load i64* %110, !mcsema_real_eip !9 :          <1a>	movq	-16(%rbp), %rdx
336 :   store i64 %111, i64* %RDX_val, !mcsema_real_eip !9 :          <1a>	movq	-16(%rbp), %rdx

337 :   %112 = add i64 %108, -48, !mcsema_real_eip !10 :          <1e>	movq	%rdx, -48(%rbp)
338 :   %113 = inttoptr i64 %112 to i64*, !mcsema_real_eip !10 :          <1e>	movq	%rdx, -48(%rbp)
339 :   store i64 %111, i64* %113, !mcsema_real_eip !10 :          <1e>	movq	%rdx, -48(%rbp)

340 :   %114 = load i64* %RBP_val, !mcsema_real_eip !11 :          <22>	movq	-48(%rbp), %rdi
341 :   %115 = add i64 %114, -48, !mcsema_real_eip !11 :          <22>	movq	-48(%rbp), %rdi
342 :   %116 = inttoptr i64 %115 to i64*, !mcsema_real_eip !11 :          <22>	movq	-48(%rbp), %rdi
343 :   %117 = load i64* %116, !mcsema_real_eip !11 :          <22>	movq	-48(%rbp), %rdi
344 :   store i64 %117, i64* %RDI_val, !mcsema_real_eip !11 :          <22>	movq	-48(%rbp), %rdi

345 :   %118 = add i64 %114, -40, !mcsema_real_eip !12 :          <26>	movl	-40(%rbp), %esi
346 :   %119 = inttoptr i64 %118 to i64*, !mcsema_real_eip !12 :          <26>	movl	-40(%rbp), %esi

347 :   %120 = bitcast i64* %119 to i32* : NIL

348 :   %121 = load i32* %120, !mcsema_real_eip !12 :          <26>	movl	-40(%rbp), %esi
349 :   %122 = zext i32 %121 to i64, !mcsema_real_eip !12 :          <26>	movl	-40(%rbp), %esi
350 :   store i64 %122, i64* %RSI_val, !mcsema_real_eip !12 :          <26>	movl	-40(%rbp), %esi

351 :   %123 = load i64* %RBP_val, !mcsema_real_eip !13 :          <29>	movl	-24(%rbp), %ecx
352 :   %124 = add i64 %123, -24, !mcsema_real_eip !13 :          <29>	movl	-24(%rbp), %ecx
353 :   %125 = inttoptr i64 %124 to i64*, !mcsema_real_eip !13 :          <29>	movl	-24(%rbp), %ecx

354 :   %126 = bitcast i64* %125 to i32* : NIL

355 :   %127 = load i32* %126, !mcsema_real_eip !13 :          <29>	movl	-24(%rbp), %ecx
356 :   %128 = zext i32 %127 to i64, !mcsema_real_eip !13 :          <29>	movl	-24(%rbp), %ecx
357 :   store i64 %128, i64* %RCX_val, !mcsema_real_eip !13 :          <29>	movl	-24(%rbp), %ecx

358 :   %129 = load i64* %RBP_val, !mcsema_real_eip !14 :          <2c>	movl	%ecx, -56(%rbp)
359 :   %130 = add i64 %129, -56, !mcsema_real_eip !14 :          <2c>	movl	%ecx, -56(%rbp)
360 :   %131 = inttoptr i64 %130 to i64*, !mcsema_real_eip !14 :          <2c>	movl	%ecx, -56(%rbp)

361 :   %132 = bitcast i64* %131 to i32* : NIL

362 :   store i32 %127, i32* %132, !mcsema_real_eip !14 :          <2c>	movl	%ecx, -56(%rbp)

363 :   %133 = load i64* %RBP_val, !mcsema_real_eip !15 :          <2f>	movq	-32(%rbp), %rdx
364 :   %134 = add i64 %133, -32, !mcsema_real_eip !15 :          <2f>	movq	-32(%rbp), %rdx
365 :   %135 = inttoptr i64 %134 to i64*, !mcsema_real_eip !15 :          <2f>	movq	-32(%rbp), %rdx
366 :   %136 = load i64* %135, !mcsema_real_eip !15 :          <2f>	movq	-32(%rbp), %rdx
367 :   store i64 %136, i64* %RDX_val, !mcsema_real_eip !15 :          <2f>	movq	-32(%rbp), %rdx

368 :   %137 = add i64 %133, -64, !mcsema_real_eip !16 :          <33>	movq	%rdx, -64(%rbp)
369 :   %138 = inttoptr i64 %137 to i64*, !mcsema_real_eip !16 :          <33>	movq	%rdx, -64(%rbp)
370 :   store i64 %136, i64* %138, !mcsema_real_eip !16 :          <33>	movq	%rdx, -64(%rbp)

371 :   %139 = load i64* %RBP_val, !mcsema_real_eip !17 :          <37>	movq	-64(%rbp), %rdx
372 :   %140 = add i64 %139, -64, !mcsema_real_eip !17 :          <37>	movq	-64(%rbp), %rdx
373 :   %141 = inttoptr i64 %140 to i64*, !mcsema_real_eip !17 :          <37>	movq	-64(%rbp), %rdx
374 :   %142 = load i64* %141, !mcsema_real_eip !17 :          <37>	movq	-64(%rbp), %rdx
375 :   store i64 %142, i64* %RDX_val, !mcsema_real_eip !17 :          <37>	movq	-64(%rbp), %rdx

376 :   %143 = add i64 %139, -56, !mcsema_real_eip !18 :          <3b>	movl	-56(%rbp), %ecx
377 :   %144 = inttoptr i64 %143 to i64*, !mcsema_real_eip !18 :          <3b>	movl	-56(%rbp), %ecx

378 :   %145 = bitcast i64* %144 to i32* : NIL

379 :   %146 = load i32* %145, !mcsema_real_eip !18 :          <3b>	movl	-56(%rbp), %ecx
380 :   %147 = zext i32 %146 to i64, !mcsema_real_eip !18 :          <3b>	movl	-56(%rbp), %ecx
381 :   store i64 %147, i64* %RCX_val, !mcsema_real_eip !18 :          <3b>	movl	-56(%rbp), %ecx

382 :   %148 = load i64* %RBP_val, !mcsema_real_eip !19 :          <3e>	movl	%eax, -100(%rbp)
383 :   %149 = add i64 %148, -100, !mcsema_real_eip !19 :          <3e>	movl	%eax, -100(%rbp)
384 :   %150 = inttoptr i64 %149 to i64*, !mcsema_real_eip !19 :          <3e>	movl	%eax, -100(%rbp)
385 :   %151 = load i64* %RAX_val, !mcsema_real_eip !19 :          <3e>	movl	%eax, -100(%rbp)
386 :   %152 = trunc i64 %151 to i32, !mcsema_real_eip !19 :          <3e>	movl	%eax, -100(%rbp)

387 :   %153 = bitcast i64* %150 to i32* : NIL

388 :   store i32 %152, i32* %153, !mcsema_real_eip !19 :          <3e>	movl	%eax, -100(%rbp)

389 :   %154 = load i64* %RSP_val, !mcsema_real_eip !20 :          <41>	callq	42

390 :   %155 = add i64 %154, -8 : NIL

391 :   %156 = inttoptr i64 %155 to i64*, !mcsema_real_eip !20 :          <41>	callq	42
392 :   store i64 -4981261766360305936, i64* %156, !mcsema_real_eip !20 :          <41>	callq	42
393 :   store i64 %155, i64* %RSP_val, !mcsema_real_eip !20 :          <41>	callq	42
394 :   %157 = load i64* %RAX_val, !mcsema_real_eip !20 :          <41>	callq	42
395 :   store i64 %157, i64* %RAX, !mcsema_real_eip !20 :          <41>	callq	42
396 :   %158 = load i64* %RBX_val, !mcsema_real_eip !20 :          <41>	callq	42
397 :   store i64 %158, i64* %RBX, !mcsema_real_eip !20 :          <41>	callq	42
398 :   %159 = load i64* %RCX_val, !mcsema_real_eip !20 :          <41>	callq	42
399 :   store i64 %159, i64* %RCX, !mcsema_real_eip !20 :          <41>	callq	42
400 :   %160 = load i64* %RDX_val, !mcsema_real_eip !20 :          <41>	callq	42
401 :   store i64 %160, i64* %RDX, !mcsema_real_eip !20 :          <41>	callq	42
402 :   %161 = load i64* %RSI_val, !mcsema_real_eip !20 :          <41>	callq	42
403 :   store i64 %161, i64* %RSI, !mcsema_real_eip !20 :          <41>	callq	42
404 :   %162 = load i64* %RDI_val, !mcsema_real_eip !20 :          <41>	callq	42
405 :   store i64 %162, i64* %RDI, !mcsema_real_eip !20 :          <41>	callq	42
406 :   %163 = load i64* %RSP_val, !mcsema_real_eip !20 :          <41>	callq	42
407 :   store i64 %163, i64* %RSP, !mcsema_real_eip !20 :          <41>	callq	42
408 :   %164 = load i64* %RBP_val, !mcsema_real_eip !20 :          <41>	callq	42
409 :   store i64 %164, i64* %RBP, !mcsema_real_eip !20 :          <41>	callq	42
410 :   %165 = load i64* %R8_val, !mcsema_real_eip !20 :          <41>	callq	42
411 :   store i64 %165, i64* %R8, !mcsema_real_eip !20 :          <41>	callq	42
412 :   %166 = load i64* %R9_val, !mcsema_real_eip !20 :          <41>	callq	42
413 :   store i64 %166, i64* %R9, !mcsema_real_eip !20 :          <41>	callq	42
414 :   %167 = load i64* %R10_val, !mcsema_real_eip !20 :          <41>	callq	42
415 :   store i64 %167, i64* %R10, !mcsema_real_eip !20 :          <41>	callq	42
416 :   %168 = load i64* %R11_val, !mcsema_real_eip !20 :          <41>	callq	42
417 :   store i64 %168, i64* %R11, !mcsema_real_eip !20 :          <41>	callq	42
418 :   %169 = load i64* %R12_val, !mcsema_real_eip !20 :          <41>	callq	42
419 :   store i64 %169, i64* %R12, !mcsema_real_eip !20 :          <41>	callq	42
420 :   %170 = load i64* %R13_val, !mcsema_real_eip !20 :          <41>	callq	42
421 :   store i64 %170, i64* %R13, !mcsema_real_eip !20 :          <41>	callq	42
422 :   %171 = load i64* %R14_val, !mcsema_real_eip !20 :          <41>	callq	42
423 :   store i64 %171, i64* %R14, !mcsema_real_eip !20 :          <41>	callq	42
424 :   %172 = load i64* %R15_val, !mcsema_real_eip !20 :          <41>	callq	42
425 :   store i64 %172, i64* %R15, !mcsema_real_eip !20 :          <41>	callq	42
426 :   %173 = load i64* %RIP_val, !mcsema_real_eip !20 :          <41>	callq	42
427 :   store i64 %173, i64* %RIP, !mcsema_real_eip !20 :          <41>	callq	42
428 :   %174 = load i1* %CF_val, !mcsema_real_eip !20 :          <41>	callq	42
429 :   store i1 %174, i1* %CF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
430 :   %175 = load i1* %PF_val, !mcsema_real_eip !20 :          <41>	callq	42
431 :   store i1 %175, i1* %PF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
432 :   %176 = load i1* %AF_val, !mcsema_real_eip !20 :          <41>	callq	42
433 :   store i1 %176, i1* %AF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
434 :   %177 = load i1* %ZF_val, !mcsema_real_eip !20 :          <41>	callq	42
435 :   store i1 %177, i1* %ZF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
436 :   %178 = load i1* %SF_val, !mcsema_real_eip !20 :          <41>	callq	42
437 :   store i1 %178, i1* %SF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
438 :   %179 = load i1* %OF_val, !mcsema_real_eip !20 :          <41>	callq	42
439 :   store i1 %179, i1* %OF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
440 :   %180 = load i1* %DF_val, !mcsema_real_eip !20 :          <41>	callq	42
441 :   store i1 %180, i1* %DF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
442 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !20 :          <41>	callq	42
443 :   %181 = load i1* %FPU_B_val, !mcsema_real_eip !20 :          <41>	callq	42
444 :   store i1 %181, i1* %FPU_B, align 1, !mcsema_real_eip !20 :          <41>	callq	42
445 :   %182 = load i1* %FPU_C3_val, !mcsema_real_eip !20 :          <41>	callq	42
446 :   store i1 %182, i1* %FPU_C3, align 1, !mcsema_real_eip !20 :          <41>	callq	42
447 :   %183 = load i3* %FPU_TOP_val, !mcsema_real_eip !20 :          <41>	callq	42
448 :   store i3 %183, i3* %FPU_TOP, align 1, !mcsema_real_eip !20 :          <41>	callq	42
449 :   %184 = load i1* %FPU_C2_val, !mcsema_real_eip !20 :          <41>	callq	42
450 :   store i1 %184, i1* %FPU_C2, align 1, !mcsema_real_eip !20 :          <41>	callq	42
451 :   %185 = load i1* %FPU_C1_val, !mcsema_real_eip !20 :          <41>	callq	42
452 :   store i1 %185, i1* %FPU_C1, align 1, !mcsema_real_eip !20 :          <41>	callq	42
453 :   %186 = load i1* %FPU_C0_val, !mcsema_real_eip !20 :          <41>	callq	42
454 :   store i1 %186, i1* %FPU_C0, align 1, !mcsema_real_eip !20 :          <41>	callq	42
455 :   %187 = load i1* %FPU_ES_val, !mcsema_real_eip !20 :          <41>	callq	42
456 :   store i1 %187, i1* %FPU_ES, align 1, !mcsema_real_eip !20 :          <41>	callq	42
457 :   %188 = load i1* %FPU_SF_val, !mcsema_real_eip !20 :          <41>	callq	42
458 :   store i1 %188, i1* %FPU_SF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
459 :   %189 = load i1* %FPU_PE_val, !mcsema_real_eip !20 :          <41>	callq	42
460 :   store i1 %189, i1* %FPU_PE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
461 :   %190 = load i1* %FPU_UE_val, !mcsema_real_eip !20 :          <41>	callq	42
462 :   store i1 %190, i1* %FPU_UE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
463 :   %191 = load i1* %FPU_OE_val, !mcsema_real_eip !20 :          <41>	callq	42
464 :   store i1 %191, i1* %FPU_OE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
465 :   %192 = load i1* %FPU_ZE_val, !mcsema_real_eip !20 :          <41>	callq	42
466 :   store i1 %192, i1* %FPU_ZE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
467 :   %193 = load i1* %FPU_DE_val, !mcsema_real_eip !20 :          <41>	callq	42
468 :   store i1 %193, i1* %FPU_DE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
469 :   %194 = load i1* %FPU_IE_val, !mcsema_real_eip !20 :          <41>	callq	42
470 :   store i1 %194, i1* %FPU_IE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
471 :   %195 = load i1* %FPU_X_val, !mcsema_real_eip !20 :          <41>	callq	42
472 :   store i1 %195, i1* %FPU_X, align 1, !mcsema_real_eip !20 :          <41>	callq	42
473 :   %196 = load i2* %FPU_RC_val, !mcsema_real_eip !20 :          <41>	callq	42
474 :   store i2 %196, i2* %FPU_RC, align 1, !mcsema_real_eip !20 :          <41>	callq	42
475 :   %197 = load i2* %FPU_PC_val, !mcsema_real_eip !20 :          <41>	callq	42
476 :   store i2 %197, i2* %FPU_PC, align 1, !mcsema_real_eip !20 :          <41>	callq	42
477 :   %198 = load i1* %FPU_PM_val, !mcsema_real_eip !20 :          <41>	callq	42
478 :   store i1 %198, i1* %FPU_PM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
479 :   %199 = load i1* %FPU_UM_val, !mcsema_real_eip !20 :          <41>	callq	42
480 :   store i1 %199, i1* %FPU_UM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
481 :   %200 = load i1* %FPU_OM_val, !mcsema_real_eip !20 :          <41>	callq	42
482 :   store i1 %200, i1* %FPU_OM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
483 :   %201 = load i1* %FPU_ZM_val, !mcsema_real_eip !20 :          <41>	callq	42
484 :   store i1 %201, i1* %FPU_ZM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
485 :   %202 = load i1* %FPU_DM_val, !mcsema_real_eip !20 :          <41>	callq	42
486 :   store i1 %202, i1* %FPU_DM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
487 :   %203 = load i1* %FPU_IM_val, !mcsema_real_eip !20 :          <41>	callq	42
488 :   store i1 %203, i1* %FPU_IM, align 1, !mcsema_real_eip !20 :          <41>	callq	42

489 :   %204 = load i64* %53, align 4 : NIL
490 :   store i64 %204, i64* %52, align 4 : NIL

491 :   %205 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !20 :          <41>	callq	42
492 :   store i16 %205, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !20 :          <41>	callq	42
493 :   %206 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !20 :          <41>	callq	42
494 :   store i64 %206, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
495 :   %207 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !20 :          <41>	callq	42
496 :   store i16 %207, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !20 :          <41>	callq	42
497 :   %208 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !20 :          <41>	callq	42
498 :   store i64 %208, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
499 :   %209 = load i128* %XMM0_val, !mcsema_real_eip !20 :          <41>	callq	42
500 :   store i128 %209, i128* %XMM0, align 1, !mcsema_real_eip !20 :          <41>	callq	42
501 :   %210 = load i128* %XMM1_val, !mcsema_real_eip !20 :          <41>	callq	42
502 :   store i128 %210, i128* %XMM1, align 1, !mcsema_real_eip !20 :          <41>	callq	42
503 :   %211 = load i128* %XMM2_val, !mcsema_real_eip !20 :          <41>	callq	42
504 :   store i128 %211, i128* %XMM2, align 1, !mcsema_real_eip !20 :          <41>	callq	42
505 :   %212 = load i128* %XMM3_val, !mcsema_real_eip !20 :          <41>	callq	42
506 :   store i128 %212, i128* %XMM3, align 1, !mcsema_real_eip !20 :          <41>	callq	42
507 :   %213 = load i128* %XMM4_val, !mcsema_real_eip !20 :          <41>	callq	42
508 :   store i128 %213, i128* %XMM4, align 1, !mcsema_real_eip !20 :          <41>	callq	42
509 :   %214 = load i128* %XMM5_val, !mcsema_real_eip !20 :          <41>	callq	42
510 :   store i128 %214, i128* %XMM5, align 1, !mcsema_real_eip !20 :          <41>	callq	42
511 :   %215 = load i128* %XMM6_val, !mcsema_real_eip !20 :          <41>	callq	42
512 :   store i128 %215, i128* %XMM6, align 1, !mcsema_real_eip !20 :          <41>	callq	42
513 :   %216 = load i128* %XMM7_val, !mcsema_real_eip !20 :          <41>	callq	42
514 :   store i128 %216, i128* %XMM7, align 1, !mcsema_real_eip !20 :          <41>	callq	42
515 :   %217 = load i128* %XMM8_val, !mcsema_real_eip !20 :          <41>	callq	42
516 :   store i128 %217, i128* %XMM8, align 1, !mcsema_real_eip !20 :          <41>	callq	42
517 :   %218 = load i128* %XMM9_val, !mcsema_real_eip !20 :          <41>	callq	42
518 :   store i128 %218, i128* %XMM9, align 1, !mcsema_real_eip !20 :          <41>	callq	42
519 :   %219 = load i128* %XMM10_val, !mcsema_real_eip !20 :          <41>	callq	42
520 :   store i128 %219, i128* %XMM10, align 1, !mcsema_real_eip !20 :          <41>	callq	42
521 :   %220 = load i128* %XMM11_val, !mcsema_real_eip !20 :          <41>	callq	42
522 :   store i128 %220, i128* %XMM11, align 1, !mcsema_real_eip !20 :          <41>	callq	42
523 :   %221 = load i128* %XMM12_val, !mcsema_real_eip !20 :          <41>	callq	42
524 :   store i128 %221, i128* %XMM12, align 1, !mcsema_real_eip !20 :          <41>	callq	42
525 :   %222 = load i128* %XMM13_val, !mcsema_real_eip !20 :          <41>	callq	42
526 :   store i128 %222, i128* %XMM13, align 1, !mcsema_real_eip !20 :          <41>	callq	42
527 :   %223 = load i128* %XMM14_val, !mcsema_real_eip !20 :          <41>	callq	42
528 :   store i128 %223, i128* %XMM14, align 1, !mcsema_real_eip !20 :          <41>	callq	42
529 :   %224 = load i128* %XMM15_val, !mcsema_real_eip !20 :          <41>	callq	42
530 :   store i128 %224, i128* %XMM15, align 1, !mcsema_real_eip !20 :          <41>	callq	42
531 :   %225 = load i64* %STACK_BASE_val, !mcsema_real_eip !20 :          <41>	callq	42
532 :   store i64 %225, i64* %STACK_BASE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
533 :   %226 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !20 :          <41>	callq	42
534 :   store i64 %226, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !20 :          <41>	callq	42
535 :   tail call x86_64_sysvcc void @sub_70(%struct.regs* %0), !mcsema_real_eip !20 :          <41>	callq	42
536 :   %227 = load i64* %RAX, !mcsema_real_eip !20 :          <41>	callq	42
537 :   store i64 %227, i64* %RAX_val, !mcsema_real_eip !20 :          <41>	callq	42
538 :   %228 = load i64* %RBX, !mcsema_real_eip !20 :          <41>	callq	42
539 :   store i64 %228, i64* %RBX_val, !mcsema_real_eip !20 :          <41>	callq	42
540 :   %229 = load i64* %RCX, !mcsema_real_eip !20 :          <41>	callq	42
541 :   store i64 %229, i64* %RCX_val, !mcsema_real_eip !20 :          <41>	callq	42
542 :   %230 = load i64* %RDX, !mcsema_real_eip !20 :          <41>	callq	42
543 :   store i64 %230, i64* %RDX_val, !mcsema_real_eip !20 :          <41>	callq	42
544 :   %231 = load i64* %RSI, !mcsema_real_eip !20 :          <41>	callq	42
545 :   store i64 %231, i64* %RSI_val, !mcsema_real_eip !20 :          <41>	callq	42
546 :   %232 = load i64* %RDI, !mcsema_real_eip !20 :          <41>	callq	42
547 :   store i64 %232, i64* %RDI_val, !mcsema_real_eip !20 :          <41>	callq	42
548 :   %233 = load i64* %RSP, !mcsema_real_eip !20 :          <41>	callq	42
549 :   store i64 %233, i64* %RSP_val, !mcsema_real_eip !20 :          <41>	callq	42
550 :   %234 = load i64* %RBP, !mcsema_real_eip !20 :          <41>	callq	42
551 :   store i64 %234, i64* %RBP_val, !mcsema_real_eip !20 :          <41>	callq	42
552 :   %235 = load i64* %R8, !mcsema_real_eip !20 :          <41>	callq	42
553 :   store i64 %235, i64* %R8_val, !mcsema_real_eip !20 :          <41>	callq	42
554 :   %236 = load i64* %R9, !mcsema_real_eip !20 :          <41>	callq	42
555 :   store i64 %236, i64* %R9_val, !mcsema_real_eip !20 :          <41>	callq	42
556 :   %237 = load i64* %R10, !mcsema_real_eip !20 :          <41>	callq	42
557 :   store i64 %237, i64* %R10_val, !mcsema_real_eip !20 :          <41>	callq	42
558 :   %238 = load i64* %R11, !mcsema_real_eip !20 :          <41>	callq	42
559 :   store i64 %238, i64* %R11_val, !mcsema_real_eip !20 :          <41>	callq	42
560 :   %239 = load i64* %R12, !mcsema_real_eip !20 :          <41>	callq	42
561 :   store i64 %239, i64* %R12_val, !mcsema_real_eip !20 :          <41>	callq	42
562 :   %240 = load i64* %R13, !mcsema_real_eip !20 :          <41>	callq	42
563 :   store i64 %240, i64* %R13_val, !mcsema_real_eip !20 :          <41>	callq	42
564 :   %241 = load i64* %R14, !mcsema_real_eip !20 :          <41>	callq	42
565 :   store i64 %241, i64* %R14_val, !mcsema_real_eip !20 :          <41>	callq	42
566 :   %242 = load i64* %R15, !mcsema_real_eip !20 :          <41>	callq	42
567 :   store i64 %242, i64* %R15_val, !mcsema_real_eip !20 :          <41>	callq	42
568 :   %243 = load i64* %RIP, !mcsema_real_eip !20 :          <41>	callq	42
569 :   store i64 %243, i64* %RIP_val, !mcsema_real_eip !20 :          <41>	callq	42
570 :   %244 = load i1* %CF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
571 :   store i1 %244, i1* %CF_val, !mcsema_real_eip !20 :          <41>	callq	42
572 :   %245 = load i1* %PF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
573 :   store i1 %245, i1* %PF_val, !mcsema_real_eip !20 :          <41>	callq	42
574 :   %246 = load i1* %AF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
575 :   store i1 %246, i1* %AF_val, !mcsema_real_eip !20 :          <41>	callq	42
576 :   %247 = load i1* %ZF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
577 :   store i1 %247, i1* %ZF_val, !mcsema_real_eip !20 :          <41>	callq	42
578 :   %248 = load i1* %SF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
579 :   store i1 %248, i1* %SF_val, !mcsema_real_eip !20 :          <41>	callq	42
580 :   %249 = load i1* %OF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
581 :   store i1 %249, i1* %OF_val, !mcsema_real_eip !20 :          <41>	callq	42
582 :   %250 = load i1* %DF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
583 :   store i1 %250, i1* %DF_val, !mcsema_real_eip !20 :          <41>	callq	42
584 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !20 :          <41>	callq	42
585 :   %251 = load i1* %FPU_B, align 1, !mcsema_real_eip !20 :          <41>	callq	42
586 :   store i1 %251, i1* %FPU_B_val, !mcsema_real_eip !20 :          <41>	callq	42
587 :   %252 = load i1* %FPU_C3, align 1, !mcsema_real_eip !20 :          <41>	callq	42
588 :   store i1 %252, i1* %FPU_C3_val, !mcsema_real_eip !20 :          <41>	callq	42
589 :   %253 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !20 :          <41>	callq	42
590 :   store i3 %253, i3* %FPU_TOP_val, !mcsema_real_eip !20 :          <41>	callq	42
591 :   %254 = load i1* %FPU_C2, align 1, !mcsema_real_eip !20 :          <41>	callq	42
592 :   store i1 %254, i1* %FPU_C2_val, !mcsema_real_eip !20 :          <41>	callq	42
593 :   %255 = load i1* %FPU_C1, align 1, !mcsema_real_eip !20 :          <41>	callq	42
594 :   store i1 %255, i1* %FPU_C1_val, !mcsema_real_eip !20 :          <41>	callq	42
595 :   %256 = load i1* %FPU_C0, align 1, !mcsema_real_eip !20 :          <41>	callq	42
596 :   store i1 %256, i1* %FPU_C0_val, !mcsema_real_eip !20 :          <41>	callq	42
597 :   %257 = load i1* %FPU_ES, align 1, !mcsema_real_eip !20 :          <41>	callq	42
598 :   store i1 %257, i1* %FPU_ES_val, !mcsema_real_eip !20 :          <41>	callq	42
599 :   %258 = load i1* %FPU_SF, align 1, !mcsema_real_eip !20 :          <41>	callq	42
600 :   store i1 %258, i1* %FPU_SF_val, !mcsema_real_eip !20 :          <41>	callq	42
601 :   %259 = load i1* %FPU_PE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
602 :   store i1 %259, i1* %FPU_PE_val, !mcsema_real_eip !20 :          <41>	callq	42
603 :   %260 = load i1* %FPU_UE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
604 :   store i1 %260, i1* %FPU_UE_val, !mcsema_real_eip !20 :          <41>	callq	42
605 :   %261 = load i1* %FPU_OE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
606 :   store i1 %261, i1* %FPU_OE_val, !mcsema_real_eip !20 :          <41>	callq	42
607 :   %262 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
608 :   store i1 %262, i1* %FPU_ZE_val, !mcsema_real_eip !20 :          <41>	callq	42
609 :   %263 = load i1* %FPU_DE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
610 :   store i1 %263, i1* %FPU_DE_val, !mcsema_real_eip !20 :          <41>	callq	42
611 :   %264 = load i1* %FPU_IE, align 1, !mcsema_real_eip !20 :          <41>	callq	42
612 :   store i1 %264, i1* %FPU_IE_val, !mcsema_real_eip !20 :          <41>	callq	42
613 :   %265 = load i1* %FPU_X, align 1, !mcsema_real_eip !20 :          <41>	callq	42
614 :   store i1 %265, i1* %FPU_X_val, !mcsema_real_eip !20 :          <41>	callq	42
615 :   %266 = load i2* %FPU_RC, align 1, !mcsema_real_eip !20 :          <41>	callq	42
616 :   store i2 %266, i2* %FPU_RC_val, !mcsema_real_eip !20 :          <41>	callq	42
617 :   %267 = load i2* %FPU_PC, align 1, !mcsema_real_eip !20 :          <41>	callq	42
618 :   store i2 %267, i2* %FPU_PC_val, !mcsema_real_eip !20 :          <41>	callq	42
619 :   %268 = load i1* %FPU_PM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
620 :   store i1 %268, i1* %FPU_PM_val, !mcsema_real_eip !20 :          <41>	callq	42
621 :   %269 = load i1* %FPU_UM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
622 :   store i1 %269, i1* %FPU_UM_val, !mcsema_real_eip !20 :          <41>	callq	42
623 :   %270 = load i1* %FPU_OM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
624 :   store i1 %270, i1* %FPU_OM_val, !mcsema_real_eip !20 :          <41>	callq	42
625 :   %271 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
626 :   store i1 %271, i1* %FPU_ZM_val, !mcsema_real_eip !20 :          <41>	callq	42
627 :   %272 = load i1* %FPU_DM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
628 :   store i1 %272, i1* %FPU_DM_val, !mcsema_real_eip !20 :          <41>	callq	42
629 :   %273 = load i1* %FPU_IM, align 1, !mcsema_real_eip !20 :          <41>	callq	42
630 :   store i1 %273, i1* %FPU_IM_val, !mcsema_real_eip !20 :          <41>	callq	42

631 :   %274 = load i64* %52, align 4 : NIL
632 :   store i64 %274, i64* %53, align 4 : NIL

633 :   %275 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !20 :          <41>	callq	42
634 :   store i16 %275, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !20 :          <41>	callq	42
635 :   %276 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !20 :          <41>	callq	42
636 :   store i64 %276, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !20 :          <41>	callq	42
637 :   %277 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !20 :          <41>	callq	42
638 :   store i16 %277, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !20 :          <41>	callq	42
639 :   %278 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !20 :          <41>	callq	42
640 :   store i64 %278, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !20 :          <41>	callq	42
641 :   %279 = load i128* %XMM0, align 1, !mcsema_real_eip !20 :          <41>	callq	42
642 :   store i128 %279, i128* %XMM0_val, !mcsema_real_eip !20 :          <41>	callq	42
643 :   %280 = load i128* %XMM1, align 1, !mcsema_real_eip !20 :          <41>	callq	42
644 :   store i128 %280, i128* %XMM1_val, !mcsema_real_eip !20 :          <41>	callq	42
645 :   %281 = load i128* %XMM2, align 1, !mcsema_real_eip !20 :          <41>	callq	42
646 :   store i128 %281, i128* %XMM2_val, !mcsema_real_eip !20 :          <41>	callq	42
647 :   %282 = load i128* %XMM3, align 1, !mcsema_real_eip !20 :          <41>	callq	42
648 :   store i128 %282, i128* %XMM3_val, !mcsema_real_eip !20 :          <41>	callq	42
649 :   %283 = load i128* %XMM4, align 1, !mcsema_real_eip !20 :          <41>	callq	42
650 :   store i128 %283, i128* %XMM4_val, !mcsema_real_eip !20 :          <41>	callq	42
651 :   %284 = load i128* %XMM5, align 1, !mcsema_real_eip !20 :          <41>	callq	42
652 :   store i128 %284, i128* %XMM5_val, !mcsema_real_eip !20 :          <41>	callq	42
653 :   %285 = load i128* %XMM6, align 1, !mcsema_real_eip !20 :          <41>	callq	42
654 :   store i128 %285, i128* %XMM6_val, !mcsema_real_eip !20 :          <41>	callq	42
655 :   %286 = load i128* %XMM7, align 1, !mcsema_real_eip !20 :          <41>	callq	42
656 :   store i128 %286, i128* %XMM7_val, !mcsema_real_eip !20 :          <41>	callq	42
657 :   %287 = load i128* %XMM8, align 1, !mcsema_real_eip !20 :          <41>	callq	42
658 :   store i128 %287, i128* %XMM8_val, !mcsema_real_eip !20 :          <41>	callq	42
659 :   %288 = load i128* %XMM9, align 1, !mcsema_real_eip !20 :          <41>	callq	42
660 :   store i128 %288, i128* %XMM9_val, !mcsema_real_eip !20 :          <41>	callq	42
661 :   %289 = load i128* %XMM10, align 1, !mcsema_real_eip !20 :          <41>	callq	42
662 :   store i128 %289, i128* %XMM10_val, !mcsema_real_eip !20 :          <41>	callq	42
663 :   %290 = load i128* %XMM11, align 1, !mcsema_real_eip !20 :          <41>	callq	42
664 :   store i128 %290, i128* %XMM11_val, !mcsema_real_eip !20 :          <41>	callq	42
665 :   %291 = load i128* %XMM12, align 1, !mcsema_real_eip !20 :          <41>	callq	42
666 :   store i128 %291, i128* %XMM12_val, !mcsema_real_eip !20 :          <41>	callq	42
667 :   %292 = load i128* %XMM13, align 1, !mcsema_real_eip !20 :          <41>	callq	42
668 :   store i128 %292, i128* %XMM13_val, !mcsema_real_eip !20 :          <41>	callq	42
669 :   %293 = load i128* %XMM14, align 1, !mcsema_real_eip !20 :          <41>	callq	42
670 :   store i128 %293, i128* %XMM14_val, !mcsema_real_eip !20 :          <41>	callq	42
671 :   %294 = load i128* %XMM15, align 1, !mcsema_real_eip !20 :          <41>	callq	42
672 :   store i128 %294, i128* %XMM15_val, !mcsema_real_eip !20 :          <41>	callq	42
673 :   %295 = load i64* %STACK_BASE, !mcsema_real_eip !20 :          <41>	callq	42
674 :   store i64 %295, i64* %STACK_BASE_val, !mcsema_real_eip !20 :          <41>	callq	42
675 :   %296 = load i64* %STACK_LIMIT, !mcsema_real_eip !20 :          <41>	callq	42
676 :   store i64 %296, i64* %STACK_LIMIT_val, !mcsema_real_eip !20 :          <41>	callq	42

677 :   %297 = load i64* %RBP_val, !mcsema_real_eip !21 :          <46>	movl	%edx, -88(%rbp)
678 :   %298 = add i64 %297, -88, !mcsema_real_eip !21 :          <46>	movl	%edx, -88(%rbp)
679 :   %299 = inttoptr i64 %298 to i64*, !mcsema_real_eip !21 :          <46>	movl	%edx, -88(%rbp)
680 :   %300 = load i64* %RDX_val, !mcsema_real_eip !21 :          <46>	movl	%edx, -88(%rbp)
681 :   %301 = trunc i64 %300 to i32, !mcsema_real_eip !21 :          <46>	movl	%edx, -88(%rbp)

682 :   %302 = bitcast i64* %299 to i32* : NIL

683 :   store i32 %301, i32* %302, !mcsema_real_eip !21 :          <46>	movl	%edx, -88(%rbp)

684 :   %303 = load i64* %RBP_val, !mcsema_real_eip !22 :          <49>	movq	%rax, -96(%rbp)
685 :   %304 = add i64 %303, -96, !mcsema_real_eip !22 :          <49>	movq	%rax, -96(%rbp)
686 :   %305 = inttoptr i64 %304 to i64*, !mcsema_real_eip !22 :          <49>	movq	%rax, -96(%rbp)
687 :   %306 = load i64* %RAX_val, !mcsema_real_eip !22 :          <49>	movq	%rax, -96(%rbp)
688 :   store i64 %306, i64* %305, !mcsema_real_eip !22 :          <49>	movq	%rax, -96(%rbp)

689 :   %307 = load i64* %RBP_val, !mcsema_real_eip !23 :          <4d>	movq	-96(%rbp), %rax
690 :   %308 = add i64 %307, -96, !mcsema_real_eip !23 :          <4d>	movq	-96(%rbp), %rax
691 :   %309 = inttoptr i64 %308 to i64*, !mcsema_real_eip !23 :          <4d>	movq	-96(%rbp), %rax
692 :   %310 = load i64* %309, !mcsema_real_eip !23 :          <4d>	movq	-96(%rbp), %rax
693 :   store i64 %310, i64* %RAX_val, !mcsema_real_eip !23 :          <4d>	movq	-96(%rbp), %rax

694 :   %311 = add i64 %307, -80, !mcsema_real_eip !24 :          <51>	movq	%rax, -80(%rbp)
695 :   %312 = inttoptr i64 %311 to i64*, !mcsema_real_eip !24 :          <51>	movq	%rax, -80(%rbp)
696 :   store i64 %310, i64* %312, !mcsema_real_eip !24 :          <51>	movq	%rax, -80(%rbp)

697 :   %313 = load i64* %RBP_val, !mcsema_real_eip !25 :          <55>	movl	-88(%rbp), %ecx
698 :   %314 = add i64 %313, -88, !mcsema_real_eip !25 :          <55>	movl	-88(%rbp), %ecx
699 :   %315 = inttoptr i64 %314 to i64*, !mcsema_real_eip !25 :          <55>	movl	-88(%rbp), %ecx

700 :   %316 = bitcast i64* %315 to i32* : NIL

701 :   %317 = load i32* %316, !mcsema_real_eip !25 :          <55>	movl	-88(%rbp), %ecx
702 :   %318 = zext i32 %317 to i64, !mcsema_real_eip !25 :          <55>	movl	-88(%rbp), %ecx
703 :   store i64 %318, i64* %RCX_val, !mcsema_real_eip !25 :          <55>	movl	-88(%rbp), %ecx

704 :   %319 = load i64* %RBP_val, !mcsema_real_eip !26 :          <58>	movl	%ecx, -72(%rbp)
705 :   %320 = add i64 %319, -72, !mcsema_real_eip !26 :          <58>	movl	%ecx, -72(%rbp)
706 :   %321 = inttoptr i64 %320 to i64*, !mcsema_real_eip !26 :          <58>	movl	%ecx, -72(%rbp)

707 :   %322 = bitcast i64* %321 to i32* : NIL

708 :   store i32 %317, i32* %322, !mcsema_real_eip !26 :          <58>	movl	%ecx, -72(%rbp)

709 :   %323 = load i64* %RBP_val, !mcsema_real_eip !27 :          <5b>	movl	-100(%rbp), %eax
710 :   %324 = add i64 %323, -100, !mcsema_real_eip !27 :          <5b>	movl	-100(%rbp), %eax
711 :   %325 = inttoptr i64 %324 to i64*, !mcsema_real_eip !27 :          <5b>	movl	-100(%rbp), %eax

712 :   %326 = bitcast i64* %325 to i32* : NIL

713 :   %327 = load i32* %326, !mcsema_real_eip !27 :          <5b>	movl	-100(%rbp), %eax
714 :   %328 = zext i32 %327 to i64, !mcsema_real_eip !27 :          <5b>	movl	-100(%rbp), %eax
715 :   store i64 %328, i64* %RAX_val, !mcsema_real_eip !27 :          <5b>	movl	-100(%rbp), %eax

716 :   %329 = load i64* %RSP_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

717 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %329, i64 112) : NIL
718 :   %330 = extractvalue { i64, i1 } %uadd, 0 : NIL

719 :   %331 = xor i64 %330, %329, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

720 :   %332 = and i64 %331, 16 : NIL
721 :   %333 = icmp eq i64 %332, 0 : NIL

722 :   store i1 %333, i1* %AF_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

723 :   %334 = icmp slt i64 %330, 0 : NIL

724 :   store i1 %334, i1* %SF_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
725 :   %335 = icmp eq i64 %330, 0, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
726 :   store i1 %335, i1* %ZF_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
727 :   %336 = xor i64 %329, -9223372036854775808, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
728 :   %337 = and i64 %331, %336, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

729 :   %338 = icmp slt i64 %337, 0 : NIL

730 :   store i1 %338, i1* %OF_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
731 :   %339 = trunc i64 %330 to i8, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
732 :   %340 = tail call i8 @llvm.ctpop.i8(i8 %339), !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

733 :   %341 = and i8 %340, 1 : NIL
734 :   %342 = icmp eq i8 %341, 0 : NIL

735 :   store i1 %342, i1* %PF_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

736 :   %343 = extractvalue { i64, i1 } %uadd, 1 : NIL

737 :   store i1 %343, i1* %CF_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp
738 :   store i64 %330, i64* %RSP_val, !mcsema_real_eip !28 :          <5e>	addq	$112, %rsp

739 :   %344 = inttoptr i64 %330 to i64*, !mcsema_real_eip !29 :          <62>	popq	%rbp
740 :   %345 = load i64* %344, !mcsema_real_eip !29 :          <62>	popq	%rbp
741 :   store i64 %345, i64* %RBP_val, !mcsema_real_eip !29 :          <62>	popq	%rbp

742 :   %346 = add i64 %330, 16, !mcsema_real_eip !30 :          <63>	retq
743 :   store i64 %346, i64* %RSP_val, !mcsema_real_eip !30 :          <63>	retq
744 :   %347 = load i64* %RAX_val, !mcsema_real_eip !30 :          <63>	retq
745 :   store i64 %347, i64* %RAX, !mcsema_real_eip !30 :          <63>	retq
746 :   %348 = load i64* %RBX_val, !mcsema_real_eip !30 :          <63>	retq
747 :   store i64 %348, i64* %RBX, !mcsema_real_eip !30 :          <63>	retq
748 :   %349 = load i64* %RCX_val, !mcsema_real_eip !30 :          <63>	retq
749 :   store i64 %349, i64* %RCX, !mcsema_real_eip !30 :          <63>	retq
750 :   %350 = load i64* %RDX_val, !mcsema_real_eip !30 :          <63>	retq
751 :   store i64 %350, i64* %RDX, !mcsema_real_eip !30 :          <63>	retq
752 :   %351 = load i64* %RSI_val, !mcsema_real_eip !30 :          <63>	retq
753 :   store i64 %351, i64* %RSI, !mcsema_real_eip !30 :          <63>	retq
754 :   %352 = load i64* %RDI_val, !mcsema_real_eip !30 :          <63>	retq
755 :   store i64 %352, i64* %RDI, !mcsema_real_eip !30 :          <63>	retq
756 :   %353 = load i64* %RSP_val, !mcsema_real_eip !30 :          <63>	retq
757 :   store i64 %353, i64* %RSP, !mcsema_real_eip !30 :          <63>	retq
758 :   %354 = load i64* %RBP_val, !mcsema_real_eip !30 :          <63>	retq
759 :   store i64 %354, i64* %RBP, !mcsema_real_eip !30 :          <63>	retq
760 :   %355 = load i64* %R8_val, !mcsema_real_eip !30 :          <63>	retq
761 :   store i64 %355, i64* %R8, !mcsema_real_eip !30 :          <63>	retq
762 :   %356 = load i64* %R9_val, !mcsema_real_eip !30 :          <63>	retq
763 :   store i64 %356, i64* %R9, !mcsema_real_eip !30 :          <63>	retq
764 :   %357 = load i64* %R10_val, !mcsema_real_eip !30 :          <63>	retq
765 :   store i64 %357, i64* %R10, !mcsema_real_eip !30 :          <63>	retq
766 :   %358 = load i64* %R11_val, !mcsema_real_eip !30 :          <63>	retq
767 :   store i64 %358, i64* %R11, !mcsema_real_eip !30 :          <63>	retq
768 :   %359 = load i64* %R12_val, !mcsema_real_eip !30 :          <63>	retq
769 :   store i64 %359, i64* %R12, !mcsema_real_eip !30 :          <63>	retq
770 :   %360 = load i64* %R13_val, !mcsema_real_eip !30 :          <63>	retq
771 :   store i64 %360, i64* %R13, !mcsema_real_eip !30 :          <63>	retq
772 :   %361 = load i64* %R14_val, !mcsema_real_eip !30 :          <63>	retq
773 :   store i64 %361, i64* %R14, !mcsema_real_eip !30 :          <63>	retq
774 :   %362 = load i64* %R15_val, !mcsema_real_eip !30 :          <63>	retq
775 :   store i64 %362, i64* %R15, !mcsema_real_eip !30 :          <63>	retq
776 :   %363 = load i64* %RIP_val, !mcsema_real_eip !30 :          <63>	retq
777 :   store i64 %363, i64* %RIP, !mcsema_real_eip !30 :          <63>	retq
778 :   %364 = load i1* %CF_val, !mcsema_real_eip !30 :          <63>	retq
779 :   store i1 %364, i1* %CF, align 1, !mcsema_real_eip !30 :          <63>	retq
780 :   %365 = load i1* %PF_val, !mcsema_real_eip !30 :          <63>	retq
781 :   store i1 %365, i1* %PF, align 1, !mcsema_real_eip !30 :          <63>	retq
782 :   %366 = load i1* %AF_val, !mcsema_real_eip !30 :          <63>	retq
783 :   store i1 %366, i1* %AF, align 1, !mcsema_real_eip !30 :          <63>	retq
784 :   %367 = load i1* %ZF_val, !mcsema_real_eip !30 :          <63>	retq
785 :   store i1 %367, i1* %ZF, align 1, !mcsema_real_eip !30 :          <63>	retq
786 :   %368 = load i1* %SF_val, !mcsema_real_eip !30 :          <63>	retq
787 :   store i1 %368, i1* %SF, align 1, !mcsema_real_eip !30 :          <63>	retq
788 :   %369 = load i1* %OF_val, !mcsema_real_eip !30 :          <63>	retq
789 :   store i1 %369, i1* %OF, align 1, !mcsema_real_eip !30 :          <63>	retq
790 :   %370 = load i1* %DF_val, !mcsema_real_eip !30 :          <63>	retq
791 :   store i1 %370, i1* %DF, align 1, !mcsema_real_eip !30 :          <63>	retq
792 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !30 :          <63>	retq
793 :   %371 = load i1* %FPU_B_val, !mcsema_real_eip !30 :          <63>	retq
794 :   store i1 %371, i1* %FPU_B, align 1, !mcsema_real_eip !30 :          <63>	retq
795 :   %372 = load i1* %FPU_C3_val, !mcsema_real_eip !30 :          <63>	retq
796 :   store i1 %372, i1* %FPU_C3, align 1, !mcsema_real_eip !30 :          <63>	retq
797 :   %373 = load i3* %FPU_TOP_val, !mcsema_real_eip !30 :          <63>	retq
798 :   store i3 %373, i3* %FPU_TOP, align 1, !mcsema_real_eip !30 :          <63>	retq
799 :   %374 = load i1* %FPU_C2_val, !mcsema_real_eip !30 :          <63>	retq
800 :   store i1 %374, i1* %FPU_C2, align 1, !mcsema_real_eip !30 :          <63>	retq
801 :   %375 = load i1* %FPU_C1_val, !mcsema_real_eip !30 :          <63>	retq
802 :   store i1 %375, i1* %FPU_C1, align 1, !mcsema_real_eip !30 :          <63>	retq
803 :   %376 = load i1* %FPU_C0_val, !mcsema_real_eip !30 :          <63>	retq
804 :   store i1 %376, i1* %FPU_C0, align 1, !mcsema_real_eip !30 :          <63>	retq
805 :   %377 = load i1* %FPU_ES_val, !mcsema_real_eip !30 :          <63>	retq
806 :   store i1 %377, i1* %FPU_ES, align 1, !mcsema_real_eip !30 :          <63>	retq
807 :   %378 = load i1* %FPU_SF_val, !mcsema_real_eip !30 :          <63>	retq
808 :   store i1 %378, i1* %FPU_SF, align 1, !mcsema_real_eip !30 :          <63>	retq
809 :   %379 = load i1* %FPU_PE_val, !mcsema_real_eip !30 :          <63>	retq
810 :   store i1 %379, i1* %FPU_PE, align 1, !mcsema_real_eip !30 :          <63>	retq
811 :   %380 = load i1* %FPU_UE_val, !mcsema_real_eip !30 :          <63>	retq
812 :   store i1 %380, i1* %FPU_UE, align 1, !mcsema_real_eip !30 :          <63>	retq
813 :   %381 = load i1* %FPU_OE_val, !mcsema_real_eip !30 :          <63>	retq
814 :   store i1 %381, i1* %FPU_OE, align 1, !mcsema_real_eip !30 :          <63>	retq
815 :   %382 = load i1* %FPU_ZE_val, !mcsema_real_eip !30 :          <63>	retq
816 :   store i1 %382, i1* %FPU_ZE, align 1, !mcsema_real_eip !30 :          <63>	retq
817 :   %383 = load i1* %FPU_DE_val, !mcsema_real_eip !30 :          <63>	retq
818 :   store i1 %383, i1* %FPU_DE, align 1, !mcsema_real_eip !30 :          <63>	retq
819 :   %384 = load i1* %FPU_IE_val, !mcsema_real_eip !30 :          <63>	retq
820 :   store i1 %384, i1* %FPU_IE, align 1, !mcsema_real_eip !30 :          <63>	retq
821 :   %385 = load i1* %FPU_X_val, !mcsema_real_eip !30 :          <63>	retq
822 :   store i1 %385, i1* %FPU_X, align 1, !mcsema_real_eip !30 :          <63>	retq
823 :   %386 = load i2* %FPU_RC_val, !mcsema_real_eip !30 :          <63>	retq
824 :   store i2 %386, i2* %FPU_RC, align 1, !mcsema_real_eip !30 :          <63>	retq
825 :   %387 = load i2* %FPU_PC_val, !mcsema_real_eip !30 :          <63>	retq
826 :   store i2 %387, i2* %FPU_PC, align 1, !mcsema_real_eip !30 :          <63>	retq
827 :   %388 = load i1* %FPU_PM_val, !mcsema_real_eip !30 :          <63>	retq
828 :   store i1 %388, i1* %FPU_PM, align 1, !mcsema_real_eip !30 :          <63>	retq
829 :   %389 = load i1* %FPU_UM_val, !mcsema_real_eip !30 :          <63>	retq
830 :   store i1 %389, i1* %FPU_UM, align 1, !mcsema_real_eip !30 :          <63>	retq
831 :   %390 = load i1* %FPU_OM_val, !mcsema_real_eip !30 :          <63>	retq
832 :   store i1 %390, i1* %FPU_OM, align 1, !mcsema_real_eip !30 :          <63>	retq
833 :   %391 = load i1* %FPU_ZM_val, !mcsema_real_eip !30 :          <63>	retq
834 :   store i1 %391, i1* %FPU_ZM, align 1, !mcsema_real_eip !30 :          <63>	retq
835 :   %392 = load i1* %FPU_DM_val, !mcsema_real_eip !30 :          <63>	retq
836 :   store i1 %392, i1* %FPU_DM, align 1, !mcsema_real_eip !30 :          <63>	retq
837 :   %393 = load i1* %FPU_IM_val, !mcsema_real_eip !30 :          <63>	retq
838 :   store i1 %393, i1* %FPU_IM, align 1, !mcsema_real_eip !30 :          <63>	retq

839 :   %394 = load i64* %53, align 4 : NIL
840 :   store i64 %394, i64* %52, align 4 : NIL

841 :   %395 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !30 :          <63>	retq
842 :   store i16 %395, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !30 :          <63>	retq
843 :   %396 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !30 :          <63>	retq
844 :   store i64 %396, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !30 :          <63>	retq
845 :   %397 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !30 :          <63>	retq
846 :   store i16 %397, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !30 :          <63>	retq
847 :   %398 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !30 :          <63>	retq
848 :   store i64 %398, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !30 :          <63>	retq
849 :   %399 = load i128* %XMM0_val, !mcsema_real_eip !30 :          <63>	retq
850 :   store i128 %399, i128* %XMM0, align 1, !mcsema_real_eip !30 :          <63>	retq
851 :   %400 = load i128* %XMM1_val, !mcsema_real_eip !30 :          <63>	retq
852 :   store i128 %400, i128* %XMM1, align 1, !mcsema_real_eip !30 :          <63>	retq
853 :   %401 = load i128* %XMM2_val, !mcsema_real_eip !30 :          <63>	retq
854 :   store i128 %401, i128* %XMM2, align 1, !mcsema_real_eip !30 :          <63>	retq
855 :   %402 = load i128* %XMM3_val, !mcsema_real_eip !30 :          <63>	retq
856 :   store i128 %402, i128* %XMM3, align 1, !mcsema_real_eip !30 :          <63>	retq
857 :   %403 = load i128* %XMM4_val, !mcsema_real_eip !30 :          <63>	retq
858 :   store i128 %403, i128* %XMM4, align 1, !mcsema_real_eip !30 :          <63>	retq
859 :   %404 = load i128* %XMM5_val, !mcsema_real_eip !30 :          <63>	retq
860 :   store i128 %404, i128* %XMM5, align 1, !mcsema_real_eip !30 :          <63>	retq
861 :   %405 = load i128* %XMM6_val, !mcsema_real_eip !30 :          <63>	retq
862 :   store i128 %405, i128* %XMM6, align 1, !mcsema_real_eip !30 :          <63>	retq
863 :   %406 = load i128* %XMM7_val, !mcsema_real_eip !30 :          <63>	retq
864 :   store i128 %406, i128* %XMM7, align 1, !mcsema_real_eip !30 :          <63>	retq
865 :   %407 = load i128* %XMM8_val, !mcsema_real_eip !30 :          <63>	retq
866 :   store i128 %407, i128* %XMM8, align 1, !mcsema_real_eip !30 :          <63>	retq
867 :   %408 = load i128* %XMM9_val, !mcsema_real_eip !30 :          <63>	retq
868 :   store i128 %408, i128* %XMM9, align 1, !mcsema_real_eip !30 :          <63>	retq
869 :   %409 = load i128* %XMM10_val, !mcsema_real_eip !30 :          <63>	retq
870 :   store i128 %409, i128* %XMM10, align 1, !mcsema_real_eip !30 :          <63>	retq
871 :   %410 = load i128* %XMM11_val, !mcsema_real_eip !30 :          <63>	retq
872 :   store i128 %410, i128* %XMM11, align 1, !mcsema_real_eip !30 :          <63>	retq
873 :   %411 = load i128* %XMM12_val, !mcsema_real_eip !30 :          <63>	retq
874 :   store i128 %411, i128* %XMM12, align 1, !mcsema_real_eip !30 :          <63>	retq
875 :   %412 = load i128* %XMM13_val, !mcsema_real_eip !30 :          <63>	retq
876 :   store i128 %412, i128* %XMM13, align 1, !mcsema_real_eip !30 :          <63>	retq
877 :   %413 = load i128* %XMM14_val, !mcsema_real_eip !30 :          <63>	retq
878 :   store i128 %413, i128* %XMM14, align 1, !mcsema_real_eip !30 :          <63>	retq
879 :   %414 = load i128* %XMM15_val, !mcsema_real_eip !30 :          <63>	retq
880 :   store i128 %414, i128* %XMM15, align 1, !mcsema_real_eip !30 :          <63>	retq
881 :   %415 = load i64* %STACK_BASE_val, !mcsema_real_eip !30 :          <63>	retq
882 :   store i64 %415, i64* %STACK_BASE, align 1, !mcsema_real_eip !30 :          <63>	retq
883 :   %416 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !30 :          <63>	retq
884 :   store i64 %416, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !30 :          <63>	retq
885 :   ret void, !mcsema_real_eip !30 :          <63>	retq
========================================================
Source line mapping for function: sub_70
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <70>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <70>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <70>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <70>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <70>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <70>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <70>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <70>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <70>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <70>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <70>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <70>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <70>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <70>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <70>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <70>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <70>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <70>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <70>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <70>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <70>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <70>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <70>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <70>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <70>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <70>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <70>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <70>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <70>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <70>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <70>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <70>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <70>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <70>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <70>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <70>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <70>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <70>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <70>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <70>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <70>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <70>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <70>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <70>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <70>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <70>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <70>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <70>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <70>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <70>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <70>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <70>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <70>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <70>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <70>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <70>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <70>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <70>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <70>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <70>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <70>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <70>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <70>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <70>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <70>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <70>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <70>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <70>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <70>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <70>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <70>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <70>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <70>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <70>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <70>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <70>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <70>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <70>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <70>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <70>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <70>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <70>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <70>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <71>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, -56, !mcsema_real_eip !4 :          <74>	movq	%rdi, -48(%rbp)
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <74>	movq	%rdi, -48(%rbp)
297 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <74>	movq	%rdi, -48(%rbp)
298 :   store i64 %83, i64* %82, !mcsema_real_eip !4 :          <74>	movq	%rdi, -48(%rbp)

299 :   %84 = load i64* %RBP_val, !mcsema_real_eip !5 :          <78>	movl	%esi, -40(%rbp)
300 :   %85 = add i64 %84, -40, !mcsema_real_eip !5 :          <78>	movl	%esi, -40(%rbp)
301 :   %86 = inttoptr i64 %85 to i64*, !mcsema_real_eip !5 :          <78>	movl	%esi, -40(%rbp)
302 :   %87 = load i64* %RSI_val, !mcsema_real_eip !5 :          <78>	movl	%esi, -40(%rbp)
303 :   %88 = trunc i64 %87 to i32, !mcsema_real_eip !5 :          <78>	movl	%esi, -40(%rbp)

304 :   %89 = bitcast i64* %86 to i32* : NIL

305 :   store i32 %88, i32* %89, !mcsema_real_eip !5 :          <78>	movl	%esi, -40(%rbp)

306 :   %90 = load i64* %RBP_val, !mcsema_real_eip !6 :          <7b>	movq	-48(%rbp), %rdi
307 :   %91 = add i64 %90, -48, !mcsema_real_eip !6 :          <7b>	movq	-48(%rbp), %rdi
308 :   %92 = inttoptr i64 %91 to i64*, !mcsema_real_eip !6 :          <7b>	movq	-48(%rbp), %rdi
309 :   %93 = load i64* %92, !mcsema_real_eip !6 :          <7b>	movq	-48(%rbp), %rdi
310 :   store i64 %93, i64* %RDI_val, !mcsema_real_eip !6 :          <7b>	movq	-48(%rbp), %rdi

311 :   %94 = add i64 %90, -32, !mcsema_real_eip !7 :          <7f>	movq	%rdi, -32(%rbp)
312 :   %95 = inttoptr i64 %94 to i64*, !mcsema_real_eip !7 :          <7f>	movq	%rdi, -32(%rbp)
313 :   store i64 %93, i64* %95, !mcsema_real_eip !7 :          <7f>	movq	%rdi, -32(%rbp)

314 :   %96 = load i64* %RBP_val, !mcsema_real_eip !8 :          <83>	movl	-40(%rbp), %esi
315 :   %97 = add i64 %96, -40, !mcsema_real_eip !8 :          <83>	movl	-40(%rbp), %esi
316 :   %98 = inttoptr i64 %97 to i64*, !mcsema_real_eip !8 :          <83>	movl	-40(%rbp), %esi

317 :   %99 = bitcast i64* %98 to i32* : NIL

318 :   %100 = load i32* %99, !mcsema_real_eip !8 :          <83>	movl	-40(%rbp), %esi
319 :   %101 = zext i32 %100 to i64, !mcsema_real_eip !8 :          <83>	movl	-40(%rbp), %esi
320 :   store i64 %101, i64* %RSI_val, !mcsema_real_eip !8 :          <83>	movl	-40(%rbp), %esi

321 :   %102 = load i64* %RBP_val, !mcsema_real_eip !9 :          <86>	movl	%esi, -24(%rbp)
322 :   %103 = add i64 %102, -24, !mcsema_real_eip !9 :          <86>	movl	%esi, -24(%rbp)
323 :   %104 = inttoptr i64 %103 to i64*, !mcsema_real_eip !9 :          <86>	movl	%esi, -24(%rbp)

324 :   %105 = bitcast i64* %104 to i32* : NIL

325 :   store i32 %100, i32* %105, !mcsema_real_eip !9 :          <86>	movl	%esi, -24(%rbp)

326 :   %106 = load i64* %RBP_val, !mcsema_real_eip !10 :          <89>	movq	%rdx, -80(%rbp)
327 :   %107 = add i64 %106, -80, !mcsema_real_eip !10 :          <89>	movq	%rdx, -80(%rbp)
328 :   %108 = inttoptr i64 %107 to i64*, !mcsema_real_eip !10 :          <89>	movq	%rdx, -80(%rbp)
329 :   %109 = load i64* %RDX_val, !mcsema_real_eip !10 :          <89>	movq	%rdx, -80(%rbp)
330 :   store i64 %109, i64* %108, !mcsema_real_eip !10 :          <89>	movq	%rdx, -80(%rbp)

331 :   %110 = load i64* %RBP_val, !mcsema_real_eip !11 :          <8d>	movl	%ecx, -72(%rbp)
332 :   %111 = add i64 %110, -72, !mcsema_real_eip !11 :          <8d>	movl	%ecx, -72(%rbp)
333 :   %112 = inttoptr i64 %111 to i64*, !mcsema_real_eip !11 :          <8d>	movl	%ecx, -72(%rbp)
334 :   %113 = load i64* %RCX_val, !mcsema_real_eip !11 :          <8d>	movl	%ecx, -72(%rbp)
335 :   %114 = trunc i64 %113 to i32, !mcsema_real_eip !11 :          <8d>	movl	%ecx, -72(%rbp)

336 :   %115 = bitcast i64* %112 to i32* : NIL

337 :   store i32 %114, i32* %115, !mcsema_real_eip !11 :          <8d>	movl	%ecx, -72(%rbp)

338 :   %116 = load i64* %RBP_val, !mcsema_real_eip !12 :          <90>	movq	-80(%rbp), %rdx
339 :   %117 = add i64 %116, -80, !mcsema_real_eip !12 :          <90>	movq	-80(%rbp), %rdx
340 :   %118 = inttoptr i64 %117 to i64*, !mcsema_real_eip !12 :          <90>	movq	-80(%rbp), %rdx
341 :   %119 = load i64* %118, !mcsema_real_eip !12 :          <90>	movq	-80(%rbp), %rdx
342 :   store i64 %119, i64* %RDX_val, !mcsema_real_eip !12 :          <90>	movq	-80(%rbp), %rdx

343 :   %120 = add i64 %116, -64, !mcsema_real_eip !13 :          <94>	movq	%rdx, -64(%rbp)
344 :   %121 = inttoptr i64 %120 to i64*, !mcsema_real_eip !13 :          <94>	movq	%rdx, -64(%rbp)
345 :   store i64 %119, i64* %121, !mcsema_real_eip !13 :          <94>	movq	%rdx, -64(%rbp)

346 :   %122 = load i64* %RBP_val, !mcsema_real_eip !14 :          <98>	movl	-72(%rbp), %ecx
347 :   %123 = add i64 %122, -72, !mcsema_real_eip !14 :          <98>	movl	-72(%rbp), %ecx
348 :   %124 = inttoptr i64 %123 to i64*, !mcsema_real_eip !14 :          <98>	movl	-72(%rbp), %ecx

349 :   %125 = bitcast i64* %124 to i32* : NIL

350 :   %126 = load i32* %125, !mcsema_real_eip !14 :          <98>	movl	-72(%rbp), %ecx
351 :   %127 = zext i32 %126 to i64, !mcsema_real_eip !14 :          <98>	movl	-72(%rbp), %ecx
352 :   store i64 %127, i64* %RCX_val, !mcsema_real_eip !14 :          <98>	movl	-72(%rbp), %ecx

353 :   %128 = load i64* %RBP_val, !mcsema_real_eip !15 :          <9b>	movl	%ecx, -56(%rbp)
354 :   %129 = add i64 %128, -56, !mcsema_real_eip !15 :          <9b>	movl	%ecx, -56(%rbp)
355 :   %130 = inttoptr i64 %129 to i64*, !mcsema_real_eip !15 :          <9b>	movl	%ecx, -56(%rbp)

356 :   %131 = bitcast i64* %130 to i32* : NIL

357 :   store i32 %126, i32* %131, !mcsema_real_eip !15 :          <9b>	movl	%ecx, -56(%rbp)

358 :   %132 = load i64* %RBP_val, !mcsema_real_eip !16 :          <9e>	movl	-64(%rbp), %ecx
359 :   %133 = add i64 %132, -64, !mcsema_real_eip !16 :          <9e>	movl	-64(%rbp), %ecx
360 :   %134 = inttoptr i64 %133 to i64*, !mcsema_real_eip !16 :          <9e>	movl	-64(%rbp), %ecx

361 :   %135 = bitcast i64* %134 to i32* : NIL

362 :   %136 = load i32* %135, !mcsema_real_eip !16 :          <9e>	movl	-64(%rbp), %ecx
363 :   %137 = zext i32 %136 to i64, !mcsema_real_eip !16 :          <9e>	movl	-64(%rbp), %ecx
364 :   store i64 %137, i64* %RCX_val, !mcsema_real_eip !16 :          <9e>	movl	-64(%rbp), %ecx

365 :   %138 = load i64* %RBP_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
366 :   %139 = add i64 %138, -32, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
367 :   %140 = inttoptr i64 %139 to i64*, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx

368 :   %141 = bitcast i64* %140 to i32* : NIL

369 :   %142 = load i32* %141, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
370 :   %143 = sub i32 %136, %142, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
371 :   %144 = xor i32 %143, %136, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
372 :   %145 = xor i32 %144, %142, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
373 :   %146 = and i32 %145, 16, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
374 :   %147 = icmp ne i32 %146, 0, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
375 :   store i1 %147, i1* %AF_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
376 :   %148 = trunc i32 %143 to i8, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
377 :   %149 = tail call i8 @llvm.ctpop.i8(i8 %148), !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx

378 :   %150 = and i8 %149, 1 : NIL
379 :   %151 = icmp eq i8 %150, 0 : NIL

380 :   store i1 %151, i1* %PF_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx

381 :   %152 = icmp eq i32 %136, %142 : NIL

382 :   store i1 %152, i1* %ZF_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx

383 :   %153 = icmp slt i32 %143, 0 : NIL

384 :   store i1 %153, i1* %SF_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
385 :   %154 = icmp ult i32 %136, %142, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
386 :   store i1 %154, i1* %CF_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
387 :   %155 = xor i32 %142, %136, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx
388 :   %156 = and i32 %144, %155, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx

389 :   %157 = icmp slt i32 %156, 0 : NIL

390 :   store i1 %157, i1* %OF_val, !mcsema_real_eip !17 :          <a1>	cmpl	-32(%rbp), %ecx

391 :   %158 = load i1* %SF_val, !mcsema_real_eip !18 :          <a4>	jle	22

392 :   %159 = xor i1 %158, %157 : NIL

393 :   %160 = load i1* %ZF_val, !mcsema_real_eip !18 :          <a4>	jle	22
394 :   %161 = or i1 %160, %159, !mcsema_real_eip !18 :          <a4>	jle	22

395 :   %162 = load i64* %RBP_val, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax

396 :   br i1 %161, label %block_0xc0, label %block_0xaa, !mcsema_real_eip !18 :          <a4>	jle	22

397 :   %163 = add i64 %162, -32, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
398 :   %164 = inttoptr i64 %163 to i64*, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax

399 :   %165 = bitcast i64* %164 to i32* : NIL

400 :   %166 = load i32* %165, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
401 :   %167 = zext i32 %166 to i64, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
402 :   store i64 %167, i64* %RAX_val, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax

403 :   %168 = load i64* %RBP_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
404 :   %169 = add i64 %168, -64, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
405 :   %170 = inttoptr i64 %169 to i64*, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

406 :   %171 = bitcast i64* %170 to i32* : NIL

407 :   %172 = load i32* %171, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
408 :   %173 = sub i32 %166, %172, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
409 :   %174 = xor i32 %173, %166, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
410 :   %175 = xor i32 %174, %172, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
411 :   %176 = and i32 %175, 16, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
412 :   %177 = icmp ne i32 %176, 0, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
413 :   store i1 %177, i1* %AF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
414 :   %178 = trunc i32 %173 to i8, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
415 :   %179 = tail call i8 @llvm.ctpop.i8(i8 %178), !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

416 :   %180 = and i8 %179, 1 : NIL
417 :   %181 = icmp eq i8 %180, 0 : NIL

418 :   store i1 %181, i1* %PF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

419 :   %182 = icmp eq i32 %166, %172 : NIL

420 :   store i1 %182, i1* %ZF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

421 :   %183 = icmp slt i32 %173, 0 : NIL

422 :   store i1 %183, i1* %SF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
423 :   %184 = icmp ult i32 %166, %172, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
424 :   store i1 %184, i1* %CF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
425 :   %185 = xor i32 %172, %166, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
426 :   %186 = and i32 %174, %185, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

427 :   %187 = icmp slt i32 %186, 0 : NIL

428 :   store i1 %187, i1* %OF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
429 :   %188 = zext i32 %173 to i64, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
430 :   store i64 %188, i64* %RAX_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

431 :   %189 = load i64* %RBP_val, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)
432 :   %190 = add i64 %189, -96, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)
433 :   %191 = inttoptr i64 %190 to i64*, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)

434 :   %192 = bitcast i64* %191 to i32* : NIL

435 :   store i32 %173, i32* %192, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)

436 :   %193 = load i64* %RBP_val, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
437 :   %194 = add i64 %193, -60, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
438 :   %195 = inttoptr i64 %194 to i64*, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax

439 :   %196 = bitcast i64* %195 to i32* : NIL

440 :   %197 = load i32* %196, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
441 :   %198 = zext i32 %197 to i64, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
442 :   store i64 %198, i64* %RAX_val, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax

443 :   %199 = load i64* %RBP_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
444 :   %200 = add i64 %199, -28, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
445 :   %201 = inttoptr i64 %200 to i64*, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

446 :   %202 = bitcast i64* %201 to i32* : NIL

447 :   %203 = load i32* %202, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
448 :   %204 = sub i32 %197, %203, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
449 :   %205 = xor i32 %204, %197, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
450 :   %206 = xor i32 %205, %203, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
451 :   %207 = and i32 %206, 16, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
452 :   %208 = icmp ne i32 %207, 0, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
453 :   store i1 %208, i1* %AF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
454 :   %209 = trunc i32 %204 to i8, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
455 :   %210 = tail call i8 @llvm.ctpop.i8(i8 %209), !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

456 :   %211 = and i8 %210, 1 : NIL
457 :   %212 = icmp eq i8 %211, 0 : NIL

458 :   store i1 %212, i1* %PF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

459 :   %213 = icmp eq i32 %197, %203 : NIL

460 :   store i1 %213, i1* %ZF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

461 :   %214 = icmp slt i32 %204, 0 : NIL

462 :   store i1 %214, i1* %SF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
463 :   %215 = icmp ult i32 %197, %203, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
464 :   store i1 %215, i1* %CF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
465 :   %216 = xor i32 %203, %197, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
466 :   %217 = and i32 %205, %216, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

467 :   %218 = icmp slt i32 %217, 0 : NIL

468 :   store i1 %218, i1* %OF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

469 :   %219 = load i1* %SF_val, !mcsema_real_eip !24 :          <cf>	jle	22

470 :   %220 = xor i1 %219, %218 : NIL

471 :   %221 = load i1* %ZF_val, !mcsema_real_eip !24 :          <cf>	jle	22
472 :   %222 = or i1 %221, %220, !mcsema_real_eip !24 :          <cf>	jle	22
473 :   br i1 %222, label %block_0xeb, label %block_0xd5, !mcsema_real_eip !24 :          <cf>	jle	22

474 :   %223 = add i64 %162, -28, !mcsema_real_eip !25 :          <aa>	movl	-28(%rbp), %eax
475 :   %224 = inttoptr i64 %223 to i64*, !mcsema_real_eip !25 :          <aa>	movl	-28(%rbp), %eax

476 :   %225 = bitcast i64* %224 to i32* : NIL

477 :   %226 = load i32* %225, !mcsema_real_eip !25 :          <aa>	movl	-28(%rbp), %eax

478 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %226, i32 -1) : NIL
479 :   %227 = extractvalue { i32, i1 } %uadd, 0 : NIL

480 :   %228 = xor i32 %227, %226, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax

481 :   %229 = and i32 %228, 16 : NIL
482 :   %230 = icmp eq i32 %229, 0 : NIL

483 :   store i1 %230, i1* %AF_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax

484 :   %231 = icmp slt i32 %227, 0 : NIL

485 :   store i1 %231, i1* %SF_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
486 :   %232 = icmp eq i32 %227, 0, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
487 :   store i1 %232, i1* %ZF_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
488 :   %233 = and i32 %228, %226, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax

489 :   %234 = icmp slt i32 %233, 0 : NIL

490 :   store i1 %234, i1* %OF_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
491 :   %235 = trunc i32 %227 to i8, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
492 :   %236 = tail call i8 @llvm.ctpop.i8(i8 %235), !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax

493 :   %237 = and i8 %236, 1 : NIL
494 :   %238 = icmp eq i8 %237, 0 : NIL

495 :   store i1 %238, i1* %PF_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax

496 :   %239 = extractvalue { i32, i1 } %uadd, 1 : NIL

497 :   store i1 %239, i1* %CF_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
498 :   %240 = zext i32 %227 to i64, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax
499 :   store i64 %240, i64* %RAX_val, !mcsema_real_eip !26 :          <ad>	addl	$4294967295, %eax

500 :   %241 = load i64* %RBP_val, !mcsema_real_eip !27 :          <b2>	movl	%eax, -28(%rbp)
501 :   %242 = add i64 %241, -28, !mcsema_real_eip !27 :          <b2>	movl	%eax, -28(%rbp)
502 :   %243 = inttoptr i64 %242 to i64*, !mcsema_real_eip !27 :          <b2>	movl	%eax, -28(%rbp)

503 :   %244 = bitcast i64* %243 to i32* : NIL

504 :   store i32 %227, i32* %244, !mcsema_real_eip !27 :          <b2>	movl	%eax, -28(%rbp)

505 :   %245 = load i64* %RBP_val, !mcsema_real_eip !28 :          <b5>	movl	-32(%rbp), %eax
506 :   %246 = add i64 %245, -32, !mcsema_real_eip !28 :          <b5>	movl	-32(%rbp), %eax
507 :   %247 = inttoptr i64 %246 to i64*, !mcsema_real_eip !28 :          <b5>	movl	-32(%rbp), %eax

508 :   %248 = bitcast i64* %247 to i32* : NIL

509 :   %249 = load i32* %248, !mcsema_real_eip !28 :          <b5>	movl	-32(%rbp), %eax

510 :   %uadd140 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %249, i32 60) : NIL
511 :   %250 = extractvalue { i32, i1 } %uadd140, 0 : NIL

512 :   %251 = xor i32 %250, %249, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax

513 :   %252 = and i32 %251, 16 : NIL
514 :   %253 = icmp eq i32 %252, 0 : NIL

515 :   store i1 %253, i1* %AF_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax

516 :   %254 = icmp slt i32 %250, 0 : NIL

517 :   store i1 %254, i1* %SF_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
518 :   %255 = icmp eq i32 %250, 0, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
519 :   store i1 %255, i1* %ZF_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
520 :   %256 = xor i32 %249, -2147483648, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
521 :   %257 = and i32 %251, %256, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax

522 :   %258 = icmp slt i32 %257, 0 : NIL

523 :   store i1 %258, i1* %OF_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
524 :   %259 = trunc i32 %250 to i8, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
525 :   %260 = tail call i8 @llvm.ctpop.i8(i8 %259), !mcsema_real_eip !29 :          <b8>	addl	$60, %eax

526 :   %261 = and i8 %260, 1 : NIL
527 :   %262 = icmp eq i8 %261, 0 : NIL

528 :   store i1 %262, i1* %PF_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax

529 :   %263 = extractvalue { i32, i1 } %uadd140, 1 : NIL

530 :   store i1 %263, i1* %CF_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
531 :   %264 = zext i32 %250 to i64, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax
532 :   store i64 %264, i64* %RAX_val, !mcsema_real_eip !29 :          <b8>	addl	$60, %eax

533 :   %265 = load i64* %RBP_val, !mcsema_real_eip !30 :          <bd>	movl	%eax, -32(%rbp)
534 :   %266 = add i64 %265, -32, !mcsema_real_eip !30 :          <bd>	movl	%eax, -32(%rbp)
535 :   %267 = inttoptr i64 %266 to i64*, !mcsema_real_eip !30 :          <bd>	movl	%eax, -32(%rbp)

536 :   %268 = bitcast i64* %267 to i32* : NIL

537 :   store i32 %250, i32* %268, !mcsema_real_eip !30 :          <bd>	movl	%eax, -32(%rbp)

538 :   %269 = load i64* %RBP_val, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
539 :   %270 = add i64 %269, -32, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
540 :   %271 = inttoptr i64 %270 to i64*, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax

541 :   %272 = bitcast i64* %271 to i32* : NIL

542 :   %273 = load i32* %272, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
543 :   %274 = zext i32 %273 to i64, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax
544 :   store i64 %274, i64* %RAX_val, !mcsema_real_eip !19 :          <c0>	movl	-32(%rbp), %eax

545 :   %275 = load i64* %RBP_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
546 :   %276 = add i64 %275, -64, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
547 :   %277 = inttoptr i64 %276 to i64*, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

548 :   %278 = bitcast i64* %277 to i32* : NIL

549 :   %279 = load i32* %278, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
550 :   %280 = sub i32 %273, %279, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
551 :   %281 = xor i32 %280, %273, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
552 :   %282 = xor i32 %281, %279, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
553 :   %283 = and i32 %282, 16, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
554 :   %284 = icmp ne i32 %283, 0, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
555 :   store i1 %284, i1* %AF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
556 :   %285 = trunc i32 %280 to i8, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
557 :   %286 = tail call i8 @llvm.ctpop.i8(i8 %285), !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

558 :   %287 = and i8 %286, 1 : NIL
559 :   %288 = icmp eq i8 %287, 0 : NIL

560 :   store i1 %288, i1* %PF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

561 :   %289 = icmp eq i32 %273, %279 : NIL

562 :   store i1 %289, i1* %ZF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

563 :   %290 = icmp slt i32 %280, 0 : NIL

564 :   store i1 %290, i1* %SF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
565 :   %291 = icmp ult i32 %273, %279, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
566 :   store i1 %291, i1* %CF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
567 :   %292 = xor i32 %279, %273, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
568 :   %293 = and i32 %281, %292, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

569 :   %294 = icmp slt i32 %293, 0 : NIL

570 :   store i1 %294, i1* %OF_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
571 :   %295 = zext i32 %280 to i64, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax
572 :   store i64 %295, i64* %RAX_val, !mcsema_real_eip !20 :          <c3>	subl	-64(%rbp), %eax

573 :   %296 = load i64* %RBP_val, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)
574 :   %297 = add i64 %296, -96, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)
575 :   %298 = inttoptr i64 %297 to i64*, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)

576 :   %299 = bitcast i64* %298 to i32* : NIL

577 :   store i32 %280, i32* %299, !mcsema_real_eip !21 :          <c6>	movl	%eax, -96(%rbp)

578 :   %300 = load i64* %RBP_val, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
579 :   %301 = add i64 %300, -60, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
580 :   %302 = inttoptr i64 %301 to i64*, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax

581 :   %303 = bitcast i64* %302 to i32* : NIL

582 :   %304 = load i32* %303, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
583 :   %305 = zext i32 %304 to i64, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax
584 :   store i64 %305, i64* %RAX_val, !mcsema_real_eip !22 :          <c9>	movl	-60(%rbp), %eax

585 :   %306 = load i64* %RBP_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
586 :   %307 = add i64 %306, -28, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
587 :   %308 = inttoptr i64 %307 to i64*, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

588 :   %309 = bitcast i64* %308 to i32* : NIL

589 :   %310 = load i32* %309, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
590 :   %311 = sub i32 %304, %310, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
591 :   %312 = xor i32 %311, %304, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
592 :   %313 = xor i32 %312, %310, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
593 :   %314 = and i32 %313, 16, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
594 :   %315 = icmp ne i32 %314, 0, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
595 :   store i1 %315, i1* %AF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
596 :   %316 = trunc i32 %311 to i8, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
597 :   %317 = tail call i8 @llvm.ctpop.i8(i8 %316), !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

598 :   %318 = and i8 %317, 1 : NIL
599 :   %319 = icmp eq i8 %318, 0 : NIL

600 :   store i1 %319, i1* %PF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

601 :   %320 = icmp eq i32 %304, %310 : NIL

602 :   store i1 %320, i1* %ZF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

603 :   %321 = icmp slt i32 %311, 0 : NIL

604 :   store i1 %321, i1* %SF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
605 :   %322 = icmp ult i32 %304, %310, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
606 :   store i1 %322, i1* %CF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
607 :   %323 = xor i32 %310, %304, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax
608 :   %324 = and i32 %312, %323, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

609 :   %325 = icmp slt i32 %324, 0 : NIL

610 :   store i1 %325, i1* %OF_val, !mcsema_real_eip !23 :          <cc>	cmpl	-28(%rbp), %eax

611 :   %326 = load i1* %SF_val, !mcsema_real_eip !24 :          <cf>	jle	22

612 :   %327 = xor i1 %326, %325 : NIL

613 :   %328 = load i1* %ZF_val, !mcsema_real_eip !24 :          <cf>	jle	22
614 :   %329 = or i1 %328, %327, !mcsema_real_eip !24 :          <cf>	jle	22
615 :   br i1 %329, label %block_0xeb, label %block_0xd5, !mcsema_real_eip !24 :          <cf>	jle	22

616 :   %330 = load i64* %RBP_val, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
617 :   %331 = add i64 %330, -28, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
618 :   %332 = inttoptr i64 %331 to i64*, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax

619 :   %333 = bitcast i64* %332 to i32* : NIL

620 :   %334 = load i32* %333, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
621 :   %335 = zext i32 %334 to i64, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
622 :   store i64 %335, i64* %RAX_val, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax

623 :   %336 = load i64* %RBP_val, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
624 :   %337 = add i64 %336, -60, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
625 :   %338 = inttoptr i64 %337 to i64*, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx

626 :   %339 = bitcast i64* %338 to i32* : NIL

627 :   %340 = load i32* %339, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
628 :   %341 = zext i32 %340 to i64, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
629 :   store i64 %341, i64* %RCX_val, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx

630 :   %342 = load i64* %RAX_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
631 :   %343 = trunc i64 %342 to i32, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
632 :   %344 = sub i32 %343, %340, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
633 :   %345 = xor i32 %344, %343, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
634 :   %346 = xor i32 %345, %340, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
635 :   %347 = and i32 %346, 16, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
636 :   %348 = icmp ne i32 %347, 0, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
637 :   store i1 %348, i1* %AF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
638 :   %349 = trunc i32 %344 to i8, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
639 :   %350 = tail call i8 @llvm.ctpop.i8(i8 %349), !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

640 :   %351 = and i8 %350, 1 : NIL
641 :   %352 = icmp eq i8 %351, 0 : NIL

642 :   store i1 %352, i1* %PF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

643 :   %353 = icmp eq i32 %343, %340 : NIL

644 :   store i1 %353, i1* %ZF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

645 :   %354 = icmp slt i32 %344, 0 : NIL

646 :   store i1 %354, i1* %SF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
647 :   %355 = icmp ult i32 %343, %340, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
648 :   store i1 %355, i1* %CF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
649 :   %356 = xor i32 %343, %340, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
650 :   %357 = and i32 %345, %356, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

651 :   %358 = icmp slt i32 %357, 0 : NIL

652 :   store i1 %358, i1* %OF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
653 :   %359 = zext i32 %344 to i64, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
654 :   store i64 %359, i64* %RAX_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

655 :   %360 = load i64* %RBP_val, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)
656 :   %361 = add i64 %360, -92, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)
657 :   %362 = inttoptr i64 %361 to i64*, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)

658 :   %363 = bitcast i64* %362 to i32* : NIL

659 :   store i32 %344, i32* %363, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)

660 :   %364 = load i64* %RBP_val, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
661 :   %365 = add i64 %364, -24, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
662 :   %366 = inttoptr i64 %365 to i64*, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax

663 :   %367 = bitcast i64* %366 to i32* : NIL

664 :   %368 = load i32* %367, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
665 :   %369 = zext i32 %368 to i64, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
666 :   store i64 %369, i64* %RAX_val, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax

667 :   %370 = load i64* %RBP_val, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
668 :   %371 = add i64 %370, -56, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
669 :   %372 = inttoptr i64 %371 to i64*, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx

670 :   %373 = bitcast i64* %372 to i32* : NIL

671 :   %374 = load i32* %373, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
672 :   %375 = zext i32 %374 to i64, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
673 :   store i64 %375, i64* %RCX_val, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx

674 :   %376 = load i64* %RAX_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
675 :   %377 = trunc i64 %376 to i32, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
676 :   %378 = sub i32 %377, %374, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
677 :   %379 = xor i32 %378, %377, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
678 :   %380 = xor i32 %379, %374, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
679 :   %381 = and i32 %380, 16, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
680 :   %382 = icmp ne i32 %381, 0, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
681 :   store i1 %382, i1* %AF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
682 :   %383 = trunc i32 %378 to i8, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
683 :   %384 = tail call i8 @llvm.ctpop.i8(i8 %383), !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

684 :   %385 = and i8 %384, 1 : NIL
685 :   %386 = icmp eq i8 %385, 0 : NIL

686 :   store i1 %386, i1* %PF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

687 :   %387 = icmp eq i32 %377, %374 : NIL

688 :   store i1 %387, i1* %ZF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

689 :   %388 = icmp slt i32 %378, 0 : NIL

690 :   store i1 %388, i1* %SF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
691 :   %389 = icmp ult i32 %377, %374, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
692 :   store i1 %389, i1* %CF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
693 :   %390 = xor i32 %377, %374, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
694 :   %391 = and i32 %379, %390, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

695 :   %392 = icmp slt i32 %391, 0 : NIL

696 :   store i1 %392, i1* %OF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
697 :   %393 = zext i32 %378 to i64, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
698 :   store i64 %393, i64* %RAX_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

699 :   %394 = load i64* %RBP_val, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)
700 :   %395 = add i64 %394, -88, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)
701 :   %396 = inttoptr i64 %395 to i64*, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)

702 :   %397 = bitcast i64* %396 to i32* : NIL

703 :   store i32 %378, i32* %397, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)

704 :   %398 = load i64* %RBP_val, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
705 :   %399 = add i64 %398, -8, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
706 :   %400 = inttoptr i64 %399 to i64*, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
707 :   %401 = load i64* %RAX_val, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
708 :   %402 = trunc i64 %401 to i32, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)

709 :   %403 = bitcast i64* %400 to i32* : NIL

710 :   store i32 %402, i32* %403, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)

711 :   %404 = load i64* %RBP_val, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
712 :   %405 = add i64 %404, -96, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
713 :   %406 = inttoptr i64 %405 to i64*, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
714 :   %407 = load i64* %406, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
715 :   store i64 %407, i64* %RDX_val, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx

716 :   %408 = add i64 %404, -16, !mcsema_real_eip !41 :          <108>	movq	%rdx, -16(%rbp)
717 :   %409 = inttoptr i64 %408 to i64*, !mcsema_real_eip !41 :          <108>	movq	%rdx, -16(%rbp)
718 :   store i64 %407, i64* %409, !mcsema_real_eip !41 :          <108>	movq	%rdx, -16(%rbp)

719 :   %410 = load i64* %RBP_val, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
720 :   %411 = add i64 %410, -8, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
721 :   %412 = inttoptr i64 %411 to i64*, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax

722 :   %413 = bitcast i64* %412 to i32* : NIL

723 :   %414 = load i32* %413, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
724 :   %415 = zext i32 %414 to i64, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
725 :   store i64 %415, i64* %RAX_val, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax

726 :   %416 = load i64* %RBP_val, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)
727 :   %417 = add i64 %416, -104, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)
728 :   %418 = inttoptr i64 %417 to i64*, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)

729 :   %419 = bitcast i64* %418 to i32* : NIL

730 :   store i32 %414, i32* %419, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)

731 :   %420 = load i64* %RBP_val, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
732 :   %421 = add i64 %420, -16, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
733 :   %422 = inttoptr i64 %421 to i64*, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
734 :   %423 = load i64* %422, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
735 :   store i64 %423, i64* %RDX_val, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx

736 :   %424 = add i64 %420, -112, !mcsema_real_eip !45 :          <116>	movq	%rdx, -112(%rbp)
737 :   %425 = inttoptr i64 %424 to i64*, !mcsema_real_eip !45 :          <116>	movq	%rdx, -112(%rbp)
738 :   store i64 %423, i64* %425, !mcsema_real_eip !45 :          <116>	movq	%rdx, -112(%rbp)

739 :   %426 = load i64* %RBP_val, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
740 :   %427 = add i64 %426, -112, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
741 :   %428 = inttoptr i64 %427 to i64*, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
742 :   %429 = load i64* %428, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
743 :   store i64 %429, i64* %RAX_val, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax

744 :   %430 = add i64 %426, -104, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx
745 :   %431 = inttoptr i64 %430 to i64*, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx

746 :   %432 = bitcast i64* %431 to i32* : NIL

747 :   %433 = load i32* %432, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx
748 :   %434 = zext i32 %433 to i64, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx
749 :   store i64 %434, i64* %RDX_val, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx

750 :   %435 = load i64* %RSP_val, !mcsema_real_eip !48 :          <121>	popq	%rbp
751 :   %436 = inttoptr i64 %435 to i64*, !mcsema_real_eip !48 :          <121>	popq	%rbp
752 :   %437 = load i64* %436, !mcsema_real_eip !48 :          <121>	popq	%rbp
753 :   store i64 %437, i64* %RBP_val, !mcsema_real_eip !48 :          <121>	popq	%rbp

754 :   %438 = add i64 %435, 16, !mcsema_real_eip !49 :          <122>	retq
755 :   store i64 %438, i64* %RSP_val, !mcsema_real_eip !49 :          <122>	retq
756 :   %439 = load i64* %RAX_val, !mcsema_real_eip !49 :          <122>	retq
757 :   store i64 %439, i64* %RAX, !mcsema_real_eip !49 :          <122>	retq
758 :   %440 = load i64* %RBX_val, !mcsema_real_eip !49 :          <122>	retq
759 :   store i64 %440, i64* %RBX, !mcsema_real_eip !49 :          <122>	retq
760 :   %441 = load i64* %RCX_val, !mcsema_real_eip !49 :          <122>	retq
761 :   store i64 %441, i64* %RCX, !mcsema_real_eip !49 :          <122>	retq
762 :   %442 = load i64* %RDX_val, !mcsema_real_eip !49 :          <122>	retq
763 :   store i64 %442, i64* %RDX, !mcsema_real_eip !49 :          <122>	retq
764 :   %443 = load i64* %RSI_val, !mcsema_real_eip !49 :          <122>	retq
765 :   store i64 %443, i64* %RSI, !mcsema_real_eip !49 :          <122>	retq
766 :   %444 = load i64* %RDI_val, !mcsema_real_eip !49 :          <122>	retq
767 :   store i64 %444, i64* %RDI, !mcsema_real_eip !49 :          <122>	retq
768 :   %445 = load i64* %RSP_val, !mcsema_real_eip !49 :          <122>	retq
769 :   store i64 %445, i64* %RSP, !mcsema_real_eip !49 :          <122>	retq
770 :   %446 = load i64* %RBP_val, !mcsema_real_eip !49 :          <122>	retq
771 :   store i64 %446, i64* %RBP, !mcsema_real_eip !49 :          <122>	retq
772 :   %447 = load i64* %R8_val, !mcsema_real_eip !49 :          <122>	retq
773 :   store i64 %447, i64* %R8, !mcsema_real_eip !49 :          <122>	retq
774 :   %448 = load i64* %R9_val, !mcsema_real_eip !49 :          <122>	retq
775 :   store i64 %448, i64* %R9, !mcsema_real_eip !49 :          <122>	retq
776 :   %449 = load i64* %R10_val, !mcsema_real_eip !49 :          <122>	retq
777 :   store i64 %449, i64* %R10, !mcsema_real_eip !49 :          <122>	retq
778 :   %450 = load i64* %R11_val, !mcsema_real_eip !49 :          <122>	retq
779 :   store i64 %450, i64* %R11, !mcsema_real_eip !49 :          <122>	retq
780 :   %451 = load i64* %R12_val, !mcsema_real_eip !49 :          <122>	retq
781 :   store i64 %451, i64* %R12, !mcsema_real_eip !49 :          <122>	retq
782 :   %452 = load i64* %R13_val, !mcsema_real_eip !49 :          <122>	retq
783 :   store i64 %452, i64* %R13, !mcsema_real_eip !49 :          <122>	retq
784 :   %453 = load i64* %R14_val, !mcsema_real_eip !49 :          <122>	retq
785 :   store i64 %453, i64* %R14, !mcsema_real_eip !49 :          <122>	retq
786 :   %454 = load i64* %R15_val, !mcsema_real_eip !49 :          <122>	retq
787 :   store i64 %454, i64* %R15, !mcsema_real_eip !49 :          <122>	retq
788 :   %455 = load i64* %RIP_val, !mcsema_real_eip !49 :          <122>	retq
789 :   store i64 %455, i64* %RIP, !mcsema_real_eip !49 :          <122>	retq
790 :   %456 = load i1* %CF_val, !mcsema_real_eip !49 :          <122>	retq
791 :   store i1 %456, i1* %CF, align 1, !mcsema_real_eip !49 :          <122>	retq
792 :   %457 = load i1* %PF_val, !mcsema_real_eip !49 :          <122>	retq
793 :   store i1 %457, i1* %PF, align 1, !mcsema_real_eip !49 :          <122>	retq
794 :   %458 = load i1* %AF_val, !mcsema_real_eip !49 :          <122>	retq
795 :   store i1 %458, i1* %AF, align 1, !mcsema_real_eip !49 :          <122>	retq
796 :   %459 = load i1* %ZF_val, !mcsema_real_eip !49 :          <122>	retq
797 :   store i1 %459, i1* %ZF, align 1, !mcsema_real_eip !49 :          <122>	retq
798 :   %460 = load i1* %SF_val, !mcsema_real_eip !49 :          <122>	retq
799 :   store i1 %460, i1* %SF, align 1, !mcsema_real_eip !49 :          <122>	retq
800 :   %461 = load i1* %OF_val, !mcsema_real_eip !49 :          <122>	retq
801 :   store i1 %461, i1* %OF, align 1, !mcsema_real_eip !49 :          <122>	retq
802 :   %462 = load i1* %DF_val, !mcsema_real_eip !49 :          <122>	retq
803 :   store i1 %462, i1* %DF, align 1, !mcsema_real_eip !49 :          <122>	retq
804 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !49 :          <122>	retq
805 :   %463 = load i1* %FPU_B_val, !mcsema_real_eip !49 :          <122>	retq
806 :   store i1 %463, i1* %FPU_B, align 1, !mcsema_real_eip !49 :          <122>	retq
807 :   %464 = load i1* %FPU_C3_val, !mcsema_real_eip !49 :          <122>	retq
808 :   store i1 %464, i1* %FPU_C3, align 1, !mcsema_real_eip !49 :          <122>	retq
809 :   %465 = load i3* %FPU_TOP_val, !mcsema_real_eip !49 :          <122>	retq
810 :   store i3 %465, i3* %FPU_TOP, align 1, !mcsema_real_eip !49 :          <122>	retq
811 :   %466 = load i1* %FPU_C2_val, !mcsema_real_eip !49 :          <122>	retq
812 :   store i1 %466, i1* %FPU_C2, align 1, !mcsema_real_eip !49 :          <122>	retq
813 :   %467 = load i1* %FPU_C1_val, !mcsema_real_eip !49 :          <122>	retq
814 :   store i1 %467, i1* %FPU_C1, align 1, !mcsema_real_eip !49 :          <122>	retq
815 :   %468 = load i1* %FPU_C0_val, !mcsema_real_eip !49 :          <122>	retq
816 :   store i1 %468, i1* %FPU_C0, align 1, !mcsema_real_eip !49 :          <122>	retq
817 :   %469 = load i1* %FPU_ES_val, !mcsema_real_eip !49 :          <122>	retq
818 :   store i1 %469, i1* %FPU_ES, align 1, !mcsema_real_eip !49 :          <122>	retq
819 :   %470 = load i1* %FPU_SF_val, !mcsema_real_eip !49 :          <122>	retq
820 :   store i1 %470, i1* %FPU_SF, align 1, !mcsema_real_eip !49 :          <122>	retq
821 :   %471 = load i1* %FPU_PE_val, !mcsema_real_eip !49 :          <122>	retq
822 :   store i1 %471, i1* %FPU_PE, align 1, !mcsema_real_eip !49 :          <122>	retq
823 :   %472 = load i1* %FPU_UE_val, !mcsema_real_eip !49 :          <122>	retq
824 :   store i1 %472, i1* %FPU_UE, align 1, !mcsema_real_eip !49 :          <122>	retq
825 :   %473 = load i1* %FPU_OE_val, !mcsema_real_eip !49 :          <122>	retq
826 :   store i1 %473, i1* %FPU_OE, align 1, !mcsema_real_eip !49 :          <122>	retq
827 :   %474 = load i1* %FPU_ZE_val, !mcsema_real_eip !49 :          <122>	retq
828 :   store i1 %474, i1* %FPU_ZE, align 1, !mcsema_real_eip !49 :          <122>	retq
829 :   %475 = load i1* %FPU_DE_val, !mcsema_real_eip !49 :          <122>	retq
830 :   store i1 %475, i1* %FPU_DE, align 1, !mcsema_real_eip !49 :          <122>	retq
831 :   %476 = load i1* %FPU_IE_val, !mcsema_real_eip !49 :          <122>	retq
832 :   store i1 %476, i1* %FPU_IE, align 1, !mcsema_real_eip !49 :          <122>	retq
833 :   %477 = load i1* %FPU_X_val, !mcsema_real_eip !49 :          <122>	retq
834 :   store i1 %477, i1* %FPU_X, align 1, !mcsema_real_eip !49 :          <122>	retq
835 :   %478 = load i2* %FPU_RC_val, !mcsema_real_eip !49 :          <122>	retq
836 :   store i2 %478, i2* %FPU_RC, align 1, !mcsema_real_eip !49 :          <122>	retq
837 :   %479 = load i2* %FPU_PC_val, !mcsema_real_eip !49 :          <122>	retq
838 :   store i2 %479, i2* %FPU_PC, align 1, !mcsema_real_eip !49 :          <122>	retq
839 :   %480 = load i1* %FPU_PM_val, !mcsema_real_eip !49 :          <122>	retq
840 :   store i1 %480, i1* %FPU_PM, align 1, !mcsema_real_eip !49 :          <122>	retq
841 :   %481 = load i1* %FPU_UM_val, !mcsema_real_eip !49 :          <122>	retq
842 :   store i1 %481, i1* %FPU_UM, align 1, !mcsema_real_eip !49 :          <122>	retq
843 :   %482 = load i1* %FPU_OM_val, !mcsema_real_eip !49 :          <122>	retq
844 :   store i1 %482, i1* %FPU_OM, align 1, !mcsema_real_eip !49 :          <122>	retq
845 :   %483 = load i1* %FPU_ZM_val, !mcsema_real_eip !49 :          <122>	retq
846 :   store i1 %483, i1* %FPU_ZM, align 1, !mcsema_real_eip !49 :          <122>	retq
847 :   %484 = load i1* %FPU_DM_val, !mcsema_real_eip !49 :          <122>	retq
848 :   store i1 %484, i1* %FPU_DM, align 1, !mcsema_real_eip !49 :          <122>	retq
849 :   %485 = load i1* %FPU_IM_val, !mcsema_real_eip !49 :          <122>	retq
850 :   store i1 %485, i1* %FPU_IM, align 1, !mcsema_real_eip !49 :          <122>	retq

851 :   %486 = load i64* %53, align 4 : NIL
852 :   store i64 %486, i64* %52, align 4 : NIL

853 :   %487 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !49 :          <122>	retq
854 :   store i16 %487, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !49 :          <122>	retq
855 :   %488 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !49 :          <122>	retq
856 :   store i64 %488, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !49 :          <122>	retq
857 :   %489 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !49 :          <122>	retq
858 :   store i16 %489, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !49 :          <122>	retq
859 :   %490 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !49 :          <122>	retq
860 :   store i64 %490, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !49 :          <122>	retq
861 :   %491 = load i128* %XMM0_val, !mcsema_real_eip !49 :          <122>	retq
862 :   store i128 %491, i128* %XMM0, align 1, !mcsema_real_eip !49 :          <122>	retq
863 :   %492 = load i128* %XMM1_val, !mcsema_real_eip !49 :          <122>	retq
864 :   store i128 %492, i128* %XMM1, align 1, !mcsema_real_eip !49 :          <122>	retq
865 :   %493 = load i128* %XMM2_val, !mcsema_real_eip !49 :          <122>	retq
866 :   store i128 %493, i128* %XMM2, align 1, !mcsema_real_eip !49 :          <122>	retq
867 :   %494 = load i128* %XMM3_val, !mcsema_real_eip !49 :          <122>	retq
868 :   store i128 %494, i128* %XMM3, align 1, !mcsema_real_eip !49 :          <122>	retq
869 :   %495 = load i128* %XMM4_val, !mcsema_real_eip !49 :          <122>	retq
870 :   store i128 %495, i128* %XMM4, align 1, !mcsema_real_eip !49 :          <122>	retq
871 :   %496 = load i128* %XMM5_val, !mcsema_real_eip !49 :          <122>	retq
872 :   store i128 %496, i128* %XMM5, align 1, !mcsema_real_eip !49 :          <122>	retq
873 :   %497 = load i128* %XMM6_val, !mcsema_real_eip !49 :          <122>	retq
874 :   store i128 %497, i128* %XMM6, align 1, !mcsema_real_eip !49 :          <122>	retq
875 :   %498 = load i128* %XMM7_val, !mcsema_real_eip !49 :          <122>	retq
876 :   store i128 %498, i128* %XMM7, align 1, !mcsema_real_eip !49 :          <122>	retq
877 :   %499 = load i128* %XMM8_val, !mcsema_real_eip !49 :          <122>	retq
878 :   store i128 %499, i128* %XMM8, align 1, !mcsema_real_eip !49 :          <122>	retq
879 :   %500 = load i128* %XMM9_val, !mcsema_real_eip !49 :          <122>	retq
880 :   store i128 %500, i128* %XMM9, align 1, !mcsema_real_eip !49 :          <122>	retq
881 :   %501 = load i128* %XMM10_val, !mcsema_real_eip !49 :          <122>	retq
882 :   store i128 %501, i128* %XMM10, align 1, !mcsema_real_eip !49 :          <122>	retq
883 :   %502 = load i128* %XMM11_val, !mcsema_real_eip !49 :          <122>	retq
884 :   store i128 %502, i128* %XMM11, align 1, !mcsema_real_eip !49 :          <122>	retq
885 :   %503 = load i128* %XMM12_val, !mcsema_real_eip !49 :          <122>	retq
886 :   store i128 %503, i128* %XMM12, align 1, !mcsema_real_eip !49 :          <122>	retq
887 :   %504 = load i128* %XMM13_val, !mcsema_real_eip !49 :          <122>	retq
888 :   store i128 %504, i128* %XMM13, align 1, !mcsema_real_eip !49 :          <122>	retq
889 :   %505 = load i128* %XMM14_val, !mcsema_real_eip !49 :          <122>	retq
890 :   store i128 %505, i128* %XMM14, align 1, !mcsema_real_eip !49 :          <122>	retq
891 :   %506 = load i128* %XMM15_val, !mcsema_real_eip !49 :          <122>	retq
892 :   store i128 %506, i128* %XMM15, align 1, !mcsema_real_eip !49 :          <122>	retq
893 :   %507 = load i64* %STACK_BASE_val, !mcsema_real_eip !49 :          <122>	retq
894 :   store i64 %507, i64* %STACK_BASE, align 1, !mcsema_real_eip !49 :          <122>	retq
895 :   %508 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !49 :          <122>	retq
896 :   store i64 %508, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !49 :          <122>	retq
897 :   ret void, !mcsema_real_eip !49 :          <122>	retq

898 :   %509 = load i64* %RBP_val, !mcsema_real_eip !50 :          <d5>	movl	-24(%rbp), %eax
899 :   %510 = add i64 %509, -24, !mcsema_real_eip !50 :          <d5>	movl	-24(%rbp), %eax
900 :   %511 = inttoptr i64 %510 to i64*, !mcsema_real_eip !50 :          <d5>	movl	-24(%rbp), %eax

901 :   %512 = bitcast i64* %511 to i32* : NIL

902 :   %513 = load i32* %512, !mcsema_real_eip !50 :          <d5>	movl	-24(%rbp), %eax

903 :   %uadd142 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %513, i32 -1) : NIL
904 :   %514 = extractvalue { i32, i1 } %uadd142, 0 : NIL

905 :   %515 = xor i32 %514, %513, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax

906 :   %516 = and i32 %515, 16 : NIL
907 :   %517 = icmp eq i32 %516, 0 : NIL

908 :   store i1 %517, i1* %AF_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax

909 :   %518 = icmp slt i32 %514, 0 : NIL

910 :   store i1 %518, i1* %SF_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
911 :   %519 = icmp eq i32 %514, 0, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
912 :   store i1 %519, i1* %ZF_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
913 :   %520 = and i32 %515, %513, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax

914 :   %521 = icmp slt i32 %520, 0 : NIL

915 :   store i1 %521, i1* %OF_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
916 :   %522 = trunc i32 %514 to i8, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
917 :   %523 = tail call i8 @llvm.ctpop.i8(i8 %522), !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax

918 :   %524 = and i8 %523, 1 : NIL
919 :   %525 = icmp eq i8 %524, 0 : NIL

920 :   store i1 %525, i1* %PF_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax

921 :   %526 = extractvalue { i32, i1 } %uadd142, 1 : NIL

922 :   store i1 %526, i1* %CF_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
923 :   %527 = zext i32 %514 to i64, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax
924 :   store i64 %527, i64* %RAX_val, !mcsema_real_eip !51 :          <d8>	addl	$4294967295, %eax

925 :   %528 = load i64* %RBP_val, !mcsema_real_eip !52 :          <dd>	movl	%eax, -24(%rbp)
926 :   %529 = add i64 %528, -24, !mcsema_real_eip !52 :          <dd>	movl	%eax, -24(%rbp)
927 :   %530 = inttoptr i64 %529 to i64*, !mcsema_real_eip !52 :          <dd>	movl	%eax, -24(%rbp)

928 :   %531 = bitcast i64* %530 to i32* : NIL

929 :   store i32 %514, i32* %531, !mcsema_real_eip !52 :          <dd>	movl	%eax, -24(%rbp)

930 :   %532 = load i64* %RBP_val, !mcsema_real_eip !53 :          <e0>	movl	-28(%rbp), %eax
931 :   %533 = add i64 %532, -28, !mcsema_real_eip !53 :          <e0>	movl	-28(%rbp), %eax
932 :   %534 = inttoptr i64 %533 to i64*, !mcsema_real_eip !53 :          <e0>	movl	-28(%rbp), %eax

933 :   %535 = bitcast i64* %534 to i32* : NIL

934 :   %536 = load i32* %535, !mcsema_real_eip !53 :          <e0>	movl	-28(%rbp), %eax

935 :   %uadd143 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %536, i32 60) : NIL
936 :   %537 = extractvalue { i32, i1 } %uadd143, 0 : NIL

937 :   %538 = xor i32 %537, %536, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax

938 :   %539 = and i32 %538, 16 : NIL
939 :   %540 = icmp eq i32 %539, 0 : NIL

940 :   store i1 %540, i1* %AF_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax

941 :   %541 = icmp slt i32 %537, 0 : NIL

942 :   store i1 %541, i1* %SF_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
943 :   %542 = icmp eq i32 %537, 0, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
944 :   store i1 %542, i1* %ZF_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
945 :   %543 = xor i32 %536, -2147483648, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
946 :   %544 = and i32 %538, %543, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax

947 :   %545 = icmp slt i32 %544, 0 : NIL

948 :   store i1 %545, i1* %OF_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
949 :   %546 = trunc i32 %537 to i8, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
950 :   %547 = tail call i8 @llvm.ctpop.i8(i8 %546), !mcsema_real_eip !54 :          <e3>	addl	$60, %eax

951 :   %548 = and i8 %547, 1 : NIL
952 :   %549 = icmp eq i8 %548, 0 : NIL

953 :   store i1 %549, i1* %PF_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax

954 :   %550 = extractvalue { i32, i1 } %uadd143, 1 : NIL

955 :   store i1 %550, i1* %CF_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
956 :   %551 = zext i32 %537 to i64, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax
957 :   store i64 %551, i64* %RAX_val, !mcsema_real_eip !54 :          <e3>	addl	$60, %eax

958 :   %552 = load i64* %RBP_val, !mcsema_real_eip !55 :          <e8>	movl	%eax, -28(%rbp)
959 :   %553 = add i64 %552, -28, !mcsema_real_eip !55 :          <e8>	movl	%eax, -28(%rbp)
960 :   %554 = inttoptr i64 %553 to i64*, !mcsema_real_eip !55 :          <e8>	movl	%eax, -28(%rbp)

961 :   %555 = bitcast i64* %554 to i32* : NIL

962 :   store i32 %537, i32* %555, !mcsema_real_eip !55 :          <e8>	movl	%eax, -28(%rbp)

963 :   %556 = load i64* %RBP_val, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
964 :   %557 = add i64 %556, -28, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
965 :   %558 = inttoptr i64 %557 to i64*, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax

966 :   %559 = bitcast i64* %558 to i32* : NIL

967 :   %560 = load i32* %559, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
968 :   %561 = zext i32 %560 to i64, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax
969 :   store i64 %561, i64* %RAX_val, !mcsema_real_eip !31 :          <eb>	movl	-28(%rbp), %eax

970 :   %562 = load i64* %RBP_val, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
971 :   %563 = add i64 %562, -60, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
972 :   %564 = inttoptr i64 %563 to i64*, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx

973 :   %565 = bitcast i64* %564 to i32* : NIL

974 :   %566 = load i32* %565, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
975 :   %567 = zext i32 %566 to i64, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx
976 :   store i64 %567, i64* %RCX_val, !mcsema_real_eip !32 :          <ee>	movl	-60(%rbp), %ecx

977 :   %568 = load i64* %RAX_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
978 :   %569 = trunc i64 %568 to i32, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
979 :   %570 = sub i32 %569, %566, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
980 :   %571 = xor i32 %570, %569, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
981 :   %572 = xor i32 %571, %566, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
982 :   %573 = and i32 %572, 16, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
983 :   %574 = icmp ne i32 %573, 0, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
984 :   store i1 %574, i1* %AF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
985 :   %575 = trunc i32 %570 to i8, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
986 :   %576 = tail call i8 @llvm.ctpop.i8(i8 %575), !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

987 :   %577 = and i8 %576, 1 : NIL
988 :   %578 = icmp eq i8 %577, 0 : NIL

989 :   store i1 %578, i1* %PF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

990 :   %579 = icmp eq i32 %569, %566 : NIL

991 :   store i1 %579, i1* %ZF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

992 :   %580 = icmp slt i32 %570, 0 : NIL

993 :   store i1 %580, i1* %SF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
994 :   %581 = icmp ult i32 %569, %566, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
995 :   store i1 %581, i1* %CF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
996 :   %582 = xor i32 %569, %566, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
997 :   %583 = and i32 %571, %582, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

998 :   %584 = icmp slt i32 %583, 0 : NIL

999 :   store i1 %584, i1* %OF_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
1000 :   %585 = zext i32 %570 to i64, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax
1001 :   store i64 %585, i64* %RAX_val, !mcsema_real_eip !33 :          <f1>	subl	%ecx, %eax

1002 :   %586 = load i64* %RBP_val, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)
1003 :   %587 = add i64 %586, -92, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)
1004 :   %588 = inttoptr i64 %587 to i64*, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)

1005 :   %589 = bitcast i64* %588 to i32* : NIL

1006 :   store i32 %570, i32* %589, !mcsema_real_eip !34 :          <f3>	movl	%eax, -92(%rbp)

1007 :   %590 = load i64* %RBP_val, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
1008 :   %591 = add i64 %590, -24, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
1009 :   %592 = inttoptr i64 %591 to i64*, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax

1010 :   %593 = bitcast i64* %592 to i32* : NIL

1011 :   %594 = load i32* %593, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
1012 :   %595 = zext i32 %594 to i64, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax
1013 :   store i64 %595, i64* %RAX_val, !mcsema_real_eip !35 :          <f6>	movl	-24(%rbp), %eax

1014 :   %596 = load i64* %RBP_val, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
1015 :   %597 = add i64 %596, -56, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
1016 :   %598 = inttoptr i64 %597 to i64*, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx

1017 :   %599 = bitcast i64* %598 to i32* : NIL

1018 :   %600 = load i32* %599, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
1019 :   %601 = zext i32 %600 to i64, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx
1020 :   store i64 %601, i64* %RCX_val, !mcsema_real_eip !36 :          <f9>	movl	-56(%rbp), %ecx

1021 :   %602 = load i64* %RAX_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1022 :   %603 = trunc i64 %602 to i32, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1023 :   %604 = sub i32 %603, %600, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1024 :   %605 = xor i32 %604, %603, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1025 :   %606 = xor i32 %605, %600, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1026 :   %607 = and i32 %606, 16, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1027 :   %608 = icmp ne i32 %607, 0, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1028 :   store i1 %608, i1* %AF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1029 :   %609 = trunc i32 %604 to i8, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1030 :   %610 = tail call i8 @llvm.ctpop.i8(i8 %609), !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

1031 :   %611 = and i8 %610, 1 : NIL
1032 :   %612 = icmp eq i8 %611, 0 : NIL

1033 :   store i1 %612, i1* %PF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

1034 :   %613 = icmp eq i32 %603, %600 : NIL

1035 :   store i1 %613, i1* %ZF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

1036 :   %614 = icmp slt i32 %604, 0 : NIL

1037 :   store i1 %614, i1* %SF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1038 :   %615 = icmp ult i32 %603, %600, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1039 :   store i1 %615, i1* %CF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1040 :   %616 = xor i32 %603, %600, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1041 :   %617 = and i32 %605, %616, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

1042 :   %618 = icmp slt i32 %617, 0 : NIL

1043 :   store i1 %618, i1* %OF_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1044 :   %619 = zext i32 %604 to i64, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax
1045 :   store i64 %619, i64* %RAX_val, !mcsema_real_eip !37 :          <fc>	subl	%ecx, %eax

1046 :   %620 = load i64* %RBP_val, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)
1047 :   %621 = add i64 %620, -88, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)
1048 :   %622 = inttoptr i64 %621 to i64*, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)

1049 :   %623 = bitcast i64* %622 to i32* : NIL

1050 :   store i32 %604, i32* %623, !mcsema_real_eip !38 :          <fe>	movl	%eax, -88(%rbp)

1051 :   %624 = load i64* %RBP_val, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
1052 :   %625 = add i64 %624, -8, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
1053 :   %626 = inttoptr i64 %625 to i64*, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
1054 :   %627 = load i64* %RAX_val, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)
1055 :   %628 = trunc i64 %627 to i32, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)

1056 :   %629 = bitcast i64* %626 to i32* : NIL

1057 :   store i32 %628, i32* %629, !mcsema_real_eip !39 :          <101>	movl	%eax, -8(%rbp)

1058 :   %630 = load i64* %RBP_val, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
1059 :   %631 = add i64 %630, -96, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
1060 :   %632 = inttoptr i64 %631 to i64*, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
1061 :   %633 = load i64* %632, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx
1062 :   store i64 %633, i64* %RDX_val, !mcsema_real_eip !40 :          <104>	movq	-96(%rbp), %rdx

1063 :   %634 = add i64 %630, -16, !mcsema_real_eip !41 :          <108>	movq	%rdx, -16(%rbp)
1064 :   %635 = inttoptr i64 %634 to i64*, !mcsema_real_eip !41 :          <108>	movq	%rdx, -16(%rbp)
1065 :   store i64 %633, i64* %635, !mcsema_real_eip !41 :          <108>	movq	%rdx, -16(%rbp)

1066 :   %636 = load i64* %RBP_val, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
1067 :   %637 = add i64 %636, -8, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
1068 :   %638 = inttoptr i64 %637 to i64*, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax

1069 :   %639 = bitcast i64* %638 to i32* : NIL

1070 :   %640 = load i32* %639, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
1071 :   %641 = zext i32 %640 to i64, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax
1072 :   store i64 %641, i64* %RAX_val, !mcsema_real_eip !42 :          <10c>	movl	-8(%rbp), %eax

1073 :   %642 = load i64* %RBP_val, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)
1074 :   %643 = add i64 %642, -104, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)
1075 :   %644 = inttoptr i64 %643 to i64*, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)

1076 :   %645 = bitcast i64* %644 to i32* : NIL

1077 :   store i32 %640, i32* %645, !mcsema_real_eip !43 :          <10f>	movl	%eax, -104(%rbp)

1078 :   %646 = load i64* %RBP_val, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
1079 :   %647 = add i64 %646, -16, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
1080 :   %648 = inttoptr i64 %647 to i64*, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
1081 :   %649 = load i64* %648, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx
1082 :   store i64 %649, i64* %RDX_val, !mcsema_real_eip !44 :          <112>	movq	-16(%rbp), %rdx

1083 :   %650 = add i64 %646, -112, !mcsema_real_eip !45 :          <116>	movq	%rdx, -112(%rbp)
1084 :   %651 = inttoptr i64 %650 to i64*, !mcsema_real_eip !45 :          <116>	movq	%rdx, -112(%rbp)
1085 :   store i64 %649, i64* %651, !mcsema_real_eip !45 :          <116>	movq	%rdx, -112(%rbp)

1086 :   %652 = load i64* %RBP_val, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
1087 :   %653 = add i64 %652, -112, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
1088 :   %654 = inttoptr i64 %653 to i64*, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
1089 :   %655 = load i64* %654, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax
1090 :   store i64 %655, i64* %RAX_val, !mcsema_real_eip !46 :          <11a>	movq	-112(%rbp), %rax

1091 :   %656 = add i64 %652, -104, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx
1092 :   %657 = inttoptr i64 %656 to i64*, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx

1093 :   %658 = bitcast i64* %657 to i32* : NIL

1094 :   %659 = load i32* %658, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx
1095 :   %660 = zext i32 %659 to i64, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx
1096 :   store i64 %660, i64* %RDX_val, !mcsema_real_eip !47 :          <11e>	movl	-104(%rbp), %edx

1097 :   %661 = load i64* %RSP_val, !mcsema_real_eip !48 :          <121>	popq	%rbp
1098 :   %662 = inttoptr i64 %661 to i64*, !mcsema_real_eip !48 :          <121>	popq	%rbp
1099 :   %663 = load i64* %662, !mcsema_real_eip !48 :          <121>	popq	%rbp
1100 :   store i64 %663, i64* %RBP_val, !mcsema_real_eip !48 :          <121>	popq	%rbp

1101 :   %664 = add i64 %661, 16, !mcsema_real_eip !49 :          <122>	retq
1102 :   store i64 %664, i64* %RSP_val, !mcsema_real_eip !49 :          <122>	retq
1103 :   %665 = load i64* %RAX_val, !mcsema_real_eip !49 :          <122>	retq
1104 :   store i64 %665, i64* %RAX, !mcsema_real_eip !49 :          <122>	retq
1105 :   %666 = load i64* %RBX_val, !mcsema_real_eip !49 :          <122>	retq
1106 :   store i64 %666, i64* %RBX, !mcsema_real_eip !49 :          <122>	retq
1107 :   %667 = load i64* %RCX_val, !mcsema_real_eip !49 :          <122>	retq
1108 :   store i64 %667, i64* %RCX, !mcsema_real_eip !49 :          <122>	retq
1109 :   %668 = load i64* %RDX_val, !mcsema_real_eip !49 :          <122>	retq
1110 :   store i64 %668, i64* %RDX, !mcsema_real_eip !49 :          <122>	retq
1111 :   %669 = load i64* %RSI_val, !mcsema_real_eip !49 :          <122>	retq
1112 :   store i64 %669, i64* %RSI, !mcsema_real_eip !49 :          <122>	retq
1113 :   %670 = load i64* %RDI_val, !mcsema_real_eip !49 :          <122>	retq
1114 :   store i64 %670, i64* %RDI, !mcsema_real_eip !49 :          <122>	retq
1115 :   %671 = load i64* %RSP_val, !mcsema_real_eip !49 :          <122>	retq
1116 :   store i64 %671, i64* %RSP, !mcsema_real_eip !49 :          <122>	retq
1117 :   %672 = load i64* %RBP_val, !mcsema_real_eip !49 :          <122>	retq
1118 :   store i64 %672, i64* %RBP, !mcsema_real_eip !49 :          <122>	retq
1119 :   %673 = load i64* %R8_val, !mcsema_real_eip !49 :          <122>	retq
1120 :   store i64 %673, i64* %R8, !mcsema_real_eip !49 :          <122>	retq
1121 :   %674 = load i64* %R9_val, !mcsema_real_eip !49 :          <122>	retq
1122 :   store i64 %674, i64* %R9, !mcsema_real_eip !49 :          <122>	retq
1123 :   %675 = load i64* %R10_val, !mcsema_real_eip !49 :          <122>	retq
1124 :   store i64 %675, i64* %R10, !mcsema_real_eip !49 :          <122>	retq
1125 :   %676 = load i64* %R11_val, !mcsema_real_eip !49 :          <122>	retq
1126 :   store i64 %676, i64* %R11, !mcsema_real_eip !49 :          <122>	retq
1127 :   %677 = load i64* %R12_val, !mcsema_real_eip !49 :          <122>	retq
1128 :   store i64 %677, i64* %R12, !mcsema_real_eip !49 :          <122>	retq
1129 :   %678 = load i64* %R13_val, !mcsema_real_eip !49 :          <122>	retq
1130 :   store i64 %678, i64* %R13, !mcsema_real_eip !49 :          <122>	retq
1131 :   %679 = load i64* %R14_val, !mcsema_real_eip !49 :          <122>	retq
1132 :   store i64 %679, i64* %R14, !mcsema_real_eip !49 :          <122>	retq
1133 :   %680 = load i64* %R15_val, !mcsema_real_eip !49 :          <122>	retq
1134 :   store i64 %680, i64* %R15, !mcsema_real_eip !49 :          <122>	retq
1135 :   %681 = load i64* %RIP_val, !mcsema_real_eip !49 :          <122>	retq
1136 :   store i64 %681, i64* %RIP, !mcsema_real_eip !49 :          <122>	retq
1137 :   %682 = load i1* %CF_val, !mcsema_real_eip !49 :          <122>	retq
1138 :   store i1 %682, i1* %CF, align 1, !mcsema_real_eip !49 :          <122>	retq
1139 :   %683 = load i1* %PF_val, !mcsema_real_eip !49 :          <122>	retq
1140 :   store i1 %683, i1* %PF, align 1, !mcsema_real_eip !49 :          <122>	retq
1141 :   %684 = load i1* %AF_val, !mcsema_real_eip !49 :          <122>	retq
1142 :   store i1 %684, i1* %AF, align 1, !mcsema_real_eip !49 :          <122>	retq
1143 :   %685 = load i1* %ZF_val, !mcsema_real_eip !49 :          <122>	retq
1144 :   store i1 %685, i1* %ZF, align 1, !mcsema_real_eip !49 :          <122>	retq
1145 :   %686 = load i1* %SF_val, !mcsema_real_eip !49 :          <122>	retq
1146 :   store i1 %686, i1* %SF, align 1, !mcsema_real_eip !49 :          <122>	retq
1147 :   %687 = load i1* %OF_val, !mcsema_real_eip !49 :          <122>	retq
1148 :   store i1 %687, i1* %OF, align 1, !mcsema_real_eip !49 :          <122>	retq
1149 :   %688 = load i1* %DF_val, !mcsema_real_eip !49 :          <122>	retq
1150 :   store i1 %688, i1* %DF, align 1, !mcsema_real_eip !49 :          <122>	retq
1151 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !49 :          <122>	retq
1152 :   %689 = load i1* %FPU_B_val, !mcsema_real_eip !49 :          <122>	retq
1153 :   store i1 %689, i1* %FPU_B, align 1, !mcsema_real_eip !49 :          <122>	retq
1154 :   %690 = load i1* %FPU_C3_val, !mcsema_real_eip !49 :          <122>	retq
1155 :   store i1 %690, i1* %FPU_C3, align 1, !mcsema_real_eip !49 :          <122>	retq
1156 :   %691 = load i3* %FPU_TOP_val, !mcsema_real_eip !49 :          <122>	retq
1157 :   store i3 %691, i3* %FPU_TOP, align 1, !mcsema_real_eip !49 :          <122>	retq
1158 :   %692 = load i1* %FPU_C2_val, !mcsema_real_eip !49 :          <122>	retq
1159 :   store i1 %692, i1* %FPU_C2, align 1, !mcsema_real_eip !49 :          <122>	retq
1160 :   %693 = load i1* %FPU_C1_val, !mcsema_real_eip !49 :          <122>	retq
1161 :   store i1 %693, i1* %FPU_C1, align 1, !mcsema_real_eip !49 :          <122>	retq
1162 :   %694 = load i1* %FPU_C0_val, !mcsema_real_eip !49 :          <122>	retq
1163 :   store i1 %694, i1* %FPU_C0, align 1, !mcsema_real_eip !49 :          <122>	retq
1164 :   %695 = load i1* %FPU_ES_val, !mcsema_real_eip !49 :          <122>	retq
1165 :   store i1 %695, i1* %FPU_ES, align 1, !mcsema_real_eip !49 :          <122>	retq
1166 :   %696 = load i1* %FPU_SF_val, !mcsema_real_eip !49 :          <122>	retq
1167 :   store i1 %696, i1* %FPU_SF, align 1, !mcsema_real_eip !49 :          <122>	retq
1168 :   %697 = load i1* %FPU_PE_val, !mcsema_real_eip !49 :          <122>	retq
1169 :   store i1 %697, i1* %FPU_PE, align 1, !mcsema_real_eip !49 :          <122>	retq
1170 :   %698 = load i1* %FPU_UE_val, !mcsema_real_eip !49 :          <122>	retq
1171 :   store i1 %698, i1* %FPU_UE, align 1, !mcsema_real_eip !49 :          <122>	retq
1172 :   %699 = load i1* %FPU_OE_val, !mcsema_real_eip !49 :          <122>	retq
1173 :   store i1 %699, i1* %FPU_OE, align 1, !mcsema_real_eip !49 :          <122>	retq
1174 :   %700 = load i1* %FPU_ZE_val, !mcsema_real_eip !49 :          <122>	retq
1175 :   store i1 %700, i1* %FPU_ZE, align 1, !mcsema_real_eip !49 :          <122>	retq
1176 :   %701 = load i1* %FPU_DE_val, !mcsema_real_eip !49 :          <122>	retq
1177 :   store i1 %701, i1* %FPU_DE, align 1, !mcsema_real_eip !49 :          <122>	retq
1178 :   %702 = load i1* %FPU_IE_val, !mcsema_real_eip !49 :          <122>	retq
1179 :   store i1 %702, i1* %FPU_IE, align 1, !mcsema_real_eip !49 :          <122>	retq
1180 :   %703 = load i1* %FPU_X_val, !mcsema_real_eip !49 :          <122>	retq
1181 :   store i1 %703, i1* %FPU_X, align 1, !mcsema_real_eip !49 :          <122>	retq
1182 :   %704 = load i2* %FPU_RC_val, !mcsema_real_eip !49 :          <122>	retq
1183 :   store i2 %704, i2* %FPU_RC, align 1, !mcsema_real_eip !49 :          <122>	retq
1184 :   %705 = load i2* %FPU_PC_val, !mcsema_real_eip !49 :          <122>	retq
1185 :   store i2 %705, i2* %FPU_PC, align 1, !mcsema_real_eip !49 :          <122>	retq
1186 :   %706 = load i1* %FPU_PM_val, !mcsema_real_eip !49 :          <122>	retq
1187 :   store i1 %706, i1* %FPU_PM, align 1, !mcsema_real_eip !49 :          <122>	retq
1188 :   %707 = load i1* %FPU_UM_val, !mcsema_real_eip !49 :          <122>	retq
1189 :   store i1 %707, i1* %FPU_UM, align 1, !mcsema_real_eip !49 :          <122>	retq
1190 :   %708 = load i1* %FPU_OM_val, !mcsema_real_eip !49 :          <122>	retq
1191 :   store i1 %708, i1* %FPU_OM, align 1, !mcsema_real_eip !49 :          <122>	retq
1192 :   %709 = load i1* %FPU_ZM_val, !mcsema_real_eip !49 :          <122>	retq
1193 :   store i1 %709, i1* %FPU_ZM, align 1, !mcsema_real_eip !49 :          <122>	retq
1194 :   %710 = load i1* %FPU_DM_val, !mcsema_real_eip !49 :          <122>	retq
1195 :   store i1 %710, i1* %FPU_DM, align 1, !mcsema_real_eip !49 :          <122>	retq
1196 :   %711 = load i1* %FPU_IM_val, !mcsema_real_eip !49 :          <122>	retq
1197 :   store i1 %711, i1* %FPU_IM, align 1, !mcsema_real_eip !49 :          <122>	retq

1198 :   %712 = load i64* %53, align 4 : NIL
1199 :   store i64 %712, i64* %52, align 4 : NIL

1200 :   %713 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !49 :          <122>	retq
1201 :   store i16 %713, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !49 :          <122>	retq
1202 :   %714 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !49 :          <122>	retq
1203 :   store i64 %714, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !49 :          <122>	retq
1204 :   %715 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !49 :          <122>	retq
1205 :   store i16 %715, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !49 :          <122>	retq
1206 :   %716 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !49 :          <122>	retq
1207 :   store i64 %716, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !49 :          <122>	retq
1208 :   %717 = load i128* %XMM0_val, !mcsema_real_eip !49 :          <122>	retq
1209 :   store i128 %717, i128* %XMM0, align 1, !mcsema_real_eip !49 :          <122>	retq
1210 :   %718 = load i128* %XMM1_val, !mcsema_real_eip !49 :          <122>	retq
1211 :   store i128 %718, i128* %XMM1, align 1, !mcsema_real_eip !49 :          <122>	retq
1212 :   %719 = load i128* %XMM2_val, !mcsema_real_eip !49 :          <122>	retq
1213 :   store i128 %719, i128* %XMM2, align 1, !mcsema_real_eip !49 :          <122>	retq
1214 :   %720 = load i128* %XMM3_val, !mcsema_real_eip !49 :          <122>	retq
1215 :   store i128 %720, i128* %XMM3, align 1, !mcsema_real_eip !49 :          <122>	retq
1216 :   %721 = load i128* %XMM4_val, !mcsema_real_eip !49 :          <122>	retq
1217 :   store i128 %721, i128* %XMM4, align 1, !mcsema_real_eip !49 :          <122>	retq
1218 :   %722 = load i128* %XMM5_val, !mcsema_real_eip !49 :          <122>	retq
1219 :   store i128 %722, i128* %XMM5, align 1, !mcsema_real_eip !49 :          <122>	retq
1220 :   %723 = load i128* %XMM6_val, !mcsema_real_eip !49 :          <122>	retq
1221 :   store i128 %723, i128* %XMM6, align 1, !mcsema_real_eip !49 :          <122>	retq
1222 :   %724 = load i128* %XMM7_val, !mcsema_real_eip !49 :          <122>	retq
1223 :   store i128 %724, i128* %XMM7, align 1, !mcsema_real_eip !49 :          <122>	retq
1224 :   %725 = load i128* %XMM8_val, !mcsema_real_eip !49 :          <122>	retq
1225 :   store i128 %725, i128* %XMM8, align 1, !mcsema_real_eip !49 :          <122>	retq
1226 :   %726 = load i128* %XMM9_val, !mcsema_real_eip !49 :          <122>	retq
1227 :   store i128 %726, i128* %XMM9, align 1, !mcsema_real_eip !49 :          <122>	retq
1228 :   %727 = load i128* %XMM10_val, !mcsema_real_eip !49 :          <122>	retq
1229 :   store i128 %727, i128* %XMM10, align 1, !mcsema_real_eip !49 :          <122>	retq
1230 :   %728 = load i128* %XMM11_val, !mcsema_real_eip !49 :          <122>	retq
1231 :   store i128 %728, i128* %XMM11, align 1, !mcsema_real_eip !49 :          <122>	retq
1232 :   %729 = load i128* %XMM12_val, !mcsema_real_eip !49 :          <122>	retq
1233 :   store i128 %729, i128* %XMM12, align 1, !mcsema_real_eip !49 :          <122>	retq
1234 :   %730 = load i128* %XMM13_val, !mcsema_real_eip !49 :          <122>	retq
1235 :   store i128 %730, i128* %XMM13, align 1, !mcsema_real_eip !49 :          <122>	retq
1236 :   %731 = load i128* %XMM14_val, !mcsema_real_eip !49 :          <122>	retq
1237 :   store i128 %731, i128* %XMM14, align 1, !mcsema_real_eip !49 :          <122>	retq
1238 :   %732 = load i128* %XMM15_val, !mcsema_real_eip !49 :          <122>	retq
1239 :   store i128 %732, i128* %XMM15, align 1, !mcsema_real_eip !49 :          <122>	retq
1240 :   %733 = load i64* %STACK_BASE_val, !mcsema_real_eip !49 :          <122>	retq
1241 :   store i64 %733, i64* %STACK_BASE, align 1, !mcsema_real_eip !49 :          <122>	retq
1242 :   %734 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !49 :          <122>	retq
1243 :   store i64 %734, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !49 :          <122>	retq
1244 :   ret void, !mcsema_real_eip !49 :          <122>	retq
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_0(%struct.regs* %0) : NIL
2 :   ret void : NIL
