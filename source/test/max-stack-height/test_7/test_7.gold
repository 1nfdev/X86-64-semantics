Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_7.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_0
==========================================
----------------------------------
sub_0::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -40 :::  [I] = -40 : Inst :: 0:-40:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -40:-40:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -40:-40:-8:0
  %95 = add i64 %94, -4, !mcsema_real_eip !5 :::  [I] = -12 : Inst :: -40:-40:-8:-12
  %98 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -40:-40:-8:-12
  %99 = add i64 %98, -16, !mcsema_real_eip !6 :::  [I] = -24 : Inst :: -40:-40:-8:-24
  %102 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %103 = add i64 %102, -12, !mcsema_real_eip !7 :::  [I] = -20 : Inst :: -40:-40:-8:-24
  %106 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %107 = add i64 %106, -16, !mcsema_real_eip !8 :::  [I] = -24 : Inst :: -40:-40:-8:-24
  %110 = load i64* %RSP_val, !mcsema_real_eip !9 :::  [I] = -40 : Inst :: -40:-40:-8:-24
  %111 = add i64 %110, -8 :::  [I] = -48 : Inst :: -40:-48:-8:-24
  store i64 %111, i64* %RSP_val, !mcsema_real_eip !9 :::  [I] = NULL : Inst :: -48:-48:-8:-24
  %119 = load i64* %RSP_val, !mcsema_real_eip !9 :::  [I] = -48 : Inst :: -48:-48:-8:-24
  %120 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -48:-48:-8:-24
  tail call x86_64_sysvcc void @sub_40(%struct.regs* %0), !mcsema_real_eip !9 :::  [I] = NULL : Inst :: -40:-48:-8:-24
  %253 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -40:-48:-8:-24
  %254 = add i64 %253, -24, !mcsema_real_eip !11 :::  [I] = -32 : Inst :: -40:-48:-8:-32
  %259 = load i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = -40 : Inst :: -40:-48:-8:-32
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %259, i64 32) :::  [I] = -8 : Inst :: -40:-48:-8:-32
  %260 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : Inst :: -40:-48:-8:-32
  %273 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : Inst :: -40:-48:-8:-32
  store i64 %260, i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = NULL : Inst :: -8:-48:-8:-32
  %276 = add i64 %260, 16, !mcsema_real_eip !15 :::  [I] = 8 : Inst :: -8:-48:-8:-32
  store i64 %276, i64* %RSP_val, !mcsema_real_eip !15 :::  [I] = NULL : Inst :: 8:-48:-8:-32
  %283 = load i64* %RSP_val, !mcsema_real_eip !15 :::  [I] = 8 : Inst :: 8:-48:-8:-32
  %284 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: 8:-48:-8:-32
Gen :: 8:-48:-8:-32


DFA Analysis: 
sub_0::entry
	Gen :: 8:-48:-8:-32
	Out :: 8:-48:-8:-32
sub_0::entry
	Gen :: 8:-48:-8:-32
	Out :: 8:-48:-8:-32
Height[ sub_0 ] : -48
==========================================
Function : sub_40
==========================================
----------------------------------
sub_40::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, -24, !mcsema_real_eip !4 :::  [I] = -24 : Inst :: -8:-24:-8:0
  %84 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -8:-24:-8:0
  %85 = add i64 %84, -16, !mcsema_real_eip !5 :::  [I] = -24 : Inst :: -8:-24:-8:-24
  %104 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -8:-24:-8:-24
  %105 = add i64 %104, -24, !mcsema_real_eip !7 :::  [I] = -32 : Inst :: -8:-24:-8:-32
  %108 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -8:-24:-8:-32
  %109 = add i64 %108, -12, !mcsema_real_eip !8 :::  [I] = -20 : Inst :: -8:-24:-8:-32
  %128 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-24:-8:-32
  %129 = add i64 %128, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-24:-8:-32
  %132 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -8:-24:-8:-32
  %133 = add i64 %132, -24, !mcsema_real_eip !11 :::  [I] = -32 : Inst :: -8:-24:-8:-32
  %136 = add i64 %132, -8, !mcsema_real_eip !12 :::  [I] = -16 : Inst :: -8:-24:-8:-32
  %138 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -8:-24:-8:-32
  %139 = add i64 %138, -8, !mcsema_real_eip !13 :::  [I] = -16 : Inst :: -8:-24:-8:-32
  %142 = load i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = -8 : Inst :: -8:-24:-8:-32
  %145 = add i64 %142, 16, !mcsema_real_eip !15 :::  [I] = 8 : Inst :: -8:-24:-8:-32
  store i64 %145, i64* %RSP_val, !mcsema_real_eip !15 :::  [I] = NULL : Inst :: 8:-24:-8:-32
  %152 = load i64* %RSP_val, !mcsema_real_eip !15 :::  [I] = 8 : Inst :: 8:-24:-8:-32
  %153 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: 8:-24:-8:-32
Gen :: 8:-24:-8:-32


DFA Analysis: 
sub_40::entry
	Gen :: 8:-24:-8:-32
	Out :: 8:-24:-8:-32
sub_40::entry
	Gen :: 8:-24:-8:-32
	Out :: 8:-24:-8:-32
Height[ sub_40 ] : -32
==========================================
Function : mcsema_main
==========================================
----------------------------------
mcsema_main::driverBlockRaw
----------------------------------
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0) :::  [I] = NULL : Inst :: 8:0:0:0
Gen :: 8:0:0:0


DFA Analysis: 
mcsema_main::driverBlockRaw
	Gen :: 8:0:0:0
	Out :: 8:0:0:0
mcsema_main::driverBlockRaw
	Gen :: 8:0:0:0
	Out :: 8:0:0:0
Height[ mcsema_main ] : 0
