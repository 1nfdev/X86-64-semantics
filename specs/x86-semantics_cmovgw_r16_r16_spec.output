-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%rbx(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(cmovlew(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(xaddw(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"16"),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""PF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> _70_564:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _75_569:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _69_563:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _72_566:K@SORT-K String@STRING-SYNTAX(#""RCX"") |-> _74_568:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _68_562:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _71_565:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _67_561:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _73_567:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _76_570:K@SORT-K   ),, <regstatequeue>(_77_571:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%rbx(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(cmovlew(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(xaddw(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"16"),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""PF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(cmovlew(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(xaddw(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"16"),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""PF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(xaddw(.KList@BASIC-K),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%cx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"16"),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""PF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"16"),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"16'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, notBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"16'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, notBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"16'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, notBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"16'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, notBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"16'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, notBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"16'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, notBool_(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"49"))),, extractMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(#ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, ?I5_560:Int@INT-SYNTAX),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(eqMInt(xorMInt(mi(Int@INT-SYNTAX(#"1"),, ?I4_559:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"1"),, ?I1_556:Int@INT-SYNTAX)),, MInt@MINT(#"1'0")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I3_558:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I2_557:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for _&Int_
[Warning] Critical: missing SMTLib translation for countOnes
[Warning] Critical: missing SMTLib translation for mi
116.35user 6.45system 0:32.23elapsed 380%CPU (0avgtext+0avgdata 2806552maxresident)k
0inputs+3864outputs (0major+92537minor)pagefaults 0swaps
