
InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K)), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _619:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> _690:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _688:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _680:K@SORT-K String@STRING-SYNTAX(#""YMM12"") |-> _683:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _684:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _681:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _669:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _682:K@SORT-K String@STRING-SYNTAX(#""RDI"") |-> _693:K@SORT-K String@STRING-SYNTAX(#""YMM14"") |-> _685:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _670:K@SORT-K String@STRING-SYNTAX(#""YMM15"") |-> _686:K@SORT-K String@STRING-SYNTAX(#""RBP"") |-> _695:K@SORT-K String@STRING-SYNTAX(#""CF"") |-> _665:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _667:K@SORT-K String@STRING-SYNTAX(#""R8"") |-> _657:K@SORT-K String@STRING-SYNTAX(#""RDX"") |-> _691:K@SORT-K String@STRING-SYNTAX(#""R9"") |-> _658:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _689:K@SORT-K String@STRING-SYNTAX(#""RSI"") |-> _692:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _668:K@SORT-K String@STRING-SYNTAX(#""RSP"") |-> _694:K@SORT-K String@STRING-SYNTAX(#""R10"") |-> _659:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _673:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _672:K@SORT-K String@STRING-SYNTAX(#""R12"") |-> _661:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _675:K@SORT-K String@STRING-SYNTAX(#""R11"") |-> _660:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _674:K@SORT-K String@STRING-SYNTAX(#""R14"") |-> _663:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _677:K@SORT-K String@STRING-SYNTAX(#""R13"") |-> _662:K@SORT-K String@STRING-SYNTAX(#""YMM5"") |-> _676:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _666:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _679:K@SORT-K String@STRING-SYNTAX(#""R15"") |-> _664:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _678:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _687:K@SORT-K String@STRING-SYNTAX(#""YMM0"") |-> _671:K@SORT-K   ),, <regstatequeue>(_618:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K)), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _619:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, %r8(.KList@BASIC-K)), setRegisterValue(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, %r9(.KList@BASIC-K)), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _619:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, %r9(.KList@BASIC-K)), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _619:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, %xmm1(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX),, MInt@MINT(#"256'-340282366920938463463374607431768211456")),, shlMInt(mi(Int@INT-SYNTAX(#"256"),, uvalueMInt(concatenateMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX),, MInt@MINT(#"256'-340282366920938463463374607431768211456")),, shlMInt(mi(Int@INT-SYNTAX(#"256"),, uvalueMInt(concatenateMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX),, MInt@MINT(#"256'-340282366920938463463374607431768211456")),, shlMInt(mi(Int@INT-SYNTAX(#"256"),, uvalueMInt(concatenateMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _630:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _631:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _626:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _628:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _629:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _620:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"256"),, _633:Int@INT-SYNTAX),, MInt@MINT(#"256'-340282366920938463463374607431768211456")),, shlMInt(mi(Int@INT-SYNTAX(#"256"),, uvalueMInt(concatenateMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _634:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _622:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _621:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _624:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _623:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _627:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _625:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _632:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
110.79user 2.90system 0:36.63elapsed 310%CPU (0avgtext+0avgdata 1166112maxresident)k
0inputs+3808outputs (0major+89339minor)pagefaults 0swaps
