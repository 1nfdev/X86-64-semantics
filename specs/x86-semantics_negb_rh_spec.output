-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%rax(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(movzbl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%eax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(negb(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(xchgb(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _530:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _534:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _529:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _532:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _531:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _535:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> _539:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _543:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _538:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _541:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _537:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _540:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _536:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _542:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _544:K@SORT-K   ),, <regstatequeue>(_545:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%rax(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(movzbl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%eax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(negb(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(xchgb(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _530:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _534:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _529:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _532:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _531:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _535:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movzbl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%eax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(negb(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(xchgb(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _530:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _534:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _529:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _532:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _531:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _535:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(negb(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(xchgb(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _530:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _534:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _529:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _532:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _531:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _535:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(xchgb(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, typeoperandlist(%al(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0"))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0"))) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(_orBool_(ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, ultMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(addMInt(xorMInt(MInt@MINT(#"16'65535"),, concatenateMInt(MInt@MINT(#"8'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _533:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")))),, MInt@MINT(#"16'1")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
62.72user 4.45system 0:17.59elapsed 381%CPU (0avgtext+0avgdata 1815032maxresident)k
0inputs+3752outputs (0major+80973minor)pagefaults 0swaps
