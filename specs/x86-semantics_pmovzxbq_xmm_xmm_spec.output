-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vpmovzxbq(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _73_621:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _71_619:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _74_622:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _70_618:K@SORT-K String@STRING-SYNTAX(#""YMM15"") |-> _72_620:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _69_617:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _75_623:K@SORT-K   ),, <regstatequeue>(_76_624:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vpmovzxbq(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpmovzxbq(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, %xmm8(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, %xmm9(.KList@BASIC-K)), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, %xmm9(.KList@BASIC-K)), execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movddup(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vorpd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm15(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(unpckhpd(.KList@BASIC-K),, typeoperandlist(%xmm15(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"184'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"248'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
[Warning] Critical: missing SMTLib translation for svalueMInt
138.50user 6.78system 0:37.10elapsed 391%CPU (0avgtext+0avgdata 3038900maxresident)k
0inputs+3760outputs (0major+92201minor)pagefaults 0swaps
