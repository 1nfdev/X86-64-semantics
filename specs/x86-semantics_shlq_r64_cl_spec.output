
InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"salq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> _457:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _461:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _460:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _455:K@SORT-K String@STRING-SYNTAX(#""RCX"") |-> _458:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _459:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _454:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _462:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _456:K@SORT-K   ),, <regstatequeue>(_463:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"salq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"salq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, typeoperandlist(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))),, String@STRING-SYNTAX(#""OF"")), updateZeroFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), updateSignFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)),, String@STRING-SYNTAX(#""AF"")), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateZeroFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), updateSignFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)),, String@STRING-SYNTAX(#""AF"")), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateSignFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)),, String@STRING-SYNTAX(#""AF"")), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)),, String@STRING-SYNTAX(#""AF"")), setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateParityFlag(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")))), setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(#ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")),, %rbx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _448:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, _-Int_(uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63"))),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, undef(.KList@BASIC-K)))) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _452:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'-9223372036854775808"),, MInt@MINT(#"64'0")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _451:Int@INT-SYNTAX),, undef(.KList@BASIC-K)) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _446:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, mi(Int@INT-SYNTAX(#"1"),, _450:Int@INT-SYNTAX),, #ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'1")),, xorMInt(#ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"1")),, MInt@MINT(#"64'-9223372036854775808"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, undef(.KList@BASIC-K))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'0")),, #ifMInt_#then_#else_#fi(eqMInt(mi(Int@INT-SYNTAX(#"1"),, _447:Int@INT-SYNTAX),, MInt@MINT(#"1'1")),, MInt@MINT(#"64'0"),, MInt@MINT(#"64'1")),, #ifMInt_#then_#else_#fi(ultMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")),, MInt@MINT(#"8'64")),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, _453:Int@INT-SYNTAX),, uvalueMInt(andMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _449:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"8'63")))),, MInt@MINT(#"64'0"))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
67.39user 4.35system 0:23.70elapsed 302%CPU (0avgtext+0avgdata 2006732maxresident)k
0inputs+3840outputs (0major+79155minor)pagefaults 0swaps
