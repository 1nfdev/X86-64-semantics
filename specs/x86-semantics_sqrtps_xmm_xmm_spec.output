
InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(Derivedopcode@X86-SYNTAX(#"vmovdqu"),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(BaseOpcode@X86-SYNTAX(#"vsqrtps"),, typeoperandlist(%ymm4(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _501:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _500:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _502:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _499:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _503:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _498:K@SORT-K   ),, <regstatequeue>(_504:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(Derivedopcode@X86-SYNTAX(#"vmovdqu"),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(BaseOpcode@X86-SYNTAX(#"vsqrtps"),, typeoperandlist(%ymm4(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Derivedopcode@X86-SYNTAX(#"vmovdqu"),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm4(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(BaseOpcode@X86-SYNTAX(#"vsqrtps"),, typeoperandlist(%ymm4(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(BaseOpcode@X86-SYNTAX(#"vsqrtps"),, typeoperandlist(%ymm4(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(BaseOpcode@X86-SYNTAX(#"vsqrtps"),, typeoperandlist(%ymm7(.KList@BASIC-K),, typeoperandlist(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))),, %ymm7(.KList@BASIC-K)), execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Derivedopcode@X86-SYNTAX(#"movdqa"),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))),, %ymm1(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(BaseOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM4"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")),, Float2MInt(rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _497:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _496:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
150.36user 5.68system 0:55.92elapsed 279%CPU (0avgtext+0avgdata 2623616maxresident)k
0inputs+4032outputs (0major+96436minor)pagefaults 0swaps
