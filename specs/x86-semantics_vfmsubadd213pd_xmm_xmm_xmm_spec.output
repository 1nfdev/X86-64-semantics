-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _543:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _540:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _541:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _542:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _544:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _545:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _539:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _546:K@SORT-K   ),, <regstatequeue>(_547:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, %xmm8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, %xmm9(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, %xmm9(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vfnmsub213sd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%ymm3(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64"))),, %xmm10(.KList@BASIC-K)), setRegisterValue(MInt@MINT(#"128'0"),, %xmm11(.KList@BASIC-K)), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(MInt@MINT(#"128'0"),, %xmm11(.KList@BASIC-K)), execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vfmsub213pd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, _*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _537:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _536:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, _*Float_(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, negateFloat(_*Float_(minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00")),, minFloat(MInt2Float(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, Float@FLOAT-SYNTAX(#"0e+00"))))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
102.22user 2.96system 0:27.78elapsed 378%CPU (0avgtext+0avgdata 2713780maxresident)k
0inputs+3864outputs (0major+462912minor)pagefaults 0swaps
