-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vmovups(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _74_624:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _72_622:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _73_623:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _75_625:K@SORT-K String@STRING-SYNTAX(#""R8"") |-> _70_620:K@SORT-K String@STRING-SYNTAX(#""R9"") |-> _71_621:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _69_619:K@SORT-K   ),, <regstatequeue>(_76_626:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vmovups(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %r8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r9(.KList@BASIC-K)), execinstr(__(vmovups(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r9(.KList@BASIC-K)), execinstr(__(vmovups(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovups(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, %xmm1(.KList@BASIC-K)), execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vfnmsub231ps(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_618:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
132.50user 7.90system 0:35.30elapsed 397%CPU (0avgtext+0avgdata 3436912maxresident)k
0inputs+3880outputs (0major+170285minor)pagefaults 0swaps
