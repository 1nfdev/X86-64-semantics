-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> _566:K@SORT-K String@STRING-SYNTAX(#""R10"") |-> _549:K@SORT-K String@STRING-SYNTAX(#""YMM12"") |-> _555:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _559:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _552:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _556:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _553:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _561:K@SORT-K String@STRING-SYNTAX(#""R11"") |-> _550:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _554:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _560:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _563:K@SORT-K String@STRING-SYNTAX(#""YMM5"") |-> _562:K@SORT-K String@STRING-SYNTAX(#""YMM14"") |-> _557:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _565:K@SORT-K String@STRING-SYNTAX(#""YMM15"") |-> _558:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _564:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _548:K@SORT-K String@STRING-SYNTAX(#""YMM0"") |-> _551:K@SORT-K   ),, <regstatequeue>(_567:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %r10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r11(.KList@BASIC-K)), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r11(.KList@BASIC-K)), execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vzeroall(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r10(.KList@BASIC-K),, %r11(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, %xmm1(.KList@BASIC-K)), execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(pmovsxbd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"232"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, MInt@MINT(#"64'4294967168")),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(concatenateMInt(Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, MInt@MINT(#"32'-128")),, concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"232"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, MInt@MINT(#"64'4294967168")),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(concatenateMInt(Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, MInt@MINT(#"32'-128")),, concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"232"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, MInt@MINT(#"64'4294967168")),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(concatenateMInt(Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, MInt@MINT(#"32'-128")),, concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R10"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"232"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, MInt@MINT(#"64'4294967168")),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(concatenateMInt(Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, MInt@MINT(#"32'-128")),, concatenateMInt(MInt@MINT(#"32'0"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"248"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")),, extractMInt(addMInt(MInt@MINT(#"64'18446743528248704896"),, concatenateMInt(MInt@MINT(#"32'-128"),, Float2MInt(_+Float_(Float@FLOAT-SYNTAX(#"0e+00f"),, MInt2Float(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, Int@INT-SYNTAX(#"32"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM4"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""R11"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _547:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM5"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM14"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM15"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
132.36user 2.59system 0:36.72elapsed 367%CPU (0avgtext+0avgdata 3200672maxresident)k
0inputs+3712outputs (0major+603662minor)pagefaults 0swaps
