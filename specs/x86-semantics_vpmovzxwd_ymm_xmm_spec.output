-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovdqa(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _72_606:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _70_604:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _71_605:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _73_607:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _69_603:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _74_608:K@SORT-K   ),, <regstatequeue>(_75_609:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovdqa(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %xmm8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm9(.KList@BASIC-K)), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm9(.KList@BASIC-K)), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpmovzxwd(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_601:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))))),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"208"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"208"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240"))),, concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_602:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"240"),, Int@INT-SYNTAX(#"256"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
114.83user 4.66system 0:32.21elapsed 370%CPU (0avgtext+0avgdata 2726708maxresident)k
0inputs+3712outputs (0major+166592minor)pagefaults 0swaps
