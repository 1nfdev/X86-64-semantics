-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm3(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _547:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _544:K@SORT-K String@STRING-SYNTAX(#""R12"") |-> _542:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _545:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _546:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _548:K@SORT-K String@STRING-SYNTAX(#""R13"") |-> _543:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _549:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _541:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _550:K@SORT-K   ),, <regstatequeue>(_551:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm3(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %xmm8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm9(.KList@BASIC-K)), split2NToN(%xmm3(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm9(.KList@BASIC-K)), split2NToN(%xmm3(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm3(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %r12(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r13(.KList@BASIC-K)), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r13(.KList@BASIC-K)), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, %xmm2(.KList@BASIC-K)), split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm11(.KList@BASIC-K)), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm11(.KList@BASIC-K)), execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpunpcklwd(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _538:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, concatenateMInt(extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32")),, extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, concatenateMInt(extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32")),, extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, concatenateMInt(extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32")),, extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"144"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"144"),, Int@INT-SYNTAX(#"160"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, xorMInt(xorMInt(orMInt(concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, concatenateMInt(extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32")),, extractMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"32"))))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"176"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, Float2MInt(_-Float_(MInt2Float(concatenateMInt(MInt@MINT(#"16'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"176"),, Int@INT-SYNTAX(#"192"))),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, _540:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _539:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
137.21user 2.72system 0:37.56elapsed 372%CPU (0avgtext+0avgdata 2993840maxresident)k
0inputs+3832outputs (0major+548942minor)pagefaults 0swaps
