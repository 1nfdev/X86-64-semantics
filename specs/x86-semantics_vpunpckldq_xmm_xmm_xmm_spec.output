-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(vpbroadcastq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vunpcklpd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vpor(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpcklps(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmulpd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> _529:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _530:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _528:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _531:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _532:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _533:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _527:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _534:K@SORT-K   ),, <regstatequeue>(_535:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpbroadcastq(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vunpcklpd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vpor(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpcklps(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmulpd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vunpcklpd(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vpor(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpcklps(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmulpd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpor(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(unpcklps(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmulpd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(unpcklps(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmulpd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmulpd(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vxorps(.KList@BASIC-K),, typeoperandlist(%xmm12(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movdqu(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, xorMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
86.09user 3.11system 0:22.02elapsed 405%CPU (0avgtext+0avgdata 2036908maxresident)k
0inputs+3776outputs (0major+251319minor)pagefaults 0swaps
