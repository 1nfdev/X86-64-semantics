
test_0.o:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	insb   (%dx),%es:(%rdi)
  400202:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400209:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40020e:	78 2d                	js     40023d <_init-0x133>
  400210:	78 38                	js     40024a <_init-0x126>
  400212:	36                   	ss
  400213:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400218:	6f                   	outsl  %ds:(%rsi),(%dx)
  400219:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    $0x0,%al
  40021e:	00 00                	add    %al,(%rax)
  400220:	10 00                	adc    %al,(%rax)
  400222:	00 00                	add    %al,(%rax)
  400224:	01 00                	add    %eax,(%rax)
  400226:	00 00                	add    %al,(%rax)
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push %rbp
  40022b:	00 00                	add    %al,(%rax)
  40022d:	00 00                	add    %al,(%rax)
  40022f:	00 02                	add    %al,(%rdx)
  400231:	00 00                	add    %al,(%rax)
  400233:	00 06                	add    %al,(%rsi)
  400235:	00 00                	add    %al,(%rax)
  400237:	00 12                	add    %dl,(%rdx)
  400239:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000400240 <.gnu.hash>:
  400240:	01 00                	add    %eax,(%rax)
  400242:	00 00                	add    %al,(%rax)
  400244:	01 00                	add    %eax,(%rax)
  400246:	00 00                	add    %al,(%rax)
  400248:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

0000000000400260 <.dynsym>:
	...
  400278:	1a 00                	sbb    (%rax),%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	12 00                	adc    (%rax),%al
	...
  40028e:	00 00                	add    %al,(%rax)
  400290:	01 00                	add    %eax,(%rax)
  400292:	00 00                	add    %al,(%rax)
  400294:	20 00                	and    %al,(%rax)
	...
  4002a6:	00 00                	add    %al,(%rax)
  4002a8:	21 00                	and    %eax,(%rax)
  4002aa:	00 00                	add    %al,(%rax)
  4002ac:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

00000000004002c0 <.dynstr>:
  4002c0:	00 5f 5f             	add    %bl,0x5f(%rdi)
  4002c3:	67 6d                	insl   (%dx),%es:(%edi)
  4002c5:	6f                   	outsl  %ds:(%rsi),(%dx)
  4002c6:	6e                   	outsb  %ds:(%rsi),(%dx)
  4002c7:	5f                   	pop    %rdi
  4002c8:	73 74                	jae    40033e <_init-0x32>
  4002ca:	61                   	(bad)  
  4002cb:	72 74                	jb     400341 <_init-0x2f>
  4002cd:	5f                   	pop    %rdi
  4002ce:	5f                   	pop    %rdi
  4002cf:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  4002d3:	63 2e                	movslq (%rsi),%ebp
  4002d5:	73 6f                	jae    400346 <_init-0x2a>
  4002d7:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  4002dc:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  4002e3:	6c                   	insb   (%dx),%es:(%rdi)
  4002e4:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4002eb:	72 74                	jb     400361 <_init-0xf>
  4002ed:	5f                   	pop    %rdi
  4002ee:	6d                   	insl   (%dx),%es:(%rdi)
  4002ef:	61                   	(bad)  
  4002f0:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  4002f7:	43 5f                	rex.XB pop %r15
  4002f9:	32 2e                	xor    (%rsi),%ch
  4002fb:	32 2e                	xor    (%rsi),%ch
  4002fd:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400300 <.gnu.version>:
  400300:	00 00                	add    %al,(%rax)
  400302:	02 00                	add    (%rax),%al
  400304:	00 00                	add    %al,(%rax)
  400306:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400308 <.gnu.version_r>:
  400308:	01 00                	add    %eax,(%rax)
  40030a:	01 00                	add    %eax,(%rax)
  40030c:	10 00                	adc    %al,(%rax)
  40030e:	00 00                	add    %al,(%rax)
  400310:	10 00                	adc    %al,(%rax)
  400312:	00 00                	add    %al,(%rax)
  400314:	00 00                	add    %al,(%rax)
  400316:	00 00                	add    %al,(%rax)
  400318:	75 1a                	jne    400334 <_init-0x3c>
  40031a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400320:	33 00                	xor    (%rax),%eax
  400322:	00 00                	add    %al,(%rax)
  400324:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400328 <.rela.dyn>:
  400328:	b0 08                	mov    $0x8,%al
  40032a:	60                   	(bad)  
  40032b:	00 00                	add    %al,(%rax)
  40032d:	00 00                	add    %al,(%rax)
  40032f:	00 06                	add    %al,(%rsi)
  400331:	00 00                	add    %al,(%rax)
  400333:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .rela.plt:

0000000000400340 <.rela.plt>:
  400340:	d0 08                	rorb   (%rax)
  400342:	60                   	(bad)  
  400343:	00 00                	add    %al,(%rax)
  400345:	00 00                	add    %al,(%rax)
  400347:	00 07                	add    %al,(%rdi)
  400349:	00 00                	add    %al,(%rax)
  40034b:	00 01                	add    %al,(%rcx)
	...
  400355:	00 00                	add    %al,(%rax)
  400357:	00 d8                	add    %bl,%al
  400359:	08 60 00             	or     %ah,0x0(%rax)
  40035c:	00 00                	add    %al,(%rax)
  40035e:	00 00                	add    %al,(%rax)
  400360:	07                   	(bad)  
  400361:	00 00                	add    %al,(%rax)
  400363:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000400370 <_init>:
  400370:	48 83 ec 08          	sub    $0x8,%rsp
  400374:	e8 73 00 00 00       	callq  4003ec <call_gmon_start>
  400379:	e8 02 01 00 00       	callq  400480 <frame_dummy>
  40037e:	e8 4d 02 00 00       	callq  4005d0 <__do_global_ctors_aux>
  400383:	48 83 c4 08          	add    $0x8,%rsp
  400387:	c3                   	retq   

Disassembly of section .plt:

0000000000400388 <printf@plt-0x10>:
  400388:	ff 35 32 05 20 00    	pushq  0x200532(%rip)        # 6008c0 <_GLOBAL_OFFSET_TABLE_+0x8>
  40038e:	ff 25 34 05 20 00    	jmpq   *0x200534(%rip)        # 6008c8 <_GLOBAL_OFFSET_TABLE_+0x10>
  400394:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400398 <printf@plt>:
  400398:	ff 25 32 05 20 00    	jmpq   *0x200532(%rip)        # 6008d0 <_GLOBAL_OFFSET_TABLE_+0x18>
  40039e:	68 00 00 00 00       	pushq  $0x0
  4003a3:	e9 e0 ff ff ff       	jmpq   400388 <_init+0x18>

00000000004003a8 <__libc_start_main@plt>:
  4003a8:	ff 25 2a 05 20 00    	jmpq   *0x20052a(%rip)        # 6008d8 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003ae:	68 01 00 00 00       	pushq  $0x1
  4003b3:	e9 d0 ff ff ff       	jmpq   400388 <_init+0x18>

Disassembly of section .text:

00000000004003c0 <_start>:
  4003c0:	31 ed                	xor    %ebp,%ebp
  4003c2:	49 89 d1             	mov    %rdx,%r9
  4003c5:	5e                   	pop    %rsi
  4003c6:	48 89 e2             	mov    %rsp,%rdx
  4003c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003cd:	50                   	push   %rax
  4003ce:	54                   	push   %rsp
  4003cf:	49 c7 c0 30 05 40 00 	mov    $0x400530,%r8
  4003d6:	48 c7 c1 40 05 40 00 	mov    $0x400540,%rcx
  4003dd:	48 c7 c7 f0 04 40 00 	mov    $0x4004f0,%rdi
  4003e4:	e8 bf ff ff ff       	callq  4003a8 <__libc_start_main@plt>
  4003e9:	f4                   	hlt    
  4003ea:	90                   	nop
  4003eb:	90                   	nop

00000000004003ec <call_gmon_start>:
  4003ec:	48 83 ec 08          	sub    $0x8,%rsp
  4003f0:	48 8b 05 b9 04 20 00 	mov    0x2004b9(%rip),%rax        # 6008b0 <_DYNAMIC+0x190>
  4003f7:	48 85 c0             	test   %rax,%rax
  4003fa:	74 02                	je     4003fe <call_gmon_start+0x12>
  4003fc:	ff d0                	callq  *%rax
  4003fe:	48 83 c4 08          	add    $0x8,%rsp
  400402:	c3                   	retq   
  400403:	90                   	nop
  400404:	90                   	nop
  400405:	90                   	nop
  400406:	90                   	nop
  400407:	90                   	nop
  400408:	90                   	nop
  400409:	90                   	nop
  40040a:	90                   	nop
  40040b:	90                   	nop
  40040c:	90                   	nop
  40040d:	90                   	nop
  40040e:	90                   	nop
  40040f:	90                   	nop

0000000000400410 <__do_global_dtors_aux>:
  400410:	55                   	push   %rbp
  400411:	48 89 e5             	mov    %rsp,%rbp
  400414:	53                   	push   %rbx
  400415:	48 83 ec 08          	sub    $0x8,%rsp
  400419:	80 3d c8 04 20 00 00 	cmpb   $0x0,0x2004c8(%rip)        # 6008e8 <completed.6352>
  400420:	75 4b                	jne    40046d <__do_global_dtors_aux+0x5d>
  400422:	bb 10 07 60 00       	mov    $0x600710,%ebx
  400427:	48 8b 05 c2 04 20 00 	mov    0x2004c2(%rip),%rax        # 6008f0 <dtor_idx.6354>
  40042e:	48 81 eb 08 07 60 00 	sub    $0x600708,%rbx
  400435:	48 c1 fb 03          	sar    $0x3,%rbx
  400439:	48 83 eb 01          	sub    $0x1,%rbx
  40043d:	48 39 d8             	cmp    %rbx,%rax
  400440:	73 24                	jae    400466 <__do_global_dtors_aux+0x56>
  400442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400448:	48 83 c0 01          	add    $0x1,%rax
  40044c:	48 89 05 9d 04 20 00 	mov    %rax,0x20049d(%rip)        # 6008f0 <dtor_idx.6354>
  400453:	ff 14 c5 08 07 60 00 	callq  *0x600708(,%rax,8)
  40045a:	48 8b 05 8f 04 20 00 	mov    0x20048f(%rip),%rax        # 6008f0 <dtor_idx.6354>
  400461:	48 39 d8             	cmp    %rbx,%rax
  400464:	72 e2                	jb     400448 <__do_global_dtors_aux+0x38>
  400466:	c6 05 7b 04 20 00 01 	movb   $0x1,0x20047b(%rip)        # 6008e8 <completed.6352>
  40046d:	48 83 c4 08          	add    $0x8,%rsp
  400471:	5b                   	pop    %rbx
  400472:	c9                   	leaveq 
  400473:	c3                   	retq   
  400474:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40047b:	00 00 00 00 00 

0000000000400480 <frame_dummy>:
  400480:	48 83 3d 90 02 20 00 	cmpq   $0x0,0x200290(%rip)        # 600718 <__JCR_END__>
  400487:	00 
  400488:	55                   	push   %rbp
  400489:	48 89 e5             	mov    %rsp,%rbp
  40048c:	74 12                	je     4004a0 <frame_dummy+0x20>
  40048e:	b8 00 00 00 00       	mov    $0x0,%eax
  400493:	48 85 c0             	test   %rax,%rax
  400496:	74 08                	je     4004a0 <frame_dummy+0x20>
  400498:	bf 18 07 60 00       	mov    $0x600718,%edi
  40049d:	c9                   	leaveq 
  40049e:	ff e0                	jmpq   *%rax
  4004a0:	c9                   	leaveq 
  4004a1:	c3                   	retq   
  4004a2:	90                   	nop
  4004a3:	90                   	nop
  4004a4:	90                   	nop
  4004a5:	90                   	nop
  4004a6:	90                   	nop
  4004a7:	90                   	nop
  4004a8:	90                   	nop
  4004a9:	90                   	nop
  4004aa:	90                   	nop
  4004ab:	90                   	nop
  4004ac:	90                   	nop
  4004ad:	90                   	nop
  4004ae:	90                   	nop
  4004af:	90                   	nop

00000000004004b0 <foo>:
  4004b0:	55                   	push   %rbp
  4004b1:	48 89 e5             	mov    %rsp,%rbp
  4004b4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4004b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4004bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4004c0:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  4004c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4004ca:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
  4004d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4004d5:	48 8b 00             	mov    (%rax),%rax
  4004d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4004dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4004e0:	5d                   	pop    %rbp
  4004e1:	c3                   	retq   
  4004e2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4004e9:	1f 84 00 00 00 00 00 

00000000004004f0 <main>:
  4004f0:	55                   	push   %rbp
  4004f1:	48 89 e5             	mov    %rsp,%rbp
  4004f4:	48 83 ec 20          	sub    $0x20,%rsp
  4004f8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4004ff:	e8 ac ff ff ff       	callq  4004b0 <foo>
  400504:	48 bf 28 06 40 00 00 	mov    $0x400628,%rdi
  40050b:	00 00 00 
  40050e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400512:	8b 75 f4             	mov    -0xc(%rbp),%esi
  400515:	b0 00                	mov    $0x0,%al
  400517:	e8 7c fe ff ff       	callq  400398 <printf@plt>
  40051c:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40051f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  400522:	89 f0                	mov    %esi,%eax
  400524:	48 83 c4 20          	add    $0x20,%rsp
  400528:	5d                   	pop    %rbp
  400529:	c3                   	retq   
  40052a:	90                   	nop
  40052b:	90                   	nop
  40052c:	90                   	nop
  40052d:	90                   	nop
  40052e:	90                   	nop
  40052f:	90                   	nop

0000000000400530 <__libc_csu_fini>:
  400530:	f3 c3                	repz retq 
  400532:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400539:	1f 84 00 00 00 00 00 

0000000000400540 <__libc_csu_init>:
  400540:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400545:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40054a:	48 8d 2d a3 01 20 00 	lea    0x2001a3(%rip),%rbp        # 6006f4 <__init_array_end>
  400551:	4c 8d 25 9c 01 20 00 	lea    0x20019c(%rip),%r12        # 6006f4 <__init_array_end>
  400558:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40055d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400562:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400567:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  40056c:	48 83 ec 38          	sub    $0x38,%rsp
  400570:	4c 29 e5             	sub    %r12,%rbp
  400573:	41 89 fd             	mov    %edi,%r13d
  400576:	49 89 f6             	mov    %rsi,%r14
  400579:	48 c1 fd 03          	sar    $0x3,%rbp
  40057d:	49 89 d7             	mov    %rdx,%r15
  400580:	e8 eb fd ff ff       	callq  400370 <_init>
  400585:	48 85 ed             	test   %rbp,%rbp
  400588:	74 1c                	je     4005a6 <__libc_csu_init+0x66>
  40058a:	31 db                	xor    %ebx,%ebx
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)
  400590:	4c 89 fa             	mov    %r15,%rdx
  400593:	4c 89 f6             	mov    %r14,%rsi
  400596:	44 89 ef             	mov    %r13d,%edi
  400599:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40059d:	48 83 c3 01          	add    $0x1,%rbx
  4005a1:	48 39 eb             	cmp    %rbp,%rbx
  4005a4:	72 ea                	jb     400590 <__libc_csu_init+0x50>
  4005a6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4005ab:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4005b0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  4005b5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  4005ba:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  4005bf:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  4005c4:	48 83 c4 38          	add    $0x38,%rsp
  4005c8:	c3                   	retq   
  4005c9:	90                   	nop
  4005ca:	90                   	nop
  4005cb:	90                   	nop
  4005cc:	90                   	nop
  4005cd:	90                   	nop
  4005ce:	90                   	nop
  4005cf:	90                   	nop

00000000004005d0 <__do_global_ctors_aux>:
  4005d0:	55                   	push   %rbp
  4005d1:	48 89 e5             	mov    %rsp,%rbp
  4005d4:	53                   	push   %rbx
  4005d5:	48 83 ec 08          	sub    $0x8,%rsp
  4005d9:	48 8b 05 18 01 20 00 	mov    0x200118(%rip),%rax        # 6006f8 <__CTOR_LIST__>
  4005e0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4005e4:	74 19                	je     4005ff <__do_global_ctors_aux+0x2f>
  4005e6:	bb f8 06 60 00       	mov    $0x6006f8,%ebx
  4005eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4005f0:	48 83 eb 08          	sub    $0x8,%rbx
  4005f4:	ff d0                	callq  *%rax
  4005f6:	48 8b 03             	mov    (%rbx),%rax
  4005f9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4005fd:	75 f1                	jne    4005f0 <__do_global_ctors_aux+0x20>
  4005ff:	48 83 c4 08          	add    $0x8,%rsp
  400603:	5b                   	pop    %rbx
  400604:	c9                   	leaveq 
  400605:	c3                   	retq   
  400606:	90                   	nop
  400607:	90                   	nop

Disassembly of section .fini:

0000000000400608 <_fini>:
  400608:	48 83 ec 08          	sub    $0x8,%rsp
  40060c:	e8 ff fd ff ff       	callq  400410 <__do_global_dtors_aux>
  400611:	48 83 c4 08          	add    $0x8,%rsp
  400615:	c3                   	retq   

Disassembly of section .rodata:

0000000000400618 <_IO_stdin_used>:
  400618:	01 00                	add    %eax,(%rax)
  40061a:	02 00                	add    (%rax),%al
  40061c:	00 00                	add    %al,(%rax)
	...

0000000000400620 <__dso_handle>:
	...
  400628:	25                   	.byte 0x25
  400629:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

000000000040062c <.eh_frame_hdr>:
  40062c:	01 1b                	add    %ebx,(%rbx)
  40062e:	03 3b                	add    (%rbx),%edi
  400630:	28 00                	sub    %al,(%rax)
  400632:	00 00                	add    %al,(%rax)
  400634:	04 00                	add    $0x0,%al
  400636:	00 00                	add    %al,(%rax)
  400638:	84 fe                	test   %bh,%dh
  40063a:	ff                   	(bad)  
  40063b:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
  40063f:	00 c4                	add    %al,%ah
  400641:	fe                   	(bad)  
  400642:	ff                   	(bad)  
  400643:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
  400647:	00 04 ff             	add    %al,(%rdi,%rdi,8)
  40064a:	ff                   	(bad)  
  40064b:	ff 84 00 00 00 14 ff 	incl   -0xec0000(%rax,%rax,1)
  400652:	ff                   	(bad)  
  400653:	ff                   	.byte 0xff
  400654:	9c                   	pushfq 
  400655:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400658 <__FRAME_END__-0x98>:
  400658:	14 00                	adc    $0x0,%al
  40065a:	00 00                	add    %al,(%rax)
  40065c:	00 00                	add    %al,(%rax)
  40065e:	00 00                	add    %al,(%rax)
  400660:	01 7a 52             	add    %edi,0x52(%rdx)
  400663:	00 01                	add    %al,(%rcx)
  400665:	78 10                	js     400677 <__dso_handle+0x57>
  400667:	01 1b                	add    %ebx,(%rbx)
  400669:	0c 07                	or     $0x7,%al
  40066b:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  400671:	00 00                	add    %al,(%rax)
  400673:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400676:	00 00                	add    %al,(%rax)
  400678:	38 fe                	cmp    %bh,%dh
  40067a:	ff                   	(bad)  
  40067b:	ff 32                	pushq  (%rdx)
  40067d:	00 00                	add    %al,(%rax)
  40067f:	00 00                	add    %al,(%rax)
  400681:	41 0e                	rex.B (bad) 
  400683:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400689:	00 00                	add    %al,(%rax)
  40068b:	00 00                	add    %al,(%rax)
  40068d:	00 00                	add    %al,(%rax)
  40068f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400692:	00 00                	add    %al,(%rax)
  400694:	3c 00                	cmp    $0x0,%al
  400696:	00 00                	add    %al,(%rax)
  400698:	58                   	pop    %rax
  400699:	fe                   	(bad)  
  40069a:	ff                   	(bad)  
  40069b:	ff                   	(bad)  
  40069c:	3a 00                	cmp    (%rax),%al
  40069e:	00 00                	add    %al,(%rax)
  4006a0:	00 41 0e             	add    %al,0xe(%rcx)
  4006a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006a9:	00 00                	add    %al,(%rax)
  4006ab:	00 00                	add    %al,(%rax)
  4006ad:	00 00                	add    %al,(%rax)
  4006af:	00 14 00             	add    %dl,(%rax,%rax,1)
  4006b2:	00 00                	add    %al,(%rax)
  4006b4:	5c                   	pop    %rsp
  4006b5:	00 00                	add    %al,(%rax)
  4006b7:	00 78 fe             	add    %bh,-0x2(%rax)
  4006ba:	ff                   	(bad)  
  4006bb:	ff 02                	incl   (%rdx)
	...
  4006c5:	00 00                	add    %al,(%rax)
  4006c7:	00 24 00             	add    %ah,(%rax,%rax,1)
  4006ca:	00 00                	add    %al,(%rax)
  4006cc:	74 00                	je     4006ce <__dso_handle+0xae>
  4006ce:	00 00                	add    %al,(%rax)
  4006d0:	70 fe                	jo     4006d0 <__dso_handle+0xb0>
  4006d2:	ff                   	(bad)  
  4006d3:	ff 89 00 00 00 00    	decl   0x0(%rcx)
  4006d9:	51                   	push   %rcx
  4006da:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0d66 <_end+0xe3f046e>
  4006e0:	40 83 07 8f          	rex addl $0xffffffffffffff8f,(%rdi)
  4006e4:	02 8e 03 8d 04 02    	add    0x2048d03(%rsi),%cl
  4006ea:	58                   	pop    %rax
  4006eb:	0e                   	(bad)  
  4006ec:	08 00                	or     %al,(%rax)
	...

00000000004006f0 <__FRAME_END__>:
  4006f0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

00000000006006f8 <__CTOR_LIST__>:
  6006f8:	ff                   	(bad)  
  6006f9:	ff                   	(bad)  
  6006fa:	ff                   	(bad)  
  6006fb:	ff                   	(bad)  
  6006fc:	ff                   	(bad)  
  6006fd:	ff                   	(bad)  
  6006fe:	ff                   	(bad)  
  6006ff:	ff 00                	incl   (%rax)

0000000000600700 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000600708 <__DTOR_LIST__>:
  600708:	ff                   	(bad)  
  600709:	ff                   	(bad)  
  60070a:	ff                   	(bad)  
  60070b:	ff                   	(bad)  
  60070c:	ff                   	(bad)  
  60070d:	ff                   	(bad)  
  60070e:	ff                   	(bad)  
  60070f:	ff 00                	incl   (%rax)

0000000000600710 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000600718 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600720 <_DYNAMIC>:
  600720:	01 00                	add    %eax,(%rax)
  600722:	00 00                	add    %al,(%rax)
  600724:	00 00                	add    %al,(%rax)
  600726:	00 00                	add    %al,(%rax)
  600728:	10 00                	adc    %al,(%rax)
  60072a:	00 00                	add    %al,(%rax)
  60072c:	00 00                	add    %al,(%rax)
  60072e:	00 00                	add    %al,(%rax)
  600730:	0c 00                	or     $0x0,%al
  600732:	00 00                	add    %al,(%rax)
  600734:	00 00                	add    %al,(%rax)
  600736:	00 00                	add    %al,(%rax)
  600738:	70 03                	jo     60073d <_DYNAMIC+0x1d>
  60073a:	40 00 00             	add    %al,(%rax)
  60073d:	00 00                	add    %al,(%rax)
  60073f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600745 <_DYNAMIC+0x25>
  600745:	00 00                	add    %al,(%rax)
  600747:	00 08                	add    %cl,(%rax)
  600749:	06                   	(bad)  
  60074a:	40 00 00             	add    %al,(%rax)
  60074d:	00 00                	add    %al,(%rax)
  60074f:	00 f5                	add    %dh,%ch
  600751:	fe                   	(bad)  
  600752:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600755:	00 00                	add    %al,(%rax)
  600757:	00 40 02             	add    %al,0x2(%rax)
  60075a:	40 00 00             	add    %al,(%rax)
  60075d:	00 00                	add    %al,(%rax)
  60075f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600765 <_DYNAMIC+0x45>
  600765:	00 00                	add    %al,(%rax)
  600767:	00 c0                	add    %al,%al
  600769:	02 40 00             	add    0x0(%rax),%al
  60076c:	00 00                	add    %al,(%rax)
  60076e:	00 00                	add    %al,(%rax)
  600770:	06                   	(bad)  
  600771:	00 00                	add    %al,(%rax)
  600773:	00 00                	add    %al,(%rax)
  600775:	00 00                	add    %al,(%rax)
  600777:	00 60 02             	add    %ah,0x2(%rax)
  60077a:	40 00 00             	add    %al,(%rax)
  60077d:	00 00                	add    %al,(%rax)
  60077f:	00 0a                	add    %cl,(%rdx)
  600781:	00 00                	add    %al,(%rax)
  600783:	00 00                	add    %al,(%rax)
  600785:	00 00                	add    %al,(%rax)
  600787:	00 3f                	add    %bh,(%rdi)
  600789:	00 00                	add    %al,(%rax)
  60078b:	00 00                	add    %al,(%rax)
  60078d:	00 00                	add    %al,(%rax)
  60078f:	00 0b                	add    %cl,(%rbx)
  600791:	00 00                	add    %al,(%rax)
  600793:	00 00                	add    %al,(%rax)
  600795:	00 00                	add    %al,(%rax)
  600797:	00 18                	add    %bl,(%rax)
  600799:	00 00                	add    %al,(%rax)
  60079b:	00 00                	add    %al,(%rax)
  60079d:	00 00                	add    %al,(%rax)
  60079f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 6007a5 <_DYNAMIC+0x85>
	...
  6007ad:	00 00                	add    %al,(%rax)
  6007af:	00 03                	add    %al,(%rbx)
  6007b1:	00 00                	add    %al,(%rax)
  6007b3:	00 00                	add    %al,(%rax)
  6007b5:	00 00                	add    %al,(%rax)
  6007b7:	00 b8 08 60 00 00    	add    %bh,0x6008(%rax)
  6007bd:	00 00                	add    %al,(%rax)
  6007bf:	00 02                	add    %al,(%rdx)
  6007c1:	00 00                	add    %al,(%rax)
  6007c3:	00 00                	add    %al,(%rax)
  6007c5:	00 00                	add    %al,(%rax)
  6007c7:	00 30                	add    %dh,(%rax)
  6007c9:	00 00                	add    %al,(%rax)
  6007cb:	00 00                	add    %al,(%rax)
  6007cd:	00 00                	add    %al,(%rax)
  6007cf:	00 14 00             	add    %dl,(%rax,%rax,1)
  6007d2:	00 00                	add    %al,(%rax)
  6007d4:	00 00                	add    %al,(%rax)
  6007d6:	00 00                	add    %al,(%rax)
  6007d8:	07                   	(bad)  
  6007d9:	00 00                	add    %al,(%rax)
  6007db:	00 00                	add    %al,(%rax)
  6007dd:	00 00                	add    %al,(%rax)
  6007df:	00 17                	add    %dl,(%rdi)
  6007e1:	00 00                	add    %al,(%rax)
  6007e3:	00 00                	add    %al,(%rax)
  6007e5:	00 00                	add    %al,(%rax)
  6007e7:	00 40 03             	add    %al,0x3(%rax)
  6007ea:	40 00 00             	add    %al,(%rax)
  6007ed:	00 00                	add    %al,(%rax)
  6007ef:	00 07                	add    %al,(%rdi)
  6007f1:	00 00                	add    %al,(%rax)
  6007f3:	00 00                	add    %al,(%rax)
  6007f5:	00 00                	add    %al,(%rax)
  6007f7:	00 28                	add    %ch,(%rax)
  6007f9:	03 40 00             	add    0x0(%rax),%eax
  6007fc:	00 00                	add    %al,(%rax)
  6007fe:	00 00                	add    %al,(%rax)
  600800:	08 00                	or     %al,(%rax)
  600802:	00 00                	add    %al,(%rax)
  600804:	00 00                	add    %al,(%rax)
  600806:	00 00                	add    %al,(%rax)
  600808:	18 00                	sbb    %al,(%rax)
  60080a:	00 00                	add    %al,(%rax)
  60080c:	00 00                	add    %al,(%rax)
  60080e:	00 00                	add    %al,(%rax)
  600810:	09 00                	or     %eax,(%rax)
  600812:	00 00                	add    %al,(%rax)
  600814:	00 00                	add    %al,(%rax)
  600816:	00 00                	add    %al,(%rax)
  600818:	18 00                	sbb    %al,(%rax)
  60081a:	00 00                	add    %al,(%rax)
  60081c:	00 00                	add    %al,(%rax)
  60081e:	00 00                	add    %al,(%rax)
  600820:	fe                   	(bad)  
  600821:	ff                   	(bad)  
  600822:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600825:	00 00                	add    %al,(%rax)
  600827:	00 08                	add    %cl,(%rax)
  600829:	03 40 00             	add    0x0(%rax),%eax
  60082c:	00 00                	add    %al,(%rax)
  60082e:	00 00                	add    %al,(%rax)
  600830:	ff                   	(bad)  
  600831:	ff                   	(bad)  
  600832:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600835:	00 00                	add    %al,(%rax)
  600837:	00 01                	add    %al,(%rcx)
  600839:	00 00                	add    %al,(%rax)
  60083b:	00 00                	add    %al,(%rax)
  60083d:	00 00                	add    %al,(%rax)
  60083f:	00 f0                	add    %dh,%al
  600841:	ff                   	(bad)  
  600842:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600845:	00 00                	add    %al,(%rax)
  600847:	00 00                	add    %al,(%rax)
  600849:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got:

00000000006008b0 <.got>:
	...

Disassembly of section .got.plt:

00000000006008b8 <_GLOBAL_OFFSET_TABLE_>:
  6008b8:	20 07                	and    %al,(%rdi)
  6008ba:	60                   	(bad)  
	...
  6008cf:	00 9e 03 40 00 00    	add    %bl,0x4003(%rsi)
  6008d5:	00 00                	add    %al,(%rax)
  6008d7:	00 ae 03 40 00 00    	add    %ch,0x4003(%rsi)
  6008dd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

00000000006008e0 <__data_start>:
  6008e0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000006008e8 <completed.6352>:
	...

00000000006008f0 <dtor_idx.6354>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	34 2e                	xor    $0x2e,%al
   d:	34 2e                	xor    $0x2e,%al
   f:	37                   	(bad)  
  10:	20 32                	and    %dh,(%rdx)
  12:	30 31                	xor    %dh,(%rcx)
  14:	32 30                	xor    (%rax),%dh
  16:	33 31                	xor    (%rcx),%esi
  18:	33 20                	xor    (%rax),%esp
  1a:	28 52 65             	sub    %dl,0x65(%rdx)
  1d:	64 20 48 61          	and    %cl,%fs:0x61(%rax)
  21:	74 20                	je     43 <_init-0x40032d>
  23:	34 2e                	xor    $0x2e,%al
  25:	34 2e                	xor    $0x2e,%al
  27:	37                   	(bad)  
  28:	2d 31 36 29 00       	sub    $0x293631,%eax
  2d:	47                   	rex.RXB
  2e:	43                   	rex.XB
  2f:	43 3a 20             	rex.XB cmp (%r8),%spl
  32:	28 47 4e             	sub    %al,0x4e(%rdi)
  35:	55                   	push   %rbp
  36:	29 20                	sub    %esp,(%rax)
  38:	34 2e                	xor    $0x2e,%al
  3a:	34 2e                	xor    $0x2e,%al
  3c:	37                   	(bad)  
  3d:	20 32                	and    %dh,(%rdx)
  3f:	30 31                	xor    %dh,(%rcx)
  41:	32 30                	xor    (%rax),%dh
  43:	33 31                	xor    (%rcx),%esi
  45:	33 20                	xor    (%rax),%esp
  47:	28 52 65             	sub    %dl,0x65(%rdx)
  4a:	64 20 48 61          	and    %cl,%fs:0x61(%rax)
  4e:	74 20                	je     70 <_init-0x400300>
  50:	34 2e                	xor    $0x2e,%al
  52:	34 2e                	xor    $0x2e,%al
  54:	37                   	(bad)  
  55:	2d 31 37 29 00       	sub    $0x293731,%eax
  5a:	63 6c 61 6e          	movslq 0x6e(%rcx,%riz,2),%ebp
  5e:	67 20 76 65          	and    %dh,0x65(%esi)
  62:	72 73                	jb     d7 <_init-0x400299>
  64:	69 6f 6e 20 35 2e 30 	imul   $0x302e3520,0x6e(%rdi),%ebp
  6b:	2e 30 20             	xor    %ah,%cs:(%rax)
  6e:	28 68 74             	sub    %ch,0x74(%rax)
  71:	74 70                	je     e3 <_init-0x40028d>
  73:	3a 2f                	cmp    (%rdi),%ch
  75:	2f                   	(bad)  
  76:	6c                   	insb   (%dx),%es:(%rdi)
  77:	6c                   	insb   (%dx),%es:(%rdi)
  78:	76 6d                	jbe    e7 <_init-0x400289>
  7a:	2e 6f                	outsl  %cs:(%rsi),(%dx)
  7c:	72 67                	jb     e5 <_init-0x40028b>
  7e:	2f                   	(bad)  
  7f:	67 69 74 2f 63 6c 61 	imul   $0x676e616c,0x63(%edi,%ebp,1),%esi
  86:	6e 67 
  88:	2e 67 69 74 20 38 33 	imul   $0x37393333,%cs:0x38(%eax,%eiz,1),%esi
  8f:	33 39 37 
  92:	35 63 63 33 39       	xor    $0x39336363,%eax
  97:	63 31                	movslq (%rcx),%esi
  99:	39 64 65 63          	cmp    %esp,0x63(%rbp,%riz,2)
  9d:	33 62 62             	xor    0x62(%rdx),%esp
  a0:	62                   	(bad)  
  a1:	62                   	(bad)  
  a2:	62                   	(bad)  
  a3:	38 63 35             	cmp    %ah,0x35(%rbx)
  a6:	66                   	data16
  a7:	38 36                	cmp    %dh,(%rsi)
  a9:	31 31                	xor    %esi,(%rcx)
  ab:	31 33                	xor    %esi,(%rbx)
  ad:	61                   	(bad)  
  ae:	31 64 65 33          	xor    %esp,0x33(%rbp,%riz,2)
  b2:	37                   	(bad)  
  b3:	34 30                	xor    $0x30,%al
  b5:	29 20                	sub    %esp,(%rax)
  b7:	28 67 69             	sub    %ah,0x69(%rdi)
  ba:	74 40                	je     fc <_init-0x400274>
  bc:	67 69 74 68 75 62 2e 	imul   $0x6f632e62,0x75(%eax,%ebp,2),%esi
  c3:	63 6f 
  c5:	6d                   	insl   (%dx),%es:(%rdi)
  c6:	3a 6c 6c 76          	cmp    0x76(%rsp,%rbp,2),%ch
  ca:	6d                   	insl   (%dx),%es:(%rdi)
  cb:	2d 6d 69 72 72       	sub    $0x7272696d,%eax
  d0:	6f                   	outsl  %ds:(%rsi),(%dx)
  d1:	72 2f                	jb     102 <_init-0x40026e>
  d3:	6c                   	insb   (%dx),%es:(%rdi)
  d4:	6c                   	insb   (%dx),%es:(%rdi)
  d5:	76 6d                	jbe    144 <_init-0x40022c>
  d7:	2e 67 69 74 20 30 36 	imul   $0x32333336,%cs:0x30(%eax,%eiz,1),%esi
  de:	33 33 32 
  e1:	37                   	(bad)  
  e2:	39 34 61             	cmp    %esi,(%rcx,%riz,2)
  e5:	66                   	data16
  e6:	32 62 31             	xor    0x31(%rdx),%ah
  e9:	36 39 66 66          	cmp    %esp,%ss:0x66(%rsi)
  ed:	31 66 31             	xor    %esp,0x31(%rsi)
  f0:	30 34 31             	xor    %dh,(%rcx,%rsi,1)
  f3:	35 38 61 36 34       	xor    $0x34366138,%eax
  f8:	64                   	fs
  f9:	35 39 31 35 34       	xor    $0x34353139,%eax
  fe:	36 65 39 30          	ss cmp %esi,%ss:%gs:(%rax)
 102:	39 31                	cmp    %esi,(%rcx)
 104:	29 00                	sub    %eax,(%rax)
