
Output/test_11.clang.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <foo>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	8b 7d fc             	mov    -0x4(%rbp),%edi
   a:	83 c7 01             	add    $0x1,%edi
   d:	89 f8                	mov    %edi,%eax
   f:	5d                   	pop    %rbp
  10:	c3                   	retq   
  11:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  18:	0f 1f 84 00 00 00 00 
  1f:	00 

0000000000000020 <doTrans>:
  20:	55                   	push   %rbp
  21:	48 89 e5             	mov    %rsp,%rbp
  24:	48 83 ec 30          	sub    $0x30,%rsp
  28:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  2c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  30:	e8 00 00 00 00       	callq  35 <doTrans+0x15>
  35:	48 83 c0 01          	add    $0x1,%rax
  39:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  3d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  41:	e8 00 00 00 00       	callq  46 <doTrans+0x26>
  46:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4f:	0f 84 81 00 00 00    	je     d6 <doTrans+0xb6>
  55:	31 f6                	xor    %esi,%esi
  57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  63:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  67:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  6f:	e8 00 00 00 00       	callq  74 <doTrans+0x54>
  74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  78:	0f be 08             	movsbl (%rax),%ecx
  7b:	83 f9 00             	cmp    $0x0,%ecx
  7e:	0f 84 45 00 00 00    	je     c9 <doTrans+0xa9>
  84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  88:	0f be 08             	movsbl (%rax),%ecx
  8b:	83 f9 2f             	cmp    $0x2f,%ecx
  8e:	0f 85 0c 00 00 00    	jne    a0 <doTrans+0x80>
  94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  98:	c6 00 5c             	movb   $0x5c,(%rax)
  9b:	e9 0c 00 00 00       	jmpq   ac <doTrans+0x8c>
  a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a4:	8a 08                	mov    (%rax),%cl
  a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  aa:	88 08                	mov    %cl,(%rax)
  ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b0:	48 83 c0 01          	add    $0x1,%rax
  b4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  bc:	48 83 c0 01          	add    $0x1,%rax
  c0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  c4:	e9 ab ff ff ff       	jmpq   74 <doTrans+0x54>
  c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  d1:	e9 08 00 00 00       	jmpq   de <doTrans+0xbe>
  d6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  dd:	00 
  de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e2:	48 83 c4 30          	add    $0x30,%rsp
  e6:	5d                   	pop    %rbp
  e7:	c3                   	retq   
