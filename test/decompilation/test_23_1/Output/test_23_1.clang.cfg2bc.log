Looking up target...
Reading module ...
 TT x86-64 : x86_64-unknown-unknown 
Deserializing externs...
Deserializing functions...
set_ref_reloc_type: Adding  ref: IMM, to: 1a9, ro: 2, rt: DATA
set_ref_reloc_type: Adding  ref: MEM, to: e8, ro: 0, rt: DATA
set_ref_reloc_type: Adding  ref: MEM, to: 1a0, ro: 0, rt: DATA
set_ref_reloc_type: Adding  ref: MEM, to: 1a8, ro: 0, rt: DATA
Deserializing data...
Deserializing data...
Deserializing data...
Deserializing symbol at: 1d0, sub_0x0L, 4
cur_pos: 1b0
dse_base: 1d0
new_cur_pos: 1d4
Creating module...
Setting target...
Done setting target
Adding external funcs...
Adding external data...
Adding internal data...
Adding Offset Tables...
Adding entry points...
Returning modue...
Setting initial triples...
Getting LLVM module...
Converting to LLVM...
Inserted function: sub_0
inserting global data section named data_0xe8
inserting global data section named data_0x1a0
inserting global data section named data_0x1b0
translate_CALLpcrel32: function is: printf, cc is: 0
dataSectionToTypesContents: Found symbol: sub_0x0L
doCallPCExtern paramCount  : 2 : printf
2 : 3018e80
translate_JMPr: jump table via register: 67
doJumpTableViaSwitchReg: Doing jumpt table via switch(reg)
doJumpTableViaSwitchReg: Mapping from 69 => block_0x69
doJumpTableViaSwitchReg: Mapping from 77 => block_0x77
doJumpTableViaSwitchReg: Mapping from 93 => block_0x93
doJumpTableViaSwitchReg: Mapping from a1 => block_0xa1
doJumpTableViaSwitchReg: Mapping from 85 => block_0x85
Adding entry point: main
main is implemented by sub_0
