Looking up target...
Reading module ...
 TT x86-64 : x86_64-unknown-unknown 
Deserializing externs...
Deserializing externs...
Deserializing functions...
set_ref_reloc_type: Adding  ref: IMM, to: 0, ro: 1, rt: CODE
set_ref_reloc_type: Adding  ref: IMM, to: 100, ro: 2, rt: DATA
Deserializing functions...
set_ref_reloc_type: Adding  ref: IMM, to: 0, ro: 1, rt: CODE
set_ref_reloc_type: Adding  ref: IMM, to: 0, ro: 1, rt: CODE
set_ref_reloc_type: Adding  ref: IMM, to: 0, ro: 1, rt: CODE
Deserializing data...
Deserializing data...
Deserializing symbol at: 130, sub_0x0L, 4
cur_pos: 110
dse_base: 130
new_cur_pos: 134
Deserializing symbol at: 14c, sub_0x0L, 4
cur_pos: 134
dse_base: 14c
new_cur_pos: 150
Creating module...
Setting target...
Done setting target
Adding external funcs...
Adding external data...
Adding internal data...
Adding Offset Tables...
Adding entry points...
Returning modue...
Setting initial triples...
Getting LLVM module...
Converting to LLVM...
Inserted function: sub_80
Inserted function: sub_0
inserting global data section named data_0x100
inserting global data section named data_0x110
translate_CALLpcrel32: function is: atoi, cc is: 0
dataSectionToTypesContents: Found symbol: sub_0x0L
dataSectionToTypesContents: Found symbol: sub_0x0L
doCallPCExtern paramCount  : 1 : atoi
1 : 232de80
translate_CALLpcrel32: function is: printf, cc is: 0
doCallPCtarget address : 0
doCallPCExtern paramCount  : c : printf
c : 232de80
doCallPCtarget address : 0
doCallPCtarget address : 0
doCallPCtarget address : 0
Adding entry point: main
main is implemented by sub_80
