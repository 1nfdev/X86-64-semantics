Looking up target...
Reading module ...
 TT x86-64 : x86_64-unknown-unknown 
Deserializing externs...
Deserializing externs...
Deserializing functions...
set_ref_reloc_type: Adding  ref: IMM, to: 250, ro: 2, rt: DATA
set_ref_reloc_type: Adding  ref: IMM, to: 220, ro: 2, rt: DATA
set_ref_reloc_type: Adding  ref: IMM, to: 0, ro: 1, rt: CODE
set_ref_reloc_type: Adding  ref: IMM, to: 278, ro: 2, rt: DATA
Deserializing functions...
Deserializing data...
Deserializing data...
Deserializing data...
Deserializing symbol at: 2a0, sub_0x0L, 4
cur_pos: 280
dse_base: 2a0
new_cur_pos: 2a4
Deserializing symbol at: 2bc, sub_0x0L, 4
cur_pos: 2a4
dse_base: 2bc
new_cur_pos: 2c0
Creating module...
Setting target...
Done setting target
Adding external funcs...
Adding external data...
Adding internal data...
Adding Offset Tables...
Adding entry points...
Returning modue...
Setting initial triples...
Getting LLVM module...
Converting to LLVM...
Inserted function: sub_a0
Inserted function: sub_0
inserting global data section named data_0x220
inserting global data section named data_0x278
inserting global data section named data_0x280
translate_CALLpcrel32: function is: memcpy, cc is: 0
dataSectionToTypesContents: Found symbol: sub_0x0L
dataSectionToTypesContents: Found symbol: sub_0x0L
doCallPCExtern paramCount  : 3 : memcpy
3 : 2027e80
translate_CALLpcrel32: function is: memcpy, cc is: 0
doCallPCExtern paramCount  : 3 : memcpy
3 : 2027e80
translate_CALLpcrel32: function is: printf, cc is: 0
doCallPCtarget address : 0
doCallPCExtern paramCount  : c : printf
c : 2027e80
Adding entry point: main
main is implemented by sub_a0
