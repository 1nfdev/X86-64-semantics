Looking up target...
Reading module ...
 TT x86-64 : x86_64-unknown-unknown 
Deserializing externs...
Deserializing externs...
Deserializing functions...
set_ref_reloc_type: Adding  ref: IMM, to: 0, ro: 1, rt: CODE
set_ref_reloc_type: Adding  ref: IMM, to: 1af, ro: 2, rt: DATA
Deserializing functions...
Deserializing data...
Deserializing data...
Deserializing symbol at: 1d8, sub_0x0L, 4
cur_pos: 1b8
dse_base: 1d8
new_cur_pos: 1dc
Deserializing symbol at: 1f4, sub_0x0L, 4
cur_pos: 1dc
dse_base: 1f4
new_cur_pos: 1f8
Creating module...
Setting target...
Done setting target
Adding external funcs...
Adding external data...
Adding internal data...
Adding Offset Tables...
Adding entry points...
Returning modue...
Setting initial triples...
Getting LLVM module...
Converting to LLVM...
Inserted function: sub_a0
Inserted function: sub_0
inserting global data section named data_0x1af
inserting global data section named data_0x1b8
translate_CALLpcrel32: function is: malloc, cc is: 0
dataSectionToTypesContents: Found symbol: sub_0x0L
dataSectionToTypesContents: Found symbol: sub_0x0L
doCallPCExtern paramCount  : 1 : malloc
1 : 1cfb690
translate_CALLpcrel32: function is: malloc, cc is: 0
doCallPCExtern paramCount  : 1 : malloc
1 : 1cfb690
translate_CALLpcrel32: function is: printf, cc is: 0
doCallPCtarget address : 0
doCallPCExtern paramCount  : c : printf
c : 1cfb690
Adding entry point: main
main is implemented by sub_a0
NOT doing post analysis passes.
