Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_13.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_10
==========================================


DFA Analysis: 
sub_10::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -40 :::  [I] = -40 : Inst :: 0:-40:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -40:-40:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -40:-40:-8:0
  %95 = add i64 %94, -8, !mcsema_real_eip !5 :::  [I] = -16 : Inst :: -40:-40:-8:-16
  %98 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %99 = add i64 %98, -12, !mcsema_real_eip !6 :::  [I] = -20 : Inst :: -40:-40:-8:-20
  %104 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %105 = add i64 %104, -16, !mcsema_real_eip !7 :::  [I] = -24 : Inst :: -40:-40:-8:-24
  %108 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %109 = add i64 %108, -12, !mcsema_real_eip !8 :::  [I] = -20 : Inst :: -40:-40:-8:-24
  %122 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %123 = add i64 %122, -24, !mcsema_real_eip !11 :::  [I] = -32 : Inst :: -40:-40:-8:-32
  %125 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %126 = add i64 %125, -16, !mcsema_real_eip !12 :::  [I] = -24 : Inst :: -40:-40:-8:-32
  %131 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %132 = add i64 %131, -12, !mcsema_real_eip !13 :::  [I] = -20 : Inst :: -40:-40:-8:-32
	Out :: -40:-40:-8:-32
sub_10::block_0x43.preheader
	Pred :: entry: -40:-40:-8:-32
	Out :: -40:-40:-8:-32
sub_10::block_0x43
	Pred :: block_0x79: -3:-3:-3:-3
	Pred :: block_0x43.preheader: -40:-40:-8:-32
  %247 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %248 = add i64 %247, -16, !mcsema_real_eip !20 :::  [I] = -24 : Inst :: -40:-40:-8:-32
  %253 = load i64* %RBP_val, !mcsema_real_eip !21 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %254 = add i64 %253, -8, !mcsema_real_eip !21 :::  [I] = -16 : Inst :: -40:-40:-8:-32
  %261 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %262 = add i64 %261, -32, !mcsema_real_eip !23 :::  [I] = -40 : Inst :: -40:-40:-8:-40
  %264 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -40:-40:-8:-40
  %265 = add i64 %264, -32, !mcsema_real_eip !24 :::  [I] = -40 : Inst :: -40:-40:-8:-40
  %268 = load i64* %RSP_val, !mcsema_real_eip !25 :::  [I] = -40 : Inst :: -40:-40:-8:-40
  %269 = add i64 %268, -8 :::  [I] = -48 : Inst :: -40:-48:-8:-40
  store i64 %269, i64* %RSP_val, !mcsema_real_eip !25 :::  [I] = NULL : Inst :: -48:-48:-8:-40
  %277 = load i64* %RSP_val, !mcsema_real_eip !25 :::  [I] = -48 : Inst :: -48:-48:-8:-40
  %278 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = -8 : Inst :: -48:-48:-8:-40
  tail call x86_64_sysvcc void @sub_a0(%struct.regs* %0), !mcsema_real_eip !25 :::  [I] = NULL : Inst :: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x67
	Pred :: block_0x43: -40:-48:-8:-40
  %419 = load i64* %RBP_val, !mcsema_real_eip !28 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %420 = add i64 %419, -32, !mcsema_real_eip !28 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %424 = load i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %425 = add i64 %424, -8 :::  [I] = -48 : Inst :: -40:-48:-8:-40
  store i64 %425, i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = NULL : Inst :: -48:-48:-8:-40
  %433 = load i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = -48 : Inst :: -48:-48:-8:-40
  %434 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -48:-48:-8:-40
  tail call x86_64_sysvcc void @sub_120(%struct.regs* %0), !mcsema_real_eip !30 :::  [I] = NULL : Inst :: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x79
	Pred :: block_0x67: -40:-48:-8:-40
	Pred :: block_0x43: -40:-48:-8:-40
  %567 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %568 = add i64 %567, -16, !mcsema_real_eip !32 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %587 = load i64* %RBP_val, !mcsema_real_eip !34 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %588 = add i64 %587, -16, !mcsema_real_eip !34 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %591 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %592 = add i64 %591, -16, !mcsema_real_eip !12 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %597 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %598 = add i64 %597, -12, !mcsema_real_eip !13 :::  [I] = -20 : Inst :: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x89.loopexit
	Pred :: block_0x79: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x89
	Pred :: block_0x89.loopexit: -40:-48:-8:-40
	Pred :: entry: -40:-40:-8:-32
  %152 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %153 = add i64 %152, -24, !mcsema_real_eip !15 :::  [I] = -32 : Inst :: -40:-48:-8:-40
  %159 = load i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %uadd350 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %159, i64 32) :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %160 = extractvalue { i64, i1 } %uadd350, 0 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %173 = extractvalue { i64, i1 } %uadd350, 1 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  store i64 %160, i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = NULL : Inst :: -8:-48:-8:-40
  %176 = add i64 %160, 16, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: -8:-48:-8:-40
  store i64 %176, i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = NULL : Inst :: 8:-48:-8:-40
  %183 = load i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: 8:-48:-8:-40
  %184 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = -8 : Inst :: 8:-48:-8:-40
	Out :: 8:-48:-8:-40
sub_10::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -40 :::  [I] = -40 : Inst :: 0:-40:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -40:-40:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -40:-40:-8:0
  %95 = add i64 %94, -8, !mcsema_real_eip !5 :::  [I] = -16 : Inst :: -40:-40:-8:-16
  %98 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %99 = add i64 %98, -12, !mcsema_real_eip !6 :::  [I] = -20 : Inst :: -40:-40:-8:-20
  %104 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %105 = add i64 %104, -16, !mcsema_real_eip !7 :::  [I] = -24 : Inst :: -40:-40:-8:-24
  %108 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %109 = add i64 %108, -12, !mcsema_real_eip !8 :::  [I] = -20 : Inst :: -40:-40:-8:-24
  %122 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %123 = add i64 %122, -24, !mcsema_real_eip !11 :::  [I] = -32 : Inst :: -40:-40:-8:-32
  %125 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %126 = add i64 %125, -16, !mcsema_real_eip !12 :::  [I] = -24 : Inst :: -40:-40:-8:-32
  %131 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -40:-40:-8:-32
  %132 = add i64 %131, -12, !mcsema_real_eip !13 :::  [I] = -20 : Inst :: -40:-40:-8:-32
	Out :: -40:-40:-8:-32
sub_10::block_0x43.preheader
	Pred :: entry: -40:-40:-8:-32
	Out :: -40:-40:-8:-32
sub_10::block_0x43
	Pred :: block_0x79: -40:-48:-8:-40
	Pred :: block_0x43.preheader: -40:-40:-8:-32
  %247 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %248 = add i64 %247, -16, !mcsema_real_eip !20 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %253 = load i64* %RBP_val, !mcsema_real_eip !21 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %254 = add i64 %253, -8, !mcsema_real_eip !21 :::  [I] = -16 : Inst :: -40:-48:-8:-40
  %261 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %262 = add i64 %261, -32, !mcsema_real_eip !23 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %264 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %265 = add i64 %264, -32, !mcsema_real_eip !24 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %268 = load i64* %RSP_val, !mcsema_real_eip !25 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %269 = add i64 %268, -8 :::  [I] = -48 : Inst :: -40:-48:-8:-40
  store i64 %269, i64* %RSP_val, !mcsema_real_eip !25 :::  [I] = NULL : Inst :: -48:-48:-8:-40
  %277 = load i64* %RSP_val, !mcsema_real_eip !25 :::  [I] = -48 : Inst :: -48:-48:-8:-40
  %278 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = -8 : Inst :: -48:-48:-8:-40
  tail call x86_64_sysvcc void @sub_a0(%struct.regs* %0), !mcsema_real_eip !25 :::  [I] = NULL : Inst :: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x67
	Pred :: block_0x43: -40:-48:-8:-40
  %419 = load i64* %RBP_val, !mcsema_real_eip !28 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %420 = add i64 %419, -32, !mcsema_real_eip !28 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %424 = load i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %425 = add i64 %424, -8 :::  [I] = -48 : Inst :: -40:-48:-8:-40
  store i64 %425, i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = NULL : Inst :: -48:-48:-8:-40
  %433 = load i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = -48 : Inst :: -48:-48:-8:-40
  %434 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -48:-48:-8:-40
  tail call x86_64_sysvcc void @sub_120(%struct.regs* %0), !mcsema_real_eip !30 :::  [I] = NULL : Inst :: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x79
	Pred :: block_0x67: -40:-48:-8:-40
	Pred :: block_0x43: -40:-48:-8:-40
  %567 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %568 = add i64 %567, -16, !mcsema_real_eip !32 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %587 = load i64* %RBP_val, !mcsema_real_eip !34 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %588 = add i64 %587, -16, !mcsema_real_eip !34 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %591 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %592 = add i64 %591, -16, !mcsema_real_eip !12 :::  [I] = -24 : Inst :: -40:-48:-8:-40
  %597 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %598 = add i64 %597, -12, !mcsema_real_eip !13 :::  [I] = -20 : Inst :: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x89.loopexit
	Pred :: block_0x79: -40:-48:-8:-40
	Out :: -40:-48:-8:-40
sub_10::block_0x89
	Pred :: block_0x89.loopexit: -40:-48:-8:-40
	Pred :: entry: -40:-40:-8:-32
  %152 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %153 = add i64 %152, -24, !mcsema_real_eip !15 :::  [I] = -32 : Inst :: -40:-48:-8:-40
  %159 = load i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = -40 : Inst :: -40:-48:-8:-40
  %uadd350 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %159, i64 32) :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %160 = extractvalue { i64, i1 } %uadd350, 0 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  %173 = extractvalue { i64, i1 } %uadd350, 1 :::  [I] = -8 : Inst :: -40:-48:-8:-40
  store i64 %160, i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = NULL : Inst :: -8:-48:-8:-40
  %176 = add i64 %160, 16, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: -8:-48:-8:-40
  store i64 %176, i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = NULL : Inst :: 8:-48:-8:-40
  %183 = load i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: 8:-48:-8:-40
  %184 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = -8 : Inst :: 8:-48:-8:-40
	Out :: 8:-48:-8:-40
Height[ sub_10 ] : -48
==========================================
Function : sub_120
==========================================


DFA Analysis: 
sub_120::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, -16, !mcsema_real_eip !4 :::  [I] = -16 : Inst :: -8:-16:-8:0
  %84 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -8:-16:-8:0
  %85 = add i64 %84, -16, !mcsema_real_eip !5 :::  [I] = -24 : Inst :: -8:-16:-8:-24
  %88 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-16:-8:-24
  %89 = add i64 %88, -8, !mcsema_real_eip !6 :::  [I] = -16 : Inst :: -8:-16:-8:-24
  %92 = add i64 %88, -24, !mcsema_real_eip !7 :::  [I] = -32 : Inst :: -8:-16:-8:-32
  %94 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -8:-16:-8:-32
  %95 = add i64 %94, -16, !mcsema_real_eip !8 :::  [I] = -24 : Inst :: -8:-16:-8:-32
  %98 = add i64 %94, -32, !mcsema_real_eip !9 :::  [I] = -40 : Inst :: -8:-16:-8:-40
  %100 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-16:-8:-40
  %101 = add i64 %100, -24, !mcsema_real_eip !10 :::  [I] = -32 : Inst :: -8:-16:-8:-40
  %111 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -8:-16:-8:-40
  %112 = add i64 %111, -33, !mcsema_real_eip !12 :::  [I] = -41 : Inst :: -8:-16:-8:-41
  %115 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %116 = add i64 %115, -33, !mcsema_real_eip !13 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x154.preheader
	Pred :: entry: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x154
	Pred :: block_0x145: -3:-3:-3:-3
	Pred :: block_0x154.preheader: -8:-16:-8:-41
  %201 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %202 = add i64 %201, -33, !mcsema_real_eip !18 :::  [I] = -41 : Inst :: -8:-16:-8:-41
  %222 = load i64* %RBP_val, !mcsema_real_eip !21 :::  [I] = -8 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x16f
	Pred :: block_0x154: -8:-16:-8:-41
  %231 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %232 = add i64 %231, -32, !mcsema_real_eip !22 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %239 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %240 = add i64 %239, -24, !mcsema_real_eip !24 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %257 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %258 = add i64 %257, -24, !mcsema_real_eip !26 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %260 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %261 = add i64 %260, -32, !mcsema_real_eip !27 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %278 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %279 = add i64 %278, -32, !mcsema_real_eip !29 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %281 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %282 = add i64 %281, -24, !mcsema_real_eip !30 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %292 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %293 = add i64 %292, -33, !mcsema_real_eip !32 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x163
	Pred :: block_0x154: -8:-16:-8:-41
  %301 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %302 = add i64 %301, -24, !mcsema_real_eip !24 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %319 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %320 = add i64 %319, -24, !mcsema_real_eip !26 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %322 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %323 = add i64 %322, -32, !mcsema_real_eip !27 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %340 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %341 = add i64 %340, -32, !mcsema_real_eip !29 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %343 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %344 = add i64 %343, -24, !mcsema_real_eip !30 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %354 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %355 = add i64 %354, -33, !mcsema_real_eip !32 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x145
	Pred :: block_0x163: -8:-16:-8:-41
	Pred :: block_0x16f: -8:-16:-8:-41
  %358 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %359 = add i64 %358, -33, !mcsema_real_eip !13 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x1a2.loopexit
	Pred :: block_0x145: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x1a2
	Pred :: block_0x1a2.loopexit: -8:-16:-8:-41
	Pred :: entry: -8:-16:-8:-41
  %127 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %130 = add i64 %127, 16, !mcsema_real_eip !17 :::  [I] = 8 : Inst :: -8:-16:-8:-41
  store i64 %130, i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = NULL : Inst :: 8:-16:-8:-41
  %137 = load i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = 8 : Inst :: 8:-16:-8:-41
  %138 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: 8:-16:-8:-41
	Out :: 8:-16:-8:-41
sub_120::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, -16, !mcsema_real_eip !4 :::  [I] = -16 : Inst :: -8:-16:-8:0
  %84 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -8:-16:-8:0
  %85 = add i64 %84, -16, !mcsema_real_eip !5 :::  [I] = -24 : Inst :: -8:-16:-8:-24
  %88 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-16:-8:-24
  %89 = add i64 %88, -8, !mcsema_real_eip !6 :::  [I] = -16 : Inst :: -8:-16:-8:-24
  %92 = add i64 %88, -24, !mcsema_real_eip !7 :::  [I] = -32 : Inst :: -8:-16:-8:-32
  %94 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -8:-16:-8:-32
  %95 = add i64 %94, -16, !mcsema_real_eip !8 :::  [I] = -24 : Inst :: -8:-16:-8:-32
  %98 = add i64 %94, -32, !mcsema_real_eip !9 :::  [I] = -40 : Inst :: -8:-16:-8:-40
  %100 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-16:-8:-40
  %101 = add i64 %100, -24, !mcsema_real_eip !10 :::  [I] = -32 : Inst :: -8:-16:-8:-40
  %111 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -8:-16:-8:-40
  %112 = add i64 %111, -33, !mcsema_real_eip !12 :::  [I] = -41 : Inst :: -8:-16:-8:-41
  %115 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %116 = add i64 %115, -33, !mcsema_real_eip !13 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x154.preheader
	Pred :: entry: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x154
	Pred :: block_0x145: -8:-16:-8:-41
	Pred :: block_0x154.preheader: -8:-16:-8:-41
  %201 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %202 = add i64 %201, -33, !mcsema_real_eip !18 :::  [I] = -41 : Inst :: -8:-16:-8:-41
  %222 = load i64* %RBP_val, !mcsema_real_eip !21 :::  [I] = -8 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x16f
	Pred :: block_0x154: -8:-16:-8:-41
  %231 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %232 = add i64 %231, -32, !mcsema_real_eip !22 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %239 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %240 = add i64 %239, -24, !mcsema_real_eip !24 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %257 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %258 = add i64 %257, -24, !mcsema_real_eip !26 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %260 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %261 = add i64 %260, -32, !mcsema_real_eip !27 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %278 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %279 = add i64 %278, -32, !mcsema_real_eip !29 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %281 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %282 = add i64 %281, -24, !mcsema_real_eip !30 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %292 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %293 = add i64 %292, -33, !mcsema_real_eip !32 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x163
	Pred :: block_0x154: -8:-16:-8:-41
  %301 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %302 = add i64 %301, -24, !mcsema_real_eip !24 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %319 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %320 = add i64 %319, -24, !mcsema_real_eip !26 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %322 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %323 = add i64 %322, -32, !mcsema_real_eip !27 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %340 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %341 = add i64 %340, -32, !mcsema_real_eip !29 :::  [I] = -40 : Inst :: -8:-16:-8:-41
  %343 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %344 = add i64 %343, -24, !mcsema_real_eip !30 :::  [I] = -32 : Inst :: -8:-16:-8:-41
  %354 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %355 = add i64 %354, -33, !mcsema_real_eip !32 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x145
	Pred :: block_0x163: -8:-16:-8:-41
	Pred :: block_0x16f: -8:-16:-8:-41
  %358 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %359 = add i64 %358, -33, !mcsema_real_eip !13 :::  [I] = -41 : Inst :: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x1a2.loopexit
	Pred :: block_0x145: -8:-16:-8:-41
	Out :: -8:-16:-8:-41
sub_120::block_0x1a2
	Pred :: block_0x1a2.loopexit: -8:-16:-8:-41
	Pred :: entry: -8:-16:-8:-41
  %127 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = -8 : Inst :: -8:-16:-8:-41
  %130 = add i64 %127, 16, !mcsema_real_eip !17 :::  [I] = 8 : Inst :: -8:-16:-8:-41
  store i64 %130, i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = NULL : Inst :: 8:-16:-8:-41
  %137 = load i64* %RSP_val, !mcsema_real_eip !17 :::  [I] = 8 : Inst :: 8:-16:-8:-41
  %138 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: 8:-16:-8:-41
	Out :: 8:-16:-8:-41
Height[ sub_120 ] : -41
==========================================
Function : sub_a0
==========================================


DFA Analysis: 
sub_a0::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -40 :::  [I] = -40 : Inst :: 0:-40:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -40:-40:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -40:-40:-8:0
  %95 = add i64 %94, -8, !mcsema_real_eip !5 :::  [I] = -16 : Inst :: -40:-40:-8:-16
  %98 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %99 = add i64 %98, -12, !mcsema_real_eip !6 :::  [I] = -20 : Inst :: -40:-40:-8:-20
  %102 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %103 = add i64 %102, -8, !mcsema_real_eip !7 :::  [I] = -16 : Inst :: -40:-40:-8:-20
  %108 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %109 = add i64 %108, -16, !mcsema_real_eip !10 :::  [I] = -24 : Inst :: -40:-40:-8:-24
  %113 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %114 = add i64 %113, -16, !mcsema_real_eip !11 :::  [I] = -24 : Inst :: -40:-40:-8:-24
	Out :: -40:-40:-8:-24
sub_a0::block_0xce
	Pred :: entry: -40:-40:-8:-24
  %228 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %229 = add i64 %228, -8, !mcsema_real_eip !17 :::  [I] = -16 : Inst :: -40:-40:-8:-24
  %239 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %240 = add i64 %239, -17, !mcsema_real_eip !19 :::  [I] = -25 : Inst :: -40:-40:-8:-25
  %243 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -40:-40:-8:-25
  %244 = add i64 %243, -16, !mcsema_real_eip !20 :::  [I] = -24 : Inst :: -40:-40:-8:-25
  %263 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = -8 : Inst :: -40:-40:-8:-25
  %264 = add i64 %263, -8, !mcsema_real_eip !23 :::  [I] = -16 : Inst :: -40:-40:-8:-25
  %275 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = -8 : Inst :: -40:-40:-8:-25
  %276 = add i64 %275, -18, !mcsema_real_eip !25 :::  [I] = -26 : Inst :: -40:-40:-8:-26
  %279 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %280 = add i64 %279, -17, !mcsema_real_eip !26 :::  [I] = -25 : Inst :: -40:-40:-8:-26
  %286 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %287 = add i64 %286, -18, !mcsema_real_eip !27 :::  [I] = -26 : Inst :: -40:-40:-8:-26
	Out :: -40:-40:-8:-26
sub_a0::block_0xfd
	Pred :: block_0xce: -40:-40:-8:-26
  %311 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %312 = add i64 %311, -12, !mcsema_real_eip !30 :::  [I] = -20 : Inst :: -40:-40:-8:-26
	Out :: -40:-40:-8:-26
sub_a0::block_0x109
	Pred :: block_0xfd: -40:-40:-8:-26
	Pred :: block_0xce: -40:-40:-8:-26
	Pred :: entry: -40:-40:-8:-24
  %134 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %135 = add i64 %134, -12, !mcsema_real_eip !13 :::  [I] = -20 : Inst :: -40:-40:-8:-26
  %140 = load i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = -40 : Inst :: -40:-40:-8:-26
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %140, i64 32) :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %141 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %154 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  store i64 %141, i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = NULL : Inst :: -8:-40:-8:-26
  %157 = add i64 %141, 16, !mcsema_real_eip !16 :::  [I] = 8 : Inst :: -8:-40:-8:-26
  store i64 %157, i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = NULL : Inst :: 8:-40:-8:-26
  %164 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = 8 : Inst :: 8:-40:-8:-26
  %165 = load i64* %RBP_val, !mcsema_real_eip !16 :::  [I] = -8 : Inst :: 8:-40:-8:-26
	Out :: 8:-40:-8:-26
sub_a0::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -40 :::  [I] = -40 : Inst :: 0:-40:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -40:-40:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -40:-40:-8:0
  %95 = add i64 %94, -8, !mcsema_real_eip !5 :::  [I] = -16 : Inst :: -40:-40:-8:-16
  %98 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -40:-40:-8:-16
  %99 = add i64 %98, -12, !mcsema_real_eip !6 :::  [I] = -20 : Inst :: -40:-40:-8:-20
  %102 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %103 = add i64 %102, -8, !mcsema_real_eip !7 :::  [I] = -16 : Inst :: -40:-40:-8:-20
  %108 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -40:-40:-8:-20
  %109 = add i64 %108, -16, !mcsema_real_eip !10 :::  [I] = -24 : Inst :: -40:-40:-8:-24
  %113 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %114 = add i64 %113, -16, !mcsema_real_eip !11 :::  [I] = -24 : Inst :: -40:-40:-8:-24
	Out :: -40:-40:-8:-24
sub_a0::block_0xce
	Pred :: entry: -40:-40:-8:-24
  %228 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %229 = add i64 %228, -8, !mcsema_real_eip !17 :::  [I] = -16 : Inst :: -40:-40:-8:-24
  %239 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = -8 : Inst :: -40:-40:-8:-24
  %240 = add i64 %239, -17, !mcsema_real_eip !19 :::  [I] = -25 : Inst :: -40:-40:-8:-25
  %243 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -40:-40:-8:-25
  %244 = add i64 %243, -16, !mcsema_real_eip !20 :::  [I] = -24 : Inst :: -40:-40:-8:-25
  %263 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = -8 : Inst :: -40:-40:-8:-25
  %264 = add i64 %263, -8, !mcsema_real_eip !23 :::  [I] = -16 : Inst :: -40:-40:-8:-25
  %275 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = -8 : Inst :: -40:-40:-8:-25
  %276 = add i64 %275, -18, !mcsema_real_eip !25 :::  [I] = -26 : Inst :: -40:-40:-8:-26
  %279 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %280 = add i64 %279, -17, !mcsema_real_eip !26 :::  [I] = -25 : Inst :: -40:-40:-8:-26
  %286 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %287 = add i64 %286, -18, !mcsema_real_eip !27 :::  [I] = -26 : Inst :: -40:-40:-8:-26
	Out :: -40:-40:-8:-26
sub_a0::block_0xfd
	Pred :: block_0xce: -40:-40:-8:-26
  %311 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %312 = add i64 %311, -12, !mcsema_real_eip !30 :::  [I] = -20 : Inst :: -40:-40:-8:-26
	Out :: -40:-40:-8:-26
sub_a0::block_0x109
	Pred :: block_0xfd: -40:-40:-8:-26
	Pred :: block_0xce: -40:-40:-8:-26
	Pred :: entry: -40:-40:-8:-24
  %134 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %135 = add i64 %134, -12, !mcsema_real_eip !13 :::  [I] = -20 : Inst :: -40:-40:-8:-26
  %140 = load i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = -40 : Inst :: -40:-40:-8:-26
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %140, i64 32) :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %141 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  %154 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : Inst :: -40:-40:-8:-26
  store i64 %141, i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = NULL : Inst :: -8:-40:-8:-26
  %157 = add i64 %141, 16, !mcsema_real_eip !16 :::  [I] = 8 : Inst :: -8:-40:-8:-26
  store i64 %157, i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = NULL : Inst :: 8:-40:-8:-26
  %164 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = 8 : Inst :: 8:-40:-8:-26
  %165 = load i64* %RBP_val, !mcsema_real_eip !16 :::  [I] = -8 : Inst :: 8:-40:-8:-26
	Out :: 8:-40:-8:-26
Height[ sub_a0 ] : -40
==========================================
Function : mcsema_main
==========================================
