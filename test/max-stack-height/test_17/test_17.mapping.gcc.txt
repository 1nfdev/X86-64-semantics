========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -24 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp

296 :   %83 = and i64 %82, 16 : NIL
297 :   %84 = icmp eq i64 %83, 0 : NIL

298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <4>	subq	$16, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
308 :   %91 = icmp ult i64 %79, 16, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <4>	subq	$16, %rsp

314 :   %94 = load i64* %RBP_val, !mcsema_real_eip !5 :          <8>	movl	$0, -4(%rbp)
315 :   %95 = add i64 %94, -4, !mcsema_real_eip !5 :          <8>	movl	$0, -4(%rbp)
316 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !5 :          <8>	movl	$0, -4(%rbp)

317 :   %97 = bitcast i64* %96 to i32* : NIL

318 :   store i32 0, i32* %97, !mcsema_real_eip !5 :          <8>	movl	$0, -4(%rbp)

319 :   %98 = load i64* %RBP_val, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
320 :   %99 = add i64 %98, -4, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
321 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax

322 :   %101 = bitcast i64* %100 to i32* : NIL

323 :   %102 = load i32* %101, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
324 :   %103 = zext i32 %102 to i64, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
325 :   store i64 %103, i64* %RAX_val, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax

326 :   %104 = add i32 %102, -9 : NIL

327 :   %105 = xor i32 %104, %102, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
328 :   %106 = and i32 %105, 16, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
329 :   %107 = icmp ne i32 %106, 0, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
330 :   store i1 %107, i1* %AF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
331 :   %108 = trunc i32 %104 to i8, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
332 :   %109 = tail call i8 @llvm.ctpop.i8(i8 %108), !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

333 :   %110 = and i8 %109, 1 : NIL
334 :   %111 = icmp eq i8 %110, 0 : NIL

335 :   store i1 %111, i1* %PF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
336 :   %112 = icmp eq i32 %104, 0, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
337 :   store i1 %112, i1* %ZF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

338 :   %113 = icmp slt i32 %104, 0 : NIL

339 :   store i1 %113, i1* %SF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
340 :   %114 = icmp ult i32 %102, 9, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
341 :   store i1 %114, i1* %CF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
342 :   %115 = and i32 %105, %102, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

343 :   %116 = icmp slt i32 %115, 0 : NIL

344 :   store i1 %116, i1* %OF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

345 :   %117 = load i1* %ZF_val, !mcsema_real_eip !8 :          <5d>	jbe	-78
346 :   %118 = or i1 %114, %117, !mcsema_real_eip !8 :          <5d>	jbe	-78
347 :   br i1 %118, label %block_0x11.preheader, label %block_0x5f, !mcsema_real_eip !8 :          <5d>	jbe	-78

348 :   br label %block_0x11 : NIL

349 :   %119 = load i64* %RBP_val, !mcsema_real_eip !9 :          <11>	movl	-4(%rbp), %eax
350 :   %120 = add i64 %119, -4, !mcsema_real_eip !9 :          <11>	movl	-4(%rbp), %eax
351 :   %121 = inttoptr i64 %120 to i64*, !mcsema_real_eip !9 :          <11>	movl	-4(%rbp), %eax

352 :   %122 = bitcast i64* %121 to i32* : NIL

353 :   %123 = load i32* %122, !mcsema_real_eip !9 :          <11>	movl	-4(%rbp), %eax

354 :   %124 = sext i32 %123 to i64, !mcsema_real_eip !10 :          <14>	cltq
355 :   store i64 %124, i64* %RAX_val, !mcsema_real_eip !10 :          <14>	cltq

356 :   %125 = shl nsw i64 %124, 3 : NIL

357 :   %126 = add i64 %125, add (i64 ptrtoint (%0* @data_0x66 to i64), i64 32), !mcsema_real_eip !11 :          <16>	movq	(,%rax,8), %rax
358 :   %127 = inttoptr i64 %126 to i64*, !mcsema_real_eip !11 :          <16>	movq	(,%rax,8), %rax
359 :   %128 = load i64* %127, !mcsema_real_eip !11 :          <16>	movq	(,%rax,8), %rax
360 :   store i64 %128, i64* %RAX_val, !mcsema_real_eip !11 :          <16>	movq	(,%rax,8), %rax

361 :   %129 = icmp eq i64 %128, 0, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax
362 :   store i1 %129, i1* %ZF_val, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax

363 :   %130 = icmp slt i64 %128, 0 : NIL

364 :   store i1 %130, i1* %SF_val, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax
365 :   %131 = trunc i64 %128 to i8, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax
366 :   %132 = tail call i8 @llvm.ctpop.i8(i8 %131), !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax

367 :   %133 = and i8 %132, 1 : NIL
368 :   %134 = icmp eq i8 %133, 0 : NIL

369 :   store i1 %134, i1* %PF_val, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax
370 :   store i1 false, i1* %CF_val, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax
371 :   store i1 false, i1* %OF_val, !mcsema_real_eip !12 :          <1e>	testq	%rax, %rax

372 :   %135 = load i1* %ZF_val, !mcsema_real_eip !13 :          <21>	je	48

373 :   %136 = load i64* %RBP_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
374 :   %137 = add i64 %136, -4, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
375 :   %138 = inttoptr i64 %137 to i64*, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

376 :   %139 = bitcast i64* %138 to i32* : NIL

377 :   %140 = load i32* %139, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

378 :   br i1 %135, label %block_0x53, label %block_0x23, !mcsema_real_eip !13 :          <21>	je	48

379 :   br label %block_0x5f : NIL

380 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !15 :          <5f>	movl	$0, %eax

381 :   %141 = load i64* %RBP_val, !mcsema_real_eip !16 :          <64>	leave
382 :   store i64 %141, i64* %RSP_val, !mcsema_real_eip !16 :          <64>	leave
383 :   %142 = inttoptr i64 %141 to i64*, !mcsema_real_eip !16 :          <64>	leave
384 :   %143 = load i64* %142, !mcsema_real_eip !16 :          <64>	leave
385 :   store i64 %143, i64* %RBP_val, !mcsema_real_eip !16 :          <64>	leave

386 :   %144 = add i64 %141, 16, !mcsema_real_eip !17 :          <65>	retq
387 :   store i64 %144, i64* %RSP_val, !mcsema_real_eip !17 :          <65>	retq
388 :   %145 = load i64* %RAX_val, !mcsema_real_eip !17 :          <65>	retq
389 :   store i64 %145, i64* %RAX, !mcsema_real_eip !17 :          <65>	retq
390 :   %146 = load i64* %RBX_val, !mcsema_real_eip !17 :          <65>	retq
391 :   store i64 %146, i64* %RBX, !mcsema_real_eip !17 :          <65>	retq
392 :   %147 = load i64* %RCX_val, !mcsema_real_eip !17 :          <65>	retq
393 :   store i64 %147, i64* %RCX, !mcsema_real_eip !17 :          <65>	retq
394 :   %148 = load i64* %RDX_val, !mcsema_real_eip !17 :          <65>	retq
395 :   store i64 %148, i64* %RDX, !mcsema_real_eip !17 :          <65>	retq
396 :   %149 = load i64* %RSI_val, !mcsema_real_eip !17 :          <65>	retq
397 :   store i64 %149, i64* %RSI, !mcsema_real_eip !17 :          <65>	retq
398 :   %150 = load i64* %RDI_val, !mcsema_real_eip !17 :          <65>	retq
399 :   store i64 %150, i64* %RDI, !mcsema_real_eip !17 :          <65>	retq
400 :   %151 = load i64* %RSP_val, !mcsema_real_eip !17 :          <65>	retq
401 :   store i64 %151, i64* %RSP, !mcsema_real_eip !17 :          <65>	retq
402 :   %152 = load i64* %RBP_val, !mcsema_real_eip !17 :          <65>	retq
403 :   store i64 %152, i64* %RBP, !mcsema_real_eip !17 :          <65>	retq
404 :   %153 = load i64* %R8_val, !mcsema_real_eip !17 :          <65>	retq
405 :   store i64 %153, i64* %R8, !mcsema_real_eip !17 :          <65>	retq
406 :   %154 = load i64* %R9_val, !mcsema_real_eip !17 :          <65>	retq
407 :   store i64 %154, i64* %R9, !mcsema_real_eip !17 :          <65>	retq
408 :   %155 = load i64* %R10_val, !mcsema_real_eip !17 :          <65>	retq
409 :   store i64 %155, i64* %R10, !mcsema_real_eip !17 :          <65>	retq
410 :   %156 = load i64* %R11_val, !mcsema_real_eip !17 :          <65>	retq
411 :   store i64 %156, i64* %R11, !mcsema_real_eip !17 :          <65>	retq
412 :   %157 = load i64* %R12_val, !mcsema_real_eip !17 :          <65>	retq
413 :   store i64 %157, i64* %R12, !mcsema_real_eip !17 :          <65>	retq
414 :   %158 = load i64* %R13_val, !mcsema_real_eip !17 :          <65>	retq
415 :   store i64 %158, i64* %R13, !mcsema_real_eip !17 :          <65>	retq
416 :   %159 = load i64* %R14_val, !mcsema_real_eip !17 :          <65>	retq
417 :   store i64 %159, i64* %R14, !mcsema_real_eip !17 :          <65>	retq
418 :   %160 = load i64* %R15_val, !mcsema_real_eip !17 :          <65>	retq
419 :   store i64 %160, i64* %R15, !mcsema_real_eip !17 :          <65>	retq
420 :   %161 = load i64* %RIP_val, !mcsema_real_eip !17 :          <65>	retq
421 :   store i64 %161, i64* %RIP, !mcsema_real_eip !17 :          <65>	retq
422 :   %162 = load i1* %CF_val, !mcsema_real_eip !17 :          <65>	retq
423 :   store i1 %162, i1* %CF, align 1, !mcsema_real_eip !17 :          <65>	retq
424 :   %163 = load i1* %PF_val, !mcsema_real_eip !17 :          <65>	retq
425 :   store i1 %163, i1* %PF, align 1, !mcsema_real_eip !17 :          <65>	retq
426 :   %164 = load i1* %AF_val, !mcsema_real_eip !17 :          <65>	retq
427 :   store i1 %164, i1* %AF, align 1, !mcsema_real_eip !17 :          <65>	retq
428 :   %165 = load i1* %ZF_val, !mcsema_real_eip !17 :          <65>	retq
429 :   store i1 %165, i1* %ZF, align 1, !mcsema_real_eip !17 :          <65>	retq
430 :   %166 = load i1* %SF_val, !mcsema_real_eip !17 :          <65>	retq
431 :   store i1 %166, i1* %SF, align 1, !mcsema_real_eip !17 :          <65>	retq
432 :   %167 = load i1* %OF_val, !mcsema_real_eip !17 :          <65>	retq
433 :   store i1 %167, i1* %OF, align 1, !mcsema_real_eip !17 :          <65>	retq
434 :   %168 = load i1* %DF_val, !mcsema_real_eip !17 :          <65>	retq
435 :   store i1 %168, i1* %DF, align 1, !mcsema_real_eip !17 :          <65>	retq
436 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !17 :          <65>	retq
437 :   %169 = load i1* %FPU_B_val, !mcsema_real_eip !17 :          <65>	retq
438 :   store i1 %169, i1* %FPU_B, align 1, !mcsema_real_eip !17 :          <65>	retq
439 :   %170 = load i1* %FPU_C3_val, !mcsema_real_eip !17 :          <65>	retq
440 :   store i1 %170, i1* %FPU_C3, align 1, !mcsema_real_eip !17 :          <65>	retq
441 :   %171 = load i3* %FPU_TOP_val, !mcsema_real_eip !17 :          <65>	retq
442 :   store i3 %171, i3* %FPU_TOP, align 1, !mcsema_real_eip !17 :          <65>	retq
443 :   %172 = load i1* %FPU_C2_val, !mcsema_real_eip !17 :          <65>	retq
444 :   store i1 %172, i1* %FPU_C2, align 1, !mcsema_real_eip !17 :          <65>	retq
445 :   %173 = load i1* %FPU_C1_val, !mcsema_real_eip !17 :          <65>	retq
446 :   store i1 %173, i1* %FPU_C1, align 1, !mcsema_real_eip !17 :          <65>	retq
447 :   %174 = load i1* %FPU_C0_val, !mcsema_real_eip !17 :          <65>	retq
448 :   store i1 %174, i1* %FPU_C0, align 1, !mcsema_real_eip !17 :          <65>	retq
449 :   %175 = load i1* %FPU_ES_val, !mcsema_real_eip !17 :          <65>	retq
450 :   store i1 %175, i1* %FPU_ES, align 1, !mcsema_real_eip !17 :          <65>	retq
451 :   %176 = load i1* %FPU_SF_val, !mcsema_real_eip !17 :          <65>	retq
452 :   store i1 %176, i1* %FPU_SF, align 1, !mcsema_real_eip !17 :          <65>	retq
453 :   %177 = load i1* %FPU_PE_val, !mcsema_real_eip !17 :          <65>	retq
454 :   store i1 %177, i1* %FPU_PE, align 1, !mcsema_real_eip !17 :          <65>	retq
455 :   %178 = load i1* %FPU_UE_val, !mcsema_real_eip !17 :          <65>	retq
456 :   store i1 %178, i1* %FPU_UE, align 1, !mcsema_real_eip !17 :          <65>	retq
457 :   %179 = load i1* %FPU_OE_val, !mcsema_real_eip !17 :          <65>	retq
458 :   store i1 %179, i1* %FPU_OE, align 1, !mcsema_real_eip !17 :          <65>	retq
459 :   %180 = load i1* %FPU_ZE_val, !mcsema_real_eip !17 :          <65>	retq
460 :   store i1 %180, i1* %FPU_ZE, align 1, !mcsema_real_eip !17 :          <65>	retq
461 :   %181 = load i1* %FPU_DE_val, !mcsema_real_eip !17 :          <65>	retq
462 :   store i1 %181, i1* %FPU_DE, align 1, !mcsema_real_eip !17 :          <65>	retq
463 :   %182 = load i1* %FPU_IE_val, !mcsema_real_eip !17 :          <65>	retq
464 :   store i1 %182, i1* %FPU_IE, align 1, !mcsema_real_eip !17 :          <65>	retq
465 :   %183 = load i1* %FPU_X_val, !mcsema_real_eip !17 :          <65>	retq
466 :   store i1 %183, i1* %FPU_X, align 1, !mcsema_real_eip !17 :          <65>	retq
467 :   %184 = load i2* %FPU_RC_val, !mcsema_real_eip !17 :          <65>	retq
468 :   store i2 %184, i2* %FPU_RC, align 1, !mcsema_real_eip !17 :          <65>	retq
469 :   %185 = load i2* %FPU_PC_val, !mcsema_real_eip !17 :          <65>	retq
470 :   store i2 %185, i2* %FPU_PC, align 1, !mcsema_real_eip !17 :          <65>	retq
471 :   %186 = load i1* %FPU_PM_val, !mcsema_real_eip !17 :          <65>	retq
472 :   store i1 %186, i1* %FPU_PM, align 1, !mcsema_real_eip !17 :          <65>	retq
473 :   %187 = load i1* %FPU_UM_val, !mcsema_real_eip !17 :          <65>	retq
474 :   store i1 %187, i1* %FPU_UM, align 1, !mcsema_real_eip !17 :          <65>	retq
475 :   %188 = load i1* %FPU_OM_val, !mcsema_real_eip !17 :          <65>	retq
476 :   store i1 %188, i1* %FPU_OM, align 1, !mcsema_real_eip !17 :          <65>	retq
477 :   %189 = load i1* %FPU_ZM_val, !mcsema_real_eip !17 :          <65>	retq
478 :   store i1 %189, i1* %FPU_ZM, align 1, !mcsema_real_eip !17 :          <65>	retq
479 :   %190 = load i1* %FPU_DM_val, !mcsema_real_eip !17 :          <65>	retq
480 :   store i1 %190, i1* %FPU_DM, align 1, !mcsema_real_eip !17 :          <65>	retq
481 :   %191 = load i1* %FPU_IM_val, !mcsema_real_eip !17 :          <65>	retq
482 :   store i1 %191, i1* %FPU_IM, align 1, !mcsema_real_eip !17 :          <65>	retq

483 :   %192 = load i64* %53, align 4 : NIL
484 :   store i64 %192, i64* %52, align 4 : NIL

485 :   %193 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !17 :          <65>	retq
486 :   store i16 %193, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !17 :          <65>	retq
487 :   %194 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !17 :          <65>	retq
488 :   store i64 %194, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !17 :          <65>	retq
489 :   %195 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !17 :          <65>	retq
490 :   store i16 %195, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !17 :          <65>	retq
491 :   %196 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !17 :          <65>	retq
492 :   store i64 %196, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !17 :          <65>	retq
493 :   %197 = load i128* %XMM0_val, !mcsema_real_eip !17 :          <65>	retq
494 :   store i128 %197, i128* %XMM0, align 1, !mcsema_real_eip !17 :          <65>	retq
495 :   %198 = load i128* %XMM1_val, !mcsema_real_eip !17 :          <65>	retq
496 :   store i128 %198, i128* %XMM1, align 1, !mcsema_real_eip !17 :          <65>	retq
497 :   %199 = load i128* %XMM2_val, !mcsema_real_eip !17 :          <65>	retq
498 :   store i128 %199, i128* %XMM2, align 1, !mcsema_real_eip !17 :          <65>	retq
499 :   %200 = load i128* %XMM3_val, !mcsema_real_eip !17 :          <65>	retq
500 :   store i128 %200, i128* %XMM3, align 1, !mcsema_real_eip !17 :          <65>	retq
501 :   %201 = load i128* %XMM4_val, !mcsema_real_eip !17 :          <65>	retq
502 :   store i128 %201, i128* %XMM4, align 1, !mcsema_real_eip !17 :          <65>	retq
503 :   %202 = load i128* %XMM5_val, !mcsema_real_eip !17 :          <65>	retq
504 :   store i128 %202, i128* %XMM5, align 1, !mcsema_real_eip !17 :          <65>	retq
505 :   %203 = load i128* %XMM6_val, !mcsema_real_eip !17 :          <65>	retq
506 :   store i128 %203, i128* %XMM6, align 1, !mcsema_real_eip !17 :          <65>	retq
507 :   %204 = load i128* %XMM7_val, !mcsema_real_eip !17 :          <65>	retq
508 :   store i128 %204, i128* %XMM7, align 1, !mcsema_real_eip !17 :          <65>	retq
509 :   %205 = load i128* %XMM8_val, !mcsema_real_eip !17 :          <65>	retq
510 :   store i128 %205, i128* %XMM8, align 1, !mcsema_real_eip !17 :          <65>	retq
511 :   %206 = load i128* %XMM9_val, !mcsema_real_eip !17 :          <65>	retq
512 :   store i128 %206, i128* %XMM9, align 1, !mcsema_real_eip !17 :          <65>	retq
513 :   %207 = load i128* %XMM10_val, !mcsema_real_eip !17 :          <65>	retq
514 :   store i128 %207, i128* %XMM10, align 1, !mcsema_real_eip !17 :          <65>	retq
515 :   %208 = load i128* %XMM11_val, !mcsema_real_eip !17 :          <65>	retq
516 :   store i128 %208, i128* %XMM11, align 1, !mcsema_real_eip !17 :          <65>	retq
517 :   %209 = load i128* %XMM12_val, !mcsema_real_eip !17 :          <65>	retq
518 :   store i128 %209, i128* %XMM12, align 1, !mcsema_real_eip !17 :          <65>	retq
519 :   %210 = load i128* %XMM13_val, !mcsema_real_eip !17 :          <65>	retq
520 :   store i128 %210, i128* %XMM13, align 1, !mcsema_real_eip !17 :          <65>	retq
521 :   %211 = load i128* %XMM14_val, !mcsema_real_eip !17 :          <65>	retq
522 :   store i128 %211, i128* %XMM14, align 1, !mcsema_real_eip !17 :          <65>	retq
523 :   %212 = load i128* %XMM15_val, !mcsema_real_eip !17 :          <65>	retq
524 :   store i128 %212, i128* %XMM15, align 1, !mcsema_real_eip !17 :          <65>	retq
525 :   %213 = load i64* %STACK_BASE_val, !mcsema_real_eip !17 :          <65>	retq
526 :   store i64 %213, i64* %STACK_BASE, align 1, !mcsema_real_eip !17 :          <65>	retq
527 :   %214 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !17 :          <65>	retq
528 :   store i64 %214, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !17 :          <65>	retq
529 :   ret void, !mcsema_real_eip !17 :          <65>	retq

530 :   %uadd70 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %140, i32 1) : NIL
531 :   %215 = extractvalue { i32, i1 } %uadd70, 0 : NIL

532 :   %216 = xor i32 %215, %140, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
533 :   %217 = and i32 %216, 16, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
534 :   %218 = icmp ne i32 %217, 0, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
535 :   store i1 %218, i1* %AF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

536 :   %219 = icmp slt i32 %215, 0 : NIL

537 :   store i1 %219, i1* %SF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
538 :   %220 = icmp eq i32 %215, 0, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
539 :   store i1 %220, i1* %ZF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
540 :   %221 = xor i32 %140, -2147483648, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
541 :   %222 = and i32 %216, %221, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

542 :   %223 = icmp slt i32 %222, 0 : NIL

543 :   store i1 %223, i1* %OF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
544 :   %224 = trunc i32 %215 to i8, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
545 :   %225 = tail call i8 @llvm.ctpop.i8(i8 %224), !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

546 :   %226 = and i8 %225, 1 : NIL
547 :   %227 = icmp eq i8 %226, 0 : NIL

548 :   store i1 %227, i1* %PF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

549 :   %228 = extractvalue { i32, i1 } %uadd70, 1 : NIL

550 :   store i1 %228, i1* %CF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
551 :   store i32 %215, i32* %139, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

552 :   %229 = load i64* %RBP_val, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
553 :   %230 = add i64 %229, -4, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
554 :   %231 = inttoptr i64 %230 to i64*, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax

555 :   %232 = bitcast i64* %231 to i32* : NIL

556 :   %233 = load i32* %232, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
557 :   %234 = zext i32 %233 to i64, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
558 :   store i64 %234, i64* %RAX_val, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax

559 :   %235 = add i32 %233, -9 : NIL

560 :   %236 = xor i32 %235, %233, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
561 :   %237 = and i32 %236, 16, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
562 :   %238 = icmp ne i32 %237, 0, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
563 :   store i1 %238, i1* %AF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
564 :   %239 = trunc i32 %235 to i8, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
565 :   %240 = tail call i8 @llvm.ctpop.i8(i8 %239), !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

566 :   %241 = and i8 %240, 1 : NIL
567 :   %242 = icmp eq i8 %241, 0 : NIL

568 :   store i1 %242, i1* %PF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
569 :   %243 = icmp eq i32 %235, 0, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
570 :   store i1 %243, i1* %ZF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

571 :   %244 = icmp slt i32 %235, 0 : NIL

572 :   store i1 %244, i1* %SF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
573 :   %245 = icmp ult i32 %233, 9, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
574 :   store i1 %245, i1* %CF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
575 :   %246 = and i32 %236, %233, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

576 :   %247 = icmp slt i32 %246, 0 : NIL

577 :   store i1 %247, i1* %OF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

578 :   %248 = load i1* %ZF_val, !mcsema_real_eip !8 :          <5d>	jbe	-78
579 :   %249 = or i1 %245, %248, !mcsema_real_eip !8 :          <5d>	jbe	-78
580 :   br i1 %249, label %block_0x11.backedge, label %block_0x5f.loopexit, !mcsema_real_eip !8 :          <5d>	jbe	-78

581 :   %250 = sext i32 %140 to i64, !mcsema_real_eip !18 :          <26>	cltq
582 :   store i64 %250, i64* %RAX_val, !mcsema_real_eip !18 :          <26>	cltq

583 :   %251 = shl nsw i64 %250, 3 : NIL

584 :   %252 = add i64 %251, add (i64 ptrtoint (%0* @data_0x66 to i64), i64 32), !mcsema_real_eip !19 :          <28>	movq	(,%rax,8), %rax
585 :   %253 = inttoptr i64 %252 to i64*, !mcsema_real_eip !19 :          <28>	movq	(,%rax,8), %rax
586 :   %254 = load i64* %253, !mcsema_real_eip !19 :          <28>	movq	(,%rax,8), %rax
587 :   store i64 %254, i64* %RAX_val, !mcsema_real_eip !19 :          <28>	movq	(,%rax,8), %rax

588 :   %255 = inttoptr i64 %254 to i64*, !mcsema_real_eip !20 :          <30>	movl	(%rax), %ecx

589 :   %256 = bitcast i64* %255 to i32* : NIL

590 :   %257 = load i32* %256, !mcsema_real_eip !20 :          <30>	movl	(%rax), %ecx
591 :   %258 = zext i32 %257 to i64, !mcsema_real_eip !20 :          <30>	movl	(%rax), %ecx
592 :   store i64 %258, i64* %RCX_val, !mcsema_real_eip !20 :          <30>	movl	(%rax), %ecx

593 :   %259 = load i64* %RBP_val, !mcsema_real_eip !21 :          <32>	movl	-4(%rbp), %eax
594 :   %260 = add i64 %259, -4, !mcsema_real_eip !21 :          <32>	movl	-4(%rbp), %eax
595 :   %261 = inttoptr i64 %260 to i64*, !mcsema_real_eip !21 :          <32>	movl	-4(%rbp), %eax

596 :   %262 = bitcast i64* %261 to i32* : NIL

597 :   %263 = load i32* %262, !mcsema_real_eip !21 :          <32>	movl	-4(%rbp), %eax

598 :   %264 = sext i32 %263 to i64, !mcsema_real_eip !22 :          <35>	cltq
599 :   store i64 %264, i64* %RAX_val, !mcsema_real_eip !22 :          <35>	cltq

600 :   %265 = shl nsw i64 %264, 3 : NIL

601 :   %266 = add i64 %265, add (i64 ptrtoint (%0* @data_0x66 to i64), i64 32), !mcsema_real_eip !23 :          <37>	movq	(,%rax,8), %rdx
602 :   %267 = inttoptr i64 %266 to i64*, !mcsema_real_eip !23 :          <37>	movq	(,%rax,8), %rdx
603 :   %268 = load i64* %267, !mcsema_real_eip !23 :          <37>	movq	(,%rax,8), %rdx
604 :   store i64 %268, i64* %RDX_val, !mcsema_real_eip !23 :          <37>	movq	(,%rax,8), %rdx

605 :   %269 = load i64* %RBP_val, !mcsema_real_eip !24 :          <3f>	movl	-4(%rbp), %eax
606 :   %270 = add i64 %269, -4, !mcsema_real_eip !24 :          <3f>	movl	-4(%rbp), %eax
607 :   %271 = inttoptr i64 %270 to i64*, !mcsema_real_eip !24 :          <3f>	movl	-4(%rbp), %eax

608 :   %272 = bitcast i64* %271 to i32* : NIL

609 :   %273 = load i32* %272, !mcsema_real_eip !24 :          <3f>	movl	-4(%rbp), %eax
610 :   %274 = zext i32 %273 to i64, !mcsema_real_eip !24 :          <3f>	movl	-4(%rbp), %eax

611 :   store i64 %274, i64* %RSI_val, !mcsema_real_eip !25 :          <42>	movl	%eax, %esi

612 :   store i64 zext (i32 ptrtoint (%1* @data_0xd6 to i32) to i64), i64* %RDI_val, !mcsema_real_eip !26 :          <44>	movl	$0, %edi

613 :   %275 = load i64* %RDX_val, !mcsema_real_eip !27 :          <4e>	callq	0
614 :   %276 = load i64* %RCX_val, !mcsema_real_eip !27 :          <4e>	callq	0
615 :   %277 = tail call x86_64_sysvcc i64 @printf(i64 zext (i32 ptrtoint (%1* @data_0xd6 to i32) to i64), i64 %274, i64 %275, i64 %276), !mcsema_real_eip !27 :          <4e>	callq	0
616 :   store i64 %277, i64* %RAX_val, !mcsema_real_eip !27 :          <4e>	callq	0

617 :   %278 = load i64* %RBP_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
618 :   %279 = add i64 %278, -4, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
619 :   %280 = inttoptr i64 %279 to i64*, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

620 :   %281 = bitcast i64* %280 to i32* : NIL

621 :   %282 = load i32* %281, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

622 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %282, i32 1) : NIL
623 :   %283 = extractvalue { i32, i1 } %uadd, 0 : NIL

624 :   %284 = xor i32 %283, %282, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
625 :   %285 = and i32 %284, 16, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
626 :   %286 = icmp ne i32 %285, 0, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
627 :   store i1 %286, i1* %AF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

628 :   %287 = icmp slt i32 %283, 0 : NIL

629 :   store i1 %287, i1* %SF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
630 :   %288 = icmp eq i32 %283, 0, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
631 :   store i1 %288, i1* %ZF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
632 :   %289 = xor i32 %282, -2147483648, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
633 :   %290 = and i32 %284, %289, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

634 :   %291 = icmp slt i32 %290, 0 : NIL

635 :   store i1 %291, i1* %OF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
636 :   %292 = trunc i32 %283 to i8, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
637 :   %293 = tail call i8 @llvm.ctpop.i8(i8 %292), !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

638 :   %294 = and i8 %293, 1 : NIL
639 :   %295 = icmp eq i8 %294, 0 : NIL

640 :   store i1 %295, i1* %PF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

641 :   %296 = extractvalue { i32, i1 } %uadd, 1 : NIL

642 :   store i1 %296, i1* %CF_val, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)
643 :   store i32 %283, i32* %281, !mcsema_real_eip !14 :          <53>	addl	$1, -4(%rbp)

644 :   %297 = load i64* %RBP_val, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
645 :   %298 = add i64 %297, -4, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
646 :   %299 = inttoptr i64 %298 to i64*, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax

647 :   %300 = bitcast i64* %299 to i32* : NIL

648 :   %301 = load i32* %300, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
649 :   %302 = zext i32 %301 to i64, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax
650 :   store i64 %302, i64* %RAX_val, !mcsema_real_eip !6 :          <57>	movl	-4(%rbp), %eax

651 :   %303 = add i32 %301, -9 : NIL

652 :   %304 = xor i32 %303, %301, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
653 :   %305 = and i32 %304, 16, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
654 :   %306 = icmp ne i32 %305, 0, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
655 :   store i1 %306, i1* %AF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
656 :   %307 = trunc i32 %303 to i8, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
657 :   %308 = tail call i8 @llvm.ctpop.i8(i8 %307), !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

658 :   %309 = and i8 %308, 1 : NIL
659 :   %310 = icmp eq i8 %309, 0 : NIL

660 :   store i1 %310, i1* %PF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
661 :   %311 = icmp eq i32 %303, 0, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
662 :   store i1 %311, i1* %ZF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

663 :   %312 = icmp slt i32 %303, 0 : NIL

664 :   store i1 %312, i1* %SF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
665 :   %313 = icmp ult i32 %301, 9, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
666 :   store i1 %313, i1* %CF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax
667 :   %314 = and i32 %304, %301, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

668 :   %315 = icmp slt i32 %314, 0 : NIL

669 :   store i1 %315, i1* %OF_val, !mcsema_real_eip !7 :          <5a>	cmpl	$9, %eax

670 :   %316 = load i1* %ZF_val, !mcsema_real_eip !8 :          <5d>	jbe	-78
671 :   %317 = or i1 %313, %316, !mcsema_real_eip !8 :          <5d>	jbe	-78
672 :   br i1 %317, label %block_0x11.backedge, label %block_0x5f.loopexit, !mcsema_real_eip !8 :          <5d>	jbe	-78

673 :   br label %block_0x11 : NIL
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_0(%struct.regs* %0) : NIL
2 :   ret void : NIL
