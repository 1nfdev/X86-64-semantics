Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_27.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_80
==========================================
----------------------------------
sub_80::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -56 :::  [I] = -56 : Inst :: 0:-56:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -56:-56:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -56:-56:-8:0
  %95 = add i64 %94, -32, !mcsema_real_eip !11 :::  [I] = -40 : Inst :: -56:-56:-8:-40
  %98 = add i64 %94, -4, !mcsema_real_eip !12 :::  [I] = -12 : Inst :: -56:-56:-8:-40
  %101 = load i64* %RSP_val, !mcsema_real_eip !13 :::  [I] = -56 : Inst :: -56:-56:-8:-40
  %104 = load i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = -56 : Inst :: -56:-56:-8:-40
  %105 = add i64 %104, -8 :::  [I] = -64 : Inst :: -56:-64:-8:-40
  store i64 %105, i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = NULL : Inst :: -64:-64:-8:-40
  %113 = load i64* %RSP_val, !mcsema_real_eip !14 :::  [I] = -64 : Inst :: -64:-64:-8:-40
  %114 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = -8 : Inst :: -64:-64:-8:-40
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !14 :::  [I] = NULL : Inst :: -56:-64:-8:-40
  %247 = load i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = -56 : Inst :: -56:-64:-8:-40
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %247, i64 48) :::  [I] = -8 : Inst :: -56:-64:-8:-40
  %248 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : Inst :: -56:-64:-8:-40
  %261 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : Inst :: -56:-64:-8:-40
  store i64 %248, i64* %RSP_val, !mcsema_real_eip !16 :::  [I] = NULL : Inst :: -8:-64:-8:-40
  %264 = add i64 %248, 16, !mcsema_real_eip !18 :::  [I] = 8 : Inst :: -8:-64:-8:-40
  store i64 %264, i64* %RSP_val, !mcsema_real_eip !18 :::  [I] = NULL : Inst :: 8:-64:-8:-40
  %271 = load i64* %RSP_val, !mcsema_real_eip !18 :::  [I] = 8 : Inst :: 8:-64:-8:-40
  %272 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: 8:-64:-8:-40
Gen :: 8:-64:-8:-40


DFA Analysis: 
sub_80::entry
	Gen :: 8:-64:-8:-40
	Out :: 8:-64:-8:-40
sub_80::entry
	Gen :: 8:-64:-8:-40
	Out :: 8:-64:-8:-40
Height[ sub_80 ] : -64
==========================================
Function : sub_0
==========================================
----------------------------------
sub_0::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, 8, !mcsema_real_eip !4 :::  [I] = 8 : Inst :: -8:-8:-8:0
  %84 = add i64 %78, -12, !mcsema_real_eip !5 :::  [I] = -12 : Inst :: -8:-12:-8:0
  %89 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-12:-8:0
  %90 = add i64 %89, -8, !mcsema_real_eip !6 :::  [I] = -16 : Inst :: -8:-12:-8:-16
  %95 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -8:-12:-8:-16
  %96 = add i64 %95, -12, !mcsema_real_eip !7 :::  [I] = -20 : Inst :: -8:-12:-8:-20
  %101 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -8:-12:-8:-20
  %102 = add i64 %101, -16, !mcsema_real_eip !8 :::  [I] = -24 : Inst :: -8:-12:-8:-24
  %107 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -8:-12:-8:-24
  %108 = add i64 %107, -20, !mcsema_real_eip !9 :::  [I] = -28 : Inst :: -8:-12:-8:-28
  %113 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-12:-8:-28
  %114 = add i64 %113, -24, !mcsema_real_eip !10 :::  [I] = -32 : Inst :: -8:-12:-8:-32
  %119 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: -8:-12:-8:-32
  %120 = add i64 %119, -32, !mcsema_real_eip !11 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %123 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %124 = add i64 %123, -4, !mcsema_real_eip !12 :::  [I] = -12 : Inst :: -8:-12:-8:-40
  %129 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %130 = add i64 %129, -4, !mcsema_real_eip !13 :::  [I] = -12 : Inst :: -8:-12:-8:-40
  %135 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %136 = add i64 %135, -32, !mcsema_real_eip !14 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %145 = load i64* %RBP_val, !mcsema_real_eip !16 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %146 = add i64 %145, -8, !mcsema_real_eip !16 :::  [I] = -16 : Inst :: -8:-12:-8:-40
  %151 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %152 = add i64 %151, -8, !mcsema_real_eip !17 :::  [I] = -16 : Inst :: -8:-12:-8:-40
  %157 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %158 = add i64 %157, -32, !mcsema_real_eip !18 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %167 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %168 = add i64 %167, -12, !mcsema_real_eip !20 :::  [I] = -20 : Inst :: -8:-12:-8:-40
  %173 = load i64* %RBP_val, !mcsema_real_eip !21 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %174 = add i64 %173, -12, !mcsema_real_eip !21 :::  [I] = -20 : Inst :: -8:-12:-8:-40
  %179 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %180 = add i64 %179, -32, !mcsema_real_eip !22 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %189 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %190 = add i64 %189, -16, !mcsema_real_eip !24 :::  [I] = -24 : Inst :: -8:-12:-8:-40
  %195 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %196 = add i64 %195, -16, !mcsema_real_eip !25 :::  [I] = -24 : Inst :: -8:-12:-8:-40
  %201 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %202 = add i64 %201, -32, !mcsema_real_eip !26 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %211 = load i64* %RBP_val, !mcsema_real_eip !28 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %212 = add i64 %211, -20, !mcsema_real_eip !28 :::  [I] = -28 : Inst :: -8:-12:-8:-40
  %217 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %218 = add i64 %217, -20, !mcsema_real_eip !29 :::  [I] = -28 : Inst :: -8:-12:-8:-40
  %223 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %224 = add i64 %223, -32, !mcsema_real_eip !30 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %233 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %234 = add i64 %233, -24, !mcsema_real_eip !32 :::  [I] = -32 : Inst :: -8:-12:-8:-40
  %239 = load i64* %RBP_val, !mcsema_real_eip !33 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %240 = add i64 %239, -24, !mcsema_real_eip !33 :::  [I] = -32 : Inst :: -8:-12:-8:-40
  %245 = load i64* %RBP_val, !mcsema_real_eip !34 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %246 = add i64 %245, -32, !mcsema_real_eip !34 :::  [I] = -40 : Inst :: -8:-12:-8:-40
  %255 = load i64* %RSP_val, !mcsema_real_eip !36 :::  [I] = -8 : Inst :: -8:-12:-8:-40
  %258 = add i64 %255, 16, !mcsema_real_eip !37 :::  [I] = 8 : Inst :: -8:-12:-8:-40
  store i64 %258, i64* %RSP_val, !mcsema_real_eip !37 :::  [I] = NULL : Inst :: 8:-12:-8:-40
  %265 = load i64* %RSP_val, !mcsema_real_eip !37 :::  [I] = 8 : Inst :: 8:-12:-8:-40
  %266 = load i64* %RBP_val, !mcsema_real_eip !37 :::  [I] = -8 : Inst :: 8:-12:-8:-40
Gen :: 8:-12:-8:-40


DFA Analysis: 
sub_0::entry
	Gen :: 8:-12:-8:-40
	Out :: 8:-12:-8:-40
sub_0::entry
	Gen :: 8:-12:-8:-40
	Out :: 8:-12:-8:-40
Height[ sub_0 ] : -40
==========================================
Function : mcsema_main
==========================================
