Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_4.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_3f
==========================================


DFA Analysis: 
sub_3f::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -24 :::  [I] = -24 : Inst :: 0:-24:-8:0
  %94 = add i64 %78, -32 :::  [I] = -32 : Inst :: 0:-32:-8:0
  store i64 %94, i64* %RSP_val, !mcsema_real_eip !7 :::  [I] = NULL : Inst :: -32:-32:-8:0
  %102 = load i64* %RSP_val, !mcsema_real_eip !7 :::  [I] = -32 : Inst :: -32:-32:-8:0
  %103 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -32:-32:-8:0
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !7 :::  [I] = NULL : Inst :: -24:-32:-8:0
  %236 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -24:-32:-8:0
  %237 = add i64 %236, -4, !mcsema_real_eip !8 :::  [I] = -12 : Inst :: -24:-32:-8:-12
  %242 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -24:-32:-8:-12
  %243 = add i64 %242, -4, !mcsema_real_eip !9 :::  [I] = -12 : Inst :: -24:-32:-8:-12
  %248 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -24:-32:-8:-12
  store i64 %248, i64* %RSP_val, !mcsema_real_eip !10 :::  [I] = NULL : Inst :: -8:-32:-8:-12
  %251 = add i64 %248, 16, !mcsema_real_eip !11 :::  [I] = 8 : Inst :: -8:-32:-8:-12
  store i64 %251, i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = NULL : Inst :: 8:-32:-8:-12
  %258 = load i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = 8 : Inst :: 8:-32:-8:-12
  %259 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: 8:-32:-8:-12
	Out :: 8:-32:-8:-12
sub_3f::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -24 :::  [I] = -24 : Inst :: 0:-24:-8:0
  %94 = add i64 %78, -32 :::  [I] = -32 : Inst :: 0:-32:-8:0
  store i64 %94, i64* %RSP_val, !mcsema_real_eip !7 :::  [I] = NULL : Inst :: -32:-32:-8:0
  %102 = load i64* %RSP_val, !mcsema_real_eip !7 :::  [I] = -32 : Inst :: -32:-32:-8:0
  %103 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -32:-32:-8:0
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !7 :::  [I] = NULL : Inst :: -24:-32:-8:0
  %236 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -24:-32:-8:0
  %237 = add i64 %236, -4, !mcsema_real_eip !8 :::  [I] = -12 : Inst :: -24:-32:-8:-12
  %242 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -24:-32:-8:-12
  %243 = add i64 %242, -4, !mcsema_real_eip !9 :::  [I] = -12 : Inst :: -24:-32:-8:-12
  %248 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -24:-32:-8:-12
  store i64 %248, i64* %RSP_val, !mcsema_real_eip !10 :::  [I] = NULL : Inst :: -8:-32:-8:-12
  %251 = add i64 %248, 16, !mcsema_real_eip !11 :::  [I] = 8 : Inst :: -8:-32:-8:-12
  store i64 %251, i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = NULL : Inst :: 8:-32:-8:-12
  %258 = load i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = 8 : Inst :: 8:-32:-8:-12
  %259 = load i64* %RBP_val, !mcsema_real_eip !11 :::  [I] = -8 : Inst :: 8:-32:-8:-12
	Out :: 8:-32:-8:-12
Height[ sub_3f ] : -32
==========================================
Function : sub_0
==========================================


DFA Analysis: 
sub_0::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, -28, !mcsema_real_eip !4 :::  [I] = -28 : Inst :: -8:-28:-8:0
  %86 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -8:-28:-8:0
  %87 = add i64 %86, -24, !mcsema_real_eip !5 :::  [I] = -32 : Inst :: -8:-28:-8:-32
  %92 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %93 = add i64 %92, -24, !mcsema_real_eip !6 :::  [I] = -32 : Inst :: -8:-28:-8:-32
  %98 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %99 = add i64 %98, -20, !mcsema_real_eip !7 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %123 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %124 = add i64 %123, -4, !mcsema_real_eip !9 :::  [I] = -12 : Inst :: -8:-28:-8:-32
  %127 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %128 = add i64 %127, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x17.preheader
	Pred :: entry: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x17
	Pred :: block_0x17.backedge: -3:-3:-3:-3
	Pred :: block_0x17.preheader: -8:-28:-8:-32
  %138 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %139 = add i64 %138, -20, !mcsema_real_eip !12 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %150 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %151 = add i64 %150, -4, !mcsema_real_eip !15 :::  [I] = -12 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x2c
	Pred :: block_0x17: -8:-28:-8:-32
  %248 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %249 = add i64 %248, -20, !mcsema_real_eip !20 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %266 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %267 = add i64 %266, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x21
	Pred :: block_0x17: -8:-28:-8:-32
  %292 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %293 = add i64 %292, -8, !mcsema_real_eip !22 :::  [I] = -16 : Inst :: -8:-28:-8:-32
  %296 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %297 = add i64 %296, -20, !mcsema_real_eip !20 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %314 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %315 = add i64 %314, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x17.backedge
	Pred :: block_0x21: -8:-28:-8:-32
	Pred :: block_0x2c: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x3a.loopexit
	Pred :: block_0x21: -8:-28:-8:-32
	Pred :: block_0x2c: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x3a
	Pred :: block_0x3a.loopexit: -8:-28:-8:-32
	Pred :: entry: -8:-28:-8:-32
  %155 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %156 = add i64 %155, -8, !mcsema_real_eip !17 :::  [I] = -16 : Inst :: -8:-28:-8:-32
  %161 = load i64* %RSP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %164 = add i64 %161, 16, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: -8:-28:-8:-32
  store i64 %164, i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = NULL : Inst :: 8:-28:-8:-32
  %171 = load i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: 8:-28:-8:-32
  %172 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = -8 : Inst :: 8:-28:-8:-32
	Out :: 8:-28:-8:-32
sub_0::entry
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, -28, !mcsema_real_eip !4 :::  [I] = -28 : Inst :: -8:-28:-8:0
  %86 = load i64* %RBP_val, !mcsema_real_eip !5 :::  [I] = -8 : Inst :: -8:-28:-8:0
  %87 = add i64 %86, -24, !mcsema_real_eip !5 :::  [I] = -32 : Inst :: -8:-28:-8:-32
  %92 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %93 = add i64 %92, -24, !mcsema_real_eip !6 :::  [I] = -32 : Inst :: -8:-28:-8:-32
  %98 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %99 = add i64 %98, -20, !mcsema_real_eip !7 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %123 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %124 = add i64 %123, -4, !mcsema_real_eip !9 :::  [I] = -12 : Inst :: -8:-28:-8:-32
  %127 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %128 = add i64 %127, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x17.preheader
	Pred :: entry: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x17
	Pred :: block_0x17.backedge: -8:-28:-8:-32
	Pred :: block_0x17.preheader: -8:-28:-8:-32
  %138 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %139 = add i64 %138, -20, !mcsema_real_eip !12 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %150 = load i64* %RBP_val, !mcsema_real_eip !15 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %151 = add i64 %150, -4, !mcsema_real_eip !15 :::  [I] = -12 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x2c
	Pred :: block_0x17: -8:-28:-8:-32
  %248 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %249 = add i64 %248, -20, !mcsema_real_eip !20 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %266 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %267 = add i64 %266, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x21
	Pred :: block_0x17: -8:-28:-8:-32
  %292 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %293 = add i64 %292, -8, !mcsema_real_eip !22 :::  [I] = -16 : Inst :: -8:-28:-8:-32
  %296 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %297 = add i64 %296, -20, !mcsema_real_eip !20 :::  [I] = -28 : Inst :: -8:-28:-8:-32
  %314 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %315 = add i64 %314, -20, !mcsema_real_eip !10 :::  [I] = -28 : Inst :: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x17.backedge
	Pred :: block_0x21: -8:-28:-8:-32
	Pred :: block_0x2c: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x3a.loopexit
	Pred :: block_0x21: -8:-28:-8:-32
	Pred :: block_0x2c: -8:-28:-8:-32
	Out :: -8:-28:-8:-32
sub_0::block_0x3a
	Pred :: block_0x3a.loopexit: -8:-28:-8:-32
	Pred :: entry: -8:-28:-8:-32
  %155 = load i64* %RBP_val, !mcsema_real_eip !17 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %156 = add i64 %155, -8, !mcsema_real_eip !17 :::  [I] = -16 : Inst :: -8:-28:-8:-32
  %161 = load i64* %RSP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %164 = add i64 %161, 16, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: -8:-28:-8:-32
  store i64 %164, i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = NULL : Inst :: 8:-28:-8:-32
  %171 = load i64* %RSP_val, !mcsema_real_eip !19 :::  [I] = 8 : Inst :: 8:-28:-8:-32
  %172 = load i64* %RBP_val, !mcsema_real_eip !19 :::  [I] = -8 : Inst :: 8:-28:-8:-32
	Out :: 8:-28:-8:-32
Height[ sub_0 ] : -32
==========================================
Function : mcsema_main
==========================================
