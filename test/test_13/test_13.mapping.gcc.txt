========================================================
Source line mapping for function: sub_c2
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <c2>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <c2>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <c2>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <c2>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <c2>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <c2>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <c2>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <c3>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -56 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp

296 :   %83 = and i64 %82, 16 : NIL
297 :   %84 = icmp eq i64 %83, 0 : NIL

298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
308 :   %91 = icmp ult i64 %79, 48, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <c6>	subq	$48, %rsp

314 :   %94 = load i64* %RBP_val, !mcsema_real_eip !5 :          <ca>	movq	%rdi, -40(%rbp)
315 :   %95 = add i64 %94, -40, !mcsema_real_eip !5 :          <ca>	movq	%rdi, -40(%rbp)
316 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !5 :          <ca>	movq	%rdi, -40(%rbp)
317 :   %97 = load i64* %RDI_val, !mcsema_real_eip !5 :          <ca>	movq	%rdi, -40(%rbp)
318 :   store i64 %97, i64* %96, !mcsema_real_eip !5 :          <ca>	movq	%rdi, -40(%rbp)

319 :   %98 = load i64* %RBP_val, !mcsema_real_eip !6 :          <ce>	movl	%esi, -44(%rbp)
320 :   %99 = add i64 %98, -44, !mcsema_real_eip !6 :          <ce>	movl	%esi, -44(%rbp)
321 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !6 :          <ce>	movl	%esi, -44(%rbp)
322 :   %101 = load i64* %RSI_val, !mcsema_real_eip !6 :          <ce>	movl	%esi, -44(%rbp)
323 :   %102 = trunc i64 %101 to i32, !mcsema_real_eip !6 :          <ce>	movl	%esi, -44(%rbp)

324 :   %103 = bitcast i64* %100 to i32* : NIL

325 :   store i32 %102, i32* %103, !mcsema_real_eip !6 :          <ce>	movl	%esi, -44(%rbp)

326 :   %104 = load i64* %RBP_val, !mcsema_real_eip !7 :          <d1>	movl	$0, -4(%rbp)
327 :   %105 = add i64 %104, -4, !mcsema_real_eip !7 :          <d1>	movl	$0, -4(%rbp)
328 :   %106 = inttoptr i64 %105 to i64*, !mcsema_real_eip !7 :          <d1>	movl	$0, -4(%rbp)

329 :   %107 = bitcast i64* %106 to i32* : NIL

330 :   store i32 0, i32* %107, !mcsema_real_eip !7 :          <d1>	movl	$0, -4(%rbp)

331 :   %108 = load i64* %RBP_val, !mcsema_real_eip !8 :          <d8>	movl	-44(%rbp), %eax
332 :   %109 = add i64 %108, -44, !mcsema_real_eip !8 :          <d8>	movl	-44(%rbp), %eax
333 :   %110 = inttoptr i64 %109 to i64*, !mcsema_real_eip !8 :          <d8>	movl	-44(%rbp), %eax

334 :   %111 = bitcast i64* %110 to i32* : NIL

335 :   %112 = load i32* %111, !mcsema_real_eip !8 :          <d8>	movl	-44(%rbp), %eax

336 :   %113 = sext i32 %112 to i64, !mcsema_real_eip !9 :          <db>	cltq

337 :   %114 = shl nsw i64 %113, 3, !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax
338 :   store i1 false, i1* %CF_val, !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax

339 :   %115 = icmp eq i32 %112, 0 : NIL

340 :   store i1 %115, i1* %ZF_val, !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax

341 :   %116 = icmp slt i32 %112, 0 : NIL

342 :   store i1 %116, i1* %SF_val, !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax
343 :   %117 = trunc i64 %114 to i8, !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax
344 :   %118 = tail call i8 @llvm.ctpop.i8(i8 %117), !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax

345 :   %119 = and i8 %118, 1 : NIL
346 :   %120 = icmp eq i8 %119, 0 : NIL

347 :   store i1 %120, i1* %PF_val, !mcsema_real_eip !10 :          <dd>	shlq	$3, %rax

348 :   store i64 %114, i64* %RDI_val, !mcsema_real_eip !11 :          <e1>	movq	%rax, %rdi

349 :   %121 = tail call x86_64_sysvcc i64 @malloc(i64 %114), !mcsema_real_eip !12 :          <e4>	callq	0
350 :   store i64 %121, i64* %RAX_val, !mcsema_real_eip !12 :          <e4>	callq	0

351 :   %122 = load i64* %RBP_val, !mcsema_real_eip !13 :          <e9>	movq	%rax, -16(%rbp)
352 :   %123 = add i64 %122, -16, !mcsema_real_eip !13 :          <e9>	movq	%rax, -16(%rbp)
353 :   %124 = inttoptr i64 %123 to i64*, !mcsema_real_eip !13 :          <e9>	movq	%rax, -16(%rbp)
354 :   store i64 %121, i64* %124, !mcsema_real_eip !13 :          <e9>	movq	%rax, -16(%rbp)

355 :   %125 = load i64* %RBP_val, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
356 :   %126 = add i64 %125, -4, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
357 :   %127 = inttoptr i64 %126 to i64*, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax

358 :   %128 = bitcast i64* %127 to i32* : NIL

359 :   %129 = load i32* %128, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
360 :   %130 = zext i32 %129 to i64, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
361 :   store i64 %130, i64* %RAX_val, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax

362 :   %131 = load i64* %RBP_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
363 :   %132 = add i64 %131, -44, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
364 :   %133 = inttoptr i64 %132 to i64*, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

365 :   %134 = bitcast i64* %133 to i32* : NIL

366 :   %135 = load i32* %134, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
367 :   %136 = sub i32 %129, %135, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
368 :   %137 = xor i32 %136, %129, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
369 :   %138 = xor i32 %137, %135, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
370 :   %139 = and i32 %138, 16, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
371 :   %140 = icmp ne i32 %139, 0, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
372 :   store i1 %140, i1* %AF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
373 :   %141 = trunc i32 %136 to i8, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
374 :   %142 = tail call i8 @llvm.ctpop.i8(i8 %141), !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

375 :   %143 = and i8 %142, 1 : NIL
376 :   %144 = icmp eq i8 %143, 0 : NIL

377 :   store i1 %144, i1* %PF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

378 :   %145 = icmp eq i32 %129, %135 : NIL

379 :   store i1 %145, i1* %ZF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

380 :   %146 = icmp slt i32 %136, 0 : NIL

381 :   store i1 %146, i1* %SF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
382 :   %147 = icmp ult i32 %129, %135, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
383 :   store i1 %147, i1* %CF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
384 :   %148 = xor i32 %135, %129, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
385 :   %149 = and i32 %137, %148, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

386 :   %150 = icmp slt i32 %149, 0 : NIL

387 :   store i1 %150, i1* %OF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

388 :   %151 = load i1* %SF_val, !mcsema_real_eip !16 :          <137>	jl	-74

389 :   %152 = xor i1 %151, %150 : NIL

390 :   br i1 %152, label %block_0xef.preheader, label %block_0x139, !mcsema_real_eip !16 :          <137>	jl	-74

391 :   br label %block_0xef : NIL

392 :   %153 = load i64* %RBP_val, !mcsema_real_eip !17 :          <ef>	movl	-4(%rbp), %eax
393 :   %154 = add i64 %153, -4, !mcsema_real_eip !17 :          <ef>	movl	-4(%rbp), %eax
394 :   %155 = inttoptr i64 %154 to i64*, !mcsema_real_eip !17 :          <ef>	movl	-4(%rbp), %eax

395 :   %156 = bitcast i64* %155 to i32* : NIL

396 :   %157 = load i32* %156, !mcsema_real_eip !17 :          <ef>	movl	-4(%rbp), %eax

397 :   %158 = sext i32 %157 to i64, !mcsema_real_eip !18 :          <f2>	cltq
398 :   store i64 %158, i64* %RAX_val, !mcsema_real_eip !18 :          <f2>	cltq

399 :   %159 = shl nsw i64 %158, 3 : NIL

400 :   %160 = inttoptr i64 %159 to i64*, !mcsema_real_eip !19 :          <f4>	leaq	(,%rax,8), %rdx
401 :   %161 = ptrtoint i64* %160 to i64, !mcsema_real_eip !19 :          <f4>	leaq	(,%rax,8), %rdx
402 :   store i64 %161, i64* %RDX_val, !mcsema_real_eip !19 :          <f4>	leaq	(,%rax,8), %rdx

403 :   %162 = load i64* %RBP_val, !mcsema_real_eip !20 :          <fc>	movq	-40(%rbp), %rax
404 :   %163 = add i64 %162, -40, !mcsema_real_eip !20 :          <fc>	movq	-40(%rbp), %rax
405 :   %164 = inttoptr i64 %163 to i64*, !mcsema_real_eip !20 :          <fc>	movq	-40(%rbp), %rax
406 :   %165 = load i64* %164, !mcsema_real_eip !20 :          <fc>	movq	-40(%rbp), %rax

407 :   %uadd349 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %161, i64 %165) : NIL
408 :   %166 = extractvalue { i64, i1 } %uadd349, 0 : NIL

409 :   %167 = xor i64 %166, %165, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
410 :   %168 = xor i64 %167, %161, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
411 :   %169 = and i64 %168, 16, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
412 :   %170 = icmp ne i64 %169, 0, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
413 :   store i1 %170, i1* %AF_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax

414 :   %171 = icmp slt i64 %166, 0 : NIL

415 :   store i1 %171, i1* %SF_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
416 :   %172 = icmp eq i64 %166, 0, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
417 :   store i1 %172, i1* %ZF_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
418 :   %173 = xor i64 %165, -9223372036854775808, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
419 :   %174 = xor i64 %173, %161, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
420 :   %175 = and i64 %167, %174, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax

421 :   %176 = icmp slt i64 %175, 0 : NIL

422 :   store i1 %176, i1* %OF_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
423 :   %177 = trunc i64 %166 to i8, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
424 :   %178 = tail call i8 @llvm.ctpop.i8(i8 %177), !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax

425 :   %179 = and i8 %178, 1 : NIL
426 :   %180 = icmp eq i8 %179, 0 : NIL

427 :   store i1 %180, i1* %PF_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax

428 :   %181 = extractvalue { i64, i1 } %uadd349, 1 : NIL

429 :   store i1 %181, i1* %CF_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax
430 :   store i64 %166, i64* %RAX_val, !mcsema_real_eip !21 :          <100>	addq	%rdx, %rax

431 :   %182 = inttoptr i64 %166 to i64*, !mcsema_real_eip !22 :          <103>	movq	(%rax), %rax
432 :   %183 = load i64* %182, !mcsema_real_eip !22 :          <103>	movq	(%rax), %rax
433 :   store i64 %183, i64* %RAX_val, !mcsema_real_eip !22 :          <103>	movq	(%rax), %rax

434 :   %184 = load i64* %RBP_val, !mcsema_real_eip !23 :          <106>	movq	%rax, -24(%rbp)
435 :   %185 = add i64 %184, -24, !mcsema_real_eip !23 :          <106>	movq	%rax, -24(%rbp)
436 :   %186 = inttoptr i64 %185 to i64*, !mcsema_real_eip !23 :          <106>	movq	%rax, -24(%rbp)
437 :   store i64 %183, i64* %186, !mcsema_real_eip !23 :          <106>	movq	%rax, -24(%rbp)

438 :   %187 = load i64* %RBP_val, !mcsema_real_eip !24 :          <10a>	movq	-24(%rbp), %rax
439 :   %188 = add i64 %187, -24, !mcsema_real_eip !24 :          <10a>	movq	-24(%rbp), %rax
440 :   %189 = inttoptr i64 %188 to i64*, !mcsema_real_eip !24 :          <10a>	movq	-24(%rbp), %rax
441 :   %190 = load i64* %189, !mcsema_real_eip !24 :          <10a>	movq	-24(%rbp), %rax
442 :   store i64 %190, i64* %RAX_val, !mcsema_real_eip !24 :          <10a>	movq	-24(%rbp), %rax

443 :   store i64 %190, i64* %RDI_val, !mcsema_real_eip !25 :          <10e>	movq	%rax, %rdi

444 :   %191 = load i64* %RSP_val, !mcsema_real_eip !26 :          <111>	callq	-271

445 :   %192 = add i64 %191, -8 : NIL

446 :   %193 = inttoptr i64 %192 to i64*, !mcsema_real_eip !26 :          <111>	callq	-271
447 :   store i64 -4981261766360305936, i64* %193, !mcsema_real_eip !26 :          <111>	callq	-271
448 :   store i64 %192, i64* %RSP_val, !mcsema_real_eip !26 :          <111>	callq	-271
449 :   %194 = load i64* %RAX_val, !mcsema_real_eip !26 :          <111>	callq	-271
450 :   store i64 %194, i64* %RAX, !mcsema_real_eip !26 :          <111>	callq	-271
451 :   %195 = load i64* %RBX_val, !mcsema_real_eip !26 :          <111>	callq	-271
452 :   store i64 %195, i64* %RBX, !mcsema_real_eip !26 :          <111>	callq	-271
453 :   %196 = load i64* %RCX_val, !mcsema_real_eip !26 :          <111>	callq	-271
454 :   store i64 %196, i64* %RCX, !mcsema_real_eip !26 :          <111>	callq	-271
455 :   %197 = load i64* %RDX_val, !mcsema_real_eip !26 :          <111>	callq	-271
456 :   store i64 %197, i64* %RDX, !mcsema_real_eip !26 :          <111>	callq	-271
457 :   %198 = load i64* %RSI_val, !mcsema_real_eip !26 :          <111>	callq	-271
458 :   store i64 %198, i64* %RSI, !mcsema_real_eip !26 :          <111>	callq	-271
459 :   %199 = load i64* %RDI_val, !mcsema_real_eip !26 :          <111>	callq	-271
460 :   store i64 %199, i64* %RDI, !mcsema_real_eip !26 :          <111>	callq	-271
461 :   %200 = load i64* %RSP_val, !mcsema_real_eip !26 :          <111>	callq	-271
462 :   store i64 %200, i64* %RSP, !mcsema_real_eip !26 :          <111>	callq	-271
463 :   %201 = load i64* %RBP_val, !mcsema_real_eip !26 :          <111>	callq	-271
464 :   store i64 %201, i64* %RBP, !mcsema_real_eip !26 :          <111>	callq	-271
465 :   %202 = load i64* %R8_val, !mcsema_real_eip !26 :          <111>	callq	-271
466 :   store i64 %202, i64* %R8, !mcsema_real_eip !26 :          <111>	callq	-271
467 :   %203 = load i64* %R9_val, !mcsema_real_eip !26 :          <111>	callq	-271
468 :   store i64 %203, i64* %R9, !mcsema_real_eip !26 :          <111>	callq	-271
469 :   %204 = load i64* %R10_val, !mcsema_real_eip !26 :          <111>	callq	-271
470 :   store i64 %204, i64* %R10, !mcsema_real_eip !26 :          <111>	callq	-271
471 :   %205 = load i64* %R11_val, !mcsema_real_eip !26 :          <111>	callq	-271
472 :   store i64 %205, i64* %R11, !mcsema_real_eip !26 :          <111>	callq	-271
473 :   %206 = load i64* %R12_val, !mcsema_real_eip !26 :          <111>	callq	-271
474 :   store i64 %206, i64* %R12, !mcsema_real_eip !26 :          <111>	callq	-271
475 :   %207 = load i64* %R13_val, !mcsema_real_eip !26 :          <111>	callq	-271
476 :   store i64 %207, i64* %R13, !mcsema_real_eip !26 :          <111>	callq	-271
477 :   %208 = load i64* %R14_val, !mcsema_real_eip !26 :          <111>	callq	-271
478 :   store i64 %208, i64* %R14, !mcsema_real_eip !26 :          <111>	callq	-271
479 :   %209 = load i64* %R15_val, !mcsema_real_eip !26 :          <111>	callq	-271
480 :   store i64 %209, i64* %R15, !mcsema_real_eip !26 :          <111>	callq	-271
481 :   %210 = load i64* %RIP_val, !mcsema_real_eip !26 :          <111>	callq	-271
482 :   store i64 %210, i64* %RIP, !mcsema_real_eip !26 :          <111>	callq	-271
483 :   %211 = load i1* %CF_val, !mcsema_real_eip !26 :          <111>	callq	-271
484 :   store i1 %211, i1* %CF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
485 :   %212 = load i1* %PF_val, !mcsema_real_eip !26 :          <111>	callq	-271
486 :   store i1 %212, i1* %PF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
487 :   %213 = load i1* %AF_val, !mcsema_real_eip !26 :          <111>	callq	-271
488 :   store i1 %213, i1* %AF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
489 :   %214 = load i1* %ZF_val, !mcsema_real_eip !26 :          <111>	callq	-271
490 :   store i1 %214, i1* %ZF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
491 :   %215 = load i1* %SF_val, !mcsema_real_eip !26 :          <111>	callq	-271
492 :   store i1 %215, i1* %SF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
493 :   %216 = load i1* %OF_val, !mcsema_real_eip !26 :          <111>	callq	-271
494 :   store i1 %216, i1* %OF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
495 :   %217 = load i1* %DF_val, !mcsema_real_eip !26 :          <111>	callq	-271
496 :   store i1 %217, i1* %DF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
497 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !26 :          <111>	callq	-271
498 :   %218 = load i1* %FPU_B_val, !mcsema_real_eip !26 :          <111>	callq	-271
499 :   store i1 %218, i1* %FPU_B, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
500 :   %219 = load i1* %FPU_C3_val, !mcsema_real_eip !26 :          <111>	callq	-271
501 :   store i1 %219, i1* %FPU_C3, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
502 :   %220 = load i3* %FPU_TOP_val, !mcsema_real_eip !26 :          <111>	callq	-271
503 :   store i3 %220, i3* %FPU_TOP, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
504 :   %221 = load i1* %FPU_C2_val, !mcsema_real_eip !26 :          <111>	callq	-271
505 :   store i1 %221, i1* %FPU_C2, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
506 :   %222 = load i1* %FPU_C1_val, !mcsema_real_eip !26 :          <111>	callq	-271
507 :   store i1 %222, i1* %FPU_C1, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
508 :   %223 = load i1* %FPU_C0_val, !mcsema_real_eip !26 :          <111>	callq	-271
509 :   store i1 %223, i1* %FPU_C0, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
510 :   %224 = load i1* %FPU_ES_val, !mcsema_real_eip !26 :          <111>	callq	-271
511 :   store i1 %224, i1* %FPU_ES, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
512 :   %225 = load i1* %FPU_SF_val, !mcsema_real_eip !26 :          <111>	callq	-271
513 :   store i1 %225, i1* %FPU_SF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
514 :   %226 = load i1* %FPU_PE_val, !mcsema_real_eip !26 :          <111>	callq	-271
515 :   store i1 %226, i1* %FPU_PE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
516 :   %227 = load i1* %FPU_UE_val, !mcsema_real_eip !26 :          <111>	callq	-271
517 :   store i1 %227, i1* %FPU_UE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
518 :   %228 = load i1* %FPU_OE_val, !mcsema_real_eip !26 :          <111>	callq	-271
519 :   store i1 %228, i1* %FPU_OE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
520 :   %229 = load i1* %FPU_ZE_val, !mcsema_real_eip !26 :          <111>	callq	-271
521 :   store i1 %229, i1* %FPU_ZE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
522 :   %230 = load i1* %FPU_DE_val, !mcsema_real_eip !26 :          <111>	callq	-271
523 :   store i1 %230, i1* %FPU_DE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
524 :   %231 = load i1* %FPU_IE_val, !mcsema_real_eip !26 :          <111>	callq	-271
525 :   store i1 %231, i1* %FPU_IE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
526 :   %232 = load i1* %FPU_X_val, !mcsema_real_eip !26 :          <111>	callq	-271
527 :   store i1 %232, i1* %FPU_X, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
528 :   %233 = load i2* %FPU_RC_val, !mcsema_real_eip !26 :          <111>	callq	-271
529 :   store i2 %233, i2* %FPU_RC, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
530 :   %234 = load i2* %FPU_PC_val, !mcsema_real_eip !26 :          <111>	callq	-271
531 :   store i2 %234, i2* %FPU_PC, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
532 :   %235 = load i1* %FPU_PM_val, !mcsema_real_eip !26 :          <111>	callq	-271
533 :   store i1 %235, i1* %FPU_PM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
534 :   %236 = load i1* %FPU_UM_val, !mcsema_real_eip !26 :          <111>	callq	-271
535 :   store i1 %236, i1* %FPU_UM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
536 :   %237 = load i1* %FPU_OM_val, !mcsema_real_eip !26 :          <111>	callq	-271
537 :   store i1 %237, i1* %FPU_OM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
538 :   %238 = load i1* %FPU_ZM_val, !mcsema_real_eip !26 :          <111>	callq	-271
539 :   store i1 %238, i1* %FPU_ZM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
540 :   %239 = load i1* %FPU_DM_val, !mcsema_real_eip !26 :          <111>	callq	-271
541 :   store i1 %239, i1* %FPU_DM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
542 :   %240 = load i1* %FPU_IM_val, !mcsema_real_eip !26 :          <111>	callq	-271
543 :   store i1 %240, i1* %FPU_IM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271

544 :   %241 = load i64* %53, align 4 : NIL
545 :   store i64 %241, i64* %52, align 4 : NIL

546 :   %242 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !26 :          <111>	callq	-271
547 :   store i16 %242, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
548 :   %243 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !26 :          <111>	callq	-271
549 :   store i64 %243, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
550 :   %244 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !26 :          <111>	callq	-271
551 :   store i16 %244, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
552 :   %245 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !26 :          <111>	callq	-271
553 :   store i64 %245, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
554 :   %246 = load i128* %XMM0_val, !mcsema_real_eip !26 :          <111>	callq	-271
555 :   store i128 %246, i128* %XMM0, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
556 :   %247 = load i128* %XMM1_val, !mcsema_real_eip !26 :          <111>	callq	-271
557 :   store i128 %247, i128* %XMM1, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
558 :   %248 = load i128* %XMM2_val, !mcsema_real_eip !26 :          <111>	callq	-271
559 :   store i128 %248, i128* %XMM2, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
560 :   %249 = load i128* %XMM3_val, !mcsema_real_eip !26 :          <111>	callq	-271
561 :   store i128 %249, i128* %XMM3, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
562 :   %250 = load i128* %XMM4_val, !mcsema_real_eip !26 :          <111>	callq	-271
563 :   store i128 %250, i128* %XMM4, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
564 :   %251 = load i128* %XMM5_val, !mcsema_real_eip !26 :          <111>	callq	-271
565 :   store i128 %251, i128* %XMM5, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
566 :   %252 = load i128* %XMM6_val, !mcsema_real_eip !26 :          <111>	callq	-271
567 :   store i128 %252, i128* %XMM6, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
568 :   %253 = load i128* %XMM7_val, !mcsema_real_eip !26 :          <111>	callq	-271
569 :   store i128 %253, i128* %XMM7, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
570 :   %254 = load i128* %XMM8_val, !mcsema_real_eip !26 :          <111>	callq	-271
571 :   store i128 %254, i128* %XMM8, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
572 :   %255 = load i128* %XMM9_val, !mcsema_real_eip !26 :          <111>	callq	-271
573 :   store i128 %255, i128* %XMM9, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
574 :   %256 = load i128* %XMM10_val, !mcsema_real_eip !26 :          <111>	callq	-271
575 :   store i128 %256, i128* %XMM10, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
576 :   %257 = load i128* %XMM11_val, !mcsema_real_eip !26 :          <111>	callq	-271
577 :   store i128 %257, i128* %XMM11, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
578 :   %258 = load i128* %XMM12_val, !mcsema_real_eip !26 :          <111>	callq	-271
579 :   store i128 %258, i128* %XMM12, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
580 :   %259 = load i128* %XMM13_val, !mcsema_real_eip !26 :          <111>	callq	-271
581 :   store i128 %259, i128* %XMM13, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
582 :   %260 = load i128* %XMM14_val, !mcsema_real_eip !26 :          <111>	callq	-271
583 :   store i128 %260, i128* %XMM14, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
584 :   %261 = load i128* %XMM15_val, !mcsema_real_eip !26 :          <111>	callq	-271
585 :   store i128 %261, i128* %XMM15, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
586 :   %262 = load i64* %STACK_BASE_val, !mcsema_real_eip !26 :          <111>	callq	-271
587 :   store i64 %262, i64* %STACK_BASE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
588 :   %263 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !26 :          <111>	callq	-271
589 :   store i64 %263, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
590 :   tail call x86_64_sysvcc void @sub_7(%struct.regs* %0), !mcsema_real_eip !26 :          <111>	callq	-271
591 :   %264 = load i64* %RAX, !mcsema_real_eip !26 :          <111>	callq	-271
592 :   store i64 %264, i64* %RAX_val, !mcsema_real_eip !26 :          <111>	callq	-271
593 :   %265 = load i64* %RBX, !mcsema_real_eip !26 :          <111>	callq	-271
594 :   store i64 %265, i64* %RBX_val, !mcsema_real_eip !26 :          <111>	callq	-271
595 :   %266 = load i64* %RCX, !mcsema_real_eip !26 :          <111>	callq	-271
596 :   store i64 %266, i64* %RCX_val, !mcsema_real_eip !26 :          <111>	callq	-271
597 :   %267 = load i64* %RDX, !mcsema_real_eip !26 :          <111>	callq	-271
598 :   store i64 %267, i64* %RDX_val, !mcsema_real_eip !26 :          <111>	callq	-271
599 :   %268 = load i64* %RSI, !mcsema_real_eip !26 :          <111>	callq	-271
600 :   store i64 %268, i64* %RSI_val, !mcsema_real_eip !26 :          <111>	callq	-271
601 :   %269 = load i64* %RDI, !mcsema_real_eip !26 :          <111>	callq	-271
602 :   store i64 %269, i64* %RDI_val, !mcsema_real_eip !26 :          <111>	callq	-271
603 :   %270 = load i64* %RSP, !mcsema_real_eip !26 :          <111>	callq	-271
604 :   store i64 %270, i64* %RSP_val, !mcsema_real_eip !26 :          <111>	callq	-271
605 :   %271 = load i64* %RBP, !mcsema_real_eip !26 :          <111>	callq	-271
606 :   store i64 %271, i64* %RBP_val, !mcsema_real_eip !26 :          <111>	callq	-271
607 :   %272 = load i64* %R8, !mcsema_real_eip !26 :          <111>	callq	-271
608 :   store i64 %272, i64* %R8_val, !mcsema_real_eip !26 :          <111>	callq	-271
609 :   %273 = load i64* %R9, !mcsema_real_eip !26 :          <111>	callq	-271
610 :   store i64 %273, i64* %R9_val, !mcsema_real_eip !26 :          <111>	callq	-271
611 :   %274 = load i64* %R10, !mcsema_real_eip !26 :          <111>	callq	-271
612 :   store i64 %274, i64* %R10_val, !mcsema_real_eip !26 :          <111>	callq	-271
613 :   %275 = load i64* %R11, !mcsema_real_eip !26 :          <111>	callq	-271
614 :   store i64 %275, i64* %R11_val, !mcsema_real_eip !26 :          <111>	callq	-271
615 :   %276 = load i64* %R12, !mcsema_real_eip !26 :          <111>	callq	-271
616 :   store i64 %276, i64* %R12_val, !mcsema_real_eip !26 :          <111>	callq	-271
617 :   %277 = load i64* %R13, !mcsema_real_eip !26 :          <111>	callq	-271
618 :   store i64 %277, i64* %R13_val, !mcsema_real_eip !26 :          <111>	callq	-271
619 :   %278 = load i64* %R14, !mcsema_real_eip !26 :          <111>	callq	-271
620 :   store i64 %278, i64* %R14_val, !mcsema_real_eip !26 :          <111>	callq	-271
621 :   %279 = load i64* %R15, !mcsema_real_eip !26 :          <111>	callq	-271
622 :   store i64 %279, i64* %R15_val, !mcsema_real_eip !26 :          <111>	callq	-271
623 :   %280 = load i64* %RIP, !mcsema_real_eip !26 :          <111>	callq	-271
624 :   store i64 %280, i64* %RIP_val, !mcsema_real_eip !26 :          <111>	callq	-271
625 :   %281 = load i1* %CF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
626 :   store i1 %281, i1* %CF_val, !mcsema_real_eip !26 :          <111>	callq	-271
627 :   %282 = load i1* %PF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
628 :   store i1 %282, i1* %PF_val, !mcsema_real_eip !26 :          <111>	callq	-271
629 :   %283 = load i1* %AF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
630 :   store i1 %283, i1* %AF_val, !mcsema_real_eip !26 :          <111>	callq	-271
631 :   %284 = load i1* %ZF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
632 :   store i1 %284, i1* %ZF_val, !mcsema_real_eip !26 :          <111>	callq	-271
633 :   %285 = load i1* %SF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
634 :   store i1 %285, i1* %SF_val, !mcsema_real_eip !26 :          <111>	callq	-271
635 :   %286 = load i1* %OF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
636 :   store i1 %286, i1* %OF_val, !mcsema_real_eip !26 :          <111>	callq	-271
637 :   %287 = load i1* %DF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
638 :   store i1 %287, i1* %DF_val, !mcsema_real_eip !26 :          <111>	callq	-271
639 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !26 :          <111>	callq	-271
640 :   %288 = load i1* %FPU_B, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
641 :   store i1 %288, i1* %FPU_B_val, !mcsema_real_eip !26 :          <111>	callq	-271
642 :   %289 = load i1* %FPU_C3, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
643 :   store i1 %289, i1* %FPU_C3_val, !mcsema_real_eip !26 :          <111>	callq	-271
644 :   %290 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
645 :   store i3 %290, i3* %FPU_TOP_val, !mcsema_real_eip !26 :          <111>	callq	-271
646 :   %291 = load i1* %FPU_C2, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
647 :   store i1 %291, i1* %FPU_C2_val, !mcsema_real_eip !26 :          <111>	callq	-271
648 :   %292 = load i1* %FPU_C1, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
649 :   store i1 %292, i1* %FPU_C1_val, !mcsema_real_eip !26 :          <111>	callq	-271
650 :   %293 = load i1* %FPU_C0, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
651 :   store i1 %293, i1* %FPU_C0_val, !mcsema_real_eip !26 :          <111>	callq	-271
652 :   %294 = load i1* %FPU_ES, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
653 :   store i1 %294, i1* %FPU_ES_val, !mcsema_real_eip !26 :          <111>	callq	-271
654 :   %295 = load i1* %FPU_SF, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
655 :   store i1 %295, i1* %FPU_SF_val, !mcsema_real_eip !26 :          <111>	callq	-271
656 :   %296 = load i1* %FPU_PE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
657 :   store i1 %296, i1* %FPU_PE_val, !mcsema_real_eip !26 :          <111>	callq	-271
658 :   %297 = load i1* %FPU_UE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
659 :   store i1 %297, i1* %FPU_UE_val, !mcsema_real_eip !26 :          <111>	callq	-271
660 :   %298 = load i1* %FPU_OE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
661 :   store i1 %298, i1* %FPU_OE_val, !mcsema_real_eip !26 :          <111>	callq	-271
662 :   %299 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
663 :   store i1 %299, i1* %FPU_ZE_val, !mcsema_real_eip !26 :          <111>	callq	-271
664 :   %300 = load i1* %FPU_DE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
665 :   store i1 %300, i1* %FPU_DE_val, !mcsema_real_eip !26 :          <111>	callq	-271
666 :   %301 = load i1* %FPU_IE, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
667 :   store i1 %301, i1* %FPU_IE_val, !mcsema_real_eip !26 :          <111>	callq	-271
668 :   %302 = load i1* %FPU_X, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
669 :   store i1 %302, i1* %FPU_X_val, !mcsema_real_eip !26 :          <111>	callq	-271
670 :   %303 = load i2* %FPU_RC, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
671 :   store i2 %303, i2* %FPU_RC_val, !mcsema_real_eip !26 :          <111>	callq	-271
672 :   %304 = load i2* %FPU_PC, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
673 :   store i2 %304, i2* %FPU_PC_val, !mcsema_real_eip !26 :          <111>	callq	-271
674 :   %305 = load i1* %FPU_PM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
675 :   store i1 %305, i1* %FPU_PM_val, !mcsema_real_eip !26 :          <111>	callq	-271
676 :   %306 = load i1* %FPU_UM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
677 :   store i1 %306, i1* %FPU_UM_val, !mcsema_real_eip !26 :          <111>	callq	-271
678 :   %307 = load i1* %FPU_OM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
679 :   store i1 %307, i1* %FPU_OM_val, !mcsema_real_eip !26 :          <111>	callq	-271
680 :   %308 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
681 :   store i1 %308, i1* %FPU_ZM_val, !mcsema_real_eip !26 :          <111>	callq	-271
682 :   %309 = load i1* %FPU_DM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
683 :   store i1 %309, i1* %FPU_DM_val, !mcsema_real_eip !26 :          <111>	callq	-271
684 :   %310 = load i1* %FPU_IM, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
685 :   store i1 %310, i1* %FPU_IM_val, !mcsema_real_eip !26 :          <111>	callq	-271

686 :   %311 = load i64* %52, align 4 : NIL
687 :   store i64 %311, i64* %53, align 4 : NIL

688 :   %312 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
689 :   store i16 %312, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !26 :          <111>	callq	-271
690 :   %313 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !26 :          <111>	callq	-271
691 :   store i64 %313, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !26 :          <111>	callq	-271
692 :   %314 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
693 :   store i16 %314, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !26 :          <111>	callq	-271
694 :   %315 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !26 :          <111>	callq	-271
695 :   store i64 %315, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !26 :          <111>	callq	-271
696 :   %316 = load i128* %XMM0, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
697 :   store i128 %316, i128* %XMM0_val, !mcsema_real_eip !26 :          <111>	callq	-271
698 :   %317 = load i128* %XMM1, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
699 :   store i128 %317, i128* %XMM1_val, !mcsema_real_eip !26 :          <111>	callq	-271
700 :   %318 = load i128* %XMM2, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
701 :   store i128 %318, i128* %XMM2_val, !mcsema_real_eip !26 :          <111>	callq	-271
702 :   %319 = load i128* %XMM3, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
703 :   store i128 %319, i128* %XMM3_val, !mcsema_real_eip !26 :          <111>	callq	-271
704 :   %320 = load i128* %XMM4, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
705 :   store i128 %320, i128* %XMM4_val, !mcsema_real_eip !26 :          <111>	callq	-271
706 :   %321 = load i128* %XMM5, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
707 :   store i128 %321, i128* %XMM5_val, !mcsema_real_eip !26 :          <111>	callq	-271
708 :   %322 = load i128* %XMM6, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
709 :   store i128 %322, i128* %XMM6_val, !mcsema_real_eip !26 :          <111>	callq	-271
710 :   %323 = load i128* %XMM7, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
711 :   store i128 %323, i128* %XMM7_val, !mcsema_real_eip !26 :          <111>	callq	-271
712 :   %324 = load i128* %XMM8, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
713 :   store i128 %324, i128* %XMM8_val, !mcsema_real_eip !26 :          <111>	callq	-271
714 :   %325 = load i128* %XMM9, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
715 :   store i128 %325, i128* %XMM9_val, !mcsema_real_eip !26 :          <111>	callq	-271
716 :   %326 = load i128* %XMM10, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
717 :   store i128 %326, i128* %XMM10_val, !mcsema_real_eip !26 :          <111>	callq	-271
718 :   %327 = load i128* %XMM11, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
719 :   store i128 %327, i128* %XMM11_val, !mcsema_real_eip !26 :          <111>	callq	-271
720 :   %328 = load i128* %XMM12, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
721 :   store i128 %328, i128* %XMM12_val, !mcsema_real_eip !26 :          <111>	callq	-271
722 :   %329 = load i128* %XMM13, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
723 :   store i128 %329, i128* %XMM13_val, !mcsema_real_eip !26 :          <111>	callq	-271
724 :   %330 = load i128* %XMM14, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
725 :   store i128 %330, i128* %XMM14_val, !mcsema_real_eip !26 :          <111>	callq	-271
726 :   %331 = load i128* %XMM15, align 1, !mcsema_real_eip !26 :          <111>	callq	-271
727 :   store i128 %331, i128* %XMM15_val, !mcsema_real_eip !26 :          <111>	callq	-271
728 :   %332 = load i64* %STACK_BASE, !mcsema_real_eip !26 :          <111>	callq	-271
729 :   store i64 %332, i64* %STACK_BASE_val, !mcsema_real_eip !26 :          <111>	callq	-271
730 :   %333 = load i64* %STACK_LIMIT, !mcsema_real_eip !26 :          <111>	callq	-271
731 :   store i64 %333, i64* %STACK_LIMIT_val, !mcsema_real_eip !26 :          <111>	callq	-271

732 :   %334 = load i64* %RAX_val, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax
733 :   %335 = trunc i64 %334 to i32, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax
734 :   %336 = icmp eq i32 %335, 0, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax
735 :   store i1 %336, i1* %ZF_val, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax

736 :   %337 = icmp slt i32 %335, 0 : NIL

737 :   store i1 %337, i1* %SF_val, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax

738 :   %338 = trunc i64 %334 to i8 : NIL

739 :   %339 = tail call i8 @llvm.ctpop.i8(i8 %338), !mcsema_real_eip !27 :          <116>	testl	%eax, %eax

740 :   %340 = and i8 %339, 1 : NIL
741 :   %341 = icmp eq i8 %340, 0 : NIL

742 :   store i1 %341, i1* %PF_val, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax
743 :   store i1 false, i1* %CF_val, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax
744 :   store i1 false, i1* %OF_val, !mcsema_real_eip !27 :          <116>	testl	%eax, %eax

745 :   %342 = load i1* %ZF_val, !mcsema_real_eip !28 :          <118>	jne	19

746 :   %343 = load i64* %RBP_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

747 :   br i1 %342, label %block_0x11a, label %block_0x12d, !mcsema_real_eip !28 :          <118>	jne	19

748 :   br label %block_0x139 : NIL

749 :   %344 = load i64* %RBP_val, !mcsema_real_eip !30 :          <139>	movq	-16(%rbp), %rax
750 :   %345 = add i64 %344, -16, !mcsema_real_eip !30 :          <139>	movq	-16(%rbp), %rax
751 :   %346 = inttoptr i64 %345 to i64*, !mcsema_real_eip !30 :          <139>	movq	-16(%rbp), %rax
752 :   %347 = load i64* %346, !mcsema_real_eip !30 :          <139>	movq	-16(%rbp), %rax

753 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %347, i64 1) : NIL
754 :   %348 = extractvalue { i64, i1 } %uadd, 0 : NIL

755 :   %349 = xor i64 %348, %347, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
756 :   %350 = and i64 %349, 16, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
757 :   %351 = icmp ne i64 %350, 0, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
758 :   store i1 %351, i1* %AF_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax

759 :   %352 = icmp slt i64 %348, 0 : NIL

760 :   store i1 %352, i1* %SF_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
761 :   %353 = icmp eq i64 %348, 0, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
762 :   store i1 %353, i1* %ZF_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
763 :   %354 = xor i64 %347, -9223372036854775808, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
764 :   %355 = and i64 %349, %354, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax

765 :   %356 = icmp slt i64 %355, 0 : NIL

766 :   store i1 %356, i1* %OF_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
767 :   %357 = trunc i64 %348 to i8, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
768 :   %358 = tail call i8 @llvm.ctpop.i8(i8 %357), !mcsema_real_eip !31 :          <13d>	addq	$1, %rax

769 :   %359 = and i8 %358, 1 : NIL
770 :   %360 = icmp eq i8 %359, 0 : NIL

771 :   store i1 %360, i1* %PF_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax

772 :   %361 = extractvalue { i64, i1 } %uadd, 1 : NIL

773 :   store i1 %361, i1* %CF_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax
774 :   store i64 %348, i64* %RAX_val, !mcsema_real_eip !31 :          <13d>	addq	$1, %rax

775 :   %362 = inttoptr i64 %348 to i64*, !mcsema_real_eip !32 :          <141>	movb	$2, (%rax)

776 :   %363 = bitcast i64* %362 to i8* : NIL

777 :   store i8 2, i8* %363, !mcsema_real_eip !32 :          <141>	movb	$2, (%rax)

778 :   %364 = load i64* %RBP_val, !mcsema_real_eip !33 :          <145>	leave
779 :   store i64 %364, i64* %RSP_val, !mcsema_real_eip !33 :          <145>	leave
780 :   %365 = inttoptr i64 %364 to i64*, !mcsema_real_eip !33 :          <145>	leave
781 :   %366 = load i64* %365, !mcsema_real_eip !33 :          <145>	leave
782 :   store i64 %366, i64* %RBP_val, !mcsema_real_eip !33 :          <145>	leave

783 :   %367 = add i64 %364, 16, !mcsema_real_eip !34 :          <146>	retq
784 :   store i64 %367, i64* %RSP_val, !mcsema_real_eip !34 :          <146>	retq
785 :   %368 = load i64* %RAX_val, !mcsema_real_eip !34 :          <146>	retq
786 :   store i64 %368, i64* %RAX, !mcsema_real_eip !34 :          <146>	retq
787 :   %369 = load i64* %RBX_val, !mcsema_real_eip !34 :          <146>	retq
788 :   store i64 %369, i64* %RBX, !mcsema_real_eip !34 :          <146>	retq
789 :   %370 = load i64* %RCX_val, !mcsema_real_eip !34 :          <146>	retq
790 :   store i64 %370, i64* %RCX, !mcsema_real_eip !34 :          <146>	retq
791 :   %371 = load i64* %RDX_val, !mcsema_real_eip !34 :          <146>	retq
792 :   store i64 %371, i64* %RDX, !mcsema_real_eip !34 :          <146>	retq
793 :   %372 = load i64* %RSI_val, !mcsema_real_eip !34 :          <146>	retq
794 :   store i64 %372, i64* %RSI, !mcsema_real_eip !34 :          <146>	retq
795 :   %373 = load i64* %RDI_val, !mcsema_real_eip !34 :          <146>	retq
796 :   store i64 %373, i64* %RDI, !mcsema_real_eip !34 :          <146>	retq
797 :   %374 = load i64* %RSP_val, !mcsema_real_eip !34 :          <146>	retq
798 :   store i64 %374, i64* %RSP, !mcsema_real_eip !34 :          <146>	retq
799 :   %375 = load i64* %RBP_val, !mcsema_real_eip !34 :          <146>	retq
800 :   store i64 %375, i64* %RBP, !mcsema_real_eip !34 :          <146>	retq
801 :   %376 = load i64* %R8_val, !mcsema_real_eip !34 :          <146>	retq
802 :   store i64 %376, i64* %R8, !mcsema_real_eip !34 :          <146>	retq
803 :   %377 = load i64* %R9_val, !mcsema_real_eip !34 :          <146>	retq
804 :   store i64 %377, i64* %R9, !mcsema_real_eip !34 :          <146>	retq
805 :   %378 = load i64* %R10_val, !mcsema_real_eip !34 :          <146>	retq
806 :   store i64 %378, i64* %R10, !mcsema_real_eip !34 :          <146>	retq
807 :   %379 = load i64* %R11_val, !mcsema_real_eip !34 :          <146>	retq
808 :   store i64 %379, i64* %R11, !mcsema_real_eip !34 :          <146>	retq
809 :   %380 = load i64* %R12_val, !mcsema_real_eip !34 :          <146>	retq
810 :   store i64 %380, i64* %R12, !mcsema_real_eip !34 :          <146>	retq
811 :   %381 = load i64* %R13_val, !mcsema_real_eip !34 :          <146>	retq
812 :   store i64 %381, i64* %R13, !mcsema_real_eip !34 :          <146>	retq
813 :   %382 = load i64* %R14_val, !mcsema_real_eip !34 :          <146>	retq
814 :   store i64 %382, i64* %R14, !mcsema_real_eip !34 :          <146>	retq
815 :   %383 = load i64* %R15_val, !mcsema_real_eip !34 :          <146>	retq
816 :   store i64 %383, i64* %R15, !mcsema_real_eip !34 :          <146>	retq
817 :   %384 = load i64* %RIP_val, !mcsema_real_eip !34 :          <146>	retq
818 :   store i64 %384, i64* %RIP, !mcsema_real_eip !34 :          <146>	retq
819 :   %385 = load i1* %CF_val, !mcsema_real_eip !34 :          <146>	retq
820 :   store i1 %385, i1* %CF, align 1, !mcsema_real_eip !34 :          <146>	retq
821 :   %386 = load i1* %PF_val, !mcsema_real_eip !34 :          <146>	retq
822 :   store i1 %386, i1* %PF, align 1, !mcsema_real_eip !34 :          <146>	retq
823 :   %387 = load i1* %AF_val, !mcsema_real_eip !34 :          <146>	retq
824 :   store i1 %387, i1* %AF, align 1, !mcsema_real_eip !34 :          <146>	retq
825 :   %388 = load i1* %ZF_val, !mcsema_real_eip !34 :          <146>	retq
826 :   store i1 %388, i1* %ZF, align 1, !mcsema_real_eip !34 :          <146>	retq
827 :   %389 = load i1* %SF_val, !mcsema_real_eip !34 :          <146>	retq
828 :   store i1 %389, i1* %SF, align 1, !mcsema_real_eip !34 :          <146>	retq
829 :   %390 = load i1* %OF_val, !mcsema_real_eip !34 :          <146>	retq
830 :   store i1 %390, i1* %OF, align 1, !mcsema_real_eip !34 :          <146>	retq
831 :   %391 = load i1* %DF_val, !mcsema_real_eip !34 :          <146>	retq
832 :   store i1 %391, i1* %DF, align 1, !mcsema_real_eip !34 :          <146>	retq
833 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !34 :          <146>	retq
834 :   %392 = load i1* %FPU_B_val, !mcsema_real_eip !34 :          <146>	retq
835 :   store i1 %392, i1* %FPU_B, align 1, !mcsema_real_eip !34 :          <146>	retq
836 :   %393 = load i1* %FPU_C3_val, !mcsema_real_eip !34 :          <146>	retq
837 :   store i1 %393, i1* %FPU_C3, align 1, !mcsema_real_eip !34 :          <146>	retq
838 :   %394 = load i3* %FPU_TOP_val, !mcsema_real_eip !34 :          <146>	retq
839 :   store i3 %394, i3* %FPU_TOP, align 1, !mcsema_real_eip !34 :          <146>	retq
840 :   %395 = load i1* %FPU_C2_val, !mcsema_real_eip !34 :          <146>	retq
841 :   store i1 %395, i1* %FPU_C2, align 1, !mcsema_real_eip !34 :          <146>	retq
842 :   %396 = load i1* %FPU_C1_val, !mcsema_real_eip !34 :          <146>	retq
843 :   store i1 %396, i1* %FPU_C1, align 1, !mcsema_real_eip !34 :          <146>	retq
844 :   %397 = load i1* %FPU_C0_val, !mcsema_real_eip !34 :          <146>	retq
845 :   store i1 %397, i1* %FPU_C0, align 1, !mcsema_real_eip !34 :          <146>	retq
846 :   %398 = load i1* %FPU_ES_val, !mcsema_real_eip !34 :          <146>	retq
847 :   store i1 %398, i1* %FPU_ES, align 1, !mcsema_real_eip !34 :          <146>	retq
848 :   %399 = load i1* %FPU_SF_val, !mcsema_real_eip !34 :          <146>	retq
849 :   store i1 %399, i1* %FPU_SF, align 1, !mcsema_real_eip !34 :          <146>	retq
850 :   %400 = load i1* %FPU_PE_val, !mcsema_real_eip !34 :          <146>	retq
851 :   store i1 %400, i1* %FPU_PE, align 1, !mcsema_real_eip !34 :          <146>	retq
852 :   %401 = load i1* %FPU_UE_val, !mcsema_real_eip !34 :          <146>	retq
853 :   store i1 %401, i1* %FPU_UE, align 1, !mcsema_real_eip !34 :          <146>	retq
854 :   %402 = load i1* %FPU_OE_val, !mcsema_real_eip !34 :          <146>	retq
855 :   store i1 %402, i1* %FPU_OE, align 1, !mcsema_real_eip !34 :          <146>	retq
856 :   %403 = load i1* %FPU_ZE_val, !mcsema_real_eip !34 :          <146>	retq
857 :   store i1 %403, i1* %FPU_ZE, align 1, !mcsema_real_eip !34 :          <146>	retq
858 :   %404 = load i1* %FPU_DE_val, !mcsema_real_eip !34 :          <146>	retq
859 :   store i1 %404, i1* %FPU_DE, align 1, !mcsema_real_eip !34 :          <146>	retq
860 :   %405 = load i1* %FPU_IE_val, !mcsema_real_eip !34 :          <146>	retq
861 :   store i1 %405, i1* %FPU_IE, align 1, !mcsema_real_eip !34 :          <146>	retq
862 :   %406 = load i1* %FPU_X_val, !mcsema_real_eip !34 :          <146>	retq
863 :   store i1 %406, i1* %FPU_X, align 1, !mcsema_real_eip !34 :          <146>	retq
864 :   %407 = load i2* %FPU_RC_val, !mcsema_real_eip !34 :          <146>	retq
865 :   store i2 %407, i2* %FPU_RC, align 1, !mcsema_real_eip !34 :          <146>	retq
866 :   %408 = load i2* %FPU_PC_val, !mcsema_real_eip !34 :          <146>	retq
867 :   store i2 %408, i2* %FPU_PC, align 1, !mcsema_real_eip !34 :          <146>	retq
868 :   %409 = load i1* %FPU_PM_val, !mcsema_real_eip !34 :          <146>	retq
869 :   store i1 %409, i1* %FPU_PM, align 1, !mcsema_real_eip !34 :          <146>	retq
870 :   %410 = load i1* %FPU_UM_val, !mcsema_real_eip !34 :          <146>	retq
871 :   store i1 %410, i1* %FPU_UM, align 1, !mcsema_real_eip !34 :          <146>	retq
872 :   %411 = load i1* %FPU_OM_val, !mcsema_real_eip !34 :          <146>	retq
873 :   store i1 %411, i1* %FPU_OM, align 1, !mcsema_real_eip !34 :          <146>	retq
874 :   %412 = load i1* %FPU_ZM_val, !mcsema_real_eip !34 :          <146>	retq
875 :   store i1 %412, i1* %FPU_ZM, align 1, !mcsema_real_eip !34 :          <146>	retq
876 :   %413 = load i1* %FPU_DM_val, !mcsema_real_eip !34 :          <146>	retq
877 :   store i1 %413, i1* %FPU_DM, align 1, !mcsema_real_eip !34 :          <146>	retq
878 :   %414 = load i1* %FPU_IM_val, !mcsema_real_eip !34 :          <146>	retq
879 :   store i1 %414, i1* %FPU_IM, align 1, !mcsema_real_eip !34 :          <146>	retq

880 :   %415 = load i64* %53, align 4 : NIL
881 :   store i64 %415, i64* %52, align 4 : NIL

882 :   %416 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !34 :          <146>	retq
883 :   store i16 %416, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !34 :          <146>	retq
884 :   %417 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !34 :          <146>	retq
885 :   store i64 %417, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !34 :          <146>	retq
886 :   %418 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !34 :          <146>	retq
887 :   store i16 %418, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !34 :          <146>	retq
888 :   %419 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !34 :          <146>	retq
889 :   store i64 %419, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !34 :          <146>	retq
890 :   %420 = load i128* %XMM0_val, !mcsema_real_eip !34 :          <146>	retq
891 :   store i128 %420, i128* %XMM0, align 1, !mcsema_real_eip !34 :          <146>	retq
892 :   %421 = load i128* %XMM1_val, !mcsema_real_eip !34 :          <146>	retq
893 :   store i128 %421, i128* %XMM1, align 1, !mcsema_real_eip !34 :          <146>	retq
894 :   %422 = load i128* %XMM2_val, !mcsema_real_eip !34 :          <146>	retq
895 :   store i128 %422, i128* %XMM2, align 1, !mcsema_real_eip !34 :          <146>	retq
896 :   %423 = load i128* %XMM3_val, !mcsema_real_eip !34 :          <146>	retq
897 :   store i128 %423, i128* %XMM3, align 1, !mcsema_real_eip !34 :          <146>	retq
898 :   %424 = load i128* %XMM4_val, !mcsema_real_eip !34 :          <146>	retq
899 :   store i128 %424, i128* %XMM4, align 1, !mcsema_real_eip !34 :          <146>	retq
900 :   %425 = load i128* %XMM5_val, !mcsema_real_eip !34 :          <146>	retq
901 :   store i128 %425, i128* %XMM5, align 1, !mcsema_real_eip !34 :          <146>	retq
902 :   %426 = load i128* %XMM6_val, !mcsema_real_eip !34 :          <146>	retq
903 :   store i128 %426, i128* %XMM6, align 1, !mcsema_real_eip !34 :          <146>	retq
904 :   %427 = load i128* %XMM7_val, !mcsema_real_eip !34 :          <146>	retq
905 :   store i128 %427, i128* %XMM7, align 1, !mcsema_real_eip !34 :          <146>	retq
906 :   %428 = load i128* %XMM8_val, !mcsema_real_eip !34 :          <146>	retq
907 :   store i128 %428, i128* %XMM8, align 1, !mcsema_real_eip !34 :          <146>	retq
908 :   %429 = load i128* %XMM9_val, !mcsema_real_eip !34 :          <146>	retq
909 :   store i128 %429, i128* %XMM9, align 1, !mcsema_real_eip !34 :          <146>	retq
910 :   %430 = load i128* %XMM10_val, !mcsema_real_eip !34 :          <146>	retq
911 :   store i128 %430, i128* %XMM10, align 1, !mcsema_real_eip !34 :          <146>	retq
912 :   %431 = load i128* %XMM11_val, !mcsema_real_eip !34 :          <146>	retq
913 :   store i128 %431, i128* %XMM11, align 1, !mcsema_real_eip !34 :          <146>	retq
914 :   %432 = load i128* %XMM12_val, !mcsema_real_eip !34 :          <146>	retq
915 :   store i128 %432, i128* %XMM12, align 1, !mcsema_real_eip !34 :          <146>	retq
916 :   %433 = load i128* %XMM13_val, !mcsema_real_eip !34 :          <146>	retq
917 :   store i128 %433, i128* %XMM13, align 1, !mcsema_real_eip !34 :          <146>	retq
918 :   %434 = load i128* %XMM14_val, !mcsema_real_eip !34 :          <146>	retq
919 :   store i128 %434, i128* %XMM14, align 1, !mcsema_real_eip !34 :          <146>	retq
920 :   %435 = load i128* %XMM15_val, !mcsema_real_eip !34 :          <146>	retq
921 :   store i128 %435, i128* %XMM15, align 1, !mcsema_real_eip !34 :          <146>	retq
922 :   %436 = load i64* %STACK_BASE_val, !mcsema_real_eip !34 :          <146>	retq
923 :   store i64 %436, i64* %STACK_BASE, align 1, !mcsema_real_eip !34 :          <146>	retq
924 :   %437 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !34 :          <146>	retq
925 :   store i64 %437, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !34 :          <146>	retq
926 :   ret void, !mcsema_real_eip !34 :          <146>	retq

927 :   %438 = add i64 %343, -4, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
928 :   %439 = inttoptr i64 %438 to i64*, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

929 :   %440 = bitcast i64* %439 to i32* : NIL

930 :   %441 = load i32* %440, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

931 :   %uadd352 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %441, i32 1) : NIL
932 :   %442 = extractvalue { i32, i1 } %uadd352, 0 : NIL

933 :   %443 = xor i32 %442, %441, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
934 :   %444 = and i32 %443, 16, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
935 :   %445 = icmp ne i32 %444, 0, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
936 :   store i1 %445, i1* %AF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

937 :   %446 = icmp slt i32 %442, 0 : NIL

938 :   store i1 %446, i1* %SF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
939 :   %447 = icmp eq i32 %442, 0, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
940 :   store i1 %447, i1* %ZF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
941 :   %448 = xor i32 %441, -2147483648, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
942 :   %449 = and i32 %443, %448, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

943 :   %450 = icmp slt i32 %449, 0 : NIL

944 :   store i1 %450, i1* %OF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
945 :   %451 = trunc i32 %442 to i8, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
946 :   %452 = tail call i8 @llvm.ctpop.i8(i8 %451), !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

947 :   %453 = and i8 %452, 1 : NIL
948 :   %454 = icmp eq i8 %453, 0 : NIL

949 :   store i1 %454, i1* %PF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

950 :   %455 = extractvalue { i32, i1 } %uadd352, 1 : NIL

951 :   store i1 %455, i1* %CF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
952 :   store i32 %442, i32* %440, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

953 :   %456 = load i64* %RBP_val, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
954 :   %457 = add i64 %456, -4, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
955 :   %458 = inttoptr i64 %457 to i64*, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax

956 :   %459 = bitcast i64* %458 to i32* : NIL

957 :   %460 = load i32* %459, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
958 :   %461 = zext i32 %460 to i64, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
959 :   store i64 %461, i64* %RAX_val, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax

960 :   %462 = load i64* %RBP_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
961 :   %463 = add i64 %462, -44, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
962 :   %464 = inttoptr i64 %463 to i64*, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

963 :   %465 = bitcast i64* %464 to i32* : NIL

964 :   %466 = load i32* %465, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
965 :   %467 = sub i32 %460, %466, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
966 :   %468 = xor i32 %467, %460, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
967 :   %469 = xor i32 %468, %466, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
968 :   %470 = and i32 %469, 16, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
969 :   %471 = icmp ne i32 %470, 0, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
970 :   store i1 %471, i1* %AF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
971 :   %472 = trunc i32 %467 to i8, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
972 :   %473 = tail call i8 @llvm.ctpop.i8(i8 %472), !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

973 :   %474 = and i8 %473, 1 : NIL
974 :   %475 = icmp eq i8 %474, 0 : NIL

975 :   store i1 %475, i1* %PF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

976 :   %476 = icmp eq i32 %460, %466 : NIL

977 :   store i1 %476, i1* %ZF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

978 :   %477 = icmp slt i32 %467, 0 : NIL

979 :   store i1 %477, i1* %SF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
980 :   %478 = icmp ult i32 %460, %466, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
981 :   store i1 %478, i1* %CF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
982 :   %479 = xor i32 %466, %460, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
983 :   %480 = and i32 %468, %479, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

984 :   %481 = icmp slt i32 %480, 0 : NIL

985 :   store i1 %481, i1* %OF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

986 :   %482 = load i1* %SF_val, !mcsema_real_eip !16 :          <137>	jl	-74

987 :   %483 = xor i1 %482, %481 : NIL

988 :   br i1 %483, label %block_0xef.backedge, label %block_0x139.loopexit, !mcsema_real_eip !16 :          <137>	jl	-74

989 :   %484 = add i64 %343, -24, !mcsema_real_eip !35 :          <11a>	movq	-24(%rbp), %rdx
990 :   %485 = inttoptr i64 %484 to i64*, !mcsema_real_eip !35 :          <11a>	movq	-24(%rbp), %rdx
991 :   %486 = load i64* %485, !mcsema_real_eip !35 :          <11a>	movq	-24(%rbp), %rdx
992 :   store i64 %486, i64* %RDX_val, !mcsema_real_eip !35 :          <11a>	movq	-24(%rbp), %rdx

993 :   %487 = load i64* %RBP_val, !mcsema_real_eip !36 :          <11e>	movq	-24(%rbp), %rax
994 :   %488 = add i64 %487, -24, !mcsema_real_eip !36 :          <11e>	movq	-24(%rbp), %rax
995 :   %489 = inttoptr i64 %488 to i64*, !mcsema_real_eip !36 :          <11e>	movq	-24(%rbp), %rax
996 :   %490 = load i64* %489, !mcsema_real_eip !36 :          <11e>	movq	-24(%rbp), %rax
997 :   store i64 %490, i64* %RAX_val, !mcsema_real_eip !36 :          <11e>	movq	-24(%rbp), %rax

998 :   store i64 %486, i64* %RSI_val, !mcsema_real_eip !37 :          <122>	movq	%rdx, %rsi

999 :   store i64 %490, i64* %RDI_val, !mcsema_real_eip !38 :          <125>	movq	%rax, %rdi

1000 :   %491 = load i64* %RSP_val, !mcsema_real_eip !39 :          <128>	callq	-201

1001 :   %492 = add i64 %491, -8 : NIL

1002 :   %493 = inttoptr i64 %492 to i64*, !mcsema_real_eip !39 :          <128>	callq	-201
1003 :   store i64 -4981261766360305936, i64* %493, !mcsema_real_eip !39 :          <128>	callq	-201
1004 :   store i64 %492, i64* %RSP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1005 :   %494 = load i64* %RAX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1006 :   store i64 %494, i64* %RAX, !mcsema_real_eip !39 :          <128>	callq	-201
1007 :   %495 = load i64* %RBX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1008 :   store i64 %495, i64* %RBX, !mcsema_real_eip !39 :          <128>	callq	-201
1009 :   %496 = load i64* %RCX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1010 :   store i64 %496, i64* %RCX, !mcsema_real_eip !39 :          <128>	callq	-201
1011 :   %497 = load i64* %RDX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1012 :   store i64 %497, i64* %RDX, !mcsema_real_eip !39 :          <128>	callq	-201
1013 :   %498 = load i64* %RSI_val, !mcsema_real_eip !39 :          <128>	callq	-201
1014 :   store i64 %498, i64* %RSI, !mcsema_real_eip !39 :          <128>	callq	-201
1015 :   %499 = load i64* %RDI_val, !mcsema_real_eip !39 :          <128>	callq	-201
1016 :   store i64 %499, i64* %RDI, !mcsema_real_eip !39 :          <128>	callq	-201
1017 :   %500 = load i64* %RSP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1018 :   store i64 %500, i64* %RSP, !mcsema_real_eip !39 :          <128>	callq	-201
1019 :   %501 = load i64* %RBP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1020 :   store i64 %501, i64* %RBP, !mcsema_real_eip !39 :          <128>	callq	-201
1021 :   %502 = load i64* %R8_val, !mcsema_real_eip !39 :          <128>	callq	-201
1022 :   store i64 %502, i64* %R8, !mcsema_real_eip !39 :          <128>	callq	-201
1023 :   %503 = load i64* %R9_val, !mcsema_real_eip !39 :          <128>	callq	-201
1024 :   store i64 %503, i64* %R9, !mcsema_real_eip !39 :          <128>	callq	-201
1025 :   %504 = load i64* %R10_val, !mcsema_real_eip !39 :          <128>	callq	-201
1026 :   store i64 %504, i64* %R10, !mcsema_real_eip !39 :          <128>	callq	-201
1027 :   %505 = load i64* %R11_val, !mcsema_real_eip !39 :          <128>	callq	-201
1028 :   store i64 %505, i64* %R11, !mcsema_real_eip !39 :          <128>	callq	-201
1029 :   %506 = load i64* %R12_val, !mcsema_real_eip !39 :          <128>	callq	-201
1030 :   store i64 %506, i64* %R12, !mcsema_real_eip !39 :          <128>	callq	-201
1031 :   %507 = load i64* %R13_val, !mcsema_real_eip !39 :          <128>	callq	-201
1032 :   store i64 %507, i64* %R13, !mcsema_real_eip !39 :          <128>	callq	-201
1033 :   %508 = load i64* %R14_val, !mcsema_real_eip !39 :          <128>	callq	-201
1034 :   store i64 %508, i64* %R14, !mcsema_real_eip !39 :          <128>	callq	-201
1035 :   %509 = load i64* %R15_val, !mcsema_real_eip !39 :          <128>	callq	-201
1036 :   store i64 %509, i64* %R15, !mcsema_real_eip !39 :          <128>	callq	-201
1037 :   %510 = load i64* %RIP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1038 :   store i64 %510, i64* %RIP, !mcsema_real_eip !39 :          <128>	callq	-201
1039 :   %511 = load i1* %CF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1040 :   store i1 %511, i1* %CF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1041 :   %512 = load i1* %PF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1042 :   store i1 %512, i1* %PF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1043 :   %513 = load i1* %AF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1044 :   store i1 %513, i1* %AF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1045 :   %514 = load i1* %ZF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1046 :   store i1 %514, i1* %ZF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1047 :   %515 = load i1* %SF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1048 :   store i1 %515, i1* %SF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1049 :   %516 = load i1* %OF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1050 :   store i1 %516, i1* %OF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1051 :   %517 = load i1* %DF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1052 :   store i1 %517, i1* %DF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1053 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !39 :          <128>	callq	-201
1054 :   %518 = load i1* %FPU_B_val, !mcsema_real_eip !39 :          <128>	callq	-201
1055 :   store i1 %518, i1* %FPU_B, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1056 :   %519 = load i1* %FPU_C3_val, !mcsema_real_eip !39 :          <128>	callq	-201
1057 :   store i1 %519, i1* %FPU_C3, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1058 :   %520 = load i3* %FPU_TOP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1059 :   store i3 %520, i3* %FPU_TOP, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1060 :   %521 = load i1* %FPU_C2_val, !mcsema_real_eip !39 :          <128>	callq	-201
1061 :   store i1 %521, i1* %FPU_C2, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1062 :   %522 = load i1* %FPU_C1_val, !mcsema_real_eip !39 :          <128>	callq	-201
1063 :   store i1 %522, i1* %FPU_C1, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1064 :   %523 = load i1* %FPU_C0_val, !mcsema_real_eip !39 :          <128>	callq	-201
1065 :   store i1 %523, i1* %FPU_C0, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1066 :   %524 = load i1* %FPU_ES_val, !mcsema_real_eip !39 :          <128>	callq	-201
1067 :   store i1 %524, i1* %FPU_ES, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1068 :   %525 = load i1* %FPU_SF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1069 :   store i1 %525, i1* %FPU_SF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1070 :   %526 = load i1* %FPU_PE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1071 :   store i1 %526, i1* %FPU_PE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1072 :   %527 = load i1* %FPU_UE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1073 :   store i1 %527, i1* %FPU_UE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1074 :   %528 = load i1* %FPU_OE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1075 :   store i1 %528, i1* %FPU_OE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1076 :   %529 = load i1* %FPU_ZE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1077 :   store i1 %529, i1* %FPU_ZE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1078 :   %530 = load i1* %FPU_DE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1079 :   store i1 %530, i1* %FPU_DE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1080 :   %531 = load i1* %FPU_IE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1081 :   store i1 %531, i1* %FPU_IE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1082 :   %532 = load i1* %FPU_X_val, !mcsema_real_eip !39 :          <128>	callq	-201
1083 :   store i1 %532, i1* %FPU_X, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1084 :   %533 = load i2* %FPU_RC_val, !mcsema_real_eip !39 :          <128>	callq	-201
1085 :   store i2 %533, i2* %FPU_RC, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1086 :   %534 = load i2* %FPU_PC_val, !mcsema_real_eip !39 :          <128>	callq	-201
1087 :   store i2 %534, i2* %FPU_PC, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1088 :   %535 = load i1* %FPU_PM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1089 :   store i1 %535, i1* %FPU_PM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1090 :   %536 = load i1* %FPU_UM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1091 :   store i1 %536, i1* %FPU_UM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1092 :   %537 = load i1* %FPU_OM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1093 :   store i1 %537, i1* %FPU_OM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1094 :   %538 = load i1* %FPU_ZM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1095 :   store i1 %538, i1* %FPU_ZM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1096 :   %539 = load i1* %FPU_DM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1097 :   store i1 %539, i1* %FPU_DM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1098 :   %540 = load i1* %FPU_IM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1099 :   store i1 %540, i1* %FPU_IM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201

1100 :   %541 = load i64* %53, align 4 : NIL
1101 :   store i64 %541, i64* %52, align 4 : NIL

1102 :   %542 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !39 :          <128>	callq	-201
1103 :   store i16 %542, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1104 :   %543 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1105 :   store i64 %543, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1106 :   %544 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !39 :          <128>	callq	-201
1107 :   store i16 %544, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1108 :   %545 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1109 :   store i64 %545, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1110 :   %546 = load i128* %XMM0_val, !mcsema_real_eip !39 :          <128>	callq	-201
1111 :   store i128 %546, i128* %XMM0, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1112 :   %547 = load i128* %XMM1_val, !mcsema_real_eip !39 :          <128>	callq	-201
1113 :   store i128 %547, i128* %XMM1, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1114 :   %548 = load i128* %XMM2_val, !mcsema_real_eip !39 :          <128>	callq	-201
1115 :   store i128 %548, i128* %XMM2, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1116 :   %549 = load i128* %XMM3_val, !mcsema_real_eip !39 :          <128>	callq	-201
1117 :   store i128 %549, i128* %XMM3, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1118 :   %550 = load i128* %XMM4_val, !mcsema_real_eip !39 :          <128>	callq	-201
1119 :   store i128 %550, i128* %XMM4, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1120 :   %551 = load i128* %XMM5_val, !mcsema_real_eip !39 :          <128>	callq	-201
1121 :   store i128 %551, i128* %XMM5, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1122 :   %552 = load i128* %XMM6_val, !mcsema_real_eip !39 :          <128>	callq	-201
1123 :   store i128 %552, i128* %XMM6, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1124 :   %553 = load i128* %XMM7_val, !mcsema_real_eip !39 :          <128>	callq	-201
1125 :   store i128 %553, i128* %XMM7, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1126 :   %554 = load i128* %XMM8_val, !mcsema_real_eip !39 :          <128>	callq	-201
1127 :   store i128 %554, i128* %XMM8, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1128 :   %555 = load i128* %XMM9_val, !mcsema_real_eip !39 :          <128>	callq	-201
1129 :   store i128 %555, i128* %XMM9, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1130 :   %556 = load i128* %XMM10_val, !mcsema_real_eip !39 :          <128>	callq	-201
1131 :   store i128 %556, i128* %XMM10, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1132 :   %557 = load i128* %XMM11_val, !mcsema_real_eip !39 :          <128>	callq	-201
1133 :   store i128 %557, i128* %XMM11, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1134 :   %558 = load i128* %XMM12_val, !mcsema_real_eip !39 :          <128>	callq	-201
1135 :   store i128 %558, i128* %XMM12, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1136 :   %559 = load i128* %XMM13_val, !mcsema_real_eip !39 :          <128>	callq	-201
1137 :   store i128 %559, i128* %XMM13, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1138 :   %560 = load i128* %XMM14_val, !mcsema_real_eip !39 :          <128>	callq	-201
1139 :   store i128 %560, i128* %XMM14, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1140 :   %561 = load i128* %XMM15_val, !mcsema_real_eip !39 :          <128>	callq	-201
1141 :   store i128 %561, i128* %XMM15, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1142 :   %562 = load i64* %STACK_BASE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1143 :   store i64 %562, i64* %STACK_BASE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1144 :   %563 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !39 :          <128>	callq	-201
1145 :   store i64 %563, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1146 :   tail call x86_64_sysvcc void @sub_64(%struct.regs* %0), !mcsema_real_eip !39 :          <128>	callq	-201
1147 :   %564 = load i64* %RAX, !mcsema_real_eip !39 :          <128>	callq	-201
1148 :   store i64 %564, i64* %RAX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1149 :   %565 = load i64* %RBX, !mcsema_real_eip !39 :          <128>	callq	-201
1150 :   store i64 %565, i64* %RBX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1151 :   %566 = load i64* %RCX, !mcsema_real_eip !39 :          <128>	callq	-201
1152 :   store i64 %566, i64* %RCX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1153 :   %567 = load i64* %RDX, !mcsema_real_eip !39 :          <128>	callq	-201
1154 :   store i64 %567, i64* %RDX_val, !mcsema_real_eip !39 :          <128>	callq	-201
1155 :   %568 = load i64* %RSI, !mcsema_real_eip !39 :          <128>	callq	-201
1156 :   store i64 %568, i64* %RSI_val, !mcsema_real_eip !39 :          <128>	callq	-201
1157 :   %569 = load i64* %RDI, !mcsema_real_eip !39 :          <128>	callq	-201
1158 :   store i64 %569, i64* %RDI_val, !mcsema_real_eip !39 :          <128>	callq	-201
1159 :   %570 = load i64* %RSP, !mcsema_real_eip !39 :          <128>	callq	-201
1160 :   store i64 %570, i64* %RSP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1161 :   %571 = load i64* %RBP, !mcsema_real_eip !39 :          <128>	callq	-201
1162 :   store i64 %571, i64* %RBP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1163 :   %572 = load i64* %R8, !mcsema_real_eip !39 :          <128>	callq	-201
1164 :   store i64 %572, i64* %R8_val, !mcsema_real_eip !39 :          <128>	callq	-201
1165 :   %573 = load i64* %R9, !mcsema_real_eip !39 :          <128>	callq	-201
1166 :   store i64 %573, i64* %R9_val, !mcsema_real_eip !39 :          <128>	callq	-201
1167 :   %574 = load i64* %R10, !mcsema_real_eip !39 :          <128>	callq	-201
1168 :   store i64 %574, i64* %R10_val, !mcsema_real_eip !39 :          <128>	callq	-201
1169 :   %575 = load i64* %R11, !mcsema_real_eip !39 :          <128>	callq	-201
1170 :   store i64 %575, i64* %R11_val, !mcsema_real_eip !39 :          <128>	callq	-201
1171 :   %576 = load i64* %R12, !mcsema_real_eip !39 :          <128>	callq	-201
1172 :   store i64 %576, i64* %R12_val, !mcsema_real_eip !39 :          <128>	callq	-201
1173 :   %577 = load i64* %R13, !mcsema_real_eip !39 :          <128>	callq	-201
1174 :   store i64 %577, i64* %R13_val, !mcsema_real_eip !39 :          <128>	callq	-201
1175 :   %578 = load i64* %R14, !mcsema_real_eip !39 :          <128>	callq	-201
1176 :   store i64 %578, i64* %R14_val, !mcsema_real_eip !39 :          <128>	callq	-201
1177 :   %579 = load i64* %R15, !mcsema_real_eip !39 :          <128>	callq	-201
1178 :   store i64 %579, i64* %R15_val, !mcsema_real_eip !39 :          <128>	callq	-201
1179 :   %580 = load i64* %RIP, !mcsema_real_eip !39 :          <128>	callq	-201
1180 :   store i64 %580, i64* %RIP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1181 :   %581 = load i1* %CF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1182 :   store i1 %581, i1* %CF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1183 :   %582 = load i1* %PF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1184 :   store i1 %582, i1* %PF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1185 :   %583 = load i1* %AF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1186 :   store i1 %583, i1* %AF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1187 :   %584 = load i1* %ZF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1188 :   store i1 %584, i1* %ZF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1189 :   %585 = load i1* %SF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1190 :   store i1 %585, i1* %SF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1191 :   %586 = load i1* %OF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1192 :   store i1 %586, i1* %OF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1193 :   %587 = load i1* %DF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1194 :   store i1 %587, i1* %DF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1195 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !39 :          <128>	callq	-201
1196 :   %588 = load i1* %FPU_B, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1197 :   store i1 %588, i1* %FPU_B_val, !mcsema_real_eip !39 :          <128>	callq	-201
1198 :   %589 = load i1* %FPU_C3, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1199 :   store i1 %589, i1* %FPU_C3_val, !mcsema_real_eip !39 :          <128>	callq	-201
1200 :   %590 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1201 :   store i3 %590, i3* %FPU_TOP_val, !mcsema_real_eip !39 :          <128>	callq	-201
1202 :   %591 = load i1* %FPU_C2, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1203 :   store i1 %591, i1* %FPU_C2_val, !mcsema_real_eip !39 :          <128>	callq	-201
1204 :   %592 = load i1* %FPU_C1, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1205 :   store i1 %592, i1* %FPU_C1_val, !mcsema_real_eip !39 :          <128>	callq	-201
1206 :   %593 = load i1* %FPU_C0, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1207 :   store i1 %593, i1* %FPU_C0_val, !mcsema_real_eip !39 :          <128>	callq	-201
1208 :   %594 = load i1* %FPU_ES, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1209 :   store i1 %594, i1* %FPU_ES_val, !mcsema_real_eip !39 :          <128>	callq	-201
1210 :   %595 = load i1* %FPU_SF, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1211 :   store i1 %595, i1* %FPU_SF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1212 :   %596 = load i1* %FPU_PE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1213 :   store i1 %596, i1* %FPU_PE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1214 :   %597 = load i1* %FPU_UE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1215 :   store i1 %597, i1* %FPU_UE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1216 :   %598 = load i1* %FPU_OE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1217 :   store i1 %598, i1* %FPU_OE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1218 :   %599 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1219 :   store i1 %599, i1* %FPU_ZE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1220 :   %600 = load i1* %FPU_DE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1221 :   store i1 %600, i1* %FPU_DE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1222 :   %601 = load i1* %FPU_IE, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1223 :   store i1 %601, i1* %FPU_IE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1224 :   %602 = load i1* %FPU_X, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1225 :   store i1 %602, i1* %FPU_X_val, !mcsema_real_eip !39 :          <128>	callq	-201
1226 :   %603 = load i2* %FPU_RC, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1227 :   store i2 %603, i2* %FPU_RC_val, !mcsema_real_eip !39 :          <128>	callq	-201
1228 :   %604 = load i2* %FPU_PC, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1229 :   store i2 %604, i2* %FPU_PC_val, !mcsema_real_eip !39 :          <128>	callq	-201
1230 :   %605 = load i1* %FPU_PM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1231 :   store i1 %605, i1* %FPU_PM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1232 :   %606 = load i1* %FPU_UM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1233 :   store i1 %606, i1* %FPU_UM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1234 :   %607 = load i1* %FPU_OM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1235 :   store i1 %607, i1* %FPU_OM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1236 :   %608 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1237 :   store i1 %608, i1* %FPU_ZM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1238 :   %609 = load i1* %FPU_DM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1239 :   store i1 %609, i1* %FPU_DM_val, !mcsema_real_eip !39 :          <128>	callq	-201
1240 :   %610 = load i1* %FPU_IM, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1241 :   store i1 %610, i1* %FPU_IM_val, !mcsema_real_eip !39 :          <128>	callq	-201

1242 :   %611 = load i64* %52, align 4 : NIL
1243 :   store i64 %611, i64* %53, align 4 : NIL

1244 :   %612 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1245 :   store i16 %612, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !39 :          <128>	callq	-201
1246 :   %613 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !39 :          <128>	callq	-201
1247 :   store i64 %613, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1248 :   %614 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1249 :   store i16 %614, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !39 :          <128>	callq	-201
1250 :   %615 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !39 :          <128>	callq	-201
1251 :   store i64 %615, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !39 :          <128>	callq	-201
1252 :   %616 = load i128* %XMM0, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1253 :   store i128 %616, i128* %XMM0_val, !mcsema_real_eip !39 :          <128>	callq	-201
1254 :   %617 = load i128* %XMM1, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1255 :   store i128 %617, i128* %XMM1_val, !mcsema_real_eip !39 :          <128>	callq	-201
1256 :   %618 = load i128* %XMM2, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1257 :   store i128 %618, i128* %XMM2_val, !mcsema_real_eip !39 :          <128>	callq	-201
1258 :   %619 = load i128* %XMM3, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1259 :   store i128 %619, i128* %XMM3_val, !mcsema_real_eip !39 :          <128>	callq	-201
1260 :   %620 = load i128* %XMM4, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1261 :   store i128 %620, i128* %XMM4_val, !mcsema_real_eip !39 :          <128>	callq	-201
1262 :   %621 = load i128* %XMM5, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1263 :   store i128 %621, i128* %XMM5_val, !mcsema_real_eip !39 :          <128>	callq	-201
1264 :   %622 = load i128* %XMM6, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1265 :   store i128 %622, i128* %XMM6_val, !mcsema_real_eip !39 :          <128>	callq	-201
1266 :   %623 = load i128* %XMM7, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1267 :   store i128 %623, i128* %XMM7_val, !mcsema_real_eip !39 :          <128>	callq	-201
1268 :   %624 = load i128* %XMM8, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1269 :   store i128 %624, i128* %XMM8_val, !mcsema_real_eip !39 :          <128>	callq	-201
1270 :   %625 = load i128* %XMM9, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1271 :   store i128 %625, i128* %XMM9_val, !mcsema_real_eip !39 :          <128>	callq	-201
1272 :   %626 = load i128* %XMM10, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1273 :   store i128 %626, i128* %XMM10_val, !mcsema_real_eip !39 :          <128>	callq	-201
1274 :   %627 = load i128* %XMM11, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1275 :   store i128 %627, i128* %XMM11_val, !mcsema_real_eip !39 :          <128>	callq	-201
1276 :   %628 = load i128* %XMM12, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1277 :   store i128 %628, i128* %XMM12_val, !mcsema_real_eip !39 :          <128>	callq	-201
1278 :   %629 = load i128* %XMM13, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1279 :   store i128 %629, i128* %XMM13_val, !mcsema_real_eip !39 :          <128>	callq	-201
1280 :   %630 = load i128* %XMM14, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1281 :   store i128 %630, i128* %XMM14_val, !mcsema_real_eip !39 :          <128>	callq	-201
1282 :   %631 = load i128* %XMM15, align 1, !mcsema_real_eip !39 :          <128>	callq	-201
1283 :   store i128 %631, i128* %XMM15_val, !mcsema_real_eip !39 :          <128>	callq	-201
1284 :   %632 = load i64* %STACK_BASE, !mcsema_real_eip !39 :          <128>	callq	-201
1285 :   store i64 %632, i64* %STACK_BASE_val, !mcsema_real_eip !39 :          <128>	callq	-201
1286 :   %633 = load i64* %STACK_LIMIT, !mcsema_real_eip !39 :          <128>	callq	-201
1287 :   store i64 %633, i64* %STACK_LIMIT_val, !mcsema_real_eip !39 :          <128>	callq	-201

1288 :   %634 = load i64* %RBP_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1289 :   %635 = add i64 %634, -4, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1290 :   %636 = inttoptr i64 %635 to i64*, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1291 :   %637 = bitcast i64* %636 to i32* : NIL

1292 :   %638 = load i32* %637, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1293 :   %uadd350 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %638, i32 1) : NIL
1294 :   %639 = extractvalue { i32, i1 } %uadd350, 0 : NIL

1295 :   %640 = xor i32 %639, %638, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1296 :   %641 = and i32 %640, 16, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1297 :   %642 = icmp ne i32 %641, 0, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1298 :   store i1 %642, i1* %AF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1299 :   %643 = icmp slt i32 %639, 0 : NIL

1300 :   store i1 %643, i1* %SF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1301 :   %644 = icmp eq i32 %639, 0, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1302 :   store i1 %644, i1* %ZF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1303 :   %645 = xor i32 %638, -2147483648, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1304 :   %646 = and i32 %640, %645, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1305 :   %647 = icmp slt i32 %646, 0 : NIL

1306 :   store i1 %647, i1* %OF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1307 :   %648 = trunc i32 %639 to i8, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1308 :   %649 = tail call i8 @llvm.ctpop.i8(i8 %648), !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1309 :   %650 = and i8 %649, 1 : NIL
1310 :   %651 = icmp eq i8 %650, 0 : NIL

1311 :   store i1 %651, i1* %PF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1312 :   %652 = extractvalue { i32, i1 } %uadd350, 1 : NIL

1313 :   store i1 %652, i1* %CF_val, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)
1314 :   store i32 %639, i32* %637, !mcsema_real_eip !29 :          <12d>	addl	$1, -4(%rbp)

1315 :   %653 = load i64* %RBP_val, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
1316 :   %654 = add i64 %653, -4, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
1317 :   %655 = inttoptr i64 %654 to i64*, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax

1318 :   %656 = bitcast i64* %655 to i32* : NIL

1319 :   %657 = load i32* %656, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
1320 :   %658 = zext i32 %657 to i64, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax
1321 :   store i64 %658, i64* %RAX_val, !mcsema_real_eip !14 :          <131>	movl	-4(%rbp), %eax

1322 :   %659 = load i64* %RBP_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1323 :   %660 = add i64 %659, -44, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1324 :   %661 = inttoptr i64 %660 to i64*, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

1325 :   %662 = bitcast i64* %661 to i32* : NIL

1326 :   %663 = load i32* %662, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1327 :   %664 = sub i32 %657, %663, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1328 :   %665 = xor i32 %664, %657, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1329 :   %666 = xor i32 %665, %663, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1330 :   %667 = and i32 %666, 16, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1331 :   %668 = icmp ne i32 %667, 0, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1332 :   store i1 %668, i1* %AF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1333 :   %669 = trunc i32 %664 to i8, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1334 :   %670 = tail call i8 @llvm.ctpop.i8(i8 %669), !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

1335 :   %671 = and i8 %670, 1 : NIL
1336 :   %672 = icmp eq i8 %671, 0 : NIL

1337 :   store i1 %672, i1* %PF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

1338 :   %673 = icmp eq i32 %657, %663 : NIL

1339 :   store i1 %673, i1* %ZF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

1340 :   %674 = icmp slt i32 %664, 0 : NIL

1341 :   store i1 %674, i1* %SF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1342 :   %675 = icmp ult i32 %657, %663, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1343 :   store i1 %675, i1* %CF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1344 :   %676 = xor i32 %663, %657, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax
1345 :   %677 = and i32 %665, %676, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

1346 :   %678 = icmp slt i32 %677, 0 : NIL

1347 :   store i1 %678, i1* %OF_val, !mcsema_real_eip !15 :          <134>	cmpl	-44(%rbp), %eax

1348 :   %679 = load i1* %SF_val, !mcsema_real_eip !16 :          <137>	jl	-74

1349 :   %680 = xor i1 %679, %678 : NIL

1350 :   br i1 %680, label %block_0xef.backedge, label %block_0x139.loopexit, !mcsema_real_eip !16 :          <137>	jl	-74

1351 :   br label %block_0xef : NIL
========================================================
Source line mapping for function: sub_64
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <64>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <64>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <64>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <64>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <64>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <64>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <64>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <64>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <64>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <64>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <64>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <64>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <64>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <64>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <64>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <64>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <64>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <64>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <64>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <64>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <64>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <64>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <64>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <64>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <64>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <64>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <64>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <64>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <64>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <64>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <64>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <64>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <64>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <64>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <64>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <64>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <64>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <64>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <64>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <64>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <64>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <64>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <64>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <64>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <64>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <64>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <64>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <64>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <64>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <64>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <64>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <64>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <64>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <64>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <64>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <64>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <64>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <64>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <64>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <64>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <64>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <64>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <64>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <64>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <64>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <64>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <64>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <64>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <64>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <64>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <64>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <64>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <64>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <64>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <64>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <64>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <64>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <64>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <64>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <64>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <64>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <64>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <64>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <64>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <64>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <64>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <64>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <64>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <64>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <64>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <64>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <64>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <64>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <64>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <64>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <64>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <64>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <64>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <64>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <64>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <64>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <64>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <64>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <64>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <64>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <64>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <65>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, -48, !mcsema_real_eip !4 :          <68>	movq	%rdi, -40(%rbp)
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <68>	movq	%rdi, -40(%rbp)
297 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <68>	movq	%rdi, -40(%rbp)
298 :   store i64 %83, i64* %82, !mcsema_real_eip !4 :          <68>	movq	%rdi, -40(%rbp)

299 :   %84 = load i64* %RBP_val, !mcsema_real_eip !5 :          <6c>	movq	%rsi, -48(%rbp)
300 :   %85 = add i64 %84, -48, !mcsema_real_eip !5 :          <6c>	movq	%rsi, -48(%rbp)
301 :   %86 = inttoptr i64 %85 to i64*, !mcsema_real_eip !5 :          <6c>	movq	%rsi, -48(%rbp)
302 :   %87 = load i64* %RSI_val, !mcsema_real_eip !5 :          <6c>	movq	%rsi, -48(%rbp)
303 :   store i64 %87, i64* %86, !mcsema_real_eip !5 :          <6c>	movq	%rsi, -48(%rbp)

304 :   %88 = load i64* %RBP_val, !mcsema_real_eip !6 :          <70>	movq	-40(%rbp), %rax
305 :   %89 = add i64 %88, -40, !mcsema_real_eip !6 :          <70>	movq	-40(%rbp), %rax
306 :   %90 = inttoptr i64 %89 to i64*, !mcsema_real_eip !6 :          <70>	movq	-40(%rbp), %rax
307 :   %91 = load i64* %90, !mcsema_real_eip !6 :          <70>	movq	-40(%rbp), %rax
308 :   store i64 %91, i64* %RAX_val, !mcsema_real_eip !6 :          <70>	movq	-40(%rbp), %rax

309 :   %92 = add i64 %88, -8, !mcsema_real_eip !7 :          <74>	movq	%rax, -8(%rbp)
310 :   %93 = inttoptr i64 %92 to i64*, !mcsema_real_eip !7 :          <74>	movq	%rax, -8(%rbp)
311 :   store i64 %91, i64* %93, !mcsema_real_eip !7 :          <74>	movq	%rax, -8(%rbp)

312 :   %94 = load i64* %RBP_val, !mcsema_real_eip !8 :          <78>	movq	-48(%rbp), %rax
313 :   %95 = add i64 %94, -48, !mcsema_real_eip !8 :          <78>	movq	-48(%rbp), %rax
314 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !8 :          <78>	movq	-48(%rbp), %rax
315 :   %97 = load i64* %96, !mcsema_real_eip !8 :          <78>	movq	-48(%rbp), %rax
316 :   store i64 %97, i64* %RAX_val, !mcsema_real_eip !8 :          <78>	movq	-48(%rbp), %rax

317 :   %98 = add i64 %94, -16, !mcsema_real_eip !9 :          <7c>	movq	%rax, -16(%rbp)
318 :   %99 = inttoptr i64 %98 to i64*, !mcsema_real_eip !9 :          <7c>	movq	%rax, -16(%rbp)
319 :   store i64 %97, i64* %99, !mcsema_real_eip !9 :          <7c>	movq	%rax, -16(%rbp)

320 :   %100 = load i64* %RBP_val, !mcsema_real_eip !10 :          <80>	movq	-8(%rbp), %rax
321 :   %101 = add i64 %100, -8, !mcsema_real_eip !10 :          <80>	movq	-8(%rbp), %rax
322 :   %102 = inttoptr i64 %101 to i64*, !mcsema_real_eip !10 :          <80>	movq	-8(%rbp), %rax
323 :   %103 = load i64* %102, !mcsema_real_eip !10 :          <80>	movq	-8(%rbp), %rax
324 :   store i64 %103, i64* %RAX_val, !mcsema_real_eip !10 :          <80>	movq	-8(%rbp), %rax

325 :   %104 = inttoptr i64 %103 to i64*, !mcsema_real_eip !11 :          <84>	movzbl	(%rax), %eax

326 :   %105 = bitcast i64* %104 to i8* : NIL

327 :   %106 = load i8* %105, !mcsema_real_eip !11 :          <84>	movzbl	(%rax), %eax

328 :   %107 = zext i8 %106 to i64 : NIL

329 :   store i64 %107, i64* %RAX_val, !mcsema_real_eip !11 :          <84>	movzbl	(%rax), %eax

330 :   %108 = load i64* %RBP_val, !mcsema_real_eip !12 :          <87>	movb	%al, -17(%rbp)
331 :   %109 = add i64 %108, -17, !mcsema_real_eip !12 :          <87>	movb	%al, -17(%rbp)
332 :   %110 = inttoptr i64 %109 to i64*, !mcsema_real_eip !12 :          <87>	movb	%al, -17(%rbp)

333 :   %111 = bitcast i64* %110 to i8* : NIL

334 :   store i8 %106, i8* %111, !mcsema_real_eip !12 :          <87>	movb	%al, -17(%rbp)

335 :   %112 = load i64* %RBP_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
336 :   %113 = add i64 %112, -17, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
337 :   %114 = inttoptr i64 %113 to i64*, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

338 :   %115 = bitcast i64* %114 to i8* : NIL

339 :   %116 = load i8* %115, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
340 :   store i1 false, i1* %AF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
341 :   %117 = tail call i8 @llvm.ctpop.i8(i8 %116), !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

342 :   %118 = and i8 %117, 1 : NIL
343 :   %119 = icmp eq i8 %118, 0 : NIL

344 :   store i1 %119, i1* %PF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
345 :   %120 = icmp eq i8 %116, 0, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
346 :   store i1 %120, i1* %ZF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

347 :   %121 = icmp slt i8 %116, 0 : NIL

348 :   store i1 %121, i1* %SF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
349 :   store i1 false, i1* %CF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
350 :   store i1 false, i1* %OF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

351 :   br i1 %120, label %block_0xbf, label %block_0x8c.preheader, !mcsema_real_eip !14 :          <bd>	jne	-51

352 :   br label %block_0x8c : NIL

353 :   %122 = load i64* %RBP_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
354 :   %123 = add i64 %122, -17, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
355 :   %124 = inttoptr i64 %123 to i64*, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)

356 :   %125 = bitcast i64* %124 to i8* : NIL

357 :   %126 = load i8* %125, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)

358 :   %127 = add i8 %126, -47 : NIL

359 :   %128 = xor i8 %127, %126, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
360 :   %129 = and i8 %128, 16, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
361 :   %130 = icmp ne i8 %129, 0, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
362 :   store i1 %130, i1* %AF_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
363 :   %131 = tail call i8 @llvm.ctpop.i8(i8 %127), !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)

364 :   %132 = and i8 %131, 1 : NIL
365 :   %133 = icmp eq i8 %132, 0 : NIL

366 :   store i1 %133, i1* %PF_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
367 :   %134 = icmp eq i8 %127, 0, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
368 :   store i1 %134, i1* %ZF_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)

369 :   %135 = icmp slt i8 %127, 0 : NIL

370 :   store i1 %135, i1* %SF_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
371 :   %136 = icmp ult i8 %126, 47, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
372 :   store i1 %136, i1* %CF_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)
373 :   %137 = and i8 %128, %126, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)

374 :   %138 = icmp slt i8 %137, 0 : NIL

375 :   store i1 %138, i1* %OF_val, !mcsema_real_eip !15 :          <8c>	cmpb	$47, -17(%rbp)

376 :   %139 = load i1* %ZF_val, !mcsema_real_eip !16 :          <90>	jne	9

377 :   %140 = load i64* %RBP_val, !mcsema_real_eip !17 :          <9b>	movq	-16(%rbp), %rax
378 :   %141 = add i64 %140, -16, !mcsema_real_eip !17 :          <9b>	movq	-16(%rbp), %rax
379 :   %142 = inttoptr i64 %141 to i64*, !mcsema_real_eip !17 :          <9b>	movq	-16(%rbp), %rax
380 :   %143 = load i64* %142, !mcsema_real_eip !17 :          <9b>	movq	-16(%rbp), %rax
381 :   store i64 %143, i64* %RAX_val, !mcsema_real_eip !17 :          <9b>	movq	-16(%rbp), %rax

382 :   br i1 %139, label %block_0x92, label %block_0x9b, !mcsema_real_eip !16 :          <90>	jne	9

383 :   br label %block_0xbf : NIL

384 :   %144 = load i64* %RSP_val, !mcsema_real_eip !18 :          <c0>	popq	%rbp
385 :   %145 = inttoptr i64 %144 to i64*, !mcsema_real_eip !18 :          <c0>	popq	%rbp
386 :   %146 = load i64* %145, !mcsema_real_eip !18 :          <c0>	popq	%rbp
387 :   store i64 %146, i64* %RBP_val, !mcsema_real_eip !18 :          <c0>	popq	%rbp

388 :   %147 = add i64 %144, 16, !mcsema_real_eip !19 :          <c1>	retq
389 :   store i64 %147, i64* %RSP_val, !mcsema_real_eip !19 :          <c1>	retq
390 :   %148 = load i64* %RAX_val, !mcsema_real_eip !19 :          <c1>	retq
391 :   store i64 %148, i64* %RAX, !mcsema_real_eip !19 :          <c1>	retq
392 :   %149 = load i64* %RBX_val, !mcsema_real_eip !19 :          <c1>	retq
393 :   store i64 %149, i64* %RBX, !mcsema_real_eip !19 :          <c1>	retq
394 :   %150 = load i64* %RCX_val, !mcsema_real_eip !19 :          <c1>	retq
395 :   store i64 %150, i64* %RCX, !mcsema_real_eip !19 :          <c1>	retq
396 :   %151 = load i64* %RDX_val, !mcsema_real_eip !19 :          <c1>	retq
397 :   store i64 %151, i64* %RDX, !mcsema_real_eip !19 :          <c1>	retq
398 :   %152 = load i64* %RSI_val, !mcsema_real_eip !19 :          <c1>	retq
399 :   store i64 %152, i64* %RSI, !mcsema_real_eip !19 :          <c1>	retq
400 :   %153 = load i64* %RDI_val, !mcsema_real_eip !19 :          <c1>	retq
401 :   store i64 %153, i64* %RDI, !mcsema_real_eip !19 :          <c1>	retq
402 :   %154 = load i64* %RSP_val, !mcsema_real_eip !19 :          <c1>	retq
403 :   store i64 %154, i64* %RSP, !mcsema_real_eip !19 :          <c1>	retq
404 :   %155 = load i64* %RBP_val, !mcsema_real_eip !19 :          <c1>	retq
405 :   store i64 %155, i64* %RBP, !mcsema_real_eip !19 :          <c1>	retq
406 :   %156 = load i64* %R8_val, !mcsema_real_eip !19 :          <c1>	retq
407 :   store i64 %156, i64* %R8, !mcsema_real_eip !19 :          <c1>	retq
408 :   %157 = load i64* %R9_val, !mcsema_real_eip !19 :          <c1>	retq
409 :   store i64 %157, i64* %R9, !mcsema_real_eip !19 :          <c1>	retq
410 :   %158 = load i64* %R10_val, !mcsema_real_eip !19 :          <c1>	retq
411 :   store i64 %158, i64* %R10, !mcsema_real_eip !19 :          <c1>	retq
412 :   %159 = load i64* %R11_val, !mcsema_real_eip !19 :          <c1>	retq
413 :   store i64 %159, i64* %R11, !mcsema_real_eip !19 :          <c1>	retq
414 :   %160 = load i64* %R12_val, !mcsema_real_eip !19 :          <c1>	retq
415 :   store i64 %160, i64* %R12, !mcsema_real_eip !19 :          <c1>	retq
416 :   %161 = load i64* %R13_val, !mcsema_real_eip !19 :          <c1>	retq
417 :   store i64 %161, i64* %R13, !mcsema_real_eip !19 :          <c1>	retq
418 :   %162 = load i64* %R14_val, !mcsema_real_eip !19 :          <c1>	retq
419 :   store i64 %162, i64* %R14, !mcsema_real_eip !19 :          <c1>	retq
420 :   %163 = load i64* %R15_val, !mcsema_real_eip !19 :          <c1>	retq
421 :   store i64 %163, i64* %R15, !mcsema_real_eip !19 :          <c1>	retq
422 :   %164 = load i64* %RIP_val, !mcsema_real_eip !19 :          <c1>	retq
423 :   store i64 %164, i64* %RIP, !mcsema_real_eip !19 :          <c1>	retq
424 :   %165 = load i1* %CF_val, !mcsema_real_eip !19 :          <c1>	retq
425 :   store i1 %165, i1* %CF, align 1, !mcsema_real_eip !19 :          <c1>	retq
426 :   %166 = load i1* %PF_val, !mcsema_real_eip !19 :          <c1>	retq
427 :   store i1 %166, i1* %PF, align 1, !mcsema_real_eip !19 :          <c1>	retq
428 :   %167 = load i1* %AF_val, !mcsema_real_eip !19 :          <c1>	retq
429 :   store i1 %167, i1* %AF, align 1, !mcsema_real_eip !19 :          <c1>	retq
430 :   %168 = load i1* %ZF_val, !mcsema_real_eip !19 :          <c1>	retq
431 :   store i1 %168, i1* %ZF, align 1, !mcsema_real_eip !19 :          <c1>	retq
432 :   %169 = load i1* %SF_val, !mcsema_real_eip !19 :          <c1>	retq
433 :   store i1 %169, i1* %SF, align 1, !mcsema_real_eip !19 :          <c1>	retq
434 :   %170 = load i1* %OF_val, !mcsema_real_eip !19 :          <c1>	retq
435 :   store i1 %170, i1* %OF, align 1, !mcsema_real_eip !19 :          <c1>	retq
436 :   %171 = load i1* %DF_val, !mcsema_real_eip !19 :          <c1>	retq
437 :   store i1 %171, i1* %DF, align 1, !mcsema_real_eip !19 :          <c1>	retq
438 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !19 :          <c1>	retq
439 :   %172 = load i1* %FPU_B_val, !mcsema_real_eip !19 :          <c1>	retq
440 :   store i1 %172, i1* %FPU_B, align 1, !mcsema_real_eip !19 :          <c1>	retq
441 :   %173 = load i1* %FPU_C3_val, !mcsema_real_eip !19 :          <c1>	retq
442 :   store i1 %173, i1* %FPU_C3, align 1, !mcsema_real_eip !19 :          <c1>	retq
443 :   %174 = load i3* %FPU_TOP_val, !mcsema_real_eip !19 :          <c1>	retq
444 :   store i3 %174, i3* %FPU_TOP, align 1, !mcsema_real_eip !19 :          <c1>	retq
445 :   %175 = load i1* %FPU_C2_val, !mcsema_real_eip !19 :          <c1>	retq
446 :   store i1 %175, i1* %FPU_C2, align 1, !mcsema_real_eip !19 :          <c1>	retq
447 :   %176 = load i1* %FPU_C1_val, !mcsema_real_eip !19 :          <c1>	retq
448 :   store i1 %176, i1* %FPU_C1, align 1, !mcsema_real_eip !19 :          <c1>	retq
449 :   %177 = load i1* %FPU_C0_val, !mcsema_real_eip !19 :          <c1>	retq
450 :   store i1 %177, i1* %FPU_C0, align 1, !mcsema_real_eip !19 :          <c1>	retq
451 :   %178 = load i1* %FPU_ES_val, !mcsema_real_eip !19 :          <c1>	retq
452 :   store i1 %178, i1* %FPU_ES, align 1, !mcsema_real_eip !19 :          <c1>	retq
453 :   %179 = load i1* %FPU_SF_val, !mcsema_real_eip !19 :          <c1>	retq
454 :   store i1 %179, i1* %FPU_SF, align 1, !mcsema_real_eip !19 :          <c1>	retq
455 :   %180 = load i1* %FPU_PE_val, !mcsema_real_eip !19 :          <c1>	retq
456 :   store i1 %180, i1* %FPU_PE, align 1, !mcsema_real_eip !19 :          <c1>	retq
457 :   %181 = load i1* %FPU_UE_val, !mcsema_real_eip !19 :          <c1>	retq
458 :   store i1 %181, i1* %FPU_UE, align 1, !mcsema_real_eip !19 :          <c1>	retq
459 :   %182 = load i1* %FPU_OE_val, !mcsema_real_eip !19 :          <c1>	retq
460 :   store i1 %182, i1* %FPU_OE, align 1, !mcsema_real_eip !19 :          <c1>	retq
461 :   %183 = load i1* %FPU_ZE_val, !mcsema_real_eip !19 :          <c1>	retq
462 :   store i1 %183, i1* %FPU_ZE, align 1, !mcsema_real_eip !19 :          <c1>	retq
463 :   %184 = load i1* %FPU_DE_val, !mcsema_real_eip !19 :          <c1>	retq
464 :   store i1 %184, i1* %FPU_DE, align 1, !mcsema_real_eip !19 :          <c1>	retq
465 :   %185 = load i1* %FPU_IE_val, !mcsema_real_eip !19 :          <c1>	retq
466 :   store i1 %185, i1* %FPU_IE, align 1, !mcsema_real_eip !19 :          <c1>	retq
467 :   %186 = load i1* %FPU_X_val, !mcsema_real_eip !19 :          <c1>	retq
468 :   store i1 %186, i1* %FPU_X, align 1, !mcsema_real_eip !19 :          <c1>	retq
469 :   %187 = load i2* %FPU_RC_val, !mcsema_real_eip !19 :          <c1>	retq
470 :   store i2 %187, i2* %FPU_RC, align 1, !mcsema_real_eip !19 :          <c1>	retq
471 :   %188 = load i2* %FPU_PC_val, !mcsema_real_eip !19 :          <c1>	retq
472 :   store i2 %188, i2* %FPU_PC, align 1, !mcsema_real_eip !19 :          <c1>	retq
473 :   %189 = load i1* %FPU_PM_val, !mcsema_real_eip !19 :          <c1>	retq
474 :   store i1 %189, i1* %FPU_PM, align 1, !mcsema_real_eip !19 :          <c1>	retq
475 :   %190 = load i1* %FPU_UM_val, !mcsema_real_eip !19 :          <c1>	retq
476 :   store i1 %190, i1* %FPU_UM, align 1, !mcsema_real_eip !19 :          <c1>	retq
477 :   %191 = load i1* %FPU_OM_val, !mcsema_real_eip !19 :          <c1>	retq
478 :   store i1 %191, i1* %FPU_OM, align 1, !mcsema_real_eip !19 :          <c1>	retq
479 :   %192 = load i1* %FPU_ZM_val, !mcsema_real_eip !19 :          <c1>	retq
480 :   store i1 %192, i1* %FPU_ZM, align 1, !mcsema_real_eip !19 :          <c1>	retq
481 :   %193 = load i1* %FPU_DM_val, !mcsema_real_eip !19 :          <c1>	retq
482 :   store i1 %193, i1* %FPU_DM, align 1, !mcsema_real_eip !19 :          <c1>	retq
483 :   %194 = load i1* %FPU_IM_val, !mcsema_real_eip !19 :          <c1>	retq
484 :   store i1 %194, i1* %FPU_IM, align 1, !mcsema_real_eip !19 :          <c1>	retq

485 :   %195 = load i64* %53, align 4 : NIL
486 :   store i64 %195, i64* %52, align 4 : NIL

487 :   %196 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !19 :          <c1>	retq
488 :   store i16 %196, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !19 :          <c1>	retq
489 :   %197 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !19 :          <c1>	retq
490 :   store i64 %197, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !19 :          <c1>	retq
491 :   %198 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !19 :          <c1>	retq
492 :   store i16 %198, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !19 :          <c1>	retq
493 :   %199 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !19 :          <c1>	retq
494 :   store i64 %199, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !19 :          <c1>	retq
495 :   %200 = load i128* %XMM0_val, !mcsema_real_eip !19 :          <c1>	retq
496 :   store i128 %200, i128* %XMM0, align 1, !mcsema_real_eip !19 :          <c1>	retq
497 :   %201 = load i128* %XMM1_val, !mcsema_real_eip !19 :          <c1>	retq
498 :   store i128 %201, i128* %XMM1, align 1, !mcsema_real_eip !19 :          <c1>	retq
499 :   %202 = load i128* %XMM2_val, !mcsema_real_eip !19 :          <c1>	retq
500 :   store i128 %202, i128* %XMM2, align 1, !mcsema_real_eip !19 :          <c1>	retq
501 :   %203 = load i128* %XMM3_val, !mcsema_real_eip !19 :          <c1>	retq
502 :   store i128 %203, i128* %XMM3, align 1, !mcsema_real_eip !19 :          <c1>	retq
503 :   %204 = load i128* %XMM4_val, !mcsema_real_eip !19 :          <c1>	retq
504 :   store i128 %204, i128* %XMM4, align 1, !mcsema_real_eip !19 :          <c1>	retq
505 :   %205 = load i128* %XMM5_val, !mcsema_real_eip !19 :          <c1>	retq
506 :   store i128 %205, i128* %XMM5, align 1, !mcsema_real_eip !19 :          <c1>	retq
507 :   %206 = load i128* %XMM6_val, !mcsema_real_eip !19 :          <c1>	retq
508 :   store i128 %206, i128* %XMM6, align 1, !mcsema_real_eip !19 :          <c1>	retq
509 :   %207 = load i128* %XMM7_val, !mcsema_real_eip !19 :          <c1>	retq
510 :   store i128 %207, i128* %XMM7, align 1, !mcsema_real_eip !19 :          <c1>	retq
511 :   %208 = load i128* %XMM8_val, !mcsema_real_eip !19 :          <c1>	retq
512 :   store i128 %208, i128* %XMM8, align 1, !mcsema_real_eip !19 :          <c1>	retq
513 :   %209 = load i128* %XMM9_val, !mcsema_real_eip !19 :          <c1>	retq
514 :   store i128 %209, i128* %XMM9, align 1, !mcsema_real_eip !19 :          <c1>	retq
515 :   %210 = load i128* %XMM10_val, !mcsema_real_eip !19 :          <c1>	retq
516 :   store i128 %210, i128* %XMM10, align 1, !mcsema_real_eip !19 :          <c1>	retq
517 :   %211 = load i128* %XMM11_val, !mcsema_real_eip !19 :          <c1>	retq
518 :   store i128 %211, i128* %XMM11, align 1, !mcsema_real_eip !19 :          <c1>	retq
519 :   %212 = load i128* %XMM12_val, !mcsema_real_eip !19 :          <c1>	retq
520 :   store i128 %212, i128* %XMM12, align 1, !mcsema_real_eip !19 :          <c1>	retq
521 :   %213 = load i128* %XMM13_val, !mcsema_real_eip !19 :          <c1>	retq
522 :   store i128 %213, i128* %XMM13, align 1, !mcsema_real_eip !19 :          <c1>	retq
523 :   %214 = load i128* %XMM14_val, !mcsema_real_eip !19 :          <c1>	retq
524 :   store i128 %214, i128* %XMM14, align 1, !mcsema_real_eip !19 :          <c1>	retq
525 :   %215 = load i128* %XMM15_val, !mcsema_real_eip !19 :          <c1>	retq
526 :   store i128 %215, i128* %XMM15, align 1, !mcsema_real_eip !19 :          <c1>	retq
527 :   %216 = load i64* %STACK_BASE_val, !mcsema_real_eip !19 :          <c1>	retq
528 :   store i64 %216, i64* %STACK_BASE, align 1, !mcsema_real_eip !19 :          <c1>	retq
529 :   %217 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !19 :          <c1>	retq
530 :   store i64 %217, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !19 :          <c1>	retq
531 :   ret void, !mcsema_real_eip !19 :          <c1>	retq

532 :   %218 = load i64* %RBP_val, !mcsema_real_eip !20 :          <9f>	movzbl	-17(%rbp), %edx
533 :   %219 = add i64 %218, -17, !mcsema_real_eip !20 :          <9f>	movzbl	-17(%rbp), %edx
534 :   %220 = inttoptr i64 %219 to i64*, !mcsema_real_eip !20 :          <9f>	movzbl	-17(%rbp), %edx

535 :   %221 = bitcast i64* %220 to i8* : NIL

536 :   %222 = load i8* %221, !mcsema_real_eip !20 :          <9f>	movzbl	-17(%rbp), %edx

537 :   %223 = zext i8 %222 to i64 : NIL

538 :   store i64 %223, i64* %RDX_val, !mcsema_real_eip !20 :          <9f>	movzbl	-17(%rbp), %edx

539 :   %224 = load i64* %RAX_val, !mcsema_real_eip !21 :          <a3>	movb	%dl, (%rax)
540 :   %225 = inttoptr i64 %224 to i64*, !mcsema_real_eip !21 :          <a3>	movb	%dl, (%rax)

541 :   %226 = bitcast i64* %225 to i8* : NIL

542 :   store i8 %222, i8* %226, !mcsema_real_eip !21 :          <a3>	movb	%dl, (%rax)

543 :   %227 = load i64* %RBP_val, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
544 :   %228 = add i64 %227, -8, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
545 :   %229 = inttoptr i64 %228 to i64*, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
546 :   %230 = load i64* %229, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
547 :   store i64 %230, i64* %RAX_val, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax

548 :   %231 = inttoptr i64 %230 to i64*, !mcsema_real_eip !23 :          <b3>	movzbl	(%rax), %eax

549 :   %232 = bitcast i64* %231 to i8* : NIL

550 :   %233 = load i8* %232, !mcsema_real_eip !23 :          <b3>	movzbl	(%rax), %eax

551 :   %234 = zext i8 %233 to i64 : NIL

552 :   store i64 %234, i64* %RAX_val, !mcsema_real_eip !23 :          <b3>	movzbl	(%rax), %eax

553 :   %235 = load i64* %RBP_val, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)
554 :   %236 = add i64 %235, -17, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)
555 :   %237 = inttoptr i64 %236 to i64*, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)

556 :   %238 = bitcast i64* %237 to i8* : NIL

557 :   store i8 %233, i8* %238, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)

558 :   %239 = load i64* %RBP_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
559 :   %240 = add i64 %239, -17, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
560 :   %241 = inttoptr i64 %240 to i64*, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

561 :   %242 = bitcast i64* %241 to i8* : NIL

562 :   %243 = load i8* %242, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
563 :   store i1 false, i1* %AF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
564 :   %244 = tail call i8 @llvm.ctpop.i8(i8 %243), !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

565 :   %245 = and i8 %244, 1 : NIL
566 :   %246 = icmp eq i8 %245, 0 : NIL

567 :   store i1 %246, i1* %PF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
568 :   %247 = icmp eq i8 %243, 0, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
569 :   store i1 %247, i1* %ZF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

570 :   %248 = icmp slt i8 %243, 0 : NIL

571 :   store i1 %248, i1* %SF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
572 :   store i1 false, i1* %CF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
573 :   store i1 false, i1* %OF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

574 :   br i1 %247, label %block_0xbf.loopexit, label %block_0x8c.backedge, !mcsema_real_eip !14 :          <bd>	jne	-51

575 :   %249 = inttoptr i64 %143 to i64*, !mcsema_real_eip !25 :          <96>	movb	$92, (%rax)

576 :   %250 = bitcast i64* %249 to i8* : NIL

577 :   store i8 92, i8* %250, !mcsema_real_eip !25 :          <96>	movb	$92, (%rax)

578 :   %251 = load i64* %RBP_val, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
579 :   %252 = add i64 %251, -8, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
580 :   %253 = inttoptr i64 %252 to i64*, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
581 :   %254 = load i64* %253, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax
582 :   store i64 %254, i64* %RAX_val, !mcsema_real_eip !22 :          <af>	movq	-8(%rbp), %rax

583 :   %255 = inttoptr i64 %254 to i64*, !mcsema_real_eip !23 :          <b3>	movzbl	(%rax), %eax

584 :   %256 = bitcast i64* %255 to i8* : NIL

585 :   %257 = load i8* %256, !mcsema_real_eip !23 :          <b3>	movzbl	(%rax), %eax

586 :   %258 = zext i8 %257 to i64 : NIL

587 :   store i64 %258, i64* %RAX_val, !mcsema_real_eip !23 :          <b3>	movzbl	(%rax), %eax

588 :   %259 = load i64* %RBP_val, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)
589 :   %260 = add i64 %259, -17, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)
590 :   %261 = inttoptr i64 %260 to i64*, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)

591 :   %262 = bitcast i64* %261 to i8* : NIL

592 :   store i8 %257, i8* %262, !mcsema_real_eip !24 :          <b6>	movb	%al, -17(%rbp)

593 :   %263 = load i64* %RBP_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
594 :   %264 = add i64 %263, -17, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
595 :   %265 = inttoptr i64 %264 to i64*, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

596 :   %266 = bitcast i64* %265 to i8* : NIL

597 :   %267 = load i8* %266, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
598 :   store i1 false, i1* %AF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
599 :   %268 = tail call i8 @llvm.ctpop.i8(i8 %267), !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

600 :   %269 = and i8 %268, 1 : NIL
601 :   %270 = icmp eq i8 %269, 0 : NIL

602 :   store i1 %270, i1* %PF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
603 :   %271 = icmp eq i8 %267, 0, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
604 :   store i1 %271, i1* %ZF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

605 :   %272 = icmp slt i8 %267, 0 : NIL

606 :   store i1 %272, i1* %SF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
607 :   store i1 false, i1* %CF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)
608 :   store i1 false, i1* %OF_val, !mcsema_real_eip !13 :          <b9>	cmpb	$0, -17(%rbp)

609 :   br i1 %271, label %block_0xbf.loopexit, label %block_0x8c.backedge, !mcsema_real_eip !14 :          <bd>	jne	-51

610 :   br label %block_0x8c : NIL
========================================================
Source line mapping for function: sub_7
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <7>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <7>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <7>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <7>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <7>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <7>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <7>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <7>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <7>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <7>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <7>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <7>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <7>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <7>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <7>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <7>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <7>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <7>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <7>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <7>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <7>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <7>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <7>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <7>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <7>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <7>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <7>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <7>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <7>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <7>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <7>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <7>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <7>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <7>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <7>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <7>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <7>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <7>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <7>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <7>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <7>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <7>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <7>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <7>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <7>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <7>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <7>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <7>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <7>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <7>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <7>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <7>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <7>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <7>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <7>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <7>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <7>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <7>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <7>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <7>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <7>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <7>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <7>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <7>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <7>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <7>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <7>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <7>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <7>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <7>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <7>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <7>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <7>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <7>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <7>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <7>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <7>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <7>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <7>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <7>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <7>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <7>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <7>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <7>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <7>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <7>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <7>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <7>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <7>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <7>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <7>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <7>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <7>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <7>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <7>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <7>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <7>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <7>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <8>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -40 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
296 :   %83 = and i64 %82, 16, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
297 :   %84 = icmp ne i64 %83, 0, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <b>	subq	$32, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
308 :   %91 = icmp ult i64 %79, 32, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <b>	subq	$32, %rsp

314 :   %94 = load i64* %RBP_val, !mcsema_real_eip !5 :          <f>	movq	%rdi, -24(%rbp)
315 :   %95 = add i64 %94, -24, !mcsema_real_eip !5 :          <f>	movq	%rdi, -24(%rbp)
316 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !5 :          <f>	movq	%rdi, -24(%rbp)
317 :   %97 = load i64* %RDI_val, !mcsema_real_eip !5 :          <f>	movq	%rdi, -24(%rbp)
318 :   store i64 %97, i64* %96, !mcsema_real_eip !5 :          <f>	movq	%rdi, -24(%rbp)

319 :   %98 = load i64* %RBP_val, !mcsema_real_eip !6 :          <13>	movl	$1, -4(%rbp)
320 :   %99 = add i64 %98, -4, !mcsema_real_eip !6 :          <13>	movl	$1, -4(%rbp)
321 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !6 :          <13>	movl	$1, -4(%rbp)

322 :   %101 = bitcast i64* %100 to i32* : NIL

323 :   store i32 1, i32* %101, !mcsema_real_eip !6 :          <13>	movl	$1, -4(%rbp)

324 :   %102 = load i64* %RBP_val, !mcsema_real_eip !7 :          <1a>	movq	-24(%rbp), %rax
325 :   %103 = add i64 %102, -24, !mcsema_real_eip !7 :          <1a>	movq	-24(%rbp), %rax
326 :   %104 = inttoptr i64 %103 to i64*, !mcsema_real_eip !7 :          <1a>	movq	-24(%rbp), %rax
327 :   %105 = load i64* %104, !mcsema_real_eip !7 :          <1a>	movq	-24(%rbp), %rax

328 :   store i64 %105, i64* %RDI_val, !mcsema_real_eip !8 :          <1e>	movq	%rax, %rdi

329 :   %106 = tail call x86_64_sysvcc i64 @strlen(i64 %105), !mcsema_real_eip !9 :          <21>	callq	0
330 :   store i64 %106, i64* %RAX_val, !mcsema_real_eip !9 :          <21>	callq	0

331 :   %107 = load i64* %RBP_val, !mcsema_real_eip !10 :          <26>	movl	%eax, -8(%rbp)
332 :   %108 = add i64 %107, -8, !mcsema_real_eip !10 :          <26>	movl	%eax, -8(%rbp)
333 :   %109 = inttoptr i64 %108 to i64*, !mcsema_real_eip !10 :          <26>	movl	%eax, -8(%rbp)
334 :   %110 = trunc i64 %106 to i32, !mcsema_real_eip !10 :          <26>	movl	%eax, -8(%rbp)

335 :   %111 = bitcast i64* %109 to i32* : NIL

336 :   store i32 %110, i32* %111, !mcsema_real_eip !10 :          <26>	movl	%eax, -8(%rbp)

337 :   %112 = load i64* %RBP_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
338 :   %113 = add i64 %112, -8, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
339 :   %114 = inttoptr i64 %113 to i64*, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

340 :   %115 = bitcast i64* %114 to i32* : NIL

341 :   %116 = load i32* %115, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

342 :   %117 = add i32 %116, -1 : NIL

343 :   %118 = xor i32 %117, %116, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
344 :   %119 = and i32 %118, 16, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
345 :   %120 = icmp ne i32 %119, 0, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
346 :   store i1 %120, i1* %AF_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
347 :   %121 = trunc i32 %117 to i8, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
348 :   %122 = tail call i8 @llvm.ctpop.i8(i8 %121), !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

349 :   %123 = and i8 %122, 1 : NIL
350 :   %124 = icmp eq i8 %123, 0 : NIL

351 :   store i1 %124, i1* %PF_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
352 :   %125 = icmp eq i32 %117, 0, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
353 :   store i1 %125, i1* %ZF_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

354 :   %126 = icmp slt i32 %117, 0 : NIL

355 :   store i1 %126, i1* %SF_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

356 :   %127 = icmp eq i32 %116, 0 : NIL

357 :   store i1 %127, i1* %CF_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)
358 :   %128 = and i32 %118, %116, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

359 :   %129 = icmp slt i32 %128, 0 : NIL

360 :   store i1 %129, i1* %OF_val, !mcsema_real_eip !11 :          <29>	cmpl	$1, -8(%rbp)

361 :   %130 = xor i1 %126, %129 : NIL

362 :   %131 = load i1* %ZF_val, !mcsema_real_eip !12 :          <2d>	jle	48
363 :   %132 = or i1 %131, %130, !mcsema_real_eip !12 :          <2d>	jle	48
364 :   br i1 %132, label %block_0x5f, label %block_0x2f, !mcsema_real_eip !12 :          <2d>	jle	48

365 :   %133 = load i64* %RBP_val, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
366 :   %134 = add i64 %133, -4, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
367 :   %135 = inttoptr i64 %134 to i64*, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax

368 :   %136 = bitcast i64* %135 to i32* : NIL

369 :   %137 = load i32* %136, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
370 :   %138 = zext i32 %137 to i64, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
371 :   store i64 %138, i64* %RAX_val, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax

372 :   %139 = load i64* %RBP_val, !mcsema_real_eip !14 :          <62>	leave
373 :   store i64 %139, i64* %RSP_val, !mcsema_real_eip !14 :          <62>	leave
374 :   %140 = inttoptr i64 %139 to i64*, !mcsema_real_eip !14 :          <62>	leave
375 :   %141 = load i64* %140, !mcsema_real_eip !14 :          <62>	leave
376 :   store i64 %141, i64* %RBP_val, !mcsema_real_eip !14 :          <62>	leave

377 :   %142 = add i64 %139, 16, !mcsema_real_eip !15 :          <63>	retq
378 :   store i64 %142, i64* %RSP_val, !mcsema_real_eip !15 :          <63>	retq
379 :   %143 = load i64* %RAX_val, !mcsema_real_eip !15 :          <63>	retq
380 :   store i64 %143, i64* %RAX, !mcsema_real_eip !15 :          <63>	retq
381 :   %144 = load i64* %RBX_val, !mcsema_real_eip !15 :          <63>	retq
382 :   store i64 %144, i64* %RBX, !mcsema_real_eip !15 :          <63>	retq
383 :   %145 = load i64* %RCX_val, !mcsema_real_eip !15 :          <63>	retq
384 :   store i64 %145, i64* %RCX, !mcsema_real_eip !15 :          <63>	retq
385 :   %146 = load i64* %RDX_val, !mcsema_real_eip !15 :          <63>	retq
386 :   store i64 %146, i64* %RDX, !mcsema_real_eip !15 :          <63>	retq
387 :   %147 = load i64* %RSI_val, !mcsema_real_eip !15 :          <63>	retq
388 :   store i64 %147, i64* %RSI, !mcsema_real_eip !15 :          <63>	retq
389 :   %148 = load i64* %RDI_val, !mcsema_real_eip !15 :          <63>	retq
390 :   store i64 %148, i64* %RDI, !mcsema_real_eip !15 :          <63>	retq
391 :   %149 = load i64* %RSP_val, !mcsema_real_eip !15 :          <63>	retq
392 :   store i64 %149, i64* %RSP, !mcsema_real_eip !15 :          <63>	retq
393 :   %150 = load i64* %RBP_val, !mcsema_real_eip !15 :          <63>	retq
394 :   store i64 %150, i64* %RBP, !mcsema_real_eip !15 :          <63>	retq
395 :   %151 = load i64* %R8_val, !mcsema_real_eip !15 :          <63>	retq
396 :   store i64 %151, i64* %R8, !mcsema_real_eip !15 :          <63>	retq
397 :   %152 = load i64* %R9_val, !mcsema_real_eip !15 :          <63>	retq
398 :   store i64 %152, i64* %R9, !mcsema_real_eip !15 :          <63>	retq
399 :   %153 = load i64* %R10_val, !mcsema_real_eip !15 :          <63>	retq
400 :   store i64 %153, i64* %R10, !mcsema_real_eip !15 :          <63>	retq
401 :   %154 = load i64* %R11_val, !mcsema_real_eip !15 :          <63>	retq
402 :   store i64 %154, i64* %R11, !mcsema_real_eip !15 :          <63>	retq
403 :   %155 = load i64* %R12_val, !mcsema_real_eip !15 :          <63>	retq
404 :   store i64 %155, i64* %R12, !mcsema_real_eip !15 :          <63>	retq
405 :   %156 = load i64* %R13_val, !mcsema_real_eip !15 :          <63>	retq
406 :   store i64 %156, i64* %R13, !mcsema_real_eip !15 :          <63>	retq
407 :   %157 = load i64* %R14_val, !mcsema_real_eip !15 :          <63>	retq
408 :   store i64 %157, i64* %R14, !mcsema_real_eip !15 :          <63>	retq
409 :   %158 = load i64* %R15_val, !mcsema_real_eip !15 :          <63>	retq
410 :   store i64 %158, i64* %R15, !mcsema_real_eip !15 :          <63>	retq
411 :   %159 = load i64* %RIP_val, !mcsema_real_eip !15 :          <63>	retq
412 :   store i64 %159, i64* %RIP, !mcsema_real_eip !15 :          <63>	retq
413 :   %160 = load i1* %CF_val, !mcsema_real_eip !15 :          <63>	retq
414 :   store i1 %160, i1* %CF, align 1, !mcsema_real_eip !15 :          <63>	retq
415 :   %161 = load i1* %PF_val, !mcsema_real_eip !15 :          <63>	retq
416 :   store i1 %161, i1* %PF, align 1, !mcsema_real_eip !15 :          <63>	retq
417 :   %162 = load i1* %AF_val, !mcsema_real_eip !15 :          <63>	retq
418 :   store i1 %162, i1* %AF, align 1, !mcsema_real_eip !15 :          <63>	retq
419 :   %163 = load i1* %ZF_val, !mcsema_real_eip !15 :          <63>	retq
420 :   store i1 %163, i1* %ZF, align 1, !mcsema_real_eip !15 :          <63>	retq
421 :   %164 = load i1* %SF_val, !mcsema_real_eip !15 :          <63>	retq
422 :   store i1 %164, i1* %SF, align 1, !mcsema_real_eip !15 :          <63>	retq
423 :   %165 = load i1* %OF_val, !mcsema_real_eip !15 :          <63>	retq
424 :   store i1 %165, i1* %OF, align 1, !mcsema_real_eip !15 :          <63>	retq
425 :   %166 = load i1* %DF_val, !mcsema_real_eip !15 :          <63>	retq
426 :   store i1 %166, i1* %DF, align 1, !mcsema_real_eip !15 :          <63>	retq
427 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !15 :          <63>	retq
428 :   %167 = load i1* %FPU_B_val, !mcsema_real_eip !15 :          <63>	retq
429 :   store i1 %167, i1* %FPU_B, align 1, !mcsema_real_eip !15 :          <63>	retq
430 :   %168 = load i1* %FPU_C3_val, !mcsema_real_eip !15 :          <63>	retq
431 :   store i1 %168, i1* %FPU_C3, align 1, !mcsema_real_eip !15 :          <63>	retq
432 :   %169 = load i3* %FPU_TOP_val, !mcsema_real_eip !15 :          <63>	retq
433 :   store i3 %169, i3* %FPU_TOP, align 1, !mcsema_real_eip !15 :          <63>	retq
434 :   %170 = load i1* %FPU_C2_val, !mcsema_real_eip !15 :          <63>	retq
435 :   store i1 %170, i1* %FPU_C2, align 1, !mcsema_real_eip !15 :          <63>	retq
436 :   %171 = load i1* %FPU_C1_val, !mcsema_real_eip !15 :          <63>	retq
437 :   store i1 %171, i1* %FPU_C1, align 1, !mcsema_real_eip !15 :          <63>	retq
438 :   %172 = load i1* %FPU_C0_val, !mcsema_real_eip !15 :          <63>	retq
439 :   store i1 %172, i1* %FPU_C0, align 1, !mcsema_real_eip !15 :          <63>	retq
440 :   %173 = load i1* %FPU_ES_val, !mcsema_real_eip !15 :          <63>	retq
441 :   store i1 %173, i1* %FPU_ES, align 1, !mcsema_real_eip !15 :          <63>	retq
442 :   %174 = load i1* %FPU_SF_val, !mcsema_real_eip !15 :          <63>	retq
443 :   store i1 %174, i1* %FPU_SF, align 1, !mcsema_real_eip !15 :          <63>	retq
444 :   %175 = load i1* %FPU_PE_val, !mcsema_real_eip !15 :          <63>	retq
445 :   store i1 %175, i1* %FPU_PE, align 1, !mcsema_real_eip !15 :          <63>	retq
446 :   %176 = load i1* %FPU_UE_val, !mcsema_real_eip !15 :          <63>	retq
447 :   store i1 %176, i1* %FPU_UE, align 1, !mcsema_real_eip !15 :          <63>	retq
448 :   %177 = load i1* %FPU_OE_val, !mcsema_real_eip !15 :          <63>	retq
449 :   store i1 %177, i1* %FPU_OE, align 1, !mcsema_real_eip !15 :          <63>	retq
450 :   %178 = load i1* %FPU_ZE_val, !mcsema_real_eip !15 :          <63>	retq
451 :   store i1 %178, i1* %FPU_ZE, align 1, !mcsema_real_eip !15 :          <63>	retq
452 :   %179 = load i1* %FPU_DE_val, !mcsema_real_eip !15 :          <63>	retq
453 :   store i1 %179, i1* %FPU_DE, align 1, !mcsema_real_eip !15 :          <63>	retq
454 :   %180 = load i1* %FPU_IE_val, !mcsema_real_eip !15 :          <63>	retq
455 :   store i1 %180, i1* %FPU_IE, align 1, !mcsema_real_eip !15 :          <63>	retq
456 :   %181 = load i1* %FPU_X_val, !mcsema_real_eip !15 :          <63>	retq
457 :   store i1 %181, i1* %FPU_X, align 1, !mcsema_real_eip !15 :          <63>	retq
458 :   %182 = load i2* %FPU_RC_val, !mcsema_real_eip !15 :          <63>	retq
459 :   store i2 %182, i2* %FPU_RC, align 1, !mcsema_real_eip !15 :          <63>	retq
460 :   %183 = load i2* %FPU_PC_val, !mcsema_real_eip !15 :          <63>	retq
461 :   store i2 %183, i2* %FPU_PC, align 1, !mcsema_real_eip !15 :          <63>	retq
462 :   %184 = load i1* %FPU_PM_val, !mcsema_real_eip !15 :          <63>	retq
463 :   store i1 %184, i1* %FPU_PM, align 1, !mcsema_real_eip !15 :          <63>	retq
464 :   %185 = load i1* %FPU_UM_val, !mcsema_real_eip !15 :          <63>	retq
465 :   store i1 %185, i1* %FPU_UM, align 1, !mcsema_real_eip !15 :          <63>	retq
466 :   %186 = load i1* %FPU_OM_val, !mcsema_real_eip !15 :          <63>	retq
467 :   store i1 %186, i1* %FPU_OM, align 1, !mcsema_real_eip !15 :          <63>	retq
468 :   %187 = load i1* %FPU_ZM_val, !mcsema_real_eip !15 :          <63>	retq
469 :   store i1 %187, i1* %FPU_ZM, align 1, !mcsema_real_eip !15 :          <63>	retq
470 :   %188 = load i1* %FPU_DM_val, !mcsema_real_eip !15 :          <63>	retq
471 :   store i1 %188, i1* %FPU_DM, align 1, !mcsema_real_eip !15 :          <63>	retq
472 :   %189 = load i1* %FPU_IM_val, !mcsema_real_eip !15 :          <63>	retq
473 :   store i1 %189, i1* %FPU_IM, align 1, !mcsema_real_eip !15 :          <63>	retq

474 :   %190 = load i64* %53, align 4 : NIL
475 :   store i64 %190, i64* %52, align 4 : NIL

476 :   %191 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !15 :          <63>	retq
477 :   store i16 %191, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !15 :          <63>	retq
478 :   %192 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !15 :          <63>	retq
479 :   store i64 %192, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !15 :          <63>	retq
480 :   %193 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !15 :          <63>	retq
481 :   store i16 %193, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !15 :          <63>	retq
482 :   %194 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !15 :          <63>	retq
483 :   store i64 %194, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !15 :          <63>	retq
484 :   %195 = load i128* %XMM0_val, !mcsema_real_eip !15 :          <63>	retq
485 :   store i128 %195, i128* %XMM0, align 1, !mcsema_real_eip !15 :          <63>	retq
486 :   %196 = load i128* %XMM1_val, !mcsema_real_eip !15 :          <63>	retq
487 :   store i128 %196, i128* %XMM1, align 1, !mcsema_real_eip !15 :          <63>	retq
488 :   %197 = load i128* %XMM2_val, !mcsema_real_eip !15 :          <63>	retq
489 :   store i128 %197, i128* %XMM2, align 1, !mcsema_real_eip !15 :          <63>	retq
490 :   %198 = load i128* %XMM3_val, !mcsema_real_eip !15 :          <63>	retq
491 :   store i128 %198, i128* %XMM3, align 1, !mcsema_real_eip !15 :          <63>	retq
492 :   %199 = load i128* %XMM4_val, !mcsema_real_eip !15 :          <63>	retq
493 :   store i128 %199, i128* %XMM4, align 1, !mcsema_real_eip !15 :          <63>	retq
494 :   %200 = load i128* %XMM5_val, !mcsema_real_eip !15 :          <63>	retq
495 :   store i128 %200, i128* %XMM5, align 1, !mcsema_real_eip !15 :          <63>	retq
496 :   %201 = load i128* %XMM6_val, !mcsema_real_eip !15 :          <63>	retq
497 :   store i128 %201, i128* %XMM6, align 1, !mcsema_real_eip !15 :          <63>	retq
498 :   %202 = load i128* %XMM7_val, !mcsema_real_eip !15 :          <63>	retq
499 :   store i128 %202, i128* %XMM7, align 1, !mcsema_real_eip !15 :          <63>	retq
500 :   %203 = load i128* %XMM8_val, !mcsema_real_eip !15 :          <63>	retq
501 :   store i128 %203, i128* %XMM8, align 1, !mcsema_real_eip !15 :          <63>	retq
502 :   %204 = load i128* %XMM9_val, !mcsema_real_eip !15 :          <63>	retq
503 :   store i128 %204, i128* %XMM9, align 1, !mcsema_real_eip !15 :          <63>	retq
504 :   %205 = load i128* %XMM10_val, !mcsema_real_eip !15 :          <63>	retq
505 :   store i128 %205, i128* %XMM10, align 1, !mcsema_real_eip !15 :          <63>	retq
506 :   %206 = load i128* %XMM11_val, !mcsema_real_eip !15 :          <63>	retq
507 :   store i128 %206, i128* %XMM11, align 1, !mcsema_real_eip !15 :          <63>	retq
508 :   %207 = load i128* %XMM12_val, !mcsema_real_eip !15 :          <63>	retq
509 :   store i128 %207, i128* %XMM12, align 1, !mcsema_real_eip !15 :          <63>	retq
510 :   %208 = load i128* %XMM13_val, !mcsema_real_eip !15 :          <63>	retq
511 :   store i128 %208, i128* %XMM13, align 1, !mcsema_real_eip !15 :          <63>	retq
512 :   %209 = load i128* %XMM14_val, !mcsema_real_eip !15 :          <63>	retq
513 :   store i128 %209, i128* %XMM14, align 1, !mcsema_real_eip !15 :          <63>	retq
514 :   %210 = load i128* %XMM15_val, !mcsema_real_eip !15 :          <63>	retq
515 :   store i128 %210, i128* %XMM15, align 1, !mcsema_real_eip !15 :          <63>	retq
516 :   %211 = load i64* %STACK_BASE_val, !mcsema_real_eip !15 :          <63>	retq
517 :   store i64 %211, i64* %STACK_BASE, align 1, !mcsema_real_eip !15 :          <63>	retq
518 :   %212 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !15 :          <63>	retq
519 :   store i64 %212, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !15 :          <63>	retq
520 :   ret void, !mcsema_real_eip !15 :          <63>	retq

521 :   %213 = load i64* %RBP_val, !mcsema_real_eip !16 :          <2f>	movq	-24(%rbp), %rax
522 :   %214 = add i64 %213, -24, !mcsema_real_eip !16 :          <2f>	movq	-24(%rbp), %rax
523 :   %215 = inttoptr i64 %214 to i64*, !mcsema_real_eip !16 :          <2f>	movq	-24(%rbp), %rax
524 :   %216 = load i64* %215, !mcsema_real_eip !16 :          <2f>	movq	-24(%rbp), %rax
525 :   store i64 %216, i64* %RAX_val, !mcsema_real_eip !16 :          <2f>	movq	-24(%rbp), %rax

526 :   %217 = inttoptr i64 %216 to i64*, !mcsema_real_eip !17 :          <33>	movzbl	(%rax), %eax

527 :   %218 = bitcast i64* %217 to i8* : NIL

528 :   %219 = load i8* %218, !mcsema_real_eip !17 :          <33>	movzbl	(%rax), %eax

529 :   %220 = zext i8 %219 to i64 : NIL

530 :   store i64 %220, i64* %RAX_val, !mcsema_real_eip !17 :          <33>	movzbl	(%rax), %eax

531 :   %221 = load i64* %RBP_val, !mcsema_real_eip !18 :          <36>	movb	%al, -9(%rbp)
532 :   %222 = add i64 %221, -9, !mcsema_real_eip !18 :          <36>	movb	%al, -9(%rbp)
533 :   %223 = inttoptr i64 %222 to i64*, !mcsema_real_eip !18 :          <36>	movb	%al, -9(%rbp)

534 :   %224 = bitcast i64* %223 to i8* : NIL

535 :   store i8 %219, i8* %224, !mcsema_real_eip !18 :          <36>	movb	%al, -9(%rbp)

536 :   %225 = load i64* %RBP_val, !mcsema_real_eip !19 :          <39>	movl	-8(%rbp), %eax
537 :   %226 = add i64 %225, -8, !mcsema_real_eip !19 :          <39>	movl	-8(%rbp), %eax
538 :   %227 = inttoptr i64 %226 to i64*, !mcsema_real_eip !19 :          <39>	movl	-8(%rbp), %eax

539 :   %228 = bitcast i64* %227 to i32* : NIL

540 :   %229 = load i32* %228, !mcsema_real_eip !19 :          <39>	movl	-8(%rbp), %eax

541 :   %230 = sext i32 %229 to i64, !mcsema_real_eip !20 :          <3c>	cltq
542 :   store i64 %230, i64* %RAX_val, !mcsema_real_eip !20 :          <3c>	cltq

543 :   %231 = add nsw i64 %230, -1, !mcsema_real_eip !21 :          <3e>	leaq	-1(%rax), %rdx
544 :   %232 = inttoptr i64 %231 to i64*, !mcsema_real_eip !21 :          <3e>	leaq	-1(%rax), %rdx
545 :   %233 = ptrtoint i64* %232 to i64, !mcsema_real_eip !21 :          <3e>	leaq	-1(%rax), %rdx
546 :   store i64 %233, i64* %RDX_val, !mcsema_real_eip !21 :          <3e>	leaq	-1(%rax), %rdx

547 :   %234 = load i64* %RBP_val, !mcsema_real_eip !22 :          <42>	movq	-24(%rbp), %rax
548 :   %235 = add i64 %234, -24, !mcsema_real_eip !22 :          <42>	movq	-24(%rbp), %rax
549 :   %236 = inttoptr i64 %235 to i64*, !mcsema_real_eip !22 :          <42>	movq	-24(%rbp), %rax
550 :   %237 = load i64* %236, !mcsema_real_eip !22 :          <42>	movq	-24(%rbp), %rax

551 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %233, i64 %237) : NIL
552 :   %238 = extractvalue { i64, i1 } %uadd, 0 : NIL

553 :   %239 = xor i64 %238, %237, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
554 :   %240 = xor i64 %239, %233, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
555 :   %241 = and i64 %240, 16, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
556 :   %242 = icmp ne i64 %241, 0, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
557 :   store i1 %242, i1* %AF_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax

558 :   %243 = icmp slt i64 %238, 0 : NIL

559 :   store i1 %243, i1* %SF_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
560 :   %244 = icmp eq i64 %238, 0, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
561 :   store i1 %244, i1* %ZF_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
562 :   %245 = xor i64 %237, -9223372036854775808, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
563 :   %246 = xor i64 %245, %233, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
564 :   %247 = and i64 %239, %246, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax

565 :   %248 = icmp slt i64 %247, 0 : NIL

566 :   store i1 %248, i1* %OF_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
567 :   %249 = trunc i64 %238 to i8, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
568 :   %250 = tail call i8 @llvm.ctpop.i8(i8 %249), !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax

569 :   %251 = and i8 %250, 1 : NIL
570 :   %252 = icmp eq i8 %251, 0 : NIL

571 :   store i1 %252, i1* %PF_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax

572 :   %253 = extractvalue { i64, i1 } %uadd, 1 : NIL

573 :   store i1 %253, i1* %CF_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax
574 :   store i64 %238, i64* %RAX_val, !mcsema_real_eip !23 :          <46>	addq	%rdx, %rax

575 :   %254 = inttoptr i64 %238 to i64*, !mcsema_real_eip !24 :          <49>	movzbl	(%rax), %eax

576 :   %255 = bitcast i64* %254 to i8* : NIL

577 :   %256 = load i8* %255, !mcsema_real_eip !24 :          <49>	movzbl	(%rax), %eax

578 :   %257 = zext i8 %256 to i64 : NIL

579 :   store i64 %257, i64* %RAX_val, !mcsema_real_eip !24 :          <49>	movzbl	(%rax), %eax

580 :   %258 = load i64* %RBP_val, !mcsema_real_eip !25 :          <4c>	movb	%al, -10(%rbp)
581 :   %259 = add i64 %258, -10, !mcsema_real_eip !25 :          <4c>	movb	%al, -10(%rbp)
582 :   %260 = inttoptr i64 %259 to i64*, !mcsema_real_eip !25 :          <4c>	movb	%al, -10(%rbp)

583 :   %261 = bitcast i64* %260 to i8* : NIL

584 :   store i8 %256, i8* %261, !mcsema_real_eip !25 :          <4c>	movb	%al, -10(%rbp)

585 :   %262 = load i64* %RBP_val, !mcsema_real_eip !26 :          <4f>	movzbl	-9(%rbp), %eax
586 :   %263 = add i64 %262, -9, !mcsema_real_eip !26 :          <4f>	movzbl	-9(%rbp), %eax
587 :   %264 = inttoptr i64 %263 to i64*, !mcsema_real_eip !26 :          <4f>	movzbl	-9(%rbp), %eax

588 :   %265 = bitcast i64* %264 to i8* : NIL

589 :   %266 = load i8* %265, !mcsema_real_eip !26 :          <4f>	movzbl	-9(%rbp), %eax

590 :   %267 = zext i8 %266 to i64 : NIL

591 :   store i64 %267, i64* %RAX_val, !mcsema_real_eip !26 :          <4f>	movzbl	-9(%rbp), %eax

592 :   %268 = load i64* %RBP_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
593 :   %269 = add i64 %268, -10, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
594 :   %270 = inttoptr i64 %269 to i64*, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al

595 :   %271 = bitcast i64* %270 to i8* : NIL

596 :   %272 = load i8* %271, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
597 :   %273 = sub i8 %266, %272, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
598 :   %274 = xor i8 %273, %266, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
599 :   %275 = xor i8 %274, %272, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
600 :   %276 = and i8 %275, 16, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
601 :   %277 = icmp ne i8 %276, 0, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
602 :   store i1 %277, i1* %AF_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
603 :   %278 = tail call i8 @llvm.ctpop.i8(i8 %273), !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al

604 :   %279 = and i8 %278, 1 : NIL
605 :   %280 = icmp eq i8 %279, 0 : NIL

606 :   store i1 %280, i1* %PF_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al

607 :   %281 = icmp eq i8 %266, %272 : NIL

608 :   store i1 %281, i1* %ZF_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al

609 :   %282 = icmp slt i8 %273, 0 : NIL

610 :   store i1 %282, i1* %SF_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
611 :   %283 = icmp ult i8 %266, %272, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
612 :   store i1 %283, i1* %CF_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
613 :   %284 = xor i8 %272, %266, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al
614 :   %285 = and i8 %274, %284, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al

615 :   %286 = icmp slt i8 %285, 0 : NIL

616 :   store i1 %286, i1* %OF_val, !mcsema_real_eip !27 :          <53>	cmpb	-10(%rbp), %al

617 :   %287 = load i1* %ZF_val, !mcsema_real_eip !28 :          <56>	jne	7
618 :   br i1 %287, label %block_0x58, label %block_0x5f, !mcsema_real_eip !28 :          <56>	jne	7

619 :   %288 = load i64* %RBP_val, !mcsema_real_eip !29 :          <58>	movl	$0, -4(%rbp)
620 :   %289 = add i64 %288, -4, !mcsema_real_eip !29 :          <58>	movl	$0, -4(%rbp)
621 :   %290 = inttoptr i64 %289 to i64*, !mcsema_real_eip !29 :          <58>	movl	$0, -4(%rbp)

622 :   %291 = bitcast i64* %290 to i32* : NIL

623 :   store i32 0, i32* %291, !mcsema_real_eip !29 :          <58>	movl	$0, -4(%rbp)

624 :   %292 = load i64* %RBP_val, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
625 :   %293 = add i64 %292, -4, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
626 :   %294 = inttoptr i64 %293 to i64*, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax

627 :   %295 = bitcast i64* %294 to i32* : NIL

628 :   %296 = load i32* %295, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
629 :   %297 = zext i32 %296 to i64, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax
630 :   store i64 %297, i64* %RAX_val, !mcsema_real_eip !13 :          <5f>	movl	-4(%rbp), %eax

631 :   %298 = load i64* %RBP_val, !mcsema_real_eip !14 :          <62>	leave
632 :   store i64 %298, i64* %RSP_val, !mcsema_real_eip !14 :          <62>	leave
633 :   %299 = inttoptr i64 %298 to i64*, !mcsema_real_eip !14 :          <62>	leave
634 :   %300 = load i64* %299, !mcsema_real_eip !14 :          <62>	leave
635 :   store i64 %300, i64* %RBP_val, !mcsema_real_eip !14 :          <62>	leave

636 :   %301 = add i64 %298, 16, !mcsema_real_eip !15 :          <63>	retq
637 :   store i64 %301, i64* %RSP_val, !mcsema_real_eip !15 :          <63>	retq
638 :   %302 = load i64* %RAX_val, !mcsema_real_eip !15 :          <63>	retq
639 :   store i64 %302, i64* %RAX, !mcsema_real_eip !15 :          <63>	retq
640 :   %303 = load i64* %RBX_val, !mcsema_real_eip !15 :          <63>	retq
641 :   store i64 %303, i64* %RBX, !mcsema_real_eip !15 :          <63>	retq
642 :   %304 = load i64* %RCX_val, !mcsema_real_eip !15 :          <63>	retq
643 :   store i64 %304, i64* %RCX, !mcsema_real_eip !15 :          <63>	retq
644 :   %305 = load i64* %RDX_val, !mcsema_real_eip !15 :          <63>	retq
645 :   store i64 %305, i64* %RDX, !mcsema_real_eip !15 :          <63>	retq
646 :   %306 = load i64* %RSI_val, !mcsema_real_eip !15 :          <63>	retq
647 :   store i64 %306, i64* %RSI, !mcsema_real_eip !15 :          <63>	retq
648 :   %307 = load i64* %RDI_val, !mcsema_real_eip !15 :          <63>	retq
649 :   store i64 %307, i64* %RDI, !mcsema_real_eip !15 :          <63>	retq
650 :   %308 = load i64* %RSP_val, !mcsema_real_eip !15 :          <63>	retq
651 :   store i64 %308, i64* %RSP, !mcsema_real_eip !15 :          <63>	retq
652 :   %309 = load i64* %RBP_val, !mcsema_real_eip !15 :          <63>	retq
653 :   store i64 %309, i64* %RBP, !mcsema_real_eip !15 :          <63>	retq
654 :   %310 = load i64* %R8_val, !mcsema_real_eip !15 :          <63>	retq
655 :   store i64 %310, i64* %R8, !mcsema_real_eip !15 :          <63>	retq
656 :   %311 = load i64* %R9_val, !mcsema_real_eip !15 :          <63>	retq
657 :   store i64 %311, i64* %R9, !mcsema_real_eip !15 :          <63>	retq
658 :   %312 = load i64* %R10_val, !mcsema_real_eip !15 :          <63>	retq
659 :   store i64 %312, i64* %R10, !mcsema_real_eip !15 :          <63>	retq
660 :   %313 = load i64* %R11_val, !mcsema_real_eip !15 :          <63>	retq
661 :   store i64 %313, i64* %R11, !mcsema_real_eip !15 :          <63>	retq
662 :   %314 = load i64* %R12_val, !mcsema_real_eip !15 :          <63>	retq
663 :   store i64 %314, i64* %R12, !mcsema_real_eip !15 :          <63>	retq
664 :   %315 = load i64* %R13_val, !mcsema_real_eip !15 :          <63>	retq
665 :   store i64 %315, i64* %R13, !mcsema_real_eip !15 :          <63>	retq
666 :   %316 = load i64* %R14_val, !mcsema_real_eip !15 :          <63>	retq
667 :   store i64 %316, i64* %R14, !mcsema_real_eip !15 :          <63>	retq
668 :   %317 = load i64* %R15_val, !mcsema_real_eip !15 :          <63>	retq
669 :   store i64 %317, i64* %R15, !mcsema_real_eip !15 :          <63>	retq
670 :   %318 = load i64* %RIP_val, !mcsema_real_eip !15 :          <63>	retq
671 :   store i64 %318, i64* %RIP, !mcsema_real_eip !15 :          <63>	retq
672 :   %319 = load i1* %CF_val, !mcsema_real_eip !15 :          <63>	retq
673 :   store i1 %319, i1* %CF, align 1, !mcsema_real_eip !15 :          <63>	retq
674 :   %320 = load i1* %PF_val, !mcsema_real_eip !15 :          <63>	retq
675 :   store i1 %320, i1* %PF, align 1, !mcsema_real_eip !15 :          <63>	retq
676 :   %321 = load i1* %AF_val, !mcsema_real_eip !15 :          <63>	retq
677 :   store i1 %321, i1* %AF, align 1, !mcsema_real_eip !15 :          <63>	retq
678 :   %322 = load i1* %ZF_val, !mcsema_real_eip !15 :          <63>	retq
679 :   store i1 %322, i1* %ZF, align 1, !mcsema_real_eip !15 :          <63>	retq
680 :   %323 = load i1* %SF_val, !mcsema_real_eip !15 :          <63>	retq
681 :   store i1 %323, i1* %SF, align 1, !mcsema_real_eip !15 :          <63>	retq
682 :   %324 = load i1* %OF_val, !mcsema_real_eip !15 :          <63>	retq
683 :   store i1 %324, i1* %OF, align 1, !mcsema_real_eip !15 :          <63>	retq
684 :   %325 = load i1* %DF_val, !mcsema_real_eip !15 :          <63>	retq
685 :   store i1 %325, i1* %DF, align 1, !mcsema_real_eip !15 :          <63>	retq
686 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !15 :          <63>	retq
687 :   %326 = load i1* %FPU_B_val, !mcsema_real_eip !15 :          <63>	retq
688 :   store i1 %326, i1* %FPU_B, align 1, !mcsema_real_eip !15 :          <63>	retq
689 :   %327 = load i1* %FPU_C3_val, !mcsema_real_eip !15 :          <63>	retq
690 :   store i1 %327, i1* %FPU_C3, align 1, !mcsema_real_eip !15 :          <63>	retq
691 :   %328 = load i3* %FPU_TOP_val, !mcsema_real_eip !15 :          <63>	retq
692 :   store i3 %328, i3* %FPU_TOP, align 1, !mcsema_real_eip !15 :          <63>	retq
693 :   %329 = load i1* %FPU_C2_val, !mcsema_real_eip !15 :          <63>	retq
694 :   store i1 %329, i1* %FPU_C2, align 1, !mcsema_real_eip !15 :          <63>	retq
695 :   %330 = load i1* %FPU_C1_val, !mcsema_real_eip !15 :          <63>	retq
696 :   store i1 %330, i1* %FPU_C1, align 1, !mcsema_real_eip !15 :          <63>	retq
697 :   %331 = load i1* %FPU_C0_val, !mcsema_real_eip !15 :          <63>	retq
698 :   store i1 %331, i1* %FPU_C0, align 1, !mcsema_real_eip !15 :          <63>	retq
699 :   %332 = load i1* %FPU_ES_val, !mcsema_real_eip !15 :          <63>	retq
700 :   store i1 %332, i1* %FPU_ES, align 1, !mcsema_real_eip !15 :          <63>	retq
701 :   %333 = load i1* %FPU_SF_val, !mcsema_real_eip !15 :          <63>	retq
702 :   store i1 %333, i1* %FPU_SF, align 1, !mcsema_real_eip !15 :          <63>	retq
703 :   %334 = load i1* %FPU_PE_val, !mcsema_real_eip !15 :          <63>	retq
704 :   store i1 %334, i1* %FPU_PE, align 1, !mcsema_real_eip !15 :          <63>	retq
705 :   %335 = load i1* %FPU_UE_val, !mcsema_real_eip !15 :          <63>	retq
706 :   store i1 %335, i1* %FPU_UE, align 1, !mcsema_real_eip !15 :          <63>	retq
707 :   %336 = load i1* %FPU_OE_val, !mcsema_real_eip !15 :          <63>	retq
708 :   store i1 %336, i1* %FPU_OE, align 1, !mcsema_real_eip !15 :          <63>	retq
709 :   %337 = load i1* %FPU_ZE_val, !mcsema_real_eip !15 :          <63>	retq
710 :   store i1 %337, i1* %FPU_ZE, align 1, !mcsema_real_eip !15 :          <63>	retq
711 :   %338 = load i1* %FPU_DE_val, !mcsema_real_eip !15 :          <63>	retq
712 :   store i1 %338, i1* %FPU_DE, align 1, !mcsema_real_eip !15 :          <63>	retq
713 :   %339 = load i1* %FPU_IE_val, !mcsema_real_eip !15 :          <63>	retq
714 :   store i1 %339, i1* %FPU_IE, align 1, !mcsema_real_eip !15 :          <63>	retq
715 :   %340 = load i1* %FPU_X_val, !mcsema_real_eip !15 :          <63>	retq
716 :   store i1 %340, i1* %FPU_X, align 1, !mcsema_real_eip !15 :          <63>	retq
717 :   %341 = load i2* %FPU_RC_val, !mcsema_real_eip !15 :          <63>	retq
718 :   store i2 %341, i2* %FPU_RC, align 1, !mcsema_real_eip !15 :          <63>	retq
719 :   %342 = load i2* %FPU_PC_val, !mcsema_real_eip !15 :          <63>	retq
720 :   store i2 %342, i2* %FPU_PC, align 1, !mcsema_real_eip !15 :          <63>	retq
721 :   %343 = load i1* %FPU_PM_val, !mcsema_real_eip !15 :          <63>	retq
722 :   store i1 %343, i1* %FPU_PM, align 1, !mcsema_real_eip !15 :          <63>	retq
723 :   %344 = load i1* %FPU_UM_val, !mcsema_real_eip !15 :          <63>	retq
724 :   store i1 %344, i1* %FPU_UM, align 1, !mcsema_real_eip !15 :          <63>	retq
725 :   %345 = load i1* %FPU_OM_val, !mcsema_real_eip !15 :          <63>	retq
726 :   store i1 %345, i1* %FPU_OM, align 1, !mcsema_real_eip !15 :          <63>	retq
727 :   %346 = load i1* %FPU_ZM_val, !mcsema_real_eip !15 :          <63>	retq
728 :   store i1 %346, i1* %FPU_ZM, align 1, !mcsema_real_eip !15 :          <63>	retq
729 :   %347 = load i1* %FPU_DM_val, !mcsema_real_eip !15 :          <63>	retq
730 :   store i1 %347, i1* %FPU_DM, align 1, !mcsema_real_eip !15 :          <63>	retq
731 :   %348 = load i1* %FPU_IM_val, !mcsema_real_eip !15 :          <63>	retq
732 :   store i1 %348, i1* %FPU_IM, align 1, !mcsema_real_eip !15 :          <63>	retq

733 :   %349 = load i64* %53, align 4 : NIL
734 :   store i64 %349, i64* %52, align 4 : NIL

735 :   %350 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !15 :          <63>	retq
736 :   store i16 %350, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !15 :          <63>	retq
737 :   %351 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !15 :          <63>	retq
738 :   store i64 %351, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !15 :          <63>	retq
739 :   %352 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !15 :          <63>	retq
740 :   store i16 %352, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !15 :          <63>	retq
741 :   %353 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !15 :          <63>	retq
742 :   store i64 %353, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !15 :          <63>	retq
743 :   %354 = load i128* %XMM0_val, !mcsema_real_eip !15 :          <63>	retq
744 :   store i128 %354, i128* %XMM0, align 1, !mcsema_real_eip !15 :          <63>	retq
745 :   %355 = load i128* %XMM1_val, !mcsema_real_eip !15 :          <63>	retq
746 :   store i128 %355, i128* %XMM1, align 1, !mcsema_real_eip !15 :          <63>	retq
747 :   %356 = load i128* %XMM2_val, !mcsema_real_eip !15 :          <63>	retq
748 :   store i128 %356, i128* %XMM2, align 1, !mcsema_real_eip !15 :          <63>	retq
749 :   %357 = load i128* %XMM3_val, !mcsema_real_eip !15 :          <63>	retq
750 :   store i128 %357, i128* %XMM3, align 1, !mcsema_real_eip !15 :          <63>	retq
751 :   %358 = load i128* %XMM4_val, !mcsema_real_eip !15 :          <63>	retq
752 :   store i128 %358, i128* %XMM4, align 1, !mcsema_real_eip !15 :          <63>	retq
753 :   %359 = load i128* %XMM5_val, !mcsema_real_eip !15 :          <63>	retq
754 :   store i128 %359, i128* %XMM5, align 1, !mcsema_real_eip !15 :          <63>	retq
755 :   %360 = load i128* %XMM6_val, !mcsema_real_eip !15 :          <63>	retq
756 :   store i128 %360, i128* %XMM6, align 1, !mcsema_real_eip !15 :          <63>	retq
757 :   %361 = load i128* %XMM7_val, !mcsema_real_eip !15 :          <63>	retq
758 :   store i128 %361, i128* %XMM7, align 1, !mcsema_real_eip !15 :          <63>	retq
759 :   %362 = load i128* %XMM8_val, !mcsema_real_eip !15 :          <63>	retq
760 :   store i128 %362, i128* %XMM8, align 1, !mcsema_real_eip !15 :          <63>	retq
761 :   %363 = load i128* %XMM9_val, !mcsema_real_eip !15 :          <63>	retq
762 :   store i128 %363, i128* %XMM9, align 1, !mcsema_real_eip !15 :          <63>	retq
763 :   %364 = load i128* %XMM10_val, !mcsema_real_eip !15 :          <63>	retq
764 :   store i128 %364, i128* %XMM10, align 1, !mcsema_real_eip !15 :          <63>	retq
765 :   %365 = load i128* %XMM11_val, !mcsema_real_eip !15 :          <63>	retq
766 :   store i128 %365, i128* %XMM11, align 1, !mcsema_real_eip !15 :          <63>	retq
767 :   %366 = load i128* %XMM12_val, !mcsema_real_eip !15 :          <63>	retq
768 :   store i128 %366, i128* %XMM12, align 1, !mcsema_real_eip !15 :          <63>	retq
769 :   %367 = load i128* %XMM13_val, !mcsema_real_eip !15 :          <63>	retq
770 :   store i128 %367, i128* %XMM13, align 1, !mcsema_real_eip !15 :          <63>	retq
771 :   %368 = load i128* %XMM14_val, !mcsema_real_eip !15 :          <63>	retq
772 :   store i128 %368, i128* %XMM14, align 1, !mcsema_real_eip !15 :          <63>	retq
773 :   %369 = load i128* %XMM15_val, !mcsema_real_eip !15 :          <63>	retq
774 :   store i128 %369, i128* %XMM15, align 1, !mcsema_real_eip !15 :          <63>	retq
775 :   %370 = load i64* %STACK_BASE_val, !mcsema_real_eip !15 :          <63>	retq
776 :   store i64 %370, i64* %STACK_BASE, align 1, !mcsema_real_eip !15 :          <63>	retq
777 :   %371 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !15 :          <63>	retq
778 :   store i64 %371, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !15 :          <63>	retq
779 :   ret void, !mcsema_real_eip !15 :          <63>	retq
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_c2(%struct.regs* %0) : NIL
2 :   ret void : NIL
