========================================================
Source line mapping for function: sub_7
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <7>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <7>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <7>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <7>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <7>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <7>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <7>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <7>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <7>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <7>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <7>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <7>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <7>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <7>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <7>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <7>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <7>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <7>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <7>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <7>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <7>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <7>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <7>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <7>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <7>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <7>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <7>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <7>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <7>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <7>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <7>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <7>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <7>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <7>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <7>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <7>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <7>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <7>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <7>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <7>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <7>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <7>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <7>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <7>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <7>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <7>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <7>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <7>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <7>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <7>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <7>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <7>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <7>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <7>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <7>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <7>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <7>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <7>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <7>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <7>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <7>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <7>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <7>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <7>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <7>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <7>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <7>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <7>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <7>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <7>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <7>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <7>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <7>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <7>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <7>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <7>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <7>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <7>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <7>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <7>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <7>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <7>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <7>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <7>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <7>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <7>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <7>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <7>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <7>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <7>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <7>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <7>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <7>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <7>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <7>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <7>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <7>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <7>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <7>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <7>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <7>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <7>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <7>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <8>	movq	%rsp, %rbp

295 :   store i64 -3958705157555306496, i64* %RAX_val, !mcsema_real_eip !4 :          <b>	movabsq	$-3958705157555306496, %rax

296 :   store i64 16384, i64* %RDX_val, !mcsema_real_eip !5 :          <15>	movl	$16384, %edx

297 :   %81 = add i64 %78, -24, !mcsema_real_eip !6 :          <1a>	movq	%rax, -16(%rbp)
298 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !6 :          <1a>	movq	%rax, -16(%rbp)
299 :   store i64 -3958705157555306496, i64* %82, !mcsema_real_eip !6 :          <1a>	movq	%rax, -16(%rbp)

300 :   %83 = load i64* %RBP_val, !mcsema_real_eip !7 :          <1e>	movl	%edx, -8(%rbp)
301 :   %84 = add i64 %83, -8, !mcsema_real_eip !7 :          <1e>	movl	%edx, -8(%rbp)
302 :   %85 = inttoptr i64 %84 to i64*, !mcsema_real_eip !7 :          <1e>	movl	%edx, -8(%rbp)
303 :   %86 = load i64* %RDX_val, !mcsema_real_eip !7 :          <1e>	movl	%edx, -8(%rbp)
304 :   %87 = trunc i64 %86 to i32, !mcsema_real_eip !7 :          <1e>	movl	%edx, -8(%rbp)

305 :   %88 = bitcast i64* %85 to i32* : NIL

306 :   store i32 %87, i32* %88, !mcsema_real_eip !7 :          <1e>	movl	%edx, -8(%rbp)

307 :   %89 = load i64* %RBP_val, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
308 :   %90 = add i64 %89, 16, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
309 :   %91 = inttoptr i64 %90 to i64*, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
310 :   %92 = bitcast i64* %91 to x86_fp80*, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
311 :   %93 = load x86_fp80* %92, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
312 :   %94 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)

313 :   %95 = add i3 %94, -1 : NIL

314 :   store i3 %95, i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
315 :   %96 = zext i3 %95 to i32, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
316 :   %97 = getelementptr inbounds [8 x x86_fp80]* %STi_val, i32 0, i32 %96, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
317 :   %98 = getelementptr inbounds [8 x i2]* %FPU_TAG_val, i32 0, i32 %96, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
318 :   %99 = load i2* %98, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
319 :   %100 = icmp eq i2 %99, -1, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
320 :   br i1 %100, label %fpu_write, label %fpu_exception, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
321 :   store i1 false, i1* %FPU_C1_val, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
322 :   store i2 0, i2* %98, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
323 :   store x86_fp80 %93, x86_fp80* %97, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)

324 :   %101 = load i64* %RBP_val, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
325 :   %102 = add i64 %101, -16, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
326 :   %103 = inttoptr i64 %102 to i64*, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
327 :   %104 = bitcast i64* %103 to x86_fp80*, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
328 :   %105 = load x86_fp80* %104, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
329 :   %106 = load i3* %FPU_TOP_val, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)

330 :   %107 = add i3 %106, -1 : NIL

331 :   store i3 %107, i3* %FPU_TOP_val, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
332 :   %108 = zext i3 %107 to i32, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
333 :   %109 = getelementptr inbounds [8 x x86_fp80]* %STi_val, i32 0, i32 %108, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
334 :   %110 = getelementptr inbounds [8 x i2]* %FPU_TAG_val, i32 0, i32 %108, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
335 :   %111 = load i2* %110, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
336 :   %112 = icmp eq i2 %111, -1, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
337 :   br i1 %112, label %fpu_write2, label %fpu_exception3, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)

338 :   store i1 true, i1* %FPU_C1_val, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)
339 :   br label %fpu_write, !mcsema_real_eip !8 :          <21>	fldt	16(%rbp)

340 :   store i1 false, i1* %FPU_C1_val, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
341 :   store i2 0, i2* %110, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
342 :   store x86_fp80 %105, x86_fp80* %109, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)

343 :   %113 = load i3* %FPU_TOP_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
344 :   %114 = zext i3 %113 to i32, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
345 :   %115 = getelementptr inbounds [8 x i2]* %FPU_TAG_val, i32 0, i32 %114, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
346 :   %116 = load i2* %115, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)

347 :   %switch81 = icmp eq i2 %116, -1 : NIL
348 :   br i1 %switch81, label %fpu_read_continue, label %fpu_read_normal : NIL

349 :   store i1 true, i1* %FPU_C1_val, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)
350 :   br label %fpu_write2, !mcsema_real_eip !9 :          <24>	fldt	-16(%rbp)

351 :   %117 = getelementptr inbounds [8 x x86_fp80]* %STi_val, i32 0, i32 %114, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
352 :   %118 = load x86_fp80* %117, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
353 :   br label %fpu_read_continue, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
354 :   %fpu_switch_phinode = phi x86_fp80 [ %118, %fpu_read_normal ], [ 0xK00000000000000000000, %fpu_write2 ], !mcsema_real_eip !10 :          <27>	fmulp	%st(1)

355 :   store i1 false, i1* %FPU_C1_val : NIL

356 :   %119 = load i3* %FPU_TOP_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
357 :   %120 = add i3 %119, 1, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
358 :   %121 = zext i3 %120 to i32, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
359 :   %122 = getelementptr inbounds [8 x i2]* %FPU_TAG_val, i32 0, i32 %121, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
360 :   %123 = load i2* %122, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)

361 :   %switch = icmp eq i2 %123, -1 : NIL
362 :   br i1 %switch, label %fpu_read_continue7, label %fpu_read_normal5 : NIL

363 :   %124 = getelementptr inbounds [8 x x86_fp80]* %STi_val, i32 0, i32 %121, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
364 :   %125 = load x86_fp80* %124, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
365 :   br label %fpu_read_continue7, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
366 :   %fpu_switch_phinode8 = phi x86_fp80 [ %125, %fpu_read_normal5 ], [ 0xK00000000000000000000, %fpu_read_continue ], !mcsema_real_eip !10 :          <27>	fmulp	%st(1)

367 :   store i1 false, i1* %FPU_C1_val : NIL

368 :   %126 = fmul x86_fp80 %fpu_switch_phinode, %fpu_switch_phinode8, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
369 :   %127 = load i3* %FPU_TOP_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
370 :   %128 = add i3 %127, 1, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
371 :   %129 = zext i3 %128 to i32, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
372 :   %130 = getelementptr inbounds [8 x x86_fp80]* %STi_val, i32 0, i32 %129, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
373 :   %131 = getelementptr inbounds [8 x i2]* %FPU_TAG_val, i32 0, i32 %129, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
374 :   %132 = load i2* %131, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
375 :   %133 = icmp eq i2 %132, -1, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
376 :   br i1 %133, label %fpu_write9, label %fpu_exception10, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
377 :   store i2 0, i2* %131, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
378 :   store x86_fp80 %126, x86_fp80* %130, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
379 :   store i1 false, i1* %FPU_C1_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
380 :   %134 = load i3* %FPU_TOP_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
381 :   %135 = zext i3 %134 to i32, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
382 :   %136 = getelementptr inbounds [8 x i2]* %FPU_TAG_val, i32 0, i32 %135, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
383 :   store i2 -1, i2* %136, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
384 :   %137 = load i3* %FPU_TOP_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
385 :   %138 = add i3 %137, 1, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
386 :   store i3 %138, i3* %FPU_TOP_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)

387 :   %139 = load i64* %RSP_val, !mcsema_real_eip !11 :          <29>	popq	%rbp
388 :   %140 = inttoptr i64 %139 to i64*, !mcsema_real_eip !11 :          <29>	popq	%rbp
389 :   %141 = load i64* %140, !mcsema_real_eip !11 :          <29>	popq	%rbp
390 :   store i64 %141, i64* %RBP_val, !mcsema_real_eip !11 :          <29>	popq	%rbp

391 :   %142 = add i64 %139, 16, !mcsema_real_eip !12 :          <2a>	retq
392 :   store i64 %142, i64* %RSP_val, !mcsema_real_eip !12 :          <2a>	retq
393 :   %143 = load i64* %RAX_val, !mcsema_real_eip !12 :          <2a>	retq
394 :   store i64 %143, i64* %RAX, !mcsema_real_eip !12 :          <2a>	retq
395 :   %144 = load i64* %RBX_val, !mcsema_real_eip !12 :          <2a>	retq
396 :   store i64 %144, i64* %RBX, !mcsema_real_eip !12 :          <2a>	retq
397 :   %145 = load i64* %RCX_val, !mcsema_real_eip !12 :          <2a>	retq
398 :   store i64 %145, i64* %RCX, !mcsema_real_eip !12 :          <2a>	retq
399 :   %146 = load i64* %RDX_val, !mcsema_real_eip !12 :          <2a>	retq
400 :   store i64 %146, i64* %RDX, !mcsema_real_eip !12 :          <2a>	retq
401 :   %147 = load i64* %RSI_val, !mcsema_real_eip !12 :          <2a>	retq
402 :   store i64 %147, i64* %RSI, !mcsema_real_eip !12 :          <2a>	retq
403 :   %148 = load i64* %RDI_val, !mcsema_real_eip !12 :          <2a>	retq
404 :   store i64 %148, i64* %RDI, !mcsema_real_eip !12 :          <2a>	retq
405 :   %149 = load i64* %RSP_val, !mcsema_real_eip !12 :          <2a>	retq
406 :   store i64 %149, i64* %RSP, !mcsema_real_eip !12 :          <2a>	retq
407 :   %150 = load i64* %RBP_val, !mcsema_real_eip !12 :          <2a>	retq
408 :   store i64 %150, i64* %RBP, !mcsema_real_eip !12 :          <2a>	retq
409 :   %151 = load i64* %R8_val, !mcsema_real_eip !12 :          <2a>	retq
410 :   store i64 %151, i64* %R8, !mcsema_real_eip !12 :          <2a>	retq
411 :   %152 = load i64* %R9_val, !mcsema_real_eip !12 :          <2a>	retq
412 :   store i64 %152, i64* %R9, !mcsema_real_eip !12 :          <2a>	retq
413 :   %153 = load i64* %R10_val, !mcsema_real_eip !12 :          <2a>	retq
414 :   store i64 %153, i64* %R10, !mcsema_real_eip !12 :          <2a>	retq
415 :   %154 = load i64* %R11_val, !mcsema_real_eip !12 :          <2a>	retq
416 :   store i64 %154, i64* %R11, !mcsema_real_eip !12 :          <2a>	retq
417 :   %155 = load i64* %R12_val, !mcsema_real_eip !12 :          <2a>	retq
418 :   store i64 %155, i64* %R12, !mcsema_real_eip !12 :          <2a>	retq
419 :   %156 = load i64* %R13_val, !mcsema_real_eip !12 :          <2a>	retq
420 :   store i64 %156, i64* %R13, !mcsema_real_eip !12 :          <2a>	retq
421 :   %157 = load i64* %R14_val, !mcsema_real_eip !12 :          <2a>	retq
422 :   store i64 %157, i64* %R14, !mcsema_real_eip !12 :          <2a>	retq
423 :   %158 = load i64* %R15_val, !mcsema_real_eip !12 :          <2a>	retq
424 :   store i64 %158, i64* %R15, !mcsema_real_eip !12 :          <2a>	retq
425 :   %159 = load i64* %RIP_val, !mcsema_real_eip !12 :          <2a>	retq
426 :   store i64 %159, i64* %RIP, !mcsema_real_eip !12 :          <2a>	retq
427 :   %160 = load i1* %CF_val, !mcsema_real_eip !12 :          <2a>	retq
428 :   store i1 %160, i1* %CF, align 1, !mcsema_real_eip !12 :          <2a>	retq
429 :   %161 = load i1* %PF_val, !mcsema_real_eip !12 :          <2a>	retq
430 :   store i1 %161, i1* %PF, align 1, !mcsema_real_eip !12 :          <2a>	retq
431 :   %162 = load i1* %AF_val, !mcsema_real_eip !12 :          <2a>	retq
432 :   store i1 %162, i1* %AF, align 1, !mcsema_real_eip !12 :          <2a>	retq
433 :   %163 = load i1* %ZF_val, !mcsema_real_eip !12 :          <2a>	retq
434 :   store i1 %163, i1* %ZF, align 1, !mcsema_real_eip !12 :          <2a>	retq
435 :   %164 = load i1* %SF_val, !mcsema_real_eip !12 :          <2a>	retq
436 :   store i1 %164, i1* %SF, align 1, !mcsema_real_eip !12 :          <2a>	retq
437 :   %165 = load i1* %OF_val, !mcsema_real_eip !12 :          <2a>	retq
438 :   store i1 %165, i1* %OF, align 1, !mcsema_real_eip !12 :          <2a>	retq
439 :   %166 = load i1* %DF_val, !mcsema_real_eip !12 :          <2a>	retq
440 :   store i1 %166, i1* %DF, align 1, !mcsema_real_eip !12 :          <2a>	retq
441 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !12 :          <2a>	retq
442 :   %167 = load i1* %FPU_B_val, !mcsema_real_eip !12 :          <2a>	retq
443 :   store i1 %167, i1* %FPU_B, align 1, !mcsema_real_eip !12 :          <2a>	retq
444 :   %168 = load i1* %FPU_C3_val, !mcsema_real_eip !12 :          <2a>	retq
445 :   store i1 %168, i1* %FPU_C3, align 1, !mcsema_real_eip !12 :          <2a>	retq
446 :   %169 = load i3* %FPU_TOP_val, !mcsema_real_eip !12 :          <2a>	retq
447 :   store i3 %169, i3* %FPU_TOP, align 1, !mcsema_real_eip !12 :          <2a>	retq
448 :   %170 = load i1* %FPU_C2_val, !mcsema_real_eip !12 :          <2a>	retq
449 :   store i1 %170, i1* %FPU_C2, align 1, !mcsema_real_eip !12 :          <2a>	retq
450 :   %171 = load i1* %FPU_C1_val, !mcsema_real_eip !12 :          <2a>	retq
451 :   store i1 %171, i1* %FPU_C1, align 1, !mcsema_real_eip !12 :          <2a>	retq
452 :   %172 = load i1* %FPU_C0_val, !mcsema_real_eip !12 :          <2a>	retq
453 :   store i1 %172, i1* %FPU_C0, align 1, !mcsema_real_eip !12 :          <2a>	retq
454 :   %173 = load i1* %FPU_ES_val, !mcsema_real_eip !12 :          <2a>	retq
455 :   store i1 %173, i1* %FPU_ES, align 1, !mcsema_real_eip !12 :          <2a>	retq
456 :   %174 = load i1* %FPU_SF_val, !mcsema_real_eip !12 :          <2a>	retq
457 :   store i1 %174, i1* %FPU_SF, align 1, !mcsema_real_eip !12 :          <2a>	retq
458 :   %175 = load i1* %FPU_PE_val, !mcsema_real_eip !12 :          <2a>	retq
459 :   store i1 %175, i1* %FPU_PE, align 1, !mcsema_real_eip !12 :          <2a>	retq
460 :   %176 = load i1* %FPU_UE_val, !mcsema_real_eip !12 :          <2a>	retq
461 :   store i1 %176, i1* %FPU_UE, align 1, !mcsema_real_eip !12 :          <2a>	retq
462 :   %177 = load i1* %FPU_OE_val, !mcsema_real_eip !12 :          <2a>	retq
463 :   store i1 %177, i1* %FPU_OE, align 1, !mcsema_real_eip !12 :          <2a>	retq
464 :   %178 = load i1* %FPU_ZE_val, !mcsema_real_eip !12 :          <2a>	retq
465 :   store i1 %178, i1* %FPU_ZE, align 1, !mcsema_real_eip !12 :          <2a>	retq
466 :   %179 = load i1* %FPU_DE_val, !mcsema_real_eip !12 :          <2a>	retq
467 :   store i1 %179, i1* %FPU_DE, align 1, !mcsema_real_eip !12 :          <2a>	retq
468 :   %180 = load i1* %FPU_IE_val, !mcsema_real_eip !12 :          <2a>	retq
469 :   store i1 %180, i1* %FPU_IE, align 1, !mcsema_real_eip !12 :          <2a>	retq
470 :   %181 = load i1* %FPU_X_val, !mcsema_real_eip !12 :          <2a>	retq
471 :   store i1 %181, i1* %FPU_X, align 1, !mcsema_real_eip !12 :          <2a>	retq
472 :   %182 = load i2* %FPU_RC_val, !mcsema_real_eip !12 :          <2a>	retq
473 :   store i2 %182, i2* %FPU_RC, align 1, !mcsema_real_eip !12 :          <2a>	retq
474 :   %183 = load i2* %FPU_PC_val, !mcsema_real_eip !12 :          <2a>	retq
475 :   store i2 %183, i2* %FPU_PC, align 1, !mcsema_real_eip !12 :          <2a>	retq
476 :   %184 = load i1* %FPU_PM_val, !mcsema_real_eip !12 :          <2a>	retq
477 :   store i1 %184, i1* %FPU_PM, align 1, !mcsema_real_eip !12 :          <2a>	retq
478 :   %185 = load i1* %FPU_UM_val, !mcsema_real_eip !12 :          <2a>	retq
479 :   store i1 %185, i1* %FPU_UM, align 1, !mcsema_real_eip !12 :          <2a>	retq
480 :   %186 = load i1* %FPU_OM_val, !mcsema_real_eip !12 :          <2a>	retq
481 :   store i1 %186, i1* %FPU_OM, align 1, !mcsema_real_eip !12 :          <2a>	retq
482 :   %187 = load i1* %FPU_ZM_val, !mcsema_real_eip !12 :          <2a>	retq
483 :   store i1 %187, i1* %FPU_ZM, align 1, !mcsema_real_eip !12 :          <2a>	retq
484 :   %188 = load i1* %FPU_DM_val, !mcsema_real_eip !12 :          <2a>	retq
485 :   store i1 %188, i1* %FPU_DM, align 1, !mcsema_real_eip !12 :          <2a>	retq
486 :   %189 = load i1* %FPU_IM_val, !mcsema_real_eip !12 :          <2a>	retq
487 :   store i1 %189, i1* %FPU_IM, align 1, !mcsema_real_eip !12 :          <2a>	retq

488 :   %190 = load i64* %53, align 4 : NIL
489 :   store i64 %190, i64* %52, align 4 : NIL

490 :   %191 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !12 :          <2a>	retq
491 :   store i16 %191, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !12 :          <2a>	retq
492 :   %192 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !12 :          <2a>	retq
493 :   store i64 %192, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !12 :          <2a>	retq
494 :   %193 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !12 :          <2a>	retq
495 :   store i16 %193, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !12 :          <2a>	retq
496 :   %194 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !12 :          <2a>	retq
497 :   store i64 %194, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !12 :          <2a>	retq
498 :   %195 = load i128* %XMM0_val, !mcsema_real_eip !12 :          <2a>	retq
499 :   store i128 %195, i128* %XMM0, align 1, !mcsema_real_eip !12 :          <2a>	retq
500 :   %196 = load i128* %XMM1_val, !mcsema_real_eip !12 :          <2a>	retq
501 :   store i128 %196, i128* %XMM1, align 1, !mcsema_real_eip !12 :          <2a>	retq
502 :   %197 = load i128* %XMM2_val, !mcsema_real_eip !12 :          <2a>	retq
503 :   store i128 %197, i128* %XMM2, align 1, !mcsema_real_eip !12 :          <2a>	retq
504 :   %198 = load i128* %XMM3_val, !mcsema_real_eip !12 :          <2a>	retq
505 :   store i128 %198, i128* %XMM3, align 1, !mcsema_real_eip !12 :          <2a>	retq
506 :   %199 = load i128* %XMM4_val, !mcsema_real_eip !12 :          <2a>	retq
507 :   store i128 %199, i128* %XMM4, align 1, !mcsema_real_eip !12 :          <2a>	retq
508 :   %200 = load i128* %XMM5_val, !mcsema_real_eip !12 :          <2a>	retq
509 :   store i128 %200, i128* %XMM5, align 1, !mcsema_real_eip !12 :          <2a>	retq
510 :   %201 = load i128* %XMM6_val, !mcsema_real_eip !12 :          <2a>	retq
511 :   store i128 %201, i128* %XMM6, align 1, !mcsema_real_eip !12 :          <2a>	retq
512 :   %202 = load i128* %XMM7_val, !mcsema_real_eip !12 :          <2a>	retq
513 :   store i128 %202, i128* %XMM7, align 1, !mcsema_real_eip !12 :          <2a>	retq
514 :   %203 = load i128* %XMM8_val, !mcsema_real_eip !12 :          <2a>	retq
515 :   store i128 %203, i128* %XMM8, align 1, !mcsema_real_eip !12 :          <2a>	retq
516 :   %204 = load i128* %XMM9_val, !mcsema_real_eip !12 :          <2a>	retq
517 :   store i128 %204, i128* %XMM9, align 1, !mcsema_real_eip !12 :          <2a>	retq
518 :   %205 = load i128* %XMM10_val, !mcsema_real_eip !12 :          <2a>	retq
519 :   store i128 %205, i128* %XMM10, align 1, !mcsema_real_eip !12 :          <2a>	retq
520 :   %206 = load i128* %XMM11_val, !mcsema_real_eip !12 :          <2a>	retq
521 :   store i128 %206, i128* %XMM11, align 1, !mcsema_real_eip !12 :          <2a>	retq
522 :   %207 = load i128* %XMM12_val, !mcsema_real_eip !12 :          <2a>	retq
523 :   store i128 %207, i128* %XMM12, align 1, !mcsema_real_eip !12 :          <2a>	retq
524 :   %208 = load i128* %XMM13_val, !mcsema_real_eip !12 :          <2a>	retq
525 :   store i128 %208, i128* %XMM13, align 1, !mcsema_real_eip !12 :          <2a>	retq
526 :   %209 = load i128* %XMM14_val, !mcsema_real_eip !12 :          <2a>	retq
527 :   store i128 %209, i128* %XMM14, align 1, !mcsema_real_eip !12 :          <2a>	retq
528 :   %210 = load i128* %XMM15_val, !mcsema_real_eip !12 :          <2a>	retq
529 :   store i128 %210, i128* %XMM15, align 1, !mcsema_real_eip !12 :          <2a>	retq
530 :   %211 = load i64* %STACK_BASE_val, !mcsema_real_eip !12 :          <2a>	retq
531 :   store i64 %211, i64* %STACK_BASE, align 1, !mcsema_real_eip !12 :          <2a>	retq
532 :   %212 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !12 :          <2a>	retq
533 :   store i64 %212, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !12 :          <2a>	retq
534 :   ret void, !mcsema_real_eip !12 :          <2a>	retq

535 :   store i1 true, i1* %FPU_C1_val, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
536 :   br label %fpu_write9, !mcsema_real_eip !10 :          <27>	fmulp	%st(1)
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_7(%struct.regs* %0) : NIL
2 :   ret void : NIL
