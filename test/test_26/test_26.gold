Args: /home/sdasgup3/Install/llvm-3.5.0.install/bin/opt -load=/home/sdasgup3/Github/binary-decompilation/source/Release+Asserts/lib/LLVMmax_stack_height.so -ssh -debug test_26.ll -o /dev/null 

Features:+64bit,+sse2
CPU:generic

Subtarget features: SSELevel 3, 3DNowLevel 0, 64bit 1
==========================================
Function : sub_70
==========================================
----------------------------------
sub_70::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: 0:-8:-8:0
  %81 = add i64 %78, -72 :::  [I] = -72 : Inst :: 0:-72:-8:0
  store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :::  [I] = NULL : Inst :: -72:-72:-8:0
  %94 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -72:-72:-8:0
  %95 = add i64 %94, -4, !mcsema_real_eip !6 :::  [I] = -12 : Inst :: -72:-72:-8:-12
  %98 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -72:-72:-8:-12
  %99 = add i64 %98, -16, !mcsema_real_eip !8 :::  [I] = -24 : Inst :: -72:-72:-8:-24
  %101 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -72:-72:-8:-24
  %102 = add i64 %101, -8, !mcsema_real_eip !9 :::  [I] = -16 : Inst :: -72:-72:-8:-24
  %105 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -72:-72:-8:-24
  %106 = add i64 %105, -8, !mcsema_real_eip !10 :::  [I] = -16 : Inst :: -72:-72:-8:-24
  %111 = load i64* %RSP_val, !mcsema_real_eip !11 :::  [I] = -72 : Inst :: -72:-72:-8:-24
  %112 = add i64 %111, 8, !mcsema_real_eip !12 :::  [I] = -64 : Inst :: -72:-72:-8:-24
  %115 = load i64* %RBP_val, !mcsema_real_eip !13 :::  [I] = -8 : Inst :: -72:-72:-8:-24
  %116 = add i64 %115, -16, !mcsema_real_eip !13 :::  [I] = -24 : Inst :: -72:-72:-8:-24
  %121 = load i64* %RBP_val, !mcsema_real_eip !21 :::  [I] = -8 : Inst :: -72:-72:-8:-24
  %122 = add i64 %121, -52, !mcsema_real_eip !21 :::  [I] = -60 : Inst :: -72:-72:-8:-60
  %127 = load i64* %RSP_val, !mcsema_real_eip !22 :::  [I] = -72 : Inst :: -72:-72:-8:-60
  %128 = add i64 %127, -8 :::  [I] = -80 : Inst :: -72:-80:-8:-60
  store i64 %128, i64* %RSP_val, !mcsema_real_eip !22 :::  [I] = NULL : Inst :: -80:-80:-8:-60
  %136 = load i64* %RSP_val, !mcsema_real_eip !22 :::  [I] = -80 : Inst :: -80:-80:-8:-60
  %137 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -80:-80:-8:-60
  tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !22 :::  [I] = NULL : Inst :: -72:-80:-8:-60
  %270 = load i64* %RBP_val, !mcsema_real_eip !23 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %271 = add i64 %270, -40, !mcsema_real_eip !23 :::  [I] = -48 : Inst :: -72:-80:-8:-60
  %276 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %277 = add i64 %276, -48, !mcsema_real_eip !24 :::  [I] = -56 : Inst :: -72:-80:-8:-60
  %280 = load i64* %RBP_val, !mcsema_real_eip !25 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %281 = add i64 %280, -48, !mcsema_real_eip !25 :::  [I] = -56 : Inst :: -72:-80:-8:-60
  %284 = add i64 %280, -32, !mcsema_real_eip !26 :::  [I] = -40 : Inst :: -72:-80:-8:-60
  %286 = load i64* %RBP_val, !mcsema_real_eip !27 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %287 = add i64 %286, -40, !mcsema_real_eip !27 :::  [I] = -48 : Inst :: -72:-80:-8:-60
  %292 = load i64* %RBP_val, !mcsema_real_eip !28 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %293 = add i64 %292, -24, !mcsema_real_eip !28 :::  [I] = -32 : Inst :: -72:-80:-8:-60
  %296 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %297 = add i64 %296, -52, !mcsema_real_eip !29 :::  [I] = -60 : Inst :: -72:-80:-8:-60
  %302 = load i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = -72 : Inst :: -72:-80:-8:-60
  %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %302, i64 64) :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %303 = extractvalue { i64, i1 } %uadd, 0 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  %316 = extractvalue { i64, i1 } %uadd, 1 :::  [I] = -8 : Inst :: -72:-80:-8:-60
  store i64 %303, i64* %RSP_val, !mcsema_real_eip !30 :::  [I] = NULL : Inst :: -8:-80:-8:-60
  %319 = add i64 %303, 16, !mcsema_real_eip !32 :::  [I] = 8 : Inst :: -8:-80:-8:-60
  store i64 %319, i64* %RSP_val, !mcsema_real_eip !32 :::  [I] = NULL : Inst :: 8:-80:-8:-60
  %326 = load i64* %RSP_val, !mcsema_real_eip !32 :::  [I] = 8 : Inst :: 8:-80:-8:-60
  %327 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: 8:-80:-8:-60
Gen :: 8:-80:-8:-60


DFA Analysis: 
sub_70::entry
	Gen :: 8:-80:-8:-60
	Out :: 8:-80:-8:-60
sub_70::entry
	Gen :: 8:-80:-8:-60
	Out :: 8:-80:-8:-60
Height[ sub_70 ] : -80
==========================================
Function : sub_0
==========================================
----------------------------------
sub_0::entry
----------------------------------
  %77 = load i64* %RBP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %78 = load i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = 0 : Inst :: 0:0:0:0
  %79 = add i64 %78, -8 :::  [I] = -8 : Inst :: 0:-8:0:0
  store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :::  [I] = NULL : Inst :: -8:-8:0:0
  store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :::  [I] = NULL : Inst :: -8:-8:-8:0
  %81 = add i64 %78, 8, !mcsema_real_eip !4 :::  [I] = 8 : Inst :: -8:-8:-8:0
  %84 = add i64 %78, -28, !mcsema_real_eip !5 :::  [I] = -28 : Inst :: -8:-28:-8:0
  %89 = load i64* %RBP_val, !mcsema_real_eip !6 :::  [I] = -8 : Inst :: -8:-28:-8:0
  %90 = add i64 %89, -24, !mcsema_real_eip !6 :::  [I] = -32 : Inst :: -8:-28:-8:-32
  %95 = load i64* %RBP_val, !mcsema_real_eip !7 :::  [I] = -8 : Inst :: -8:-28:-8:-32
  %96 = add i64 %95, -28, !mcsema_real_eip !7 :::  [I] = -36 : Inst :: -8:-28:-8:-36
  %101 = load i64* %RBP_val, !mcsema_real_eip !8 :::  [I] = -8 : Inst :: -8:-28:-8:-36
  %102 = add i64 %101, -32, !mcsema_real_eip !8 :::  [I] = -40 : Inst :: -8:-28:-8:-40
  %107 = load i64* %RBP_val, !mcsema_real_eip !9 :::  [I] = -8 : Inst :: -8:-28:-8:-40
  %108 = add i64 %107, -36, !mcsema_real_eip !9 :::  [I] = -44 : Inst :: -8:-28:-8:-44
  %113 = load i64* %RBP_val, !mcsema_real_eip !10 :::  [I] = -8 : Inst :: -8:-28:-8:-44
  %114 = add i64 %113, -40, !mcsema_real_eip !10 :::  [I] = -48 : Inst :: -8:-28:-8:-48
  %124 = load i64* %RBP_val, !mcsema_real_eip !12 :::  [I] = -8 : Inst :: -8:-28:-8:-48
  %125 = add i64 %124, -20, !mcsema_real_eip !12 :::  [I] = -28 : Inst :: -8:-28:-8:-48
  %149 = load i64* %RBP_val, !mcsema_real_eip !14 :::  [I] = -8 : Inst :: -8:-28:-8:-48
  %150 = add i64 %149, -24, !mcsema_real_eip !14 :::  [I] = -32 : Inst :: -8:-28:-8:-48
  %174 = load i64* %RBP_val, !mcsema_real_eip !16 :::  [I] = -8 : Inst :: -8:-28:-8:-48
  %175 = add i64 %174, -28, !mcsema_real_eip !16 :::  [I] = -36 : Inst :: -8:-28:-8:-48
  %199 = load i64* %RBP_val, !mcsema_real_eip !18 :::  [I] = -8 : Inst :: -8:-28:-8:-48
  %200 = add i64 %199, -56, !mcsema_real_eip !18 :::  [I] = -64 : Inst :: -8:-28:-8:-64
  %209 = load i64* %RBP_val, !mcsema_real_eip !20 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %210 = add i64 %209, -32, !mcsema_real_eip !20 :::  [I] = -40 : Inst :: -8:-28:-8:-64
  %234 = load i64* %RBP_val, !mcsema_real_eip !22 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %235 = add i64 %234, -36, !mcsema_real_eip !22 :::  [I] = -44 : Inst :: -8:-28:-8:-64
  %259 = load i64* %RBP_val, !mcsema_real_eip !24 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %260 = add i64 %259, -40, !mcsema_real_eip !24 :::  [I] = -48 : Inst :: -8:-28:-8:-64
  %284 = load i64* %RBP_val, !mcsema_real_eip !26 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %285 = add i64 %284, -52, !mcsema_real_eip !26 :::  [I] = -60 : Inst :: -8:-28:-8:-64
  %294 = load i64* %RBP_val, !mcsema_real_eip !28 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %295 = add i64 %294, -48, !mcsema_real_eip !28 :::  [I] = -56 : Inst :: -8:-28:-8:-64
  %298 = load i64* %RBP_val, !mcsema_real_eip !29 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %299 = add i64 %298, -8, !mcsema_real_eip !29 :::  [I] = -16 : Inst :: -8:-28:-8:-64
  %304 = load i64* %RBP_val, !mcsema_real_eip !30 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %305 = add i64 %304, -56, !mcsema_real_eip !30 :::  [I] = -64 : Inst :: -8:-28:-8:-64
  %308 = add i64 %304, -16, !mcsema_real_eip !31 :::  [I] = -24 : Inst :: -8:-28:-8:-64
  %310 = load i64* %RBP_val, !mcsema_real_eip !32 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %311 = add i64 %310, -8, !mcsema_real_eip !32 :::  [I] = -16 : Inst :: -8:-28:-8:-64
  %316 = load i64* %RBP_val, !mcsema_real_eip !33 :::  [I] = -8 : Inst :: -8:-28:-8:-64
  %317 = add i64 %316, -64, !mcsema_real_eip !33 :::  [I] = -72 : Inst :: -8:-28:-8:-72
  %320 = load i64* %RBP_val, !mcsema_real_eip !34 :::  [I] = -8 : Inst :: -8:-28:-8:-72
  %321 = add i64 %320, -16, !mcsema_real_eip !34 :::  [I] = -24 : Inst :: -8:-28:-8:-72
  %324 = add i64 %320, -72, !mcsema_real_eip !35 :::  [I] = -80 : Inst :: -8:-28:-8:-80
  %326 = load i64* %RBP_val, !mcsema_real_eip !36 :::  [I] = -8 : Inst :: -8:-28:-8:-80
  %327 = add i64 %326, -72, !mcsema_real_eip !36 :::  [I] = -80 : Inst :: -8:-28:-8:-80
  %330 = add i64 %326, -64, !mcsema_real_eip !37 :::  [I] = -72 : Inst :: -8:-28:-8:-80
  %335 = load i64* %RSP_val, !mcsema_real_eip !38 :::  [I] = -8 : Inst :: -8:-28:-8:-80
  %338 = add i64 %335, 16, !mcsema_real_eip !39 :::  [I] = 8 : Inst :: -8:-28:-8:-80
  store i64 %338, i64* %RSP_val, !mcsema_real_eip !39 :::  [I] = NULL : Inst :: 8:-28:-8:-80
  %345 = load i64* %RSP_val, !mcsema_real_eip !39 :::  [I] = 8 : Inst :: 8:-28:-8:-80
  %346 = load i64* %RBP_val, !mcsema_real_eip !39 :::  [I] = -8 : Inst :: 8:-28:-8:-80
Gen :: 8:-28:-8:-80


DFA Analysis: 
sub_0::entry
	Gen :: 8:-28:-8:-80
	Out :: 8:-28:-8:-80
sub_0::entry
	Gen :: 8:-28:-8:-80
	Out :: 8:-28:-8:-80
Height[ sub_0 ] : -80
==========================================
Function : mcsema_main
==========================================
