========================================================
Source line mapping for function: sub_70
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <70>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <70>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <70>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <70>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <70>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <70>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <70>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <70>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <70>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <70>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <70>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <70>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <70>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <70>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <70>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <70>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <70>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <70>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <70>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <70>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <70>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <70>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <70>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <70>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <70>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <70>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <70>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <70>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <70>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <70>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <70>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <70>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <70>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <70>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <70>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <70>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <70>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <70>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <70>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <70>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <70>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <70>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <70>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <70>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <70>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <70>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <70>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <70>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <70>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <70>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <70>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <70>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <70>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <70>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <70>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <70>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <70>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <70>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <70>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <70>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <70>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <70>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <70>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <70>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <70>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <70>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <70>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <70>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <70>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <70>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <70>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <70>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <70>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <70>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <70>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <70>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <70>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <70>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <70>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <70>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <70>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <70>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <70>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <71>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -72 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
296 :   %83 = and i64 %82, 16, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
297 :   %84 = icmp ne i64 %83, 0, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <74>	subq	$64, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
308 :   %91 = icmp ult i64 %79, 64, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <74>	subq	$64, %rsp

314 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <78>	movl	$0, %eax

315 :   %94 = load i64* %RBP_val, !mcsema_real_eip !6 :          <7d>	movl	$0, -4(%rbp)
316 :   %95 = add i64 %94, -4, !mcsema_real_eip !6 :          <7d>	movl	$0, -4(%rbp)
317 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !6 :          <7d>	movl	$0, -4(%rbp)

318 :   %97 = bitcast i64* %96 to i32* : NIL

319 :   store i32 0, i32* %97, !mcsema_real_eip !6 :          <7d>	movl	$0, -4(%rbp)

320 :   store i64 85899345930, i64* %RCX_val, !mcsema_real_eip !7 :          <84>	movabsq	$85899345930, %rcx

321 :   %98 = load i64* %RBP_val, !mcsema_real_eip !8 :          <8e>	movq	%rcx, -16(%rbp)
322 :   %99 = add i64 %98, -16, !mcsema_real_eip !8 :          <8e>	movq	%rcx, -16(%rbp)
323 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !8 :          <8e>	movq	%rcx, -16(%rbp)
324 :   store i64 85899345930, i64* %100, !mcsema_real_eip !8 :          <8e>	movq	%rcx, -16(%rbp)

325 :   %101 = load i64* %RBP_val, !mcsema_real_eip !9 :          <92>	movl	$30, -8(%rbp)
326 :   %102 = add i64 %101, -8, !mcsema_real_eip !9 :          <92>	movl	$30, -8(%rbp)
327 :   %103 = inttoptr i64 %102 to i64*, !mcsema_real_eip !9 :          <92>	movl	$30, -8(%rbp)

328 :   %104 = bitcast i64* %103 to i32* : NIL

329 :   store i32 30, i32* %104, !mcsema_real_eip !9 :          <92>	movl	$30, -8(%rbp)

330 :   %105 = load i64* %RBP_val, !mcsema_real_eip !10 :          <99>	movl	-8(%rbp), %edx
331 :   %106 = add i64 %105, -8, !mcsema_real_eip !10 :          <99>	movl	-8(%rbp), %edx
332 :   %107 = inttoptr i64 %106 to i64*, !mcsema_real_eip !10 :          <99>	movl	-8(%rbp), %edx

333 :   %108 = bitcast i64* %107 to i32* : NIL

334 :   %109 = load i32* %108, !mcsema_real_eip !10 :          <99>	movl	-8(%rbp), %edx
335 :   %110 = zext i32 %109 to i64, !mcsema_real_eip !10 :          <99>	movl	-8(%rbp), %edx
336 :   store i64 %110, i64* %RDX_val, !mcsema_real_eip !10 :          <99>	movl	-8(%rbp), %edx

337 :   %111 = load i64* %RSP_val, !mcsema_real_eip !11 :          <9c>	movq	%rsp, %rcx
338 :   store i64 %111, i64* %RCX_val, !mcsema_real_eip !11 :          <9c>	movq	%rsp, %rcx

339 :   %112 = add i64 %111, 8, !mcsema_real_eip !12 :          <9f>	movl	%edx, 8(%rcx)
340 :   %113 = inttoptr i64 %112 to i64*, !mcsema_real_eip !12 :          <9f>	movl	%edx, 8(%rcx)

341 :   %114 = bitcast i64* %113 to i32* : NIL

342 :   store i32 %109, i32* %114, !mcsema_real_eip !12 :          <9f>	movl	%edx, 8(%rcx)

343 :   %115 = load i64* %RBP_val, !mcsema_real_eip !13 :          <a2>	movq	-16(%rbp), %rsi
344 :   %116 = add i64 %115, -16, !mcsema_real_eip !13 :          <a2>	movq	-16(%rbp), %rsi
345 :   %117 = inttoptr i64 %116 to i64*, !mcsema_real_eip !13 :          <a2>	movq	-16(%rbp), %rsi
346 :   %118 = load i64* %117, !mcsema_real_eip !13 :          <a2>	movq	-16(%rbp), %rsi

347 :   %119 = load i64* %RCX_val, !mcsema_real_eip !14 :          <a6>	movq	%rsi, (%rcx)
348 :   %120 = inttoptr i64 %119 to i64*, !mcsema_real_eip !14 :          <a6>	movq	%rsi, (%rcx)
349 :   store i64 %118, i64* %120, !mcsema_real_eip !14 :          <a6>	movq	%rsi, (%rcx)

350 :   store i64 1, i64* %RDI_val, !mcsema_real_eip !15 :          <a9>	movl	$1, %edi

351 :   store i64 2, i64* %RSI_val, !mcsema_real_eip !16 :          <ae>	movl	$2, %esi

352 :   store i64 3, i64* %RDX_val, !mcsema_real_eip !17 :          <b3>	movl	$3, %edx

353 :   store i64 4, i64* %RCX_val, !mcsema_real_eip !18 :          <b8>	movl	$4, %ecx

354 :   store i64 5, i64* %R8_val, !mcsema_real_eip !19 :          <bd>	movl	$5, %r8d

355 :   store i64 6, i64* %R9_val, !mcsema_real_eip !20 :          <c3>	movl	$6, %r9d

356 :   %121 = load i64* %RBP_val, !mcsema_real_eip !21 :          <c9>	movl	%eax, -52(%rbp)
357 :   %122 = add i64 %121, -52, !mcsema_real_eip !21 :          <c9>	movl	%eax, -52(%rbp)
358 :   %123 = inttoptr i64 %122 to i64*, !mcsema_real_eip !21 :          <c9>	movl	%eax, -52(%rbp)
359 :   %124 = load i64* %RAX_val, !mcsema_real_eip !21 :          <c9>	movl	%eax, -52(%rbp)
360 :   %125 = trunc i64 %124 to i32, !mcsema_real_eip !21 :          <c9>	movl	%eax, -52(%rbp)

361 :   %126 = bitcast i64* %123 to i32* : NIL

362 :   store i32 %125, i32* %126, !mcsema_real_eip !21 :          <c9>	movl	%eax, -52(%rbp)

363 :   %127 = load i64* %RSP_val, !mcsema_real_eip !22 :          <cc>	callq	-209

364 :   %128 = add i64 %127, -8 : NIL

365 :   %129 = inttoptr i64 %128 to i64*, !mcsema_real_eip !22 :          <cc>	callq	-209
366 :   store i64 -4981261766360305936, i64* %129, !mcsema_real_eip !22 :          <cc>	callq	-209
367 :   store i64 %128, i64* %RSP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
368 :   %130 = load i64* %RAX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
369 :   store i64 %130, i64* %RAX, !mcsema_real_eip !22 :          <cc>	callq	-209
370 :   %131 = load i64* %RBX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
371 :   store i64 %131, i64* %RBX, !mcsema_real_eip !22 :          <cc>	callq	-209
372 :   %132 = load i64* %RCX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
373 :   store i64 %132, i64* %RCX, !mcsema_real_eip !22 :          <cc>	callq	-209
374 :   %133 = load i64* %RDX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
375 :   store i64 %133, i64* %RDX, !mcsema_real_eip !22 :          <cc>	callq	-209
376 :   %134 = load i64* %RSI_val, !mcsema_real_eip !22 :          <cc>	callq	-209
377 :   store i64 %134, i64* %RSI, !mcsema_real_eip !22 :          <cc>	callq	-209
378 :   %135 = load i64* %RDI_val, !mcsema_real_eip !22 :          <cc>	callq	-209
379 :   store i64 %135, i64* %RDI, !mcsema_real_eip !22 :          <cc>	callq	-209
380 :   %136 = load i64* %RSP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
381 :   store i64 %136, i64* %RSP, !mcsema_real_eip !22 :          <cc>	callq	-209
382 :   %137 = load i64* %RBP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
383 :   store i64 %137, i64* %RBP, !mcsema_real_eip !22 :          <cc>	callq	-209
384 :   %138 = load i64* %R8_val, !mcsema_real_eip !22 :          <cc>	callq	-209
385 :   store i64 %138, i64* %R8, !mcsema_real_eip !22 :          <cc>	callq	-209
386 :   %139 = load i64* %R9_val, !mcsema_real_eip !22 :          <cc>	callq	-209
387 :   store i64 %139, i64* %R9, !mcsema_real_eip !22 :          <cc>	callq	-209
388 :   %140 = load i64* %R10_val, !mcsema_real_eip !22 :          <cc>	callq	-209
389 :   store i64 %140, i64* %R10, !mcsema_real_eip !22 :          <cc>	callq	-209
390 :   %141 = load i64* %R11_val, !mcsema_real_eip !22 :          <cc>	callq	-209
391 :   store i64 %141, i64* %R11, !mcsema_real_eip !22 :          <cc>	callq	-209
392 :   %142 = load i64* %R12_val, !mcsema_real_eip !22 :          <cc>	callq	-209
393 :   store i64 %142, i64* %R12, !mcsema_real_eip !22 :          <cc>	callq	-209
394 :   %143 = load i64* %R13_val, !mcsema_real_eip !22 :          <cc>	callq	-209
395 :   store i64 %143, i64* %R13, !mcsema_real_eip !22 :          <cc>	callq	-209
396 :   %144 = load i64* %R14_val, !mcsema_real_eip !22 :          <cc>	callq	-209
397 :   store i64 %144, i64* %R14, !mcsema_real_eip !22 :          <cc>	callq	-209
398 :   %145 = load i64* %R15_val, !mcsema_real_eip !22 :          <cc>	callq	-209
399 :   store i64 %145, i64* %R15, !mcsema_real_eip !22 :          <cc>	callq	-209
400 :   %146 = load i64* %RIP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
401 :   store i64 %146, i64* %RIP, !mcsema_real_eip !22 :          <cc>	callq	-209
402 :   %147 = load i1* %CF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
403 :   store i1 %147, i1* %CF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
404 :   %148 = load i1* %PF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
405 :   store i1 %148, i1* %PF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
406 :   %149 = load i1* %AF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
407 :   store i1 %149, i1* %AF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
408 :   %150 = load i1* %ZF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
409 :   store i1 %150, i1* %ZF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
410 :   %151 = load i1* %SF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
411 :   store i1 %151, i1* %SF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
412 :   %152 = load i1* %OF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
413 :   store i1 %152, i1* %OF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
414 :   %153 = load i1* %DF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
415 :   store i1 %153, i1* %DF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
416 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !22 :          <cc>	callq	-209
417 :   %154 = load i1* %FPU_B_val, !mcsema_real_eip !22 :          <cc>	callq	-209
418 :   store i1 %154, i1* %FPU_B, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
419 :   %155 = load i1* %FPU_C3_val, !mcsema_real_eip !22 :          <cc>	callq	-209
420 :   store i1 %155, i1* %FPU_C3, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
421 :   %156 = load i3* %FPU_TOP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
422 :   store i3 %156, i3* %FPU_TOP, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
423 :   %157 = load i1* %FPU_C2_val, !mcsema_real_eip !22 :          <cc>	callq	-209
424 :   store i1 %157, i1* %FPU_C2, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
425 :   %158 = load i1* %FPU_C1_val, !mcsema_real_eip !22 :          <cc>	callq	-209
426 :   store i1 %158, i1* %FPU_C1, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
427 :   %159 = load i1* %FPU_C0_val, !mcsema_real_eip !22 :          <cc>	callq	-209
428 :   store i1 %159, i1* %FPU_C0, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
429 :   %160 = load i1* %FPU_ES_val, !mcsema_real_eip !22 :          <cc>	callq	-209
430 :   store i1 %160, i1* %FPU_ES, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
431 :   %161 = load i1* %FPU_SF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
432 :   store i1 %161, i1* %FPU_SF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
433 :   %162 = load i1* %FPU_PE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
434 :   store i1 %162, i1* %FPU_PE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
435 :   %163 = load i1* %FPU_UE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
436 :   store i1 %163, i1* %FPU_UE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
437 :   %164 = load i1* %FPU_OE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
438 :   store i1 %164, i1* %FPU_OE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
439 :   %165 = load i1* %FPU_ZE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
440 :   store i1 %165, i1* %FPU_ZE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
441 :   %166 = load i1* %FPU_DE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
442 :   store i1 %166, i1* %FPU_DE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
443 :   %167 = load i1* %FPU_IE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
444 :   store i1 %167, i1* %FPU_IE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
445 :   %168 = load i1* %FPU_X_val, !mcsema_real_eip !22 :          <cc>	callq	-209
446 :   store i1 %168, i1* %FPU_X, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
447 :   %169 = load i2* %FPU_RC_val, !mcsema_real_eip !22 :          <cc>	callq	-209
448 :   store i2 %169, i2* %FPU_RC, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
449 :   %170 = load i2* %FPU_PC_val, !mcsema_real_eip !22 :          <cc>	callq	-209
450 :   store i2 %170, i2* %FPU_PC, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
451 :   %171 = load i1* %FPU_PM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
452 :   store i1 %171, i1* %FPU_PM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
453 :   %172 = load i1* %FPU_UM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
454 :   store i1 %172, i1* %FPU_UM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
455 :   %173 = load i1* %FPU_OM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
456 :   store i1 %173, i1* %FPU_OM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
457 :   %174 = load i1* %FPU_ZM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
458 :   store i1 %174, i1* %FPU_ZM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
459 :   %175 = load i1* %FPU_DM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
460 :   store i1 %175, i1* %FPU_DM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
461 :   %176 = load i1* %FPU_IM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
462 :   store i1 %176, i1* %FPU_IM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209

463 :   %177 = load i64* %53, align 4 : NIL
464 :   store i64 %177, i64* %52, align 4 : NIL

465 :   %178 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !22 :          <cc>	callq	-209
466 :   store i16 %178, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
467 :   %179 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
468 :   store i64 %179, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
469 :   %180 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !22 :          <cc>	callq	-209
470 :   store i16 %180, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
471 :   %181 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
472 :   store i64 %181, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
473 :   %182 = load i128* %XMM0_val, !mcsema_real_eip !22 :          <cc>	callq	-209
474 :   store i128 %182, i128* %XMM0, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
475 :   %183 = load i128* %XMM1_val, !mcsema_real_eip !22 :          <cc>	callq	-209
476 :   store i128 %183, i128* %XMM1, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
477 :   %184 = load i128* %XMM2_val, !mcsema_real_eip !22 :          <cc>	callq	-209
478 :   store i128 %184, i128* %XMM2, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
479 :   %185 = load i128* %XMM3_val, !mcsema_real_eip !22 :          <cc>	callq	-209
480 :   store i128 %185, i128* %XMM3, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
481 :   %186 = load i128* %XMM4_val, !mcsema_real_eip !22 :          <cc>	callq	-209
482 :   store i128 %186, i128* %XMM4, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
483 :   %187 = load i128* %XMM5_val, !mcsema_real_eip !22 :          <cc>	callq	-209
484 :   store i128 %187, i128* %XMM5, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
485 :   %188 = load i128* %XMM6_val, !mcsema_real_eip !22 :          <cc>	callq	-209
486 :   store i128 %188, i128* %XMM6, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
487 :   %189 = load i128* %XMM7_val, !mcsema_real_eip !22 :          <cc>	callq	-209
488 :   store i128 %189, i128* %XMM7, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
489 :   %190 = load i128* %XMM8_val, !mcsema_real_eip !22 :          <cc>	callq	-209
490 :   store i128 %190, i128* %XMM8, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
491 :   %191 = load i128* %XMM9_val, !mcsema_real_eip !22 :          <cc>	callq	-209
492 :   store i128 %191, i128* %XMM9, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
493 :   %192 = load i128* %XMM10_val, !mcsema_real_eip !22 :          <cc>	callq	-209
494 :   store i128 %192, i128* %XMM10, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
495 :   %193 = load i128* %XMM11_val, !mcsema_real_eip !22 :          <cc>	callq	-209
496 :   store i128 %193, i128* %XMM11, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
497 :   %194 = load i128* %XMM12_val, !mcsema_real_eip !22 :          <cc>	callq	-209
498 :   store i128 %194, i128* %XMM12, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
499 :   %195 = load i128* %XMM13_val, !mcsema_real_eip !22 :          <cc>	callq	-209
500 :   store i128 %195, i128* %XMM13, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
501 :   %196 = load i128* %XMM14_val, !mcsema_real_eip !22 :          <cc>	callq	-209
502 :   store i128 %196, i128* %XMM14, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
503 :   %197 = load i128* %XMM15_val, !mcsema_real_eip !22 :          <cc>	callq	-209
504 :   store i128 %197, i128* %XMM15, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
505 :   %198 = load i64* %STACK_BASE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
506 :   store i64 %198, i64* %STACK_BASE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
507 :   %199 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !22 :          <cc>	callq	-209
508 :   store i64 %199, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
509 :   tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !22 :          <cc>	callq	-209
510 :   %200 = load i64* %RAX, !mcsema_real_eip !22 :          <cc>	callq	-209
511 :   store i64 %200, i64* %RAX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
512 :   %201 = load i64* %RBX, !mcsema_real_eip !22 :          <cc>	callq	-209
513 :   store i64 %201, i64* %RBX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
514 :   %202 = load i64* %RCX, !mcsema_real_eip !22 :          <cc>	callq	-209
515 :   store i64 %202, i64* %RCX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
516 :   %203 = load i64* %RDX, !mcsema_real_eip !22 :          <cc>	callq	-209
517 :   store i64 %203, i64* %RDX_val, !mcsema_real_eip !22 :          <cc>	callq	-209
518 :   %204 = load i64* %RSI, !mcsema_real_eip !22 :          <cc>	callq	-209
519 :   store i64 %204, i64* %RSI_val, !mcsema_real_eip !22 :          <cc>	callq	-209
520 :   %205 = load i64* %RDI, !mcsema_real_eip !22 :          <cc>	callq	-209
521 :   store i64 %205, i64* %RDI_val, !mcsema_real_eip !22 :          <cc>	callq	-209
522 :   %206 = load i64* %RSP, !mcsema_real_eip !22 :          <cc>	callq	-209
523 :   store i64 %206, i64* %RSP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
524 :   %207 = load i64* %RBP, !mcsema_real_eip !22 :          <cc>	callq	-209
525 :   store i64 %207, i64* %RBP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
526 :   %208 = load i64* %R8, !mcsema_real_eip !22 :          <cc>	callq	-209
527 :   store i64 %208, i64* %R8_val, !mcsema_real_eip !22 :          <cc>	callq	-209
528 :   %209 = load i64* %R9, !mcsema_real_eip !22 :          <cc>	callq	-209
529 :   store i64 %209, i64* %R9_val, !mcsema_real_eip !22 :          <cc>	callq	-209
530 :   %210 = load i64* %R10, !mcsema_real_eip !22 :          <cc>	callq	-209
531 :   store i64 %210, i64* %R10_val, !mcsema_real_eip !22 :          <cc>	callq	-209
532 :   %211 = load i64* %R11, !mcsema_real_eip !22 :          <cc>	callq	-209
533 :   store i64 %211, i64* %R11_val, !mcsema_real_eip !22 :          <cc>	callq	-209
534 :   %212 = load i64* %R12, !mcsema_real_eip !22 :          <cc>	callq	-209
535 :   store i64 %212, i64* %R12_val, !mcsema_real_eip !22 :          <cc>	callq	-209
536 :   %213 = load i64* %R13, !mcsema_real_eip !22 :          <cc>	callq	-209
537 :   store i64 %213, i64* %R13_val, !mcsema_real_eip !22 :          <cc>	callq	-209
538 :   %214 = load i64* %R14, !mcsema_real_eip !22 :          <cc>	callq	-209
539 :   store i64 %214, i64* %R14_val, !mcsema_real_eip !22 :          <cc>	callq	-209
540 :   %215 = load i64* %R15, !mcsema_real_eip !22 :          <cc>	callq	-209
541 :   store i64 %215, i64* %R15_val, !mcsema_real_eip !22 :          <cc>	callq	-209
542 :   %216 = load i64* %RIP, !mcsema_real_eip !22 :          <cc>	callq	-209
543 :   store i64 %216, i64* %RIP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
544 :   %217 = load i1* %CF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
545 :   store i1 %217, i1* %CF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
546 :   %218 = load i1* %PF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
547 :   store i1 %218, i1* %PF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
548 :   %219 = load i1* %AF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
549 :   store i1 %219, i1* %AF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
550 :   %220 = load i1* %ZF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
551 :   store i1 %220, i1* %ZF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
552 :   %221 = load i1* %SF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
553 :   store i1 %221, i1* %SF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
554 :   %222 = load i1* %OF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
555 :   store i1 %222, i1* %OF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
556 :   %223 = load i1* %DF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
557 :   store i1 %223, i1* %DF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
558 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !22 :          <cc>	callq	-209
559 :   %224 = load i1* %FPU_B, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
560 :   store i1 %224, i1* %FPU_B_val, !mcsema_real_eip !22 :          <cc>	callq	-209
561 :   %225 = load i1* %FPU_C3, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
562 :   store i1 %225, i1* %FPU_C3_val, !mcsema_real_eip !22 :          <cc>	callq	-209
563 :   %226 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
564 :   store i3 %226, i3* %FPU_TOP_val, !mcsema_real_eip !22 :          <cc>	callq	-209
565 :   %227 = load i1* %FPU_C2, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
566 :   store i1 %227, i1* %FPU_C2_val, !mcsema_real_eip !22 :          <cc>	callq	-209
567 :   %228 = load i1* %FPU_C1, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
568 :   store i1 %228, i1* %FPU_C1_val, !mcsema_real_eip !22 :          <cc>	callq	-209
569 :   %229 = load i1* %FPU_C0, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
570 :   store i1 %229, i1* %FPU_C0_val, !mcsema_real_eip !22 :          <cc>	callq	-209
571 :   %230 = load i1* %FPU_ES, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
572 :   store i1 %230, i1* %FPU_ES_val, !mcsema_real_eip !22 :          <cc>	callq	-209
573 :   %231 = load i1* %FPU_SF, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
574 :   store i1 %231, i1* %FPU_SF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
575 :   %232 = load i1* %FPU_PE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
576 :   store i1 %232, i1* %FPU_PE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
577 :   %233 = load i1* %FPU_UE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
578 :   store i1 %233, i1* %FPU_UE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
579 :   %234 = load i1* %FPU_OE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
580 :   store i1 %234, i1* %FPU_OE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
581 :   %235 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
582 :   store i1 %235, i1* %FPU_ZE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
583 :   %236 = load i1* %FPU_DE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
584 :   store i1 %236, i1* %FPU_DE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
585 :   %237 = load i1* %FPU_IE, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
586 :   store i1 %237, i1* %FPU_IE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
587 :   %238 = load i1* %FPU_X, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
588 :   store i1 %238, i1* %FPU_X_val, !mcsema_real_eip !22 :          <cc>	callq	-209
589 :   %239 = load i2* %FPU_RC, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
590 :   store i2 %239, i2* %FPU_RC_val, !mcsema_real_eip !22 :          <cc>	callq	-209
591 :   %240 = load i2* %FPU_PC, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
592 :   store i2 %240, i2* %FPU_PC_val, !mcsema_real_eip !22 :          <cc>	callq	-209
593 :   %241 = load i1* %FPU_PM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
594 :   store i1 %241, i1* %FPU_PM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
595 :   %242 = load i1* %FPU_UM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
596 :   store i1 %242, i1* %FPU_UM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
597 :   %243 = load i1* %FPU_OM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
598 :   store i1 %243, i1* %FPU_OM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
599 :   %244 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
600 :   store i1 %244, i1* %FPU_ZM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
601 :   %245 = load i1* %FPU_DM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
602 :   store i1 %245, i1* %FPU_DM_val, !mcsema_real_eip !22 :          <cc>	callq	-209
603 :   %246 = load i1* %FPU_IM, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
604 :   store i1 %246, i1* %FPU_IM_val, !mcsema_real_eip !22 :          <cc>	callq	-209

605 :   %247 = load i64* %52, align 4 : NIL
606 :   store i64 %247, i64* %53, align 4 : NIL

607 :   %248 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
608 :   store i16 %248, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !22 :          <cc>	callq	-209
609 :   %249 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !22 :          <cc>	callq	-209
610 :   store i64 %249, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
611 :   %250 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
612 :   store i16 %250, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !22 :          <cc>	callq	-209
613 :   %251 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !22 :          <cc>	callq	-209
614 :   store i64 %251, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !22 :          <cc>	callq	-209
615 :   %252 = load i128* %XMM0, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
616 :   store i128 %252, i128* %XMM0_val, !mcsema_real_eip !22 :          <cc>	callq	-209
617 :   %253 = load i128* %XMM1, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
618 :   store i128 %253, i128* %XMM1_val, !mcsema_real_eip !22 :          <cc>	callq	-209
619 :   %254 = load i128* %XMM2, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
620 :   store i128 %254, i128* %XMM2_val, !mcsema_real_eip !22 :          <cc>	callq	-209
621 :   %255 = load i128* %XMM3, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
622 :   store i128 %255, i128* %XMM3_val, !mcsema_real_eip !22 :          <cc>	callq	-209
623 :   %256 = load i128* %XMM4, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
624 :   store i128 %256, i128* %XMM4_val, !mcsema_real_eip !22 :          <cc>	callq	-209
625 :   %257 = load i128* %XMM5, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
626 :   store i128 %257, i128* %XMM5_val, !mcsema_real_eip !22 :          <cc>	callq	-209
627 :   %258 = load i128* %XMM6, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
628 :   store i128 %258, i128* %XMM6_val, !mcsema_real_eip !22 :          <cc>	callq	-209
629 :   %259 = load i128* %XMM7, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
630 :   store i128 %259, i128* %XMM7_val, !mcsema_real_eip !22 :          <cc>	callq	-209
631 :   %260 = load i128* %XMM8, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
632 :   store i128 %260, i128* %XMM8_val, !mcsema_real_eip !22 :          <cc>	callq	-209
633 :   %261 = load i128* %XMM9, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
634 :   store i128 %261, i128* %XMM9_val, !mcsema_real_eip !22 :          <cc>	callq	-209
635 :   %262 = load i128* %XMM10, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
636 :   store i128 %262, i128* %XMM10_val, !mcsema_real_eip !22 :          <cc>	callq	-209
637 :   %263 = load i128* %XMM11, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
638 :   store i128 %263, i128* %XMM11_val, !mcsema_real_eip !22 :          <cc>	callq	-209
639 :   %264 = load i128* %XMM12, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
640 :   store i128 %264, i128* %XMM12_val, !mcsema_real_eip !22 :          <cc>	callq	-209
641 :   %265 = load i128* %XMM13, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
642 :   store i128 %265, i128* %XMM13_val, !mcsema_real_eip !22 :          <cc>	callq	-209
643 :   %266 = load i128* %XMM14, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
644 :   store i128 %266, i128* %XMM14_val, !mcsema_real_eip !22 :          <cc>	callq	-209
645 :   %267 = load i128* %XMM15, align 1, !mcsema_real_eip !22 :          <cc>	callq	-209
646 :   store i128 %267, i128* %XMM15_val, !mcsema_real_eip !22 :          <cc>	callq	-209
647 :   %268 = load i64* %STACK_BASE, !mcsema_real_eip !22 :          <cc>	callq	-209
648 :   store i64 %268, i64* %STACK_BASE_val, !mcsema_real_eip !22 :          <cc>	callq	-209
649 :   %269 = load i64* %STACK_LIMIT, !mcsema_real_eip !22 :          <cc>	callq	-209
650 :   store i64 %269, i64* %STACK_LIMIT_val, !mcsema_real_eip !22 :          <cc>	callq	-209

651 :   %270 = load i64* %RBP_val, !mcsema_real_eip !23 :          <d1>	movl	%edx, -40(%rbp)
652 :   %271 = add i64 %270, -40, !mcsema_real_eip !23 :          <d1>	movl	%edx, -40(%rbp)
653 :   %272 = inttoptr i64 %271 to i64*, !mcsema_real_eip !23 :          <d1>	movl	%edx, -40(%rbp)
654 :   %273 = load i64* %RDX_val, !mcsema_real_eip !23 :          <d1>	movl	%edx, -40(%rbp)
655 :   %274 = trunc i64 %273 to i32, !mcsema_real_eip !23 :          <d1>	movl	%edx, -40(%rbp)

656 :   %275 = bitcast i64* %272 to i32* : NIL

657 :   store i32 %274, i32* %275, !mcsema_real_eip !23 :          <d1>	movl	%edx, -40(%rbp)

658 :   %276 = load i64* %RBP_val, !mcsema_real_eip !24 :          <d4>	movq	%rax, -48(%rbp)
659 :   %277 = add i64 %276, -48, !mcsema_real_eip !24 :          <d4>	movq	%rax, -48(%rbp)
660 :   %278 = inttoptr i64 %277 to i64*, !mcsema_real_eip !24 :          <d4>	movq	%rax, -48(%rbp)
661 :   %279 = load i64* %RAX_val, !mcsema_real_eip !24 :          <d4>	movq	%rax, -48(%rbp)
662 :   store i64 %279, i64* %278, !mcsema_real_eip !24 :          <d4>	movq	%rax, -48(%rbp)

663 :   %280 = load i64* %RBP_val, !mcsema_real_eip !25 :          <d8>	movq	-48(%rbp), %rax
664 :   %281 = add i64 %280, -48, !mcsema_real_eip !25 :          <d8>	movq	-48(%rbp), %rax
665 :   %282 = inttoptr i64 %281 to i64*, !mcsema_real_eip !25 :          <d8>	movq	-48(%rbp), %rax
666 :   %283 = load i64* %282, !mcsema_real_eip !25 :          <d8>	movq	-48(%rbp), %rax
667 :   store i64 %283, i64* %RAX_val, !mcsema_real_eip !25 :          <d8>	movq	-48(%rbp), %rax

668 :   %284 = add i64 %280, -32, !mcsema_real_eip !26 :          <dc>	movq	%rax, -32(%rbp)
669 :   %285 = inttoptr i64 %284 to i64*, !mcsema_real_eip !26 :          <dc>	movq	%rax, -32(%rbp)
670 :   store i64 %283, i64* %285, !mcsema_real_eip !26 :          <dc>	movq	%rax, -32(%rbp)

671 :   %286 = load i64* %RBP_val, !mcsema_real_eip !27 :          <e0>	movl	-40(%rbp), %ecx
672 :   %287 = add i64 %286, -40, !mcsema_real_eip !27 :          <e0>	movl	-40(%rbp), %ecx
673 :   %288 = inttoptr i64 %287 to i64*, !mcsema_real_eip !27 :          <e0>	movl	-40(%rbp), %ecx

674 :   %289 = bitcast i64* %288 to i32* : NIL

675 :   %290 = load i32* %289, !mcsema_real_eip !27 :          <e0>	movl	-40(%rbp), %ecx
676 :   %291 = zext i32 %290 to i64, !mcsema_real_eip !27 :          <e0>	movl	-40(%rbp), %ecx
677 :   store i64 %291, i64* %RCX_val, !mcsema_real_eip !27 :          <e0>	movl	-40(%rbp), %ecx

678 :   %292 = load i64* %RBP_val, !mcsema_real_eip !28 :          <e3>	movl	%ecx, -24(%rbp)
679 :   %293 = add i64 %292, -24, !mcsema_real_eip !28 :          <e3>	movl	%ecx, -24(%rbp)
680 :   %294 = inttoptr i64 %293 to i64*, !mcsema_real_eip !28 :          <e3>	movl	%ecx, -24(%rbp)

681 :   %295 = bitcast i64* %294 to i32* : NIL

682 :   store i32 %290, i32* %295, !mcsema_real_eip !28 :          <e3>	movl	%ecx, -24(%rbp)

683 :   %296 = load i64* %RBP_val, !mcsema_real_eip !29 :          <e6>	movl	-52(%rbp), %eax
684 :   %297 = add i64 %296, -52, !mcsema_real_eip !29 :          <e6>	movl	-52(%rbp), %eax
685 :   %298 = inttoptr i64 %297 to i64*, !mcsema_real_eip !29 :          <e6>	movl	-52(%rbp), %eax

686 :   %299 = bitcast i64* %298 to i32* : NIL

687 :   %300 = load i32* %299, !mcsema_real_eip !29 :          <e6>	movl	-52(%rbp), %eax
688 :   %301 = zext i32 %300 to i64, !mcsema_real_eip !29 :          <e6>	movl	-52(%rbp), %eax
689 :   store i64 %301, i64* %RAX_val, !mcsema_real_eip !29 :          <e6>	movl	-52(%rbp), %eax

690 :   %302 = load i64* %RSP_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp

691 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %302, i64 64) : NIL
692 :   %303 = extractvalue { i64, i1 } %uadd, 0 : NIL

693 :   %304 = xor i64 %303, %302, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
694 :   %305 = and i64 %304, 16, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
695 :   %306 = icmp ne i64 %305, 0, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
696 :   store i1 %306, i1* %AF_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp

697 :   %307 = icmp slt i64 %303, 0 : NIL

698 :   store i1 %307, i1* %SF_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
699 :   %308 = icmp eq i64 %303, 0, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
700 :   store i1 %308, i1* %ZF_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
701 :   %309 = xor i64 %302, -9223372036854775808, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
702 :   %310 = and i64 %304, %309, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp

703 :   %311 = icmp slt i64 %310, 0 : NIL

704 :   store i1 %311, i1* %OF_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
705 :   %312 = trunc i64 %303 to i8, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
706 :   %313 = tail call i8 @llvm.ctpop.i8(i8 %312), !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp

707 :   %314 = and i8 %313, 1 : NIL
708 :   %315 = icmp eq i8 %314, 0 : NIL

709 :   store i1 %315, i1* %PF_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp

710 :   %316 = extractvalue { i64, i1 } %uadd, 1 : NIL

711 :   store i1 %316, i1* %CF_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp
712 :   store i64 %303, i64* %RSP_val, !mcsema_real_eip !30 :          <e9>	addq	$64, %rsp

713 :   %317 = inttoptr i64 %303 to i64*, !mcsema_real_eip !31 :          <ed>	popq	%rbp
714 :   %318 = load i64* %317, !mcsema_real_eip !31 :          <ed>	popq	%rbp
715 :   store i64 %318, i64* %RBP_val, !mcsema_real_eip !31 :          <ed>	popq	%rbp

716 :   %319 = add i64 %303, 16, !mcsema_real_eip !32 :          <ee>	retq
717 :   store i64 %319, i64* %RSP_val, !mcsema_real_eip !32 :          <ee>	retq
718 :   %320 = load i64* %RAX_val, !mcsema_real_eip !32 :          <ee>	retq
719 :   store i64 %320, i64* %RAX, !mcsema_real_eip !32 :          <ee>	retq
720 :   %321 = load i64* %RBX_val, !mcsema_real_eip !32 :          <ee>	retq
721 :   store i64 %321, i64* %RBX, !mcsema_real_eip !32 :          <ee>	retq
722 :   %322 = load i64* %RCX_val, !mcsema_real_eip !32 :          <ee>	retq
723 :   store i64 %322, i64* %RCX, !mcsema_real_eip !32 :          <ee>	retq
724 :   %323 = load i64* %RDX_val, !mcsema_real_eip !32 :          <ee>	retq
725 :   store i64 %323, i64* %RDX, !mcsema_real_eip !32 :          <ee>	retq
726 :   %324 = load i64* %RSI_val, !mcsema_real_eip !32 :          <ee>	retq
727 :   store i64 %324, i64* %RSI, !mcsema_real_eip !32 :          <ee>	retq
728 :   %325 = load i64* %RDI_val, !mcsema_real_eip !32 :          <ee>	retq
729 :   store i64 %325, i64* %RDI, !mcsema_real_eip !32 :          <ee>	retq
730 :   %326 = load i64* %RSP_val, !mcsema_real_eip !32 :          <ee>	retq
731 :   store i64 %326, i64* %RSP, !mcsema_real_eip !32 :          <ee>	retq
732 :   %327 = load i64* %RBP_val, !mcsema_real_eip !32 :          <ee>	retq
733 :   store i64 %327, i64* %RBP, !mcsema_real_eip !32 :          <ee>	retq
734 :   %328 = load i64* %R8_val, !mcsema_real_eip !32 :          <ee>	retq
735 :   store i64 %328, i64* %R8, !mcsema_real_eip !32 :          <ee>	retq
736 :   %329 = load i64* %R9_val, !mcsema_real_eip !32 :          <ee>	retq
737 :   store i64 %329, i64* %R9, !mcsema_real_eip !32 :          <ee>	retq
738 :   %330 = load i64* %R10_val, !mcsema_real_eip !32 :          <ee>	retq
739 :   store i64 %330, i64* %R10, !mcsema_real_eip !32 :          <ee>	retq
740 :   %331 = load i64* %R11_val, !mcsema_real_eip !32 :          <ee>	retq
741 :   store i64 %331, i64* %R11, !mcsema_real_eip !32 :          <ee>	retq
742 :   %332 = load i64* %R12_val, !mcsema_real_eip !32 :          <ee>	retq
743 :   store i64 %332, i64* %R12, !mcsema_real_eip !32 :          <ee>	retq
744 :   %333 = load i64* %R13_val, !mcsema_real_eip !32 :          <ee>	retq
745 :   store i64 %333, i64* %R13, !mcsema_real_eip !32 :          <ee>	retq
746 :   %334 = load i64* %R14_val, !mcsema_real_eip !32 :          <ee>	retq
747 :   store i64 %334, i64* %R14, !mcsema_real_eip !32 :          <ee>	retq
748 :   %335 = load i64* %R15_val, !mcsema_real_eip !32 :          <ee>	retq
749 :   store i64 %335, i64* %R15, !mcsema_real_eip !32 :          <ee>	retq
750 :   %336 = load i64* %RIP_val, !mcsema_real_eip !32 :          <ee>	retq
751 :   store i64 %336, i64* %RIP, !mcsema_real_eip !32 :          <ee>	retq
752 :   %337 = load i1* %CF_val, !mcsema_real_eip !32 :          <ee>	retq
753 :   store i1 %337, i1* %CF, align 1, !mcsema_real_eip !32 :          <ee>	retq
754 :   %338 = load i1* %PF_val, !mcsema_real_eip !32 :          <ee>	retq
755 :   store i1 %338, i1* %PF, align 1, !mcsema_real_eip !32 :          <ee>	retq
756 :   %339 = load i1* %AF_val, !mcsema_real_eip !32 :          <ee>	retq
757 :   store i1 %339, i1* %AF, align 1, !mcsema_real_eip !32 :          <ee>	retq
758 :   %340 = load i1* %ZF_val, !mcsema_real_eip !32 :          <ee>	retq
759 :   store i1 %340, i1* %ZF, align 1, !mcsema_real_eip !32 :          <ee>	retq
760 :   %341 = load i1* %SF_val, !mcsema_real_eip !32 :          <ee>	retq
761 :   store i1 %341, i1* %SF, align 1, !mcsema_real_eip !32 :          <ee>	retq
762 :   %342 = load i1* %OF_val, !mcsema_real_eip !32 :          <ee>	retq
763 :   store i1 %342, i1* %OF, align 1, !mcsema_real_eip !32 :          <ee>	retq
764 :   %343 = load i1* %DF_val, !mcsema_real_eip !32 :          <ee>	retq
765 :   store i1 %343, i1* %DF, align 1, !mcsema_real_eip !32 :          <ee>	retq
766 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !32 :          <ee>	retq
767 :   %344 = load i1* %FPU_B_val, !mcsema_real_eip !32 :          <ee>	retq
768 :   store i1 %344, i1* %FPU_B, align 1, !mcsema_real_eip !32 :          <ee>	retq
769 :   %345 = load i1* %FPU_C3_val, !mcsema_real_eip !32 :          <ee>	retq
770 :   store i1 %345, i1* %FPU_C3, align 1, !mcsema_real_eip !32 :          <ee>	retq
771 :   %346 = load i3* %FPU_TOP_val, !mcsema_real_eip !32 :          <ee>	retq
772 :   store i3 %346, i3* %FPU_TOP, align 1, !mcsema_real_eip !32 :          <ee>	retq
773 :   %347 = load i1* %FPU_C2_val, !mcsema_real_eip !32 :          <ee>	retq
774 :   store i1 %347, i1* %FPU_C2, align 1, !mcsema_real_eip !32 :          <ee>	retq
775 :   %348 = load i1* %FPU_C1_val, !mcsema_real_eip !32 :          <ee>	retq
776 :   store i1 %348, i1* %FPU_C1, align 1, !mcsema_real_eip !32 :          <ee>	retq
777 :   %349 = load i1* %FPU_C0_val, !mcsema_real_eip !32 :          <ee>	retq
778 :   store i1 %349, i1* %FPU_C0, align 1, !mcsema_real_eip !32 :          <ee>	retq
779 :   %350 = load i1* %FPU_ES_val, !mcsema_real_eip !32 :          <ee>	retq
780 :   store i1 %350, i1* %FPU_ES, align 1, !mcsema_real_eip !32 :          <ee>	retq
781 :   %351 = load i1* %FPU_SF_val, !mcsema_real_eip !32 :          <ee>	retq
782 :   store i1 %351, i1* %FPU_SF, align 1, !mcsema_real_eip !32 :          <ee>	retq
783 :   %352 = load i1* %FPU_PE_val, !mcsema_real_eip !32 :          <ee>	retq
784 :   store i1 %352, i1* %FPU_PE, align 1, !mcsema_real_eip !32 :          <ee>	retq
785 :   %353 = load i1* %FPU_UE_val, !mcsema_real_eip !32 :          <ee>	retq
786 :   store i1 %353, i1* %FPU_UE, align 1, !mcsema_real_eip !32 :          <ee>	retq
787 :   %354 = load i1* %FPU_OE_val, !mcsema_real_eip !32 :          <ee>	retq
788 :   store i1 %354, i1* %FPU_OE, align 1, !mcsema_real_eip !32 :          <ee>	retq
789 :   %355 = load i1* %FPU_ZE_val, !mcsema_real_eip !32 :          <ee>	retq
790 :   store i1 %355, i1* %FPU_ZE, align 1, !mcsema_real_eip !32 :          <ee>	retq
791 :   %356 = load i1* %FPU_DE_val, !mcsema_real_eip !32 :          <ee>	retq
792 :   store i1 %356, i1* %FPU_DE, align 1, !mcsema_real_eip !32 :          <ee>	retq
793 :   %357 = load i1* %FPU_IE_val, !mcsema_real_eip !32 :          <ee>	retq
794 :   store i1 %357, i1* %FPU_IE, align 1, !mcsema_real_eip !32 :          <ee>	retq
795 :   %358 = load i1* %FPU_X_val, !mcsema_real_eip !32 :          <ee>	retq
796 :   store i1 %358, i1* %FPU_X, align 1, !mcsema_real_eip !32 :          <ee>	retq
797 :   %359 = load i2* %FPU_RC_val, !mcsema_real_eip !32 :          <ee>	retq
798 :   store i2 %359, i2* %FPU_RC, align 1, !mcsema_real_eip !32 :          <ee>	retq
799 :   %360 = load i2* %FPU_PC_val, !mcsema_real_eip !32 :          <ee>	retq
800 :   store i2 %360, i2* %FPU_PC, align 1, !mcsema_real_eip !32 :          <ee>	retq
801 :   %361 = load i1* %FPU_PM_val, !mcsema_real_eip !32 :          <ee>	retq
802 :   store i1 %361, i1* %FPU_PM, align 1, !mcsema_real_eip !32 :          <ee>	retq
803 :   %362 = load i1* %FPU_UM_val, !mcsema_real_eip !32 :          <ee>	retq
804 :   store i1 %362, i1* %FPU_UM, align 1, !mcsema_real_eip !32 :          <ee>	retq
805 :   %363 = load i1* %FPU_OM_val, !mcsema_real_eip !32 :          <ee>	retq
806 :   store i1 %363, i1* %FPU_OM, align 1, !mcsema_real_eip !32 :          <ee>	retq
807 :   %364 = load i1* %FPU_ZM_val, !mcsema_real_eip !32 :          <ee>	retq
808 :   store i1 %364, i1* %FPU_ZM, align 1, !mcsema_real_eip !32 :          <ee>	retq
809 :   %365 = load i1* %FPU_DM_val, !mcsema_real_eip !32 :          <ee>	retq
810 :   store i1 %365, i1* %FPU_DM, align 1, !mcsema_real_eip !32 :          <ee>	retq
811 :   %366 = load i1* %FPU_IM_val, !mcsema_real_eip !32 :          <ee>	retq
812 :   store i1 %366, i1* %FPU_IM, align 1, !mcsema_real_eip !32 :          <ee>	retq

813 :   %367 = load i64* %53, align 4 : NIL
814 :   store i64 %367, i64* %52, align 4 : NIL

815 :   %368 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !32 :          <ee>	retq
816 :   store i16 %368, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !32 :          <ee>	retq
817 :   %369 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !32 :          <ee>	retq
818 :   store i64 %369, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !32 :          <ee>	retq
819 :   %370 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !32 :          <ee>	retq
820 :   store i16 %370, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !32 :          <ee>	retq
821 :   %371 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !32 :          <ee>	retq
822 :   store i64 %371, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !32 :          <ee>	retq
823 :   %372 = load i128* %XMM0_val, !mcsema_real_eip !32 :          <ee>	retq
824 :   store i128 %372, i128* %XMM0, align 1, !mcsema_real_eip !32 :          <ee>	retq
825 :   %373 = load i128* %XMM1_val, !mcsema_real_eip !32 :          <ee>	retq
826 :   store i128 %373, i128* %XMM1, align 1, !mcsema_real_eip !32 :          <ee>	retq
827 :   %374 = load i128* %XMM2_val, !mcsema_real_eip !32 :          <ee>	retq
828 :   store i128 %374, i128* %XMM2, align 1, !mcsema_real_eip !32 :          <ee>	retq
829 :   %375 = load i128* %XMM3_val, !mcsema_real_eip !32 :          <ee>	retq
830 :   store i128 %375, i128* %XMM3, align 1, !mcsema_real_eip !32 :          <ee>	retq
831 :   %376 = load i128* %XMM4_val, !mcsema_real_eip !32 :          <ee>	retq
832 :   store i128 %376, i128* %XMM4, align 1, !mcsema_real_eip !32 :          <ee>	retq
833 :   %377 = load i128* %XMM5_val, !mcsema_real_eip !32 :          <ee>	retq
834 :   store i128 %377, i128* %XMM5, align 1, !mcsema_real_eip !32 :          <ee>	retq
835 :   %378 = load i128* %XMM6_val, !mcsema_real_eip !32 :          <ee>	retq
836 :   store i128 %378, i128* %XMM6, align 1, !mcsema_real_eip !32 :          <ee>	retq
837 :   %379 = load i128* %XMM7_val, !mcsema_real_eip !32 :          <ee>	retq
838 :   store i128 %379, i128* %XMM7, align 1, !mcsema_real_eip !32 :          <ee>	retq
839 :   %380 = load i128* %XMM8_val, !mcsema_real_eip !32 :          <ee>	retq
840 :   store i128 %380, i128* %XMM8, align 1, !mcsema_real_eip !32 :          <ee>	retq
841 :   %381 = load i128* %XMM9_val, !mcsema_real_eip !32 :          <ee>	retq
842 :   store i128 %381, i128* %XMM9, align 1, !mcsema_real_eip !32 :          <ee>	retq
843 :   %382 = load i128* %XMM10_val, !mcsema_real_eip !32 :          <ee>	retq
844 :   store i128 %382, i128* %XMM10, align 1, !mcsema_real_eip !32 :          <ee>	retq
845 :   %383 = load i128* %XMM11_val, !mcsema_real_eip !32 :          <ee>	retq
846 :   store i128 %383, i128* %XMM11, align 1, !mcsema_real_eip !32 :          <ee>	retq
847 :   %384 = load i128* %XMM12_val, !mcsema_real_eip !32 :          <ee>	retq
848 :   store i128 %384, i128* %XMM12, align 1, !mcsema_real_eip !32 :          <ee>	retq
849 :   %385 = load i128* %XMM13_val, !mcsema_real_eip !32 :          <ee>	retq
850 :   store i128 %385, i128* %XMM13, align 1, !mcsema_real_eip !32 :          <ee>	retq
851 :   %386 = load i128* %XMM14_val, !mcsema_real_eip !32 :          <ee>	retq
852 :   store i128 %386, i128* %XMM14, align 1, !mcsema_real_eip !32 :          <ee>	retq
853 :   %387 = load i128* %XMM15_val, !mcsema_real_eip !32 :          <ee>	retq
854 :   store i128 %387, i128* %XMM15, align 1, !mcsema_real_eip !32 :          <ee>	retq
855 :   %388 = load i64* %STACK_BASE_val, !mcsema_real_eip !32 :          <ee>	retq
856 :   store i64 %388, i64* %STACK_BASE, align 1, !mcsema_real_eip !32 :          <ee>	retq
857 :   %389 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !32 :          <ee>	retq
858 :   store i64 %389, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !32 :          <ee>	retq
859 :   ret void, !mcsema_real_eip !32 :          <ee>	retq
========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, 8, !mcsema_real_eip !4 :          <4>	leaq	16(%rbp), %rax
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <4>	leaq	16(%rbp), %rax
297 :   %83 = ptrtoint i64* %82 to i64, !mcsema_real_eip !4 :          <4>	leaq	16(%rbp), %rax
298 :   store i64 %83, i64* %RAX_val, !mcsema_real_eip !4 :          <4>	leaq	16(%rbp), %rax

299 :   %84 = add i64 %78, -28, !mcsema_real_eip !5 :          <8>	movl	%edi, -20(%rbp)
300 :   %85 = inttoptr i64 %84 to i64*, !mcsema_real_eip !5 :          <8>	movl	%edi, -20(%rbp)
301 :   %86 = load i64* %RDI_val, !mcsema_real_eip !5 :          <8>	movl	%edi, -20(%rbp)
302 :   %87 = trunc i64 %86 to i32, !mcsema_real_eip !5 :          <8>	movl	%edi, -20(%rbp)

303 :   %88 = bitcast i64* %85 to i32* : NIL

304 :   store i32 %87, i32* %88, !mcsema_real_eip !5 :          <8>	movl	%edi, -20(%rbp)

305 :   %89 = load i64* %RBP_val, !mcsema_real_eip !6 :          <b>	movl	%esi, -24(%rbp)
306 :   %90 = add i64 %89, -24, !mcsema_real_eip !6 :          <b>	movl	%esi, -24(%rbp)
307 :   %91 = inttoptr i64 %90 to i64*, !mcsema_real_eip !6 :          <b>	movl	%esi, -24(%rbp)
308 :   %92 = load i64* %RSI_val, !mcsema_real_eip !6 :          <b>	movl	%esi, -24(%rbp)
309 :   %93 = trunc i64 %92 to i32, !mcsema_real_eip !6 :          <b>	movl	%esi, -24(%rbp)

310 :   %94 = bitcast i64* %91 to i32* : NIL

311 :   store i32 %93, i32* %94, !mcsema_real_eip !6 :          <b>	movl	%esi, -24(%rbp)

312 :   %95 = load i64* %RBP_val, !mcsema_real_eip !7 :          <e>	movl	%edx, -28(%rbp)
313 :   %96 = add i64 %95, -28, !mcsema_real_eip !7 :          <e>	movl	%edx, -28(%rbp)
314 :   %97 = inttoptr i64 %96 to i64*, !mcsema_real_eip !7 :          <e>	movl	%edx, -28(%rbp)
315 :   %98 = load i64* %RDX_val, !mcsema_real_eip !7 :          <e>	movl	%edx, -28(%rbp)
316 :   %99 = trunc i64 %98 to i32, !mcsema_real_eip !7 :          <e>	movl	%edx, -28(%rbp)

317 :   %100 = bitcast i64* %97 to i32* : NIL

318 :   store i32 %99, i32* %100, !mcsema_real_eip !7 :          <e>	movl	%edx, -28(%rbp)

319 :   %101 = load i64* %RBP_val, !mcsema_real_eip !8 :          <11>	movl	%ecx, -32(%rbp)
320 :   %102 = add i64 %101, -32, !mcsema_real_eip !8 :          <11>	movl	%ecx, -32(%rbp)
321 :   %103 = inttoptr i64 %102 to i64*, !mcsema_real_eip !8 :          <11>	movl	%ecx, -32(%rbp)
322 :   %104 = load i64* %RCX_val, !mcsema_real_eip !8 :          <11>	movl	%ecx, -32(%rbp)
323 :   %105 = trunc i64 %104 to i32, !mcsema_real_eip !8 :          <11>	movl	%ecx, -32(%rbp)

324 :   %106 = bitcast i64* %103 to i32* : NIL

325 :   store i32 %105, i32* %106, !mcsema_real_eip !8 :          <11>	movl	%ecx, -32(%rbp)

326 :   %107 = load i64* %RBP_val, !mcsema_real_eip !9 :          <14>	movl	%r8d, -36(%rbp)
327 :   %108 = add i64 %107, -36, !mcsema_real_eip !9 :          <14>	movl	%r8d, -36(%rbp)
328 :   %109 = inttoptr i64 %108 to i64*, !mcsema_real_eip !9 :          <14>	movl	%r8d, -36(%rbp)
329 :   %110 = load i64* %R8_val, !mcsema_real_eip !9 :          <14>	movl	%r8d, -36(%rbp)
330 :   %111 = trunc i64 %110 to i32, !mcsema_real_eip !9 :          <14>	movl	%r8d, -36(%rbp)

331 :   %112 = bitcast i64* %109 to i32* : NIL

332 :   store i32 %111, i32* %112, !mcsema_real_eip !9 :          <14>	movl	%r8d, -36(%rbp)

333 :   %113 = load i64* %RBP_val, !mcsema_real_eip !10 :          <18>	movl	%r9d, -40(%rbp)
334 :   %114 = add i64 %113, -40, !mcsema_real_eip !10 :          <18>	movl	%r9d, -40(%rbp)
335 :   %115 = inttoptr i64 %114 to i64*, !mcsema_real_eip !10 :          <18>	movl	%r9d, -40(%rbp)
336 :   %116 = load i64* %R9_val, !mcsema_real_eip !10 :          <18>	movl	%r9d, -40(%rbp)
337 :   %117 = trunc i64 %116 to i32, !mcsema_real_eip !10 :          <18>	movl	%r9d, -40(%rbp)

338 :   %118 = bitcast i64* %115 to i32* : NIL

339 :   store i32 %117, i32* %118, !mcsema_real_eip !10 :          <18>	movl	%r9d, -40(%rbp)

340 :   %119 = load i64* %RAX_val, !mcsema_real_eip !11 :          <1c>	movl	(%rax), %ecx
341 :   %120 = inttoptr i64 %119 to i64*, !mcsema_real_eip !11 :          <1c>	movl	(%rax), %ecx

342 :   %121 = bitcast i64* %120 to i32* : NIL

343 :   %122 = load i32* %121, !mcsema_real_eip !11 :          <1c>	movl	(%rax), %ecx
344 :   %123 = zext i32 %122 to i64, !mcsema_real_eip !11 :          <1c>	movl	(%rax), %ecx
345 :   store i64 %123, i64* %RCX_val, !mcsema_real_eip !11 :          <1c>	movl	(%rax), %ecx

346 :   %124 = load i64* %RBP_val, !mcsema_real_eip !12 :          <1e>	movl	-20(%rbp), %edx
347 :   %125 = add i64 %124, -20, !mcsema_real_eip !12 :          <1e>	movl	-20(%rbp), %edx
348 :   %126 = inttoptr i64 %125 to i64*, !mcsema_real_eip !12 :          <1e>	movl	-20(%rbp), %edx

349 :   %127 = bitcast i64* %126 to i32* : NIL

350 :   %128 = load i32* %127, !mcsema_real_eip !12 :          <1e>	movl	-20(%rbp), %edx
351 :   %129 = zext i32 %128 to i64, !mcsema_real_eip !12 :          <1e>	movl	-20(%rbp), %edx
352 :   store i64 %129, i64* %RDX_val, !mcsema_real_eip !12 :          <1e>	movl	-20(%rbp), %edx

353 :   %130 = load i64* %RCX_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
354 :   %131 = trunc i64 %130 to i32, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx

355 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %128, i32 %131) : NIL
356 :   %132 = extractvalue { i32, i1 } %uadd, 0 : NIL

357 :   %133 = xor i32 %132, %131, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
358 :   %134 = xor i32 %133, %128, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
359 :   %135 = and i32 %134, 16, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
360 :   %136 = icmp ne i32 %135, 0, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
361 :   store i1 %136, i1* %AF_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx

362 :   %137 = icmp slt i32 %132, 0 : NIL

363 :   store i1 %137, i1* %SF_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
364 :   %138 = icmp eq i32 %132, 0, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
365 :   store i1 %138, i1* %ZF_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
366 :   %139 = xor i32 %128, -2147483648, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
367 :   %140 = xor i32 %139, %131, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
368 :   %141 = and i32 %133, %140, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx

369 :   %142 = icmp slt i32 %141, 0 : NIL

370 :   store i1 %142, i1* %OF_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
371 :   %143 = trunc i32 %132 to i8, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
372 :   %144 = tail call i8 @llvm.ctpop.i8(i8 %143), !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx

373 :   %145 = and i8 %144, 1 : NIL
374 :   %146 = icmp eq i8 %145, 0 : NIL

375 :   store i1 %146, i1* %PF_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx

376 :   %147 = extractvalue { i32, i1 } %uadd, 1 : NIL

377 :   store i1 %147, i1* %CF_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
378 :   %148 = zext i32 %132 to i64, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx
379 :   store i64 %148, i64* %RCX_val, !mcsema_real_eip !13 :          <21>	addl	%edx, %ecx

380 :   %149 = load i64* %RBP_val, !mcsema_real_eip !14 :          <23>	movl	-24(%rbp), %edx
381 :   %150 = add i64 %149, -24, !mcsema_real_eip !14 :          <23>	movl	-24(%rbp), %edx
382 :   %151 = inttoptr i64 %150 to i64*, !mcsema_real_eip !14 :          <23>	movl	-24(%rbp), %edx

383 :   %152 = bitcast i64* %151 to i32* : NIL

384 :   %153 = load i32* %152, !mcsema_real_eip !14 :          <23>	movl	-24(%rbp), %edx
385 :   %154 = zext i32 %153 to i64, !mcsema_real_eip !14 :          <23>	movl	-24(%rbp), %edx
386 :   store i64 %154, i64* %RDX_val, !mcsema_real_eip !14 :          <23>	movl	-24(%rbp), %edx

387 :   %155 = load i64* %RCX_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
388 :   %156 = trunc i64 %155 to i32, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx

389 :   %uadd70 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %153, i32 %156) : NIL
390 :   %157 = extractvalue { i32, i1 } %uadd70, 0 : NIL

391 :   %158 = xor i32 %157, %156, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
392 :   %159 = xor i32 %158, %153, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
393 :   %160 = and i32 %159, 16, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
394 :   %161 = icmp ne i32 %160, 0, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
395 :   store i1 %161, i1* %AF_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx

396 :   %162 = icmp slt i32 %157, 0 : NIL

397 :   store i1 %162, i1* %SF_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
398 :   %163 = icmp eq i32 %157, 0, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
399 :   store i1 %163, i1* %ZF_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
400 :   %164 = xor i32 %153, -2147483648, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
401 :   %165 = xor i32 %164, %156, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
402 :   %166 = and i32 %158, %165, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx

403 :   %167 = icmp slt i32 %166, 0 : NIL

404 :   store i1 %167, i1* %OF_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
405 :   %168 = trunc i32 %157 to i8, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
406 :   %169 = tail call i8 @llvm.ctpop.i8(i8 %168), !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx

407 :   %170 = and i8 %169, 1 : NIL
408 :   %171 = icmp eq i8 %170, 0 : NIL

409 :   store i1 %171, i1* %PF_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx

410 :   %172 = extractvalue { i32, i1 } %uadd70, 1 : NIL

411 :   store i1 %172, i1* %CF_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
412 :   %173 = zext i32 %157 to i64, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx
413 :   store i64 %173, i64* %RCX_val, !mcsema_real_eip !15 :          <26>	addl	%edx, %ecx

414 :   %174 = load i64* %RBP_val, !mcsema_real_eip !16 :          <28>	movl	-28(%rbp), %edx
415 :   %175 = add i64 %174, -28, !mcsema_real_eip !16 :          <28>	movl	-28(%rbp), %edx
416 :   %176 = inttoptr i64 %175 to i64*, !mcsema_real_eip !16 :          <28>	movl	-28(%rbp), %edx

417 :   %177 = bitcast i64* %176 to i32* : NIL

418 :   %178 = load i32* %177, !mcsema_real_eip !16 :          <28>	movl	-28(%rbp), %edx
419 :   %179 = zext i32 %178 to i64, !mcsema_real_eip !16 :          <28>	movl	-28(%rbp), %edx
420 :   store i64 %179, i64* %RDX_val, !mcsema_real_eip !16 :          <28>	movl	-28(%rbp), %edx

421 :   %180 = load i64* %RCX_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
422 :   %181 = trunc i64 %180 to i32, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx

423 :   %uadd71 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %178, i32 %181) : NIL
424 :   %182 = extractvalue { i32, i1 } %uadd71, 0 : NIL

425 :   %183 = xor i32 %182, %181, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
426 :   %184 = xor i32 %183, %178, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
427 :   %185 = and i32 %184, 16, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
428 :   %186 = icmp ne i32 %185, 0, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
429 :   store i1 %186, i1* %AF_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx

430 :   %187 = icmp slt i32 %182, 0 : NIL

431 :   store i1 %187, i1* %SF_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
432 :   %188 = icmp eq i32 %182, 0, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
433 :   store i1 %188, i1* %ZF_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
434 :   %189 = xor i32 %178, -2147483648, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
435 :   %190 = xor i32 %189, %181, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
436 :   %191 = and i32 %183, %190, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx

437 :   %192 = icmp slt i32 %191, 0 : NIL

438 :   store i1 %192, i1* %OF_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
439 :   %193 = trunc i32 %182 to i8, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
440 :   %194 = tail call i8 @llvm.ctpop.i8(i8 %193), !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx

441 :   %195 = and i8 %194, 1 : NIL
442 :   %196 = icmp eq i8 %195, 0 : NIL

443 :   store i1 %196, i1* %PF_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx

444 :   %197 = extractvalue { i32, i1 } %uadd71, 1 : NIL

445 :   store i1 %197, i1* %CF_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
446 :   %198 = zext i32 %182 to i64, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx
447 :   store i64 %198, i64* %RCX_val, !mcsema_real_eip !17 :          <2b>	addl	%edx, %ecx

448 :   %199 = load i64* %RBP_val, !mcsema_real_eip !18 :          <2d>	movl	%ecx, -56(%rbp)
449 :   %200 = add i64 %199, -56, !mcsema_real_eip !18 :          <2d>	movl	%ecx, -56(%rbp)
450 :   %201 = inttoptr i64 %200 to i64*, !mcsema_real_eip !18 :          <2d>	movl	%ecx, -56(%rbp)

451 :   %202 = bitcast i64* %201 to i32* : NIL

452 :   store i32 %182, i32* %202, !mcsema_real_eip !18 :          <2d>	movl	%ecx, -56(%rbp)

453 :   %203 = load i64* %RAX_val, !mcsema_real_eip !19 :          <30>	movl	4(%rax), %ecx
454 :   %204 = add i64 %203, 4, !mcsema_real_eip !19 :          <30>	movl	4(%rax), %ecx
455 :   %205 = inttoptr i64 %204 to i64*, !mcsema_real_eip !19 :          <30>	movl	4(%rax), %ecx

456 :   %206 = bitcast i64* %205 to i32* : NIL

457 :   %207 = load i32* %206, !mcsema_real_eip !19 :          <30>	movl	4(%rax), %ecx
458 :   %208 = zext i32 %207 to i64, !mcsema_real_eip !19 :          <30>	movl	4(%rax), %ecx
459 :   store i64 %208, i64* %RCX_val, !mcsema_real_eip !19 :          <30>	movl	4(%rax), %ecx

460 :   %209 = load i64* %RBP_val, !mcsema_real_eip !20 :          <33>	movl	-32(%rbp), %edx
461 :   %210 = add i64 %209, -32, !mcsema_real_eip !20 :          <33>	movl	-32(%rbp), %edx
462 :   %211 = inttoptr i64 %210 to i64*, !mcsema_real_eip !20 :          <33>	movl	-32(%rbp), %edx

463 :   %212 = bitcast i64* %211 to i32* : NIL

464 :   %213 = load i32* %212, !mcsema_real_eip !20 :          <33>	movl	-32(%rbp), %edx
465 :   %214 = zext i32 %213 to i64, !mcsema_real_eip !20 :          <33>	movl	-32(%rbp), %edx
466 :   store i64 %214, i64* %RDX_val, !mcsema_real_eip !20 :          <33>	movl	-32(%rbp), %edx

467 :   %215 = load i64* %RCX_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
468 :   %216 = trunc i64 %215 to i32, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx

469 :   %uadd72 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %213, i32 %216) : NIL
470 :   %217 = extractvalue { i32, i1 } %uadd72, 0 : NIL

471 :   %218 = xor i32 %217, %216, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
472 :   %219 = xor i32 %218, %213, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
473 :   %220 = and i32 %219, 16, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
474 :   %221 = icmp ne i32 %220, 0, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
475 :   store i1 %221, i1* %AF_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx

476 :   %222 = icmp slt i32 %217, 0 : NIL

477 :   store i1 %222, i1* %SF_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
478 :   %223 = icmp eq i32 %217, 0, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
479 :   store i1 %223, i1* %ZF_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
480 :   %224 = xor i32 %213, -2147483648, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
481 :   %225 = xor i32 %224, %216, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
482 :   %226 = and i32 %218, %225, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx

483 :   %227 = icmp slt i32 %226, 0 : NIL

484 :   store i1 %227, i1* %OF_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
485 :   %228 = trunc i32 %217 to i8, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
486 :   %229 = tail call i8 @llvm.ctpop.i8(i8 %228), !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx

487 :   %230 = and i8 %229, 1 : NIL
488 :   %231 = icmp eq i8 %230, 0 : NIL

489 :   store i1 %231, i1* %PF_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx

490 :   %232 = extractvalue { i32, i1 } %uadd72, 1 : NIL

491 :   store i1 %232, i1* %CF_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
492 :   %233 = zext i32 %217 to i64, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx
493 :   store i64 %233, i64* %RCX_val, !mcsema_real_eip !21 :          <36>	addl	%edx, %ecx

494 :   %234 = load i64* %RBP_val, !mcsema_real_eip !22 :          <38>	movl	-36(%rbp), %edx
495 :   %235 = add i64 %234, -36, !mcsema_real_eip !22 :          <38>	movl	-36(%rbp), %edx
496 :   %236 = inttoptr i64 %235 to i64*, !mcsema_real_eip !22 :          <38>	movl	-36(%rbp), %edx

497 :   %237 = bitcast i64* %236 to i32* : NIL

498 :   %238 = load i32* %237, !mcsema_real_eip !22 :          <38>	movl	-36(%rbp), %edx
499 :   %239 = zext i32 %238 to i64, !mcsema_real_eip !22 :          <38>	movl	-36(%rbp), %edx
500 :   store i64 %239, i64* %RDX_val, !mcsema_real_eip !22 :          <38>	movl	-36(%rbp), %edx

501 :   %240 = load i64* %RCX_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
502 :   %241 = trunc i64 %240 to i32, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx

503 :   %uadd73 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %238, i32 %241) : NIL
504 :   %242 = extractvalue { i32, i1 } %uadd73, 0 : NIL

505 :   %243 = xor i32 %242, %241, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
506 :   %244 = xor i32 %243, %238, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
507 :   %245 = and i32 %244, 16, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
508 :   %246 = icmp ne i32 %245, 0, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
509 :   store i1 %246, i1* %AF_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx

510 :   %247 = icmp slt i32 %242, 0 : NIL

511 :   store i1 %247, i1* %SF_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
512 :   %248 = icmp eq i32 %242, 0, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
513 :   store i1 %248, i1* %ZF_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
514 :   %249 = xor i32 %238, -2147483648, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
515 :   %250 = xor i32 %249, %241, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
516 :   %251 = and i32 %243, %250, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx

517 :   %252 = icmp slt i32 %251, 0 : NIL

518 :   store i1 %252, i1* %OF_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
519 :   %253 = trunc i32 %242 to i8, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
520 :   %254 = tail call i8 @llvm.ctpop.i8(i8 %253), !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx

521 :   %255 = and i8 %254, 1 : NIL
522 :   %256 = icmp eq i8 %255, 0 : NIL

523 :   store i1 %256, i1* %PF_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx

524 :   %257 = extractvalue { i32, i1 } %uadd73, 1 : NIL

525 :   store i1 %257, i1* %CF_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
526 :   %258 = zext i32 %242 to i64, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx
527 :   store i64 %258, i64* %RCX_val, !mcsema_real_eip !23 :          <3b>	addl	%edx, %ecx

528 :   %259 = load i64* %RBP_val, !mcsema_real_eip !24 :          <3d>	movl	-40(%rbp), %edx
529 :   %260 = add i64 %259, -40, !mcsema_real_eip !24 :          <3d>	movl	-40(%rbp), %edx
530 :   %261 = inttoptr i64 %260 to i64*, !mcsema_real_eip !24 :          <3d>	movl	-40(%rbp), %edx

531 :   %262 = bitcast i64* %261 to i32* : NIL

532 :   %263 = load i32* %262, !mcsema_real_eip !24 :          <3d>	movl	-40(%rbp), %edx
533 :   %264 = zext i32 %263 to i64, !mcsema_real_eip !24 :          <3d>	movl	-40(%rbp), %edx
534 :   store i64 %264, i64* %RDX_val, !mcsema_real_eip !24 :          <3d>	movl	-40(%rbp), %edx

535 :   %265 = load i64* %RCX_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
536 :   %266 = trunc i64 %265 to i32, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx

537 :   %uadd74 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %263, i32 %266) : NIL
538 :   %267 = extractvalue { i32, i1 } %uadd74, 0 : NIL

539 :   %268 = xor i32 %267, %266, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
540 :   %269 = xor i32 %268, %263, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
541 :   %270 = and i32 %269, 16, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
542 :   %271 = icmp ne i32 %270, 0, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
543 :   store i1 %271, i1* %AF_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx

544 :   %272 = icmp slt i32 %267, 0 : NIL

545 :   store i1 %272, i1* %SF_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
546 :   %273 = icmp eq i32 %267, 0, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
547 :   store i1 %273, i1* %ZF_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
548 :   %274 = xor i32 %263, -2147483648, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
549 :   %275 = xor i32 %274, %266, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
550 :   %276 = and i32 %268, %275, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx

551 :   %277 = icmp slt i32 %276, 0 : NIL

552 :   store i1 %277, i1* %OF_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
553 :   %278 = trunc i32 %267 to i8, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
554 :   %279 = tail call i8 @llvm.ctpop.i8(i8 %278), !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx

555 :   %280 = and i8 %279, 1 : NIL
556 :   %281 = icmp eq i8 %280, 0 : NIL

557 :   store i1 %281, i1* %PF_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx

558 :   %282 = extractvalue { i32, i1 } %uadd74, 1 : NIL

559 :   store i1 %282, i1* %CF_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
560 :   %283 = zext i32 %267 to i64, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx
561 :   store i64 %283, i64* %RCX_val, !mcsema_real_eip !25 :          <40>	addl	%edx, %ecx

562 :   %284 = load i64* %RBP_val, !mcsema_real_eip !26 :          <42>	movl	%ecx, -52(%rbp)
563 :   %285 = add i64 %284, -52, !mcsema_real_eip !26 :          <42>	movl	%ecx, -52(%rbp)
564 :   %286 = inttoptr i64 %285 to i64*, !mcsema_real_eip !26 :          <42>	movl	%ecx, -52(%rbp)

565 :   %287 = bitcast i64* %286 to i32* : NIL

566 :   store i32 %267, i32* %287, !mcsema_real_eip !26 :          <42>	movl	%ecx, -52(%rbp)

567 :   %288 = load i64* %RAX_val, !mcsema_real_eip !27 :          <45>	movl	8(%rax), %ecx
568 :   %289 = add i64 %288, 8, !mcsema_real_eip !27 :          <45>	movl	8(%rax), %ecx
569 :   %290 = inttoptr i64 %289 to i64*, !mcsema_real_eip !27 :          <45>	movl	8(%rax), %ecx

570 :   %291 = bitcast i64* %290 to i32* : NIL

571 :   %292 = load i32* %291, !mcsema_real_eip !27 :          <45>	movl	8(%rax), %ecx
572 :   %293 = zext i32 %292 to i64, !mcsema_real_eip !27 :          <45>	movl	8(%rax), %ecx
573 :   store i64 %293, i64* %RCX_val, !mcsema_real_eip !27 :          <45>	movl	8(%rax), %ecx

574 :   %294 = load i64* %RBP_val, !mcsema_real_eip !28 :          <48>	movl	%ecx, -48(%rbp)
575 :   %295 = add i64 %294, -48, !mcsema_real_eip !28 :          <48>	movl	%ecx, -48(%rbp)
576 :   %296 = inttoptr i64 %295 to i64*, !mcsema_real_eip !28 :          <48>	movl	%ecx, -48(%rbp)

577 :   %297 = bitcast i64* %296 to i32* : NIL

578 :   store i32 %292, i32* %297, !mcsema_real_eip !28 :          <48>	movl	%ecx, -48(%rbp)

579 :   %298 = load i64* %RBP_val, !mcsema_real_eip !29 :          <4b>	movl	%ecx, -8(%rbp)
580 :   %299 = add i64 %298, -8, !mcsema_real_eip !29 :          <4b>	movl	%ecx, -8(%rbp)
581 :   %300 = inttoptr i64 %299 to i64*, !mcsema_real_eip !29 :          <4b>	movl	%ecx, -8(%rbp)
582 :   %301 = load i64* %RCX_val, !mcsema_real_eip !29 :          <4b>	movl	%ecx, -8(%rbp)
583 :   %302 = trunc i64 %301 to i32, !mcsema_real_eip !29 :          <4b>	movl	%ecx, -8(%rbp)

584 :   %303 = bitcast i64* %300 to i32* : NIL

585 :   store i32 %302, i32* %303, !mcsema_real_eip !29 :          <4b>	movl	%ecx, -8(%rbp)

586 :   %304 = load i64* %RBP_val, !mcsema_real_eip !30 :          <4e>	movq	-56(%rbp), %rax
587 :   %305 = add i64 %304, -56, !mcsema_real_eip !30 :          <4e>	movq	-56(%rbp), %rax
588 :   %306 = inttoptr i64 %305 to i64*, !mcsema_real_eip !30 :          <4e>	movq	-56(%rbp), %rax
589 :   %307 = load i64* %306, !mcsema_real_eip !30 :          <4e>	movq	-56(%rbp), %rax
590 :   store i64 %307, i64* %RAX_val, !mcsema_real_eip !30 :          <4e>	movq	-56(%rbp), %rax

591 :   %308 = add i64 %304, -16, !mcsema_real_eip !31 :          <52>	movq	%rax, -16(%rbp)
592 :   %309 = inttoptr i64 %308 to i64*, !mcsema_real_eip !31 :          <52>	movq	%rax, -16(%rbp)
593 :   store i64 %307, i64* %309, !mcsema_real_eip !31 :          <52>	movq	%rax, -16(%rbp)

594 :   %310 = load i64* %RBP_val, !mcsema_real_eip !32 :          <56>	movl	-8(%rbp), %ecx
595 :   %311 = add i64 %310, -8, !mcsema_real_eip !32 :          <56>	movl	-8(%rbp), %ecx
596 :   %312 = inttoptr i64 %311 to i64*, !mcsema_real_eip !32 :          <56>	movl	-8(%rbp), %ecx

597 :   %313 = bitcast i64* %312 to i32* : NIL

598 :   %314 = load i32* %313, !mcsema_real_eip !32 :          <56>	movl	-8(%rbp), %ecx
599 :   %315 = zext i32 %314 to i64, !mcsema_real_eip !32 :          <56>	movl	-8(%rbp), %ecx
600 :   store i64 %315, i64* %RCX_val, !mcsema_real_eip !32 :          <56>	movl	-8(%rbp), %ecx

601 :   %316 = load i64* %RBP_val, !mcsema_real_eip !33 :          <59>	movl	%ecx, -64(%rbp)
602 :   %317 = add i64 %316, -64, !mcsema_real_eip !33 :          <59>	movl	%ecx, -64(%rbp)
603 :   %318 = inttoptr i64 %317 to i64*, !mcsema_real_eip !33 :          <59>	movl	%ecx, -64(%rbp)

604 :   %319 = bitcast i64* %318 to i32* : NIL

605 :   store i32 %314, i32* %319, !mcsema_real_eip !33 :          <59>	movl	%ecx, -64(%rbp)

606 :   %320 = load i64* %RBP_val, !mcsema_real_eip !34 :          <5c>	movq	-16(%rbp), %rax
607 :   %321 = add i64 %320, -16, !mcsema_real_eip !34 :          <5c>	movq	-16(%rbp), %rax
608 :   %322 = inttoptr i64 %321 to i64*, !mcsema_real_eip !34 :          <5c>	movq	-16(%rbp), %rax
609 :   %323 = load i64* %322, !mcsema_real_eip !34 :          <5c>	movq	-16(%rbp), %rax
610 :   store i64 %323, i64* %RAX_val, !mcsema_real_eip !34 :          <5c>	movq	-16(%rbp), %rax

611 :   %324 = add i64 %320, -72, !mcsema_real_eip !35 :          <60>	movq	%rax, -72(%rbp)
612 :   %325 = inttoptr i64 %324 to i64*, !mcsema_real_eip !35 :          <60>	movq	%rax, -72(%rbp)
613 :   store i64 %323, i64* %325, !mcsema_real_eip !35 :          <60>	movq	%rax, -72(%rbp)

614 :   %326 = load i64* %RBP_val, !mcsema_real_eip !36 :          <64>	movq	-72(%rbp), %rax
615 :   %327 = add i64 %326, -72, !mcsema_real_eip !36 :          <64>	movq	-72(%rbp), %rax
616 :   %328 = inttoptr i64 %327 to i64*, !mcsema_real_eip !36 :          <64>	movq	-72(%rbp), %rax
617 :   %329 = load i64* %328, !mcsema_real_eip !36 :          <64>	movq	-72(%rbp), %rax
618 :   store i64 %329, i64* %RAX_val, !mcsema_real_eip !36 :          <64>	movq	-72(%rbp), %rax

619 :   %330 = add i64 %326, -64, !mcsema_real_eip !37 :          <68>	movl	-64(%rbp), %edx
620 :   %331 = inttoptr i64 %330 to i64*, !mcsema_real_eip !37 :          <68>	movl	-64(%rbp), %edx

621 :   %332 = bitcast i64* %331 to i32* : NIL

622 :   %333 = load i32* %332, !mcsema_real_eip !37 :          <68>	movl	-64(%rbp), %edx
623 :   %334 = zext i32 %333 to i64, !mcsema_real_eip !37 :          <68>	movl	-64(%rbp), %edx
624 :   store i64 %334, i64* %RDX_val, !mcsema_real_eip !37 :          <68>	movl	-64(%rbp), %edx

625 :   %335 = load i64* %RSP_val, !mcsema_real_eip !38 :          <6b>	popq	%rbp
626 :   %336 = inttoptr i64 %335 to i64*, !mcsema_real_eip !38 :          <6b>	popq	%rbp
627 :   %337 = load i64* %336, !mcsema_real_eip !38 :          <6b>	popq	%rbp
628 :   store i64 %337, i64* %RBP_val, !mcsema_real_eip !38 :          <6b>	popq	%rbp

629 :   %338 = add i64 %335, 16, !mcsema_real_eip !39 :          <6c>	retq
630 :   store i64 %338, i64* %RSP_val, !mcsema_real_eip !39 :          <6c>	retq
631 :   %339 = load i64* %RAX_val, !mcsema_real_eip !39 :          <6c>	retq
632 :   store i64 %339, i64* %RAX, !mcsema_real_eip !39 :          <6c>	retq
633 :   %340 = load i64* %RBX_val, !mcsema_real_eip !39 :          <6c>	retq
634 :   store i64 %340, i64* %RBX, !mcsema_real_eip !39 :          <6c>	retq
635 :   %341 = load i64* %RCX_val, !mcsema_real_eip !39 :          <6c>	retq
636 :   store i64 %341, i64* %RCX, !mcsema_real_eip !39 :          <6c>	retq
637 :   %342 = load i64* %RDX_val, !mcsema_real_eip !39 :          <6c>	retq
638 :   store i64 %342, i64* %RDX, !mcsema_real_eip !39 :          <6c>	retq
639 :   %343 = load i64* %RSI_val, !mcsema_real_eip !39 :          <6c>	retq
640 :   store i64 %343, i64* %RSI, !mcsema_real_eip !39 :          <6c>	retq
641 :   %344 = load i64* %RDI_val, !mcsema_real_eip !39 :          <6c>	retq
642 :   store i64 %344, i64* %RDI, !mcsema_real_eip !39 :          <6c>	retq
643 :   %345 = load i64* %RSP_val, !mcsema_real_eip !39 :          <6c>	retq
644 :   store i64 %345, i64* %RSP, !mcsema_real_eip !39 :          <6c>	retq
645 :   %346 = load i64* %RBP_val, !mcsema_real_eip !39 :          <6c>	retq
646 :   store i64 %346, i64* %RBP, !mcsema_real_eip !39 :          <6c>	retq
647 :   %347 = load i64* %R8_val, !mcsema_real_eip !39 :          <6c>	retq
648 :   store i64 %347, i64* %R8, !mcsema_real_eip !39 :          <6c>	retq
649 :   %348 = load i64* %R9_val, !mcsema_real_eip !39 :          <6c>	retq
650 :   store i64 %348, i64* %R9, !mcsema_real_eip !39 :          <6c>	retq
651 :   %349 = load i64* %R10_val, !mcsema_real_eip !39 :          <6c>	retq
652 :   store i64 %349, i64* %R10, !mcsema_real_eip !39 :          <6c>	retq
653 :   %350 = load i64* %R11_val, !mcsema_real_eip !39 :          <6c>	retq
654 :   store i64 %350, i64* %R11, !mcsema_real_eip !39 :          <6c>	retq
655 :   %351 = load i64* %R12_val, !mcsema_real_eip !39 :          <6c>	retq
656 :   store i64 %351, i64* %R12, !mcsema_real_eip !39 :          <6c>	retq
657 :   %352 = load i64* %R13_val, !mcsema_real_eip !39 :          <6c>	retq
658 :   store i64 %352, i64* %R13, !mcsema_real_eip !39 :          <6c>	retq
659 :   %353 = load i64* %R14_val, !mcsema_real_eip !39 :          <6c>	retq
660 :   store i64 %353, i64* %R14, !mcsema_real_eip !39 :          <6c>	retq
661 :   %354 = load i64* %R15_val, !mcsema_real_eip !39 :          <6c>	retq
662 :   store i64 %354, i64* %R15, !mcsema_real_eip !39 :          <6c>	retq
663 :   %355 = load i64* %RIP_val, !mcsema_real_eip !39 :          <6c>	retq
664 :   store i64 %355, i64* %RIP, !mcsema_real_eip !39 :          <6c>	retq
665 :   %356 = load i1* %CF_val, !mcsema_real_eip !39 :          <6c>	retq
666 :   store i1 %356, i1* %CF, align 1, !mcsema_real_eip !39 :          <6c>	retq
667 :   %357 = load i1* %PF_val, !mcsema_real_eip !39 :          <6c>	retq
668 :   store i1 %357, i1* %PF, align 1, !mcsema_real_eip !39 :          <6c>	retq
669 :   %358 = load i1* %AF_val, !mcsema_real_eip !39 :          <6c>	retq
670 :   store i1 %358, i1* %AF, align 1, !mcsema_real_eip !39 :          <6c>	retq
671 :   %359 = load i1* %ZF_val, !mcsema_real_eip !39 :          <6c>	retq
672 :   store i1 %359, i1* %ZF, align 1, !mcsema_real_eip !39 :          <6c>	retq
673 :   %360 = load i1* %SF_val, !mcsema_real_eip !39 :          <6c>	retq
674 :   store i1 %360, i1* %SF, align 1, !mcsema_real_eip !39 :          <6c>	retq
675 :   %361 = load i1* %OF_val, !mcsema_real_eip !39 :          <6c>	retq
676 :   store i1 %361, i1* %OF, align 1, !mcsema_real_eip !39 :          <6c>	retq
677 :   %362 = load i1* %DF_val, !mcsema_real_eip !39 :          <6c>	retq
678 :   store i1 %362, i1* %DF, align 1, !mcsema_real_eip !39 :          <6c>	retq
679 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !39 :          <6c>	retq
680 :   %363 = load i1* %FPU_B_val, !mcsema_real_eip !39 :          <6c>	retq
681 :   store i1 %363, i1* %FPU_B, align 1, !mcsema_real_eip !39 :          <6c>	retq
682 :   %364 = load i1* %FPU_C3_val, !mcsema_real_eip !39 :          <6c>	retq
683 :   store i1 %364, i1* %FPU_C3, align 1, !mcsema_real_eip !39 :          <6c>	retq
684 :   %365 = load i3* %FPU_TOP_val, !mcsema_real_eip !39 :          <6c>	retq
685 :   store i3 %365, i3* %FPU_TOP, align 1, !mcsema_real_eip !39 :          <6c>	retq
686 :   %366 = load i1* %FPU_C2_val, !mcsema_real_eip !39 :          <6c>	retq
687 :   store i1 %366, i1* %FPU_C2, align 1, !mcsema_real_eip !39 :          <6c>	retq
688 :   %367 = load i1* %FPU_C1_val, !mcsema_real_eip !39 :          <6c>	retq
689 :   store i1 %367, i1* %FPU_C1, align 1, !mcsema_real_eip !39 :          <6c>	retq
690 :   %368 = load i1* %FPU_C0_val, !mcsema_real_eip !39 :          <6c>	retq
691 :   store i1 %368, i1* %FPU_C0, align 1, !mcsema_real_eip !39 :          <6c>	retq
692 :   %369 = load i1* %FPU_ES_val, !mcsema_real_eip !39 :          <6c>	retq
693 :   store i1 %369, i1* %FPU_ES, align 1, !mcsema_real_eip !39 :          <6c>	retq
694 :   %370 = load i1* %FPU_SF_val, !mcsema_real_eip !39 :          <6c>	retq
695 :   store i1 %370, i1* %FPU_SF, align 1, !mcsema_real_eip !39 :          <6c>	retq
696 :   %371 = load i1* %FPU_PE_val, !mcsema_real_eip !39 :          <6c>	retq
697 :   store i1 %371, i1* %FPU_PE, align 1, !mcsema_real_eip !39 :          <6c>	retq
698 :   %372 = load i1* %FPU_UE_val, !mcsema_real_eip !39 :          <6c>	retq
699 :   store i1 %372, i1* %FPU_UE, align 1, !mcsema_real_eip !39 :          <6c>	retq
700 :   %373 = load i1* %FPU_OE_val, !mcsema_real_eip !39 :          <6c>	retq
701 :   store i1 %373, i1* %FPU_OE, align 1, !mcsema_real_eip !39 :          <6c>	retq
702 :   %374 = load i1* %FPU_ZE_val, !mcsema_real_eip !39 :          <6c>	retq
703 :   store i1 %374, i1* %FPU_ZE, align 1, !mcsema_real_eip !39 :          <6c>	retq
704 :   %375 = load i1* %FPU_DE_val, !mcsema_real_eip !39 :          <6c>	retq
705 :   store i1 %375, i1* %FPU_DE, align 1, !mcsema_real_eip !39 :          <6c>	retq
706 :   %376 = load i1* %FPU_IE_val, !mcsema_real_eip !39 :          <6c>	retq
707 :   store i1 %376, i1* %FPU_IE, align 1, !mcsema_real_eip !39 :          <6c>	retq
708 :   %377 = load i1* %FPU_X_val, !mcsema_real_eip !39 :          <6c>	retq
709 :   store i1 %377, i1* %FPU_X, align 1, !mcsema_real_eip !39 :          <6c>	retq
710 :   %378 = load i2* %FPU_RC_val, !mcsema_real_eip !39 :          <6c>	retq
711 :   store i2 %378, i2* %FPU_RC, align 1, !mcsema_real_eip !39 :          <6c>	retq
712 :   %379 = load i2* %FPU_PC_val, !mcsema_real_eip !39 :          <6c>	retq
713 :   store i2 %379, i2* %FPU_PC, align 1, !mcsema_real_eip !39 :          <6c>	retq
714 :   %380 = load i1* %FPU_PM_val, !mcsema_real_eip !39 :          <6c>	retq
715 :   store i1 %380, i1* %FPU_PM, align 1, !mcsema_real_eip !39 :          <6c>	retq
716 :   %381 = load i1* %FPU_UM_val, !mcsema_real_eip !39 :          <6c>	retq
717 :   store i1 %381, i1* %FPU_UM, align 1, !mcsema_real_eip !39 :          <6c>	retq
718 :   %382 = load i1* %FPU_OM_val, !mcsema_real_eip !39 :          <6c>	retq
719 :   store i1 %382, i1* %FPU_OM, align 1, !mcsema_real_eip !39 :          <6c>	retq
720 :   %383 = load i1* %FPU_ZM_val, !mcsema_real_eip !39 :          <6c>	retq
721 :   store i1 %383, i1* %FPU_ZM, align 1, !mcsema_real_eip !39 :          <6c>	retq
722 :   %384 = load i1* %FPU_DM_val, !mcsema_real_eip !39 :          <6c>	retq
723 :   store i1 %384, i1* %FPU_DM, align 1, !mcsema_real_eip !39 :          <6c>	retq
724 :   %385 = load i1* %FPU_IM_val, !mcsema_real_eip !39 :          <6c>	retq
725 :   store i1 %385, i1* %FPU_IM, align 1, !mcsema_real_eip !39 :          <6c>	retq

726 :   %386 = load i64* %53, align 4 : NIL
727 :   store i64 %386, i64* %52, align 4 : NIL

728 :   %387 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !39 :          <6c>	retq
729 :   store i16 %387, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !39 :          <6c>	retq
730 :   %388 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !39 :          <6c>	retq
731 :   store i64 %388, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !39 :          <6c>	retq
732 :   %389 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !39 :          <6c>	retq
733 :   store i16 %389, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !39 :          <6c>	retq
734 :   %390 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !39 :          <6c>	retq
735 :   store i64 %390, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !39 :          <6c>	retq
736 :   %391 = load i128* %XMM0_val, !mcsema_real_eip !39 :          <6c>	retq
737 :   store i128 %391, i128* %XMM0, align 1, !mcsema_real_eip !39 :          <6c>	retq
738 :   %392 = load i128* %XMM1_val, !mcsema_real_eip !39 :          <6c>	retq
739 :   store i128 %392, i128* %XMM1, align 1, !mcsema_real_eip !39 :          <6c>	retq
740 :   %393 = load i128* %XMM2_val, !mcsema_real_eip !39 :          <6c>	retq
741 :   store i128 %393, i128* %XMM2, align 1, !mcsema_real_eip !39 :          <6c>	retq
742 :   %394 = load i128* %XMM3_val, !mcsema_real_eip !39 :          <6c>	retq
743 :   store i128 %394, i128* %XMM3, align 1, !mcsema_real_eip !39 :          <6c>	retq
744 :   %395 = load i128* %XMM4_val, !mcsema_real_eip !39 :          <6c>	retq
745 :   store i128 %395, i128* %XMM4, align 1, !mcsema_real_eip !39 :          <6c>	retq
746 :   %396 = load i128* %XMM5_val, !mcsema_real_eip !39 :          <6c>	retq
747 :   store i128 %396, i128* %XMM5, align 1, !mcsema_real_eip !39 :          <6c>	retq
748 :   %397 = load i128* %XMM6_val, !mcsema_real_eip !39 :          <6c>	retq
749 :   store i128 %397, i128* %XMM6, align 1, !mcsema_real_eip !39 :          <6c>	retq
750 :   %398 = load i128* %XMM7_val, !mcsema_real_eip !39 :          <6c>	retq
751 :   store i128 %398, i128* %XMM7, align 1, !mcsema_real_eip !39 :          <6c>	retq
752 :   %399 = load i128* %XMM8_val, !mcsema_real_eip !39 :          <6c>	retq
753 :   store i128 %399, i128* %XMM8, align 1, !mcsema_real_eip !39 :          <6c>	retq
754 :   %400 = load i128* %XMM9_val, !mcsema_real_eip !39 :          <6c>	retq
755 :   store i128 %400, i128* %XMM9, align 1, !mcsema_real_eip !39 :          <6c>	retq
756 :   %401 = load i128* %XMM10_val, !mcsema_real_eip !39 :          <6c>	retq
757 :   store i128 %401, i128* %XMM10, align 1, !mcsema_real_eip !39 :          <6c>	retq
758 :   %402 = load i128* %XMM11_val, !mcsema_real_eip !39 :          <6c>	retq
759 :   store i128 %402, i128* %XMM11, align 1, !mcsema_real_eip !39 :          <6c>	retq
760 :   %403 = load i128* %XMM12_val, !mcsema_real_eip !39 :          <6c>	retq
761 :   store i128 %403, i128* %XMM12, align 1, !mcsema_real_eip !39 :          <6c>	retq
762 :   %404 = load i128* %XMM13_val, !mcsema_real_eip !39 :          <6c>	retq
763 :   store i128 %404, i128* %XMM13, align 1, !mcsema_real_eip !39 :          <6c>	retq
764 :   %405 = load i128* %XMM14_val, !mcsema_real_eip !39 :          <6c>	retq
765 :   store i128 %405, i128* %XMM14, align 1, !mcsema_real_eip !39 :          <6c>	retq
766 :   %406 = load i128* %XMM15_val, !mcsema_real_eip !39 :          <6c>	retq
767 :   store i128 %406, i128* %XMM15, align 1, !mcsema_real_eip !39 :          <6c>	retq
768 :   %407 = load i64* %STACK_BASE_val, !mcsema_real_eip !39 :          <6c>	retq
769 :   store i64 %407, i64* %STACK_BASE, align 1, !mcsema_real_eip !39 :          <6c>	retq
770 :   %408 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !39 :          <6c>	retq
771 :   store i64 %408, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !39 :          <6c>	retq
772 :   ret void, !mcsema_real_eip !39 :          <6c>	retq
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_70(%struct.regs* %0) : NIL
2 :   ret void : NIL
