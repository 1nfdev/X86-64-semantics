OPT=$(shell which opt)
LLVMDIS=$(shell which llvm-dis)
LLC=$(shell which llc)
RUN_SH=../utils/run.sh  
#loadso=${HOME}/Github/binary-decompilation/source/build/lib/LLVMmax_stack_height.so
#OPTSWITCH=-ssh -debug
loadso=${HOME}/Github/binary-decompilation/source/build/lib/LLVMstack_deconstructor.so
OPTSWITCH=-stack-decons 
GCC=$(shell which gcc)
CLANG=$(shell which clang)
ICC=$(shell which icc)

all:    clang

gcc:
	@echo " Using gcc"
	COMPILER=${GCC} ENTRY_FUNC=${ENTRY_FUNC} ASM_FILE=${ASM_FILE} FUNC_MAP=${FUNC_MAP} ${RUN_SH} ${PROG_PREFIX} 64
	@${MAKE} ext="gcc" run_pass 

clang:
	@echo " Using clang"
	COMPILER=${CLANG} ENTRY_FUNC=${ENTRY_FUNC} ASM_FILE=${ASM_FILE} FUNC_MAP=${FUNC_MAP} ${RUN_SH} ${PROG_PREFIX} 64
	${MAKE} ext="clang" run_pass

icc:
	@echo " using icc"
	@COMPILER=${ICC} ENTRY_FUNC=${ENTRY_FUNC} ASM_FILE=${ASM_FILE} FUNC_MAP=${FUNC_MAP} ${RUN_SH} ${PROG_PREFIX} 64
	${MAKE} ext="icc" run_pass

run_pass:
	${OPT} -load=${loadso} ${OPTSWITCH} ${PROG_PREFIX}.ll  -o ${PROG_PREFIX}.trans.bc  2>  pass.log
	${OPT} -O3  -o=${PROG_PREFIX}.trans_opt.bc ${PROG_PREFIX}.trans.bc
	${LLVMDIS} ${PROG_PREFIX}.trans.bc
	${LLVMDIS} ${PROG_PREFIX}.trans_opt.bc
	${LLC} 	-march=x86-64 -filetype=obj -o ${PROG_PREFIX}.trans_lifted.o ${PROG_PREFIX}.trans.bc
	${MAKE} ext=${ext} run_check

run_check:
	@if diff -w -q pass.log ${PROG_PREFIX}.${ext}.pass.log > /dev/null; then \
		echo "  ${PROG_PREFIX}: Transformations Passed"; rm -rf pass.log ; \
	else \
		echo "  ${PROG_PREFIX}: Transformations Failed"; \
	fi
	${MAKE} run

clean:
	@../utils/clearall.sh
	@rm -rf log *.dot *.mod



