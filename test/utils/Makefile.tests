OPT=opt
LLVMDIS=llvm-dis
LLVMAS=llvm-as
LLC=llc

TEST_DIR=../../

UTILS_DIR=${TEST_DIR}/utils
INCLUDE_DIR=${UTILS_DIR}
RUN_SH=${UTILS_DIR}/run.pl  
ALLIN=${TEST_DIR}/../build/bin/allin


#ICC=$(shell which icc)
outdir=Output/
CC=clang
CXX=clang++

# ALLVM dependency
BC2ALLVM=bc2allvm
#BC2ALLVM=/nix/store/0kp7zx7jd5s5cjqxi12la67jfpv2kszz-allvm-tools/bin/bc2allvm


#SKIP_MCSEMA=-skip_mcsema
#SKIP_MCSEMA=
PRINT=-print
REG_ASSIGN=-reg_assign

.PHONY:run

#all:    cfg
all:    clang

gcc:
	@echo " Using gcc"
	COMPILER=gcc ENTRY_FUNC=${ENTRY_FUNC} ASM_FILE=${ASM_FILE} FUNC_MAP=${FUNC_MAP} ${RUN_SH} ${PROG_PREFIX} 64
	@${MAKE} ext="gcc" run_pass 

clang:
	@echo ""
	@echo " ${PROG_PREFIX} (clang)"
	@echo "=========================="
	mkdir -p ${outdir}
	${RUN_SH} -file ${PROG_PREFIX}.${ASM_FILE} -arch 64 ${SKIP_MCSEMA} -map ${FUNC_MAP} -entry ${ENTRY_FUNC} -compiler clang -suffix clang -incdir ${INCLUDE_DIR}  ${PRINT}	${FORCE_SKIP_MCSEMA}  -home ${MCSEMA_HOME}  ${REG_ASSIGN}
	${MAKE} ext="clang" run_pass

icc:
	@echo " using icc"
	@COMPILER=icc ENTRY_FUNC=${ENTRY_FUNC} ASM_FILE=${ASM_FILE} FUNC_MAP=${FUNC_MAP} ${RUN_SH} ${PROG_PREFIX} 64
	${MAKE} ext="icc" run_pass

cfg:
	@echo " Using IDA"
	mkdir -p ${outdir}
	${RUN_SH} -file ${PROG_PREFIX}.${ASM_FILE} -arch 64 ${SKIP_MCSEMA} -map ${FUNC_MAP} -entry ${ENTRY_FUNC} -compiler clang -suffix clang -incdir ${INCLUDE_DIR}  ${PRINT}	${FORCE_SKIP_MCSEMA}  -cfg -home ${MCSEMA_HOME} 

run_pass:
	${RUN_SH} -file ${PROG_PREFIX}.${ASM_FILE} -arch 64 ${SKIP_MCSEMA} -map ${FUNC_MAP} -entry ${ENTRY_FUNC} -compiler clang -suffix clang -incdir ${INCLUDE_DIR}  ${PRINT}	${FORCE_SKIP_MCSEMA}  -runpass -home ${MCSEMA_HOME} -stdin_args  ${STDIN_ARGS} -cmd_args ${CMD_ARGS} ${REG_ASSIGN}
#${MAKE} ext=${ext} run

clean:
	@../utils/clearall.sh
	@rm -rf log *.dot *.mod



