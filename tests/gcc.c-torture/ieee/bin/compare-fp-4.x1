	.file	"compare-fp-4.c"
	.text
	.globl	iuneq
	.type	iuneq, @function
iuneq:
	vucomiss	%xmm1, %xmm0
	sete	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L4
	subq	$8, %rsp
	call	abort
.L4:
	ret
	.size	iuneq, .-iuneq
	.globl	ieq
	.type	ieq, @function
ieq:
	vucomiss	%xmm1, %xmm0
	setnp	%al
	movzbl	%al, %eax
	movl	$0, %edx
	cmovne	%edx, %eax
	cmpl	%edi, %eax
	je	.L8
	subq	$8, %rsp
	call	abort
.L8:
	ret
	.size	ieq, .-ieq
	.globl	iltgt
	.type	iltgt, @function
iltgt:
	vucomiss	%xmm1, %xmm0
	setne	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L12
	subq	$8, %rsp
	call	abort
.L12:
	ret
	.size	iltgt, .-iltgt
	.globl	ine
	.type	ine, @function
ine:
	vucomiss	%xmm1, %xmm0
	setp	%al
	movzbl	%al, %eax
	movl	$1, %edx
	cmovne	%edx, %eax
	cmpl	%edi, %eax
	je	.L16
	subq	$8, %rsp
	call	abort
.L16:
	ret
	.size	ine, .-ine
	.globl	iunlt
	.type	iunlt, @function
iunlt:
	vucomiss	%xmm1, %xmm0
	setb	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L20
	subq	$8, %rsp
	call	abort
.L20:
	ret
	.size	iunlt, .-iunlt
	.globl	ilt
	.type	ilt, @function
ilt:
	subq	$8, %rsp
	vucomiss	%xmm0, %xmm1
	seta	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L22
	call	abort
.L22:
	vucomiss	%xmm0, %xmm1
	seta	%dl
	movzbl	%dl, %edx
	cmpl	%edx, %eax
	je	.L23
	call	abort
.L23:
	addq	$8, %rsp
	ret
	.size	ilt, .-ilt
	.globl	iunle
	.type	iunle, @function
iunle:
	vucomiss	%xmm1, %xmm0
	setbe	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L28
	subq	$8, %rsp
	call	abort
.L28:
	ret
	.size	iunle, .-iunle
	.globl	ile
	.type	ile, @function
ile:
	subq	$8, %rsp
	vucomiss	%xmm0, %xmm1
	setnb	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L30
	call	abort
.L30:
	vucomiss	%xmm0, %xmm1
	setnb	%dl
	movzbl	%dl, %edx
	cmpl	%edx, %eax
	je	.L31
	call	abort
.L31:
	addq	$8, %rsp
	ret
	.size	ile, .-ile
	.globl	iungt
	.type	iungt, @function
iungt:
	vucomiss	%xmm0, %xmm1
	setb	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L36
	subq	$8, %rsp
	call	abort
.L36:
	ret
	.size	iungt, .-iungt
	.globl	igt
	.type	igt, @function
igt:
	subq	$8, %rsp
	vucomiss	%xmm1, %xmm0
	seta	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L38
	call	abort
.L38:
	vucomiss	%xmm1, %xmm0
	seta	%dl
	movzbl	%dl, %edx
	cmpl	%edx, %eax
	je	.L39
	call	abort
.L39:
	addq	$8, %rsp
	ret
	.size	igt, .-igt
	.globl	iunge
	.type	iunge, @function
iunge:
	vucomiss	%xmm0, %xmm1
	setbe	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L44
	subq	$8, %rsp
	call	abort
.L44:
	ret
	.size	iunge, .-iunge
	.globl	ige
	.type	ige, @function
ige:
	subq	$8, %rsp
	vucomiss	%xmm1, %xmm0
	setnb	%al
	movzbl	%al, %eax
	cmpl	%edi, %eax
	je	.L46
	call	abort
.L46:
	vucomiss	%xmm1, %xmm0
	setnb	%dl
	movzbl	%dl, %edx
	cmpl	%edx, %eax
	je	.L47
	call	abort
.L47:
	addq	$8, %rsp
	ret
	.size	ige, .-ige
	.globl	main
	.type	main, @function
main:
	subq	$8, %rsp
	movl	$0x7f800000, pinf(%rip)
	movl	$0xff800000, ninf(%rip)
	movl	$0x7fc00000, NaN(%rip)
	movl	$0, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovss	.LC1(%rip), %xmm0
	call	iuneq
	movl	$1, %edi
	vmovss	.LC2(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iuneq
	movl	$0, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iuneq
	movl	$0, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	iuneq
	movl	$1, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iuneq
	movl	$0, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	iuneq
	movl	$0, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	ieq
	movl	$1, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ieq
	movl	$0, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	ieq
	movl	$1, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovss	.LC1(%rip), %xmm0
	call	iltgt
	movl	$0, %edi
	vmovss	.LC2(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	iltgt
	movl	$0, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	ine
	movl	$0, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ine
	movl	$1, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	ine
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC2(%rip), %xmm0
	call	iunlt
	movl	$1, %edi
	vmovss	.LC2(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iunlt
	movl	$0, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iunlt
	movl	$0, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunlt
	movl	$0, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunlt
	movl	$1, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	iunlt
	movl	$0, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunlt
	movl	$0, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	iunlt
	movl	$1, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	ilt
	movl	$0, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ilt
	movl	$0, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	ilt
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC2(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC2(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iunle
	movl	$0, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunle
	movl	$0, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	ile
	movl	$1, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ile
	movl	$0, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	ile
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC2(%rip), %xmm0
	call	iungt
	movl	$1, %edi
	vmovss	.LC2(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iungt
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iungt
	movl	$0, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iungt
	movl	$0, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iungt
	movl	$0, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	iungt
	movl	$0, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iungt
	movl	$1, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	iungt
	movl	$0, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	igt
	movl	$0, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	igt
	movl	$1, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	igt
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC2(%rip), %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC2(%rip), %xmm1
	vmovss	.LC0(%rip), %xmm0
	call	iunge
	movl	$0, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovss	.LC1(%rip), %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC0(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC1(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunge
	movl	$0, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	iunge
	movl	$0, %edi
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	ige
	movl	$1, %edi
	vmovss	.LC5(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ige
	movl	$1, %edi
	vmovss	.LC6(%rip), %xmm1
	vmovss	.LC7(%rip), %xmm0
	call	ige
	movl	$0, %eax
	addq	$8, %rsp
	ret
	.size	main, .-main
	.comm	NaN,4,4
	.comm	ninf,4,4
	.comm	pinf,4,4
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC0:
	.long	2139095040
	.align 4
.LC1:
	.long	4286578688
	.align 4
.LC2:
	.long	2143289344
	.align 4
.LC3:
	.long	1082130432
	.align 4
.LC4:
	.long	1065353216
	.align 4
.LC5:
	.long	1077936128
	.align 4
.LC6:
	.long	1073741824
	.align 4
.LC7:
	.long	1084227584
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
