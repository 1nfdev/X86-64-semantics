	.file	"copysign1.c"
	.text
.Ltext0:
	.cfi_sections	.debug_frame
	.globl	cf
	.type	cf, @function
cf:
.LFB17:
	.file 1 "./src/copysign1.c"
	.loc 1 66 0
	.cfi_startproc
.LVL0:
	.loc 1 66 0
	vmovaps	%xmm1, %xmm2
	vandps	.LC1(%rip), %xmm2, %xmm2
	vandps	.LC0(%rip), %xmm0, %xmm0
.LVL1:
	vorps	%xmm2, %xmm0, %xmm0
	ret
	.cfi_endproc
.LFE17:
	.size	cf, .-cf
	.globl	testf
	.type	testf, @function
testf:
.LFB18:
	.loc 1 66 0
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.loc 1 66 0
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	xorl	%eax, %eax
.LVL2:
	movl	$0, %ebp
	jmp	.L3
.LVL3:
.L5:
	.loc 1 66 0 is_stmt 0 discriminator 5
	movslq	%ebp, %rbx
	leaq	(%rbx,%rbx), %r12
	leaq	(%r12,%rbx), %rdx
	salq	$2, %rdx
	vmovss	Tf+4(%rdx), %xmm1
	vmovss	Tf(%rdx), %xmm0
	call	cf
.LVL4:
	vmovss	%xmm0, 4(%rsp)
	leaq	(%r12,%rbx), %rsi
	salq	$2, %rsi
	addq	$Tf+8, %rsi
	movl	$4, %edx
	leaq	4(%rsp), %rdi
	call	memcmp
.LVL5:
	testl	%eax, %eax
	je	.L4
	.loc 1 66 0 discriminator 2
	call	abort
.LVL6:
.L4:
	.loc 1 66 0 discriminator 3
	addl	$1, %ebp
.LVL7:
.L3:
	.loc 1 66 0 discriminator 4
	cmpl	$7, %ebp
	jle	.L5
	.loc 1 66 0 discriminator 6
	movq	8(%rsp), %rax
	xorq	%fs:40, %rax
	je	.L6
	.loc 1 66 0
	call	__stack_chk_fail
.LVL8:
.L6:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
.LVL9:
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE18:
	.size	testf, .-testf
	.globl	c
	.type	c, @function
c:
.LFB19:
	.loc 1 67 0 is_stmt 1
	.cfi_startproc
.LVL10:
	.loc 1 67 0
	vmovapd	%xmm1, %xmm2
	vandpd	.LC3(%rip), %xmm2, %xmm2
	vandpd	.LC2(%rip), %xmm0, %xmm0
.LVL11:
	vorpd	%xmm2, %xmm0, %xmm0
	ret
	.cfi_endproc
.LFE19:
	.size	c, .-c
	.globl	test
	.type	test, @function
test:
.LFB20:
	.loc 1 67 0
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.loc 1 67 0
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	xorl	%eax, %eax
.LVL12:
	movl	$0, %ebp
	jmp	.L10
.LVL13:
.L12:
	.loc 1 67 0 is_stmt 0 discriminator 5
	movslq	%ebp, %rbx
	leaq	(%rbx,%rbx), %r12
	leaq	(%r12,%rbx), %rdx
	salq	$3, %rdx
	vmovsd	T+8(%rdx), %xmm1
	vmovsd	T(%rdx), %xmm0
	call	c
.LVL14:
	vmovsd	%xmm0, (%rsp)
	leaq	(%r12,%rbx), %rsi
	salq	$3, %rsi
	addq	$T+16, %rsi
	movl	$8, %edx
	movq	%rsp, %rdi
	call	memcmp
.LVL15:
	testl	%eax, %eax
	je	.L11
	.loc 1 67 0 discriminator 2
	call	abort
.LVL16:
.L11:
	.loc 1 67 0 discriminator 3
	addl	$1, %ebp
.LVL17:
.L10:
	.loc 1 67 0 discriminator 4
	cmpl	$7, %ebp
	jle	.L12
	.loc 1 67 0 discriminator 6
	movq	8(%rsp), %rax
	xorq	%fs:40, %rax
	je	.L13
	.loc 1 67 0
	call	__stack_chk_fail
.LVL18:
.L13:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
.LVL19:
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE20:
	.size	test, .-test
	.globl	cl
	.type	cl, @function
cl:
.LFB21:
	.loc 1 68 0 is_stmt 1
	.cfi_startproc
.LVL20:
	.loc 1 68 0
	fldt	24(%rsp)
	fxam
	fnstsw	%ax
	fstp	%st(0)
	fldt	8(%rsp)
	fabs
	testb	$2, %ah
	je	.L16
	fchs
.L16:
	ret
	.cfi_endproc
.LFE21:
	.size	cl, .-cl
	.globl	testl
	.type	testl, @function
testl:
.LFB22:
	.loc 1 68 0
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.loc 1 68 0
	movq	%fs:40, %rax
	movq	%rax, 24(%rsp)
	xorl	%eax, %eax
.LVL21:
	movl	$0, %ebp
	jmp	.L18
.LVL22:
.L20:
	.loc 1 68 0 is_stmt 0 discriminator 5
	movslq	%ebp, %rbx
	leaq	(%rbx,%rbx), %r12
	leaq	(%r12,%rbx), %rax
	salq	$4, %rax
	pushq	Tl+24(%rax)
	.cfi_def_cfa_offset 72
	pushq	Tl+16(%rax)
	.cfi_def_cfa_offset 80
	leaq	(%r12,%rbx), %rax
	salq	$4, %rax
	pushq	Tl+8(%rax)
	.cfi_def_cfa_offset 88
	pushq	Tl(%rax)
	.cfi_def_cfa_offset 96
	call	cl
.LVL23:
	addq	$32, %rsp
	.cfi_def_cfa_offset 64
	fstpt	(%rsp)
	leaq	(%r12,%rbx), %rsi
	salq	$4, %rsi
	addq	$Tl+32, %rsi
	movl	$10, %edx
	movq	%rsp, %rdi
	call	memcmp
.LVL24:
	testl	%eax, %eax
	je	.L19
	.loc 1 68 0 discriminator 2
	call	abort
.LVL25:
.L19:
	.loc 1 68 0 discriminator 3
	addl	$1, %ebp
.LVL26:
.L18:
	.loc 1 68 0 discriminator 4
	cmpl	$7, %ebp
	jle	.L20
	.loc 1 68 0 discriminator 6
	movq	24(%rsp), %rax
	xorq	%fs:40, %rax
	je	.L21
	.loc 1 68 0
	call	__stack_chk_fail
.LVL27:
.L21:
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
.LVL28:
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE22:
	.size	testl, .-testl
	.globl	main
	.type	main, @function
main:
.LFB23:
	.loc 1 71 0 is_stmt 1
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	.loc 1 72 0
	call	testf
.LVL29:
	.loc 1 73 0
	call	test
.LVL30:
	.loc 1 74 0
	call	testl
.LVL31:
	.loc 1 76 0
	movl	$0, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE23:
	.size	main, .-main
	.section	.rodata
	.align 64
	.type	Tl, @object
	.size	Tl, 384
Tl:
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	16384
	.long	0
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	2147483648
	.long	16384
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2147483648
	.long	32767
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	2147483648
	.long	65535
	.long	0
	.long	0
	.long	3221225472
	.long	65535
	.long	0
	.long	0
	.long	2147483648
	.long	32767
	.long	0
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.align 64
	.type	T, @object
	.size	T, 192
T:
	.long	0
	.long	1072693248
	.long	0
	.long	1073741824
	.long	0
	.long	1072693248
	.long	0
	.long	1072693248
	.long	0
	.long	-1073741824
	.long	0
	.long	-1074790400
	.long	0
	.long	-1074790400
	.long	0
	.long	-1073741824
	.long	0
	.long	-1074790400
	.long	0
	.long	0
	.long	0
	.long	-1073741824
	.long	0
	.long	-2147483648
	.long	0
	.long	-2147483648
	.long	0
	.long	-1073741824
	.long	0
	.long	-2147483648
	.long	0
	.long	-2147483648
	.long	0
	.long	1073741824
	.long	0
	.long	0
	.long	0
	.long	2146435072
	.long	0
	.long	-2147483648
	.long	0
	.long	-1048576
	.long	0
	.long	-524288
	.long	0
	.long	2146435072
	.long	0
	.long	2146959360
	.align 64
	.type	Tf, @object
	.size	Tf, 96
Tf:
	.long	1065353216
	.long	1073741824
	.long	1065353216
	.long	1065353216
	.long	3221225472
	.long	3212836864
	.long	3212836864
	.long	3221225472
	.long	3212836864
	.long	0
	.long	3221225472
	.long	2147483648
	.long	2147483648
	.long	3221225472
	.long	2147483648
	.long	2147483648
	.long	1073741824
	.long	0
	.long	2139095040
	.long	2147483648
	.long	4286578688
	.long	4290772992
	.long	2139095040
	.long	2143289344
	.section	.rodata.cst16,"aM",@progbits,16
	.align 16
.LC0:
	.long	2147483647
	.long	0
	.long	0
	.long	0
	.align 16
.LC1:
	.long	2147483648
	.long	0
	.long	0
	.long	0
	.align 16
.LC2:
	.long	4294967295
	.long	2147483647
	.long	0
	.long	0
	.align 16
.LC3:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.text
.Letext0:
	.file 2 "/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h"
	.file 3 "/usr/include/string.h"
	.file 4 "/usr/include/stdlib.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x4f3
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF18
	.byte	0x1
	.long	.LASF19
	.long	.LASF20
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF0
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF1
	.uleb128 0x3
	.long	.LASF21
	.byte	0x2
	.byte	0xd4
	.long	0x46
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF4
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF5
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF7
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF8
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF9
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF10
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF11
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF12
	.uleb128 0x5
	.byte	0x8
	.long	0xa0
	.uleb128 0x6
	.uleb128 0x7
	.string	"Df"
	.byte	0xc
	.byte	0x1
	.byte	0x42
	.long	0xcb
	.uleb128 0x8
	.string	"x"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.byte	0
	.uleb128 0x8
	.string	"y"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.byte	0x4
	.uleb128 0x8
	.string	"z"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.string	"D"
	.byte	0x18
	.byte	0x1
	.byte	0x43
	.long	0xf4
	.uleb128 0x8
	.string	"x"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.byte	0
	.uleb128 0x8
	.string	"y"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.byte	0x8
	.uleb128 0x8
	.string	"z"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.byte	0x10
	.byte	0
	.uleb128 0x7
	.string	"Dl"
	.byte	0x30
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.uleb128 0x8
	.string	"x"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.byte	0
	.uleb128 0x8
	.string	"y"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.byte	0x10
	.uleb128 0x8
	.string	"z"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.byte	0x20
	.byte	0
	.uleb128 0x2
	.byte	0x10
	.byte	0x4
	.long	.LASF13
	.uleb128 0x9
	.string	"cf"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x15e
	.uleb128 0xa
	.string	"x"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.long	.LLST0
	.uleb128 0xb
	.string	"y"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.uleb128 0x1
	.byte	0x62
	.byte	0
	.uleb128 0xc
	.long	.LASF14
	.byte	0x1
	.byte	0x42
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x22d
	.uleb128 0xd
	.string	"i"
	.byte	0x1
	.byte	0x42
	.long	0x5b
	.long	.LLST1
	.uleb128 0xe
	.string	"n"
	.byte	0x1
	.byte	0x42
	.long	0x5b
	.byte	0x8
	.uleb128 0xf
	.string	"r"
	.byte	0x1
	.byte	0x42
	.long	0x34
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x10
	.quad	.LVL4
	.long	0x125
	.long	0x1e0
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x61
	.uleb128 0x14
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x32
	.byte	0x24
	.byte	0x3
	.quad	Tf
	.byte	0x22
	.byte	0xf6
	.byte	0x4
	.uleb128 0x34
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x62
	.uleb128 0x14
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x32
	.byte	0x24
	.byte	0x3
	.quad	Tf+4
	.byte	0x22
	.byte	0xf6
	.byte	0x4
	.uleb128 0x34
	.byte	0
	.uleb128 0x10
	.quad	.LVL5
	.long	0x4ca
	.long	0x212
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x11
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x32
	.byte	0x24
	.byte	0x3
	.quad	Tf+8
	.byte	0x22
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0x12
	.quad	.LVL6
	.long	0x4e9
	.uleb128 0x12
	.quad	.LVL8
	.long	0x4f1
	.byte	0
	.uleb128 0x9
	.string	"c"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x265
	.uleb128 0xa
	.string	"x"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.long	.LLST2
	.uleb128 0xb
	.string	"y"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.uleb128 0x1
	.byte	0x62
	.byte	0
	.uleb128 0xc
	.long	.LASF15
	.byte	0x1
	.byte	0x43
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x334
	.uleb128 0xd
	.string	"i"
	.byte	0x1
	.byte	0x43
	.long	0x5b
	.long	.LLST3
	.uleb128 0xe
	.string	"n"
	.byte	0x1
	.byte	0x43
	.long	0x5b
	.byte	0x8
	.uleb128 0xf
	.string	"r"
	.byte	0x1
	.byte	0x43
	.long	0x2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x10
	.quad	.LVL14
	.long	0x22d
	.long	0x2e7
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x61
	.uleb128 0x14
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x33
	.byte	0x24
	.byte	0x3
	.quad	T
	.byte	0x22
	.byte	0xf6
	.byte	0x8
	.uleb128 0x2d
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x62
	.uleb128 0x14
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x33
	.byte	0x24
	.byte	0x3
	.quad	T+8
	.byte	0x22
	.byte	0xf6
	.byte	0x8
	.uleb128 0x2d
	.byte	0
	.uleb128 0x10
	.quad	.LVL15
	.long	0x4ca
	.long	0x319
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x77
	.sleb128 0
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x11
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x33
	.byte	0x24
	.byte	0x3
	.quad	T+16
	.byte	0x22
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0x12
	.quad	.LVL16
	.long	0x4e9
	.uleb128 0x12
	.quad	.LVL18
	.long	0x4f1
	.byte	0
	.uleb128 0x9
	.string	"cl"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x36d
	.uleb128 0xb
	.string	"x"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xb
	.string	"y"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	.LASF16
	.byte	0x1
	.byte	0x44
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0x407
	.uleb128 0xd
	.string	"i"
	.byte	0x1
	.byte	0x44
	.long	0x5b
	.long	.LLST4
	.uleb128 0xe
	.string	"n"
	.byte	0x1
	.byte	0x44
	.long	0x5b
	.byte	0x8
	.uleb128 0xf
	.string	"r"
	.byte	0x1
	.byte	0x44
	.long	0x11e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x12
	.quad	.LVL23
	.long	0x334
	.uleb128 0x10
	.quad	.LVL24
	.long	0x4ca
	.long	0x3ec
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x77
	.sleb128 0
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x11
	.byte	0x7c
	.sleb128 0
	.byte	0x73
	.sleb128 0
	.byte	0x22
	.byte	0x34
	.byte	0x24
	.byte	0x3
	.quad	Tl+32
	.byte	0x22
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0x12
	.quad	.LVL25
	.long	0x4e9
	.uleb128 0x12
	.quad	.LVL27
	.long	0x4f1
	.byte	0
	.uleb128 0x13
	.long	.LASF17
	.byte	0x1
	.byte	0x46
	.long	0x5b
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x450
	.uleb128 0x12
	.quad	.LVL29
	.long	0x15e
	.uleb128 0x12
	.quad	.LVL30
	.long	0x265
	.uleb128 0x12
	.quad	.LVL31
	.long	0x36d
	.byte	0
	.uleb128 0x14
	.long	0xa1
	.long	0x460
	.uleb128 0x15
	.long	0x4d
	.byte	0x7
	.byte	0
	.uleb128 0xf
	.string	"Tf"
	.byte	0x1
	.byte	0x42
	.long	0x474
	.uleb128 0x9
	.byte	0x3
	.quad	Tf
	.uleb128 0x16
	.long	0x450
	.uleb128 0x14
	.long	0xcb
	.long	0x489
	.uleb128 0x15
	.long	0x4d
	.byte	0x7
	.byte	0
	.uleb128 0xf
	.string	"T"
	.byte	0x1
	.byte	0x43
	.long	0x49c
	.uleb128 0x9
	.byte	0x3
	.quad	T
	.uleb128 0x16
	.long	0x479
	.uleb128 0x14
	.long	0xf4
	.long	0x4b1
	.uleb128 0x15
	.long	0x4d
	.byte	0x7
	.byte	0
	.uleb128 0xf
	.string	"Tl"
	.byte	0x1
	.byte	0x44
	.long	0x4c5
	.uleb128 0x9
	.byte	0x3
	.quad	Tl
	.uleb128 0x16
	.long	0x4a1
	.uleb128 0x17
	.long	.LASF22
	.byte	0x3
	.byte	0x41
	.long	0x5b
	.long	0x4e9
	.uleb128 0x18
	.long	0x9a
	.uleb128 0x18
	.long	0x9a
	.uleb128 0x18
	.long	0x3b
	.byte	0
	.uleb128 0x19
	.long	.LASF23
	.byte	0x4
	.value	0x1dc
	.uleb128 0x1a
	.long	.LASF24
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.quad	.LVL0-.Ltext0
	.quad	.LVL1-.Ltext0
	.value	0x1
	.byte	0x61
	.quad	.LVL1-.Ltext0
	.quad	.LFE17-.Ltext0
	.value	0x6
	.byte	0xf3
	.uleb128 0x3
	.byte	0xf5
	.uleb128 0x11
	.uleb128 0x34
	.byte	0x9f
	.quad	0
	.quad	0
.LLST1:
	.quad	.LVL2-.Ltext0
	.quad	.LVL3-.Ltext0
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL3-.Ltext0
	.quad	.LVL9-.Ltext0
	.value	0x1
	.byte	0x56
	.quad	0
	.quad	0
.LLST2:
	.quad	.LVL10-.Ltext0
	.quad	.LVL11-.Ltext0
	.value	0x1
	.byte	0x61
	.quad	.LVL11-.Ltext0
	.quad	.LFE19-.Ltext0
	.value	0x6
	.byte	0xf3
	.uleb128 0x3
	.byte	0xf5
	.uleb128 0x11
	.uleb128 0x2d
	.byte	0x9f
	.quad	0
	.quad	0
.LLST3:
	.quad	.LVL12-.Ltext0
	.quad	.LVL13-.Ltext0
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL13-.Ltext0
	.quad	.LVL19-.Ltext0
	.value	0x1
	.byte	0x56
	.quad	0
	.quad	0
.LLST4:
	.quad	.LVL21-.Ltext0
	.quad	.LVL22-.Ltext0
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL22-.Ltext0
	.quad	.LVL28-.Ltext0
	.value	0x1
	.byte	0x56
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF21:
	.string	"size_t"
.LASF22:
	.string	"memcmp"
.LASF4:
	.string	"short unsigned int"
.LASF20:
	.string	"/home/sdasgup3/x86-semantics/tests/gcc.c-torture/ieee"
.LASF1:
	.string	"float"
.LASF8:
	.string	"unsigned char"
.LASF2:
	.string	"long unsigned int"
.LASF14:
	.string	"testf"
.LASF16:
	.string	"testl"
.LASF0:
	.string	"double"
.LASF17:
	.string	"main"
.LASF15:
	.string	"test"
.LASF9:
	.string	"unsigned int"
.LASF24:
	.string	"__stack_chk_fail"
.LASF12:
	.string	"long long unsigned int"
.LASF3:
	.string	"sizetype"
.LASF7:
	.string	"long long int"
.LASF19:
	.string	"./src/copysign1.c"
.LASF5:
	.string	"char"
.LASF11:
	.string	"short int"
.LASF18:
	.string	"GNU C 4.9.4 -march=haswell -g -Og -fno-inline -fno-asynchronous-unwind-tables -fstack-protector-strong"
.LASF6:
	.string	"long int"
.LASF23:
	.string	"abort"
.LASF13:
	.string	"long double"
.LASF10:
	.string	"signed char"
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
