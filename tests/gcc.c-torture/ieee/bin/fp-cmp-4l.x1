	.file	"fp-cmp-4l.c"
	.text
	.globl	test_isunordered
	.type	test_isunordered, @function
test_isunordered:
	subq	$8, %rsp
	fldt	32(%rsp)
	fldt	16(%rsp)
	fucomip	%st(1), %st
	fstp	%st(0)
	jnp	.L2
	testl	%edi, %edi
	jne	.L1
	call	abort
.L2:
	testl	%edi, %edi
	je	.L1
	call	abort
.L1:
	addq	$8, %rsp
	ret
	.size	test_isunordered, .-test_isunordered
	.globl	test_isless
	.type	test_isless, @function
test_isless:
	subq	$8, %rsp
	fldt	32(%rsp)
	fldt	16(%rsp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	jbe	.L6
	testl	%edi, %edi
	jne	.L5
	call	abort
.L6:
	testl	%edi, %edi
	je	.L5
	call	abort
.L5:
	addq	$8, %rsp
	ret
	.size	test_isless, .-test_isless
	.globl	test_islessequal
	.type	test_islessequal, @function
test_islessequal:
	subq	$8, %rsp
	fldt	32(%rsp)
	fldt	16(%rsp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	jb	.L10
	testl	%edi, %edi
	jne	.L9
	call	abort
.L10:
	testl	%edi, %edi
	je	.L9
	call	abort
.L9:
	addq	$8, %rsp
	ret
	.size	test_islessequal, .-test_islessequal
	.globl	test_isgreater
	.type	test_isgreater, @function
test_isgreater:
	subq	$8, %rsp
	fldt	32(%rsp)
	fldt	16(%rsp)
	fucomip	%st(1), %st
	fstp	%st(0)
	jbe	.L14
	testl	%edi, %edi
	jne	.L13
	call	abort
.L14:
	testl	%edi, %edi
	je	.L13
	call	abort
.L13:
	addq	$8, %rsp
	ret
	.size	test_isgreater, .-test_isgreater
	.globl	test_isgreaterequal
	.type	test_isgreaterequal, @function
test_isgreaterequal:
	subq	$8, %rsp
	fldt	32(%rsp)
	fldt	16(%rsp)
	fucomip	%st(1), %st
	fstp	%st(0)
	jb	.L18
	testl	%edi, %edi
	jne	.L17
	call	abort
.L18:
	testl	%edi, %edi
	je	.L17
	call	abort
.L17:
	addq	$8, %rsp
	ret
	.size	test_isgreaterequal, .-test_isgreaterequal
	.globl	test_islessgreater
	.type	test_islessgreater, @function
test_islessgreater:
	subq	$8, %rsp
	fldt	32(%rsp)
	fldt	16(%rsp)
	fucomip	%st(1), %st
	fstp	%st(0)
	je	.L22
	testl	%edi, %edi
	jne	.L21
	call	abort
.L22:
	testl	%edi, %edi
	je	.L21
	call	abort
.L21:
	addq	$8, %rsp
	ret
	.size	test_islessgreater, .-test_islessgreater
	.globl	main
	.type	main, @function
main:
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbp
	pushq	%rbx
	subq	$24, %rsp
	movl	$data.2290+16, %r12d
	movl	$0, %r15d
.L26:
	fldt	(%r12)
	fld	%st(0)
	fstpt	(%rsp)
	movq	-16(%r12), %r13
	movl	-8(%r12), %r14d
	movslq	%r15d, %rbx
	leaq	(%rbx,%rbx), %rbp
	leaq	0(%rbp,%rbx), %rax
	salq	$4, %rax
	movzbl	data.2290+32(%rax), %edi
	andl	$1, %edi
	leaq	-16(%rsp), %rsp
	fstpt	(%rsp)
	pushq	%r14
	pushq	%r13
	call	test_isunordered
	addq	$32, %rsp
	leaq	0(%rbp,%rbx), %rax
	salq	$4, %rax
	movzbl	data.2290+32(%rax), %edi
	shrb	%dil
	andl	$1, %edi
	pushq	8(%rsp)
	pushq	8(%rsp)
	pushq	%r14
	pushq	%r13
	call	test_isless
	addq	$32, %rsp
	leaq	0(%rbp,%rbx), %rax
	salq	$4, %rax
	movzbl	data.2290+32(%rax), %edi
	shrb	$2, %dil
	andl	$1, %edi
	pushq	8(%rsp)
	pushq	8(%rsp)
	pushq	%r14
	pushq	%r13
	call	test_islessequal
	addq	$32, %rsp
	leaq	0(%rbp,%rbx), %rax
	salq	$4, %rax
	movzbl	data.2290+32(%rax), %edi
	shrb	$3, %dil
	andl	$1, %edi
	pushq	8(%rsp)
	pushq	8(%rsp)
	pushq	%r14
	pushq	%r13
	call	test_isgreater
	addq	$32, %rsp
	leaq	0(%rbp,%rbx), %rax
	salq	$4, %rax
	movzbl	data.2290+32(%rax), %edi
	shrb	$4, %dil
	andl	$1, %edi
	pushq	8(%rsp)
	pushq	8(%rsp)
	pushq	%r14
	pushq	%r13
	call	test_isgreaterequal
	addq	$32, %rsp
	addq	%rbp, %rbx
	salq	$4, %rbx
	movzbl	data.2290+32(%rbx), %edi
	shrb	$5, %dil
	andl	$1, %edi
	pushq	8(%rsp)
	pushq	8(%rsp)
	pushq	%r14
	pushq	%r13
	call	test_islessgreater
	addq	$32, %rsp
	addl	$1, %r15d
	addq	$48, %r12
	cmpl	$6, %r15d
	jne	.L26
	movl	$0, %edi
	call	exit
	.size	main, .-main
	.section	.rodata
	.align 64
	.type	data.2290, @object
	.size	data.2290, 288
data.2290:
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.byte	1
	.zero	15
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.byte	1
	.zero	15
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.byte	1
	.zero	15
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.byte	20
	.zero	15
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	16384
	.long	0
	.byte	38
	.zero	15
	.long	0
	.long	2147483648
	.long	16384
	.long	0
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.byte	56
	.zero	15
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
