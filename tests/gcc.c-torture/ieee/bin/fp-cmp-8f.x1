	.file	"fp-cmp-8f.c"
	.text
	.type	test_isunordered, @function
test_isunordered:
	vcmpunordss	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_isunordered, .-test_isunordered
	.type	test_not_isunordered, @function
test_not_isunordered:
	vcmpordss	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_not_isunordered, .-test_not_isunordered
	.type	test_isless, @function
test_isless:
	vcmpnltss	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm3, %xmm3
	vandnps	%xmm2, %xmm1, %xmm2
	vorps	%xmm3, %xmm2, %xmm0
	ret
	.size	test_isless, .-test_isless
	.type	test_not_isless, @function
test_not_isless:
	vcmpnltss	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_not_isless, .-test_not_isless
	.type	test_islessequal, @function
test_islessequal:
	vcmpnless	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm3, %xmm3
	vandnps	%xmm2, %xmm1, %xmm2
	vorps	%xmm3, %xmm2, %xmm0
	ret
	.size	test_islessequal, .-test_islessequal
	.type	test_not_islessequal, @function
test_not_islessequal:
	vcmpnless	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_not_islessequal, .-test_not_islessequal
	.type	test_isgreater, @function
test_isgreater:
	vcmpnltss	%xmm0, %xmm1, %xmm1
	vandps	%xmm1, %xmm3, %xmm3
	vandnps	%xmm2, %xmm1, %xmm2
	vorps	%xmm3, %xmm2, %xmm0
	ret
	.size	test_isgreater, .-test_isgreater
	.type	test_not_isgreater, @function
test_not_isgreater:
	vcmpnltss	%xmm0, %xmm1, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_not_isgreater, .-test_not_isgreater
	.type	test_isgreaterequal, @function
test_isgreaterequal:
	vcmpnless	%xmm0, %xmm1, %xmm1
	vandps	%xmm1, %xmm3, %xmm3
	vandnps	%xmm2, %xmm1, %xmm2
	vorps	%xmm3, %xmm2, %xmm0
	ret
	.size	test_isgreaterequal, .-test_isgreaterequal
	.type	test_not_isgreaterequal, @function
test_not_isgreaterequal:
	vcmpnless	%xmm0, %xmm1, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_not_isgreaterequal, .-test_not_isgreaterequal
	.type	test_islessgreater, @function
test_islessgreater:
	vcmpeq_usss	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm3, %xmm3
	vandnps	%xmm2, %xmm1, %xmm2
	vorps	%xmm3, %xmm2, %xmm0
	ret
	.size	test_islessgreater, .-test_islessgreater
	.type	test_not_islessgreater, @function
test_not_islessgreater:
	vcmpeq_usss	%xmm1, %xmm0, %xmm1
	vandps	%xmm1, %xmm2, %xmm2
	vandnps	%xmm3, %xmm1, %xmm3
	vorps	%xmm2, %xmm3, %xmm0
	ret
	.size	test_not_islessgreater, .-test_not_islessgreater
	.type	one_test, @function
one_test:
	pushq	%r12
	pushq	%rbp
	pushq	%rbx
	subq	$16, %rsp
	vmovss	%xmm0, 8(%rsp)
	vmovss	%xmm1, 12(%rsp)
	movl	%edi, %ebp
	movq	%rdx, %r12
	vmovss	.LC0(%rip), %xmm3
	vmovss	.LC1(%rip), %xmm2
	call	*%rsi
	vmovss	.LC1(%rip), %xmm1
	vucomiss	%xmm1, %xmm0
	setnp	%al
	movzbl	%al, %eax
	movl	$0, %ebx
	cmove	%eax, %ebx
	cmpl	%ebp, %ebx
	je	.L48
	call	abort
.L48:
	vmovss	.LC2(%rip), %xmm3
	vmovss	.LC3(%rip), %xmm2
	vmovss	12(%rsp), %xmm1
	vmovss	8(%rsp), %xmm0
	call	*%r12
	vucomiss	.LC2(%rip), %xmm0
	setnp	%al
	movzbl	%al, %eax
	movl	$0, %edx
	cmovne	%edx, %eax
	cmpl	%eax, %ebx
	je	.L47
	call	abort
.L47:
	addq	$16, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	ret
	.size	one_test, .-one_test
	.globl	main
	.type	main, @function
main:
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbp
	pushq	%rbx
	movl	$data.2330+8, %r12d
	movl	$data.2330+456, %r14d
	movl	$tests.2342+104, %r13d
	jmp	.L52
.L53:
	movq	-8(%rbx), %rsi
	movq	(%rbx), %rdx
	movl	0(%rbp), %edi
	vmovss	-4(%r12), %xmm1
	vmovss	-8(%r12), %xmm0
	call	one_test
	addq	$16, %rbx
	addq	$4, %rbp
	cmpq	%r13, %rbx
	jne	.L53
	addq	$32, %r12
	cmpq	%r14, %r12
	je	.L54
.L52:
	movl	$tests.2342+8, %ebx
	movq	%r12, %rbp
	jmp	.L53
.L54:
	movl	$0, %edi
	call	exit
	.size	main, .-main
	.section	.rodata
	.align 64
	.type	data.2330, @object
	.size	data.2330, 448
data.2330:
	.long	2143289344
	.long	2143289344
	.long	1
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2143289344
	.long	1
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2143289344
	.long	0
	.long	1
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	0
	.long	1065353216
	.long	1073741824
	.long	0
	.long	1
	.long	1
	.long	0
	.long	0
	.long	1
	.long	1073741824
	.long	1065353216
	.long	0
	.long	0
	.long	0
	.long	1
	.long	1
	.long	1
	.long	2139095040
	.long	0
	.long	0
	.long	0
	.long	0
	.long	1
	.long	1
	.long	1
	.long	1065353216
	.long	2139095040
	.long	0
	.long	1
	.long	1
	.long	0
	.long	0
	.long	1
	.long	2139095040
	.long	2139095040
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	0
	.long	0
	.long	4286578688
	.long	0
	.long	0
	.long	0
	.long	1
	.long	1
	.long	1
	.long	4286578688
	.long	1065353216
	.long	0
	.long	1
	.long	1
	.long	0
	.long	0
	.long	1
	.long	4286578688
	.long	4286578688
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	0
	.long	2139095040
	.long	4286578688
	.long	0
	.long	0
	.long	0
	.long	1
	.long	1
	.long	1
	.long	4286578688
	.long	2139095040
	.long	0
	.long	1
	.long	1
	.long	0
	.long	0
	.long	1
	.align 64
	.type	tests.2342, @object
	.size	tests.2342, 96
tests.2342:
	.quad	test_isunordered
	.quad	test_not_isunordered
	.quad	test_isless
	.quad	test_not_isless
	.quad	test_islessequal
	.quad	test_not_islessequal
	.quad	test_isgreater
	.quad	test_not_isgreater
	.quad	test_isgreaterequal
	.quad	test_not_isgreaterequal
	.quad	test_islessgreater
	.quad	test_not_islessgreater
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC0:
	.long	1073741824
	.align 4
.LC1:
	.long	1065353216
	.align 4
.LC2:
	.long	1082130432
	.align 4
.LC3:
	.long	1077936128
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
