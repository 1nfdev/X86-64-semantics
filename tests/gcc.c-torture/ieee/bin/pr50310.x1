	.file	"pr50310.c"
	.text
	.globl	foo
	.type	foo, @function
foo:
	movl	$0, %eax
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L4:
	vmovsd	s1(%rax), %xmm1
	vmovsd	s2(%rax), %xmm0
	vcmpnltsd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L4
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L6:
	vmovsd	s1(%rax), %xmm1
	vmovsd	s2(%rax), %xmm0
	vcmpnltsd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+32(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L6
	movb	$0, %al
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L9:
	vmovsd	s1(%rax), %xmm1
	vmovsd	s2(%rax), %xmm0
	vcmpnlesd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+64(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L9
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L11:
	vmovsd	s1(%rax), %xmm1
	vmovsd	s2(%rax), %xmm0
	vcmpnlesd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+96(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L11
	movb	$0, %al
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L14:
	vmovsd	s2(%rax), %xmm1
	vmovsd	s1(%rax), %xmm0
	vcmpnltsd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+128(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L14
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L16:
	vmovsd	s2(%rax), %xmm1
	vmovsd	s1(%rax), %xmm0
	vcmpnltsd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+160(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L16
	movb	$0, %al
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L19:
	vmovsd	s2(%rax), %xmm1
	vmovsd	s1(%rax), %xmm0
	vcmpnlesd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+192(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L19
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L21:
	vmovsd	s2(%rax), %xmm1
	vmovsd	s1(%rax), %xmm0
	vcmpnlesd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+224(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L21
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L24:
	vmovsd	s1(%rax), %xmm0
	vcmpneq_oqsd	s2(%rax), %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+256(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L24
	movb	$0, %al
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L26:
	vmovsd	s1(%rax), %xmm0
	vcmpneq_oqsd	s2(%rax), %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+288(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L26
	movb	$0, %al
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L28:
	vmovsd	s1(%rax), %xmm0
	vcmpordsd	s2(%rax), %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+320(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L28
	movb	$0, %al
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovsd	.LC0(%rip), %xmm2
.L30:
	vmovsd	s1(%rax), %xmm0
	vcmpunordsd	s2(%rax), %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+352(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L30
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L32:
	vmovsd	s1(%rax), %xmm1
	vmovsd	s2(%rax), %xmm0
	vcmpltsd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+384(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L32
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L34:
	vmovsd	s2(%rax), %xmm1
	vmovsd	s1(%rax), %xmm0
	vcmplesd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+416(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L34
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L36:
	vmovsd	s2(%rax), %xmm1
	vmovsd	s1(%rax), %xmm0
	vcmpltsd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+448(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L36
	movb	$0, %al
	vmovsd	.LC0(%rip), %xmm3
	vxorpd	%xmm2, %xmm2, %xmm2
.L38:
	vmovsd	s1(%rax), %xmm1
	vmovsd	s2(%rax), %xmm0
	vcmplesd	%xmm1, %xmm0, %xmm0
	vandpd	%xmm0, %xmm3, %xmm1
	vandnpd	%xmm2, %xmm0, %xmm0
	vorpd	%xmm1, %xmm0, %xmm0
	vmovsd	%xmm0, s3+480(%rax)
	addq	$8, %rax
	cmpq	$32, %rax
	jne	.L38
	ret
	.size	foo, .-foo
	.globl	main
	.type	main, @function
main:
	subq	$8, %rsp
	vmovsd	.LC2(%rip), %xmm0
	vmovsd	%xmm0, s1(%rip)
	vmovsd	.LC3(%rip), %xmm1
	vmovsd	%xmm1, s1+8(%rip)
	vmovsd	%xmm0, s1+16(%rip)
	vmovsd	.LC4(%rip), %xmm6
	vmovsd	%xmm6, s1+24(%rip)
	vmovsd	%xmm1, s2(%rip)
	vmovsd	%xmm0, s2+8(%rip)
	vmovsd	%xmm0, s2+16(%rip)
	vmovsd	%xmm0, s2+24(%rip)
	call	foo
	movl	$0, %edx
	vmovsd	.LC0(%rip), %xmm2
	vxorpd	%xmm3, %xmm3, %xmm3
	vmovapd	%xmm3, %xmm5
	vmovapd	%xmm3, %xmm4
.L84:
	movl	%edx, %eax
	cmpl	$47, %edx
	jle	.L77
	movl	%edx, %ecx
	andl	$3, %ecx
	cmpl	$3, %ecx
	jne	.L77
	vucomisd	s3(,%rdx,8), %xmm5
	jp	.L86
	vucomisd	s3(,%rdx,8), %xmm4
	je	.L78
.L86:
	call	abort
.L77:
	vmovsd	s3(,%rdx,8), %xmm1
	testb	$4, %al
	je	.L80
	leal	7(%rax), %ecx
	testl	%eax, %eax
	cmovns	%eax, %ecx
	sarl	$3, %ecx
	movslq	%ecx, %rcx
	movl	masks.2296(,%rcx,4), %ecx
	notl	%ecx
	jmp	.L81
.L80:
	leal	7(%rax), %ecx
	testl	%eax, %eax
	cmovns	%eax, %ecx
	sarl	$3, %ecx
	movslq	%ecx, %rcx
	movl	masks.2296(,%rcx,4), %ecx
.L81:
	andl	$3, %eax
	vmovapd	%xmm2, %xmm0
	btl	%eax, %ecx
	jc	.L82
	vmovapd	%xmm3, %xmm0
.L82:
	vucomisd	%xmm0, %xmm1
	jp	.L87
	je	.L78
.L87:
	call	abort
.L78:
	addq	$1, %rdx
	cmpq	$64, %rdx
	jne	.L84
	movl	$0, %eax
	addq	$8, %rsp
	ret
	.size	main, .-main
	.section	.rodata
	.align 32
	.type	masks.2296, @object
	.size	masks.2296, 32
masks.2296:
	.long	2
	.long	6
	.long	1
	.long	5
	.long	3
	.long	8
	.long	2
	.long	1
	.comm	s3,512,64
	.comm	s2,32,32
	.comm	s1,32,32
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	0
	.long	-1074790400
	.align 8
.LC2:
	.long	0
	.long	1075052544
	.align 8
.LC3:
	.long	0
	.long	1075314688
	.align 8
.LC4:
	.long	0
	.long	2146959360
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
