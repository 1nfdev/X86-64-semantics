	.file	"pr50310.c"
	.text
.Ltext0:
	.cfi_sections	.debug_frame
	.section	.text.unlikely,"ax",@progbits
.LCOLDB1:
	.text
.LHOTB1:
	.p2align 4,,15
	.section	.text.unlikely
.Ltext_cold0:
	.text
	.globl	foo
	.type	foo, @function
foo:
.LFB0:
	.file 1 "./src/pr50310.c"
	.loc 1 8 0
	.cfi_startproc
	vmovapd	s2(%rip), %xmm4
	vmovapd	.LC0(%rip), %xmm0
	vcmpnltpd	s1(%rip), %xmm4, %xmm2
	vmovapd	s2+16(%rip), %xmm3
	vandnpd	%xmm0, %xmm2, %xmm1
	vandpd	%xmm0, %xmm2, %xmm2
	.loc 1 11 0
	vmovaps	%xmm1, s3(%rip)
	vcmpnltpd	s1+16(%rip), %xmm3, %xmm1
	.loc 1 13 0
	vmovaps	%xmm2, s3+32(%rip)
	vcmpnlepd	s1(%rip), %xmm4, %xmm2
	vandnpd	%xmm0, %xmm1, %xmm5
	vandpd	%xmm0, %xmm1, %xmm1
	vmovaps	%xmm1, s3+48(%rip)
	.loc 1 11 0
	vmovaps	%xmm5, s3+16(%rip)
	vandnpd	%xmm0, %xmm2, %xmm1
	vandpd	%xmm0, %xmm2, %xmm2
	.loc 1 17 0
	vmovaps	%xmm2, s3+96(%rip)
	vmovapd	s1(%rip), %xmm2
	.loc 1 15 0
	vmovaps	%xmm1, s3+64(%rip)
	vcmpnlepd	s1+16(%rip), %xmm3, %xmm1
	vcmpnltpd	%xmm4, %xmm2, %xmm6
	vandnpd	%xmm0, %xmm1, %xmm5
	vandpd	%xmm0, %xmm1, %xmm1
	.loc 1 17 0
	vmovaps	%xmm1, s3+112(%rip)
	.loc 1 15 0
	vmovaps	%xmm5, s3+80(%rip)
	vandnpd	%xmm0, %xmm6, %xmm1
	vandpd	%xmm0, %xmm6, %xmm6
	.loc 1 19 0
	vmovaps	%xmm1, s3+128(%rip)
	vmovapd	s1+16(%rip), %xmm1
	.loc 1 21 0
	vmovaps	%xmm6, s3+160(%rip)
	vcmpnlepd	%xmm4, %xmm2, %xmm6
	vcmpnltpd	%xmm3, %xmm1, %xmm5
	vandnpd	%xmm0, %xmm5, %xmm7
	vandpd	%xmm0, %xmm5, %xmm5
	vmovaps	%xmm5, s3+176(%rip)
	vandnpd	%xmm0, %xmm6, %xmm5
	.loc 1 23 0
	vmovaps	%xmm5, s3+192(%rip)
	vandpd	%xmm0, %xmm6, %xmm6
	vcmpnlepd	%xmm3, %xmm1, %xmm5
	.loc 1 25 0
	vmovaps	%xmm6, s3+224(%rip)
	vcmpeq_uspd	%xmm4, %xmm2, %xmm6
	.loc 1 19 0
	vmovaps	%xmm7, s3+144(%rip)
	vandnpd	%xmm0, %xmm5, %xmm7
	vandpd	%xmm0, %xmm5, %xmm5
	.loc 1 25 0
	vmovaps	%xmm5, s3+240(%rip)
	.loc 1 23 0
	vmovaps	%xmm7, s3+208(%rip)
	vandnpd	%xmm0, %xmm6, %xmm5
	vandpd	%xmm0, %xmm6, %xmm6
	.loc 1 27 0
	vmovaps	%xmm5, s3+256(%rip)
	vcmpeq_uspd	%xmm3, %xmm1, %xmm5
	.loc 1 29 0
	vmovaps	%xmm6, s3+288(%rip)
	vandnpd	%xmm0, %xmm5, %xmm7
	vandpd	%xmm0, %xmm5, %xmm5
	vmovaps	%xmm5, s3+304(%rip)
	vcmpunordpd	%xmm4, %xmm2, %xmm5
	.loc 1 27 0
	vmovaps	%xmm7, s3+272(%rip)
	vandpd	%xmm0, %xmm5, %xmm5
	.loc 1 31 0
	vmovaps	%xmm5, s3+320(%rip)
	vcmpunordpd	%xmm3, %xmm1, %xmm5
	vandpd	%xmm0, %xmm5, %xmm5
	vmovaps	%xmm5, s3+336(%rip)
	vcmpordpd	%xmm4, %xmm2, %xmm5
	vandpd	%xmm0, %xmm5, %xmm5
	.loc 1 33 0
	vmovaps	%xmm5, s3+352(%rip)
	vcmpordpd	%xmm3, %xmm1, %xmm5
	vandpd	%xmm0, %xmm5, %xmm5
	vmovaps	%xmm5, s3+368(%rip)
	vcmpltpd	%xmm2, %xmm4, %xmm5
	vandpd	%xmm0, %xmm5, %xmm5
	.loc 1 35 0
	vmovaps	%xmm5, s3+384(%rip)
	vcmpltpd	%xmm1, %xmm3, %xmm5
	vandpd	%xmm0, %xmm5, %xmm5
	vmovaps	%xmm5, s3+400(%rip)
	vcmplepd	%xmm4, %xmm2, %xmm5
	vcmpltpd	%xmm4, %xmm2, %xmm2
	vcmplepd	s1(%rip), %xmm4, %xmm4
	vandpd	%xmm0, %xmm5, %xmm5
	.loc 1 37 0
	vmovaps	%xmm5, s3+416(%rip)
	vcmplepd	%xmm3, %xmm1, %xmm5
	vcmpltpd	%xmm3, %xmm1, %xmm1
	vandpd	%xmm0, %xmm2, %xmm2
	.loc 1 39 0
	vmovaps	%xmm2, s3+448(%rip)
	vcmplepd	s1+16(%rip), %xmm3, %xmm3
	vandpd	%xmm0, %xmm4, %xmm4
	.loc 1 41 0
	vmovaps	%xmm4, s3+480(%rip)
	vandpd	%xmm0, %xmm5, %xmm5
	.loc 1 37 0
	vmovaps	%xmm5, s3+432(%rip)
	vandpd	%xmm0, %xmm1, %xmm1
	.loc 1 39 0
	vmovaps	%xmm1, s3+464(%rip)
	vandpd	%xmm0, %xmm3, %xmm0
	.loc 1 41 0
	vmovaps	%xmm0, s3+496(%rip)
.LVL0:
	ret
	.cfi_endproc
.LFE0:
	.size	foo, .-foo
	.section	.text.unlikely
.LCOLDE1:
	.text
.LHOTE1:
	.section	.text.unlikely
.LCOLDB6:
	.section	.text.startup,"ax",@progbits
.LHOTB6:
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB1:
	.loc 1 46 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r10
	subq	$8, %rsp
	.cfi_offset 10, -24
	.loc 1 48 0
	vmovapd	.LC4(%rip), %ymm0
	vmovupd	%ymm0, s1(%rip)
	.loc 1 52 0
	vmovapd	.LC5(%rip), %ymm0
	vmovupd	%ymm0, s2(%rip)
	.loc 1 56 0
	.loc 1 57 0
	vzeroupper
	call	foo
.LVL1:
	.loc 1 58 0
.LVL2:
.LBB2:
	.loc 1 69 0
	vmovsd	.LC2(%rip), %xmm2
	vxorpd	%xmm3, %xmm3, %xmm3
.LBE2:
	.loc 1 58 0
	xorl	%eax, %eax
	.loc 1 62 0
	vmovapd	%xmm3, %xmm4
.LVL3:
	.p2align 4,,10
	.p2align 3
.L11:
	movl	%eax, %ecx
	movl	%eax, %edx
.LVL4:
	andl	$3, %ecx
	.loc 1 60 0
	cmpq	$47, %rax
	ja	.L17
.L4:
.LBB3:
	.loc 1 67 0
	vmovsd	s3(,%rax,8), %xmm1
	.loc 1 68 0
	testb	$4, %dl
	je	.L7
	.loc 1 68 0 is_stmt 0 discriminator 1
	sarl	$3, %edx
	movslq	%edx, %rdx
	movl	masks.2296(,%rdx,4), %edx
	notl	%edx
.L8:
	.loc 1 69 0 is_stmt 1 discriminator 4
	btl	%ecx, %edx
	vmovapd	%xmm2, %xmm0
	jc	.L9
	.loc 1 69 0 is_stmt 0
	vmovapd	%xmm3, %xmm0
.L9:
	.loc 1 67 0 is_stmt 1
	vucomisd	%xmm0, %xmm1
	jp	.L10
.L15:
.LBE3:
	.loc 1 62 0
	jne	.L10
.LVL5:
	addq	$1, %rax
.LVL6:
	.loc 1 59 0 discriminator 2
	cmpq	$64, %rax
	jne	.L11
	.loc 1 73 0
	addq	$8, %rsp
	xorb	%al, %al
	popq	%r10
	popq	%rbp
	.cfi_remember_state
	.cfi_def_cfa 7, 8
	ret
.LVL7:
	.p2align 4,,10
	.p2align 3
.L7:
	.cfi_restore_state
.LBB4:
	.loc 1 68 0 discriminator 2
	sarl	$3, %edx
	movslq	%edx, %rdx
	movl	masks.2296(,%rdx,4), %edx
	jmp	.L8
	.p2align 4,,10
	.p2align 3
.L17:
.LBE4:
	.loc 1 60 0 discriminator 1
	cmpl	$3, %ecx
	jne	.L4
	.loc 1 62 0
	vucomisd	s3(,%rax,8), %xmm4
	jnp	.L15
.L10:
	.loc 1 62 0 is_stmt 0 discriminator 1
	call	abort
.LVL8:
	.cfi_endproc
.LFE1:
	.size	main, .-main
	.section	.text.unlikely
.LCOLDE6:
	.section	.text.startup
.LHOTE6:
	.section	.rodata
	.align 32
	.type	masks.2296, @object
	.size	masks.2296, 32
masks.2296:
	.long	2
	.long	6
	.long	1
	.long	5
	.long	3
	.long	8
	.long	2
	.long	1
	.comm	s3,512,64
	.comm	s2,32,32
	.comm	s1,32,32
	.section	.rodata.cst16,"aM",@progbits,16
	.align 16
.LC0:
	.long	0
	.long	-1074790400
	.long	0
	.long	-1074790400
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC2:
	.long	0
	.long	-1074790400
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC4:
	.long	0
	.long	1075052544
	.long	0
	.long	1075314688
	.long	0
	.long	1075052544
	.long	0
	.long	2146959360
	.align 32
.LC5:
	.long	0
	.long	1075314688
	.long	0
	.long	1075052544
	.long	0
	.long	1075052544
	.long	0
	.long	1075052544
	.text
.Letext0:
	.section	.text.unlikely
.Letext_cold0:
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x142
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF4
	.byte	0x1
	.long	.LASF5
	.long	.LASF6
	.long	.Ldebug_ranges0+0x40
	.quad	0
	.long	.Ldebug_line0
	.uleb128 0x2
	.string	"foo"
	.byte	0x1
	.byte	0x7
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.long	0x50
	.uleb128 0x3
	.string	"i"
	.byte	0x1
	.byte	0x9
	.long	0x50
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x5
	.long	.LASF0
	.byte	0x1
	.byte	0x2d
	.long	0x50
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0xbf
	.uleb128 0x6
	.string	"i"
	.byte	0x1
	.byte	0x2f
	.long	0x50
	.long	.LLST0
	.uleb128 0x7
	.long	.Ldebug_ranges0+0
	.long	0xa4
	.uleb128 0x8
	.long	.LASF1
	.byte	0x1
	.byte	0x42
	.long	0xd6
	.uleb128 0x9
	.byte	0x3
	.quad	masks.2296
	.byte	0
	.uleb128 0x9
	.quad	.LVL1
	.long	0x29
	.uleb128 0x9
	.quad	.LVL8
	.long	0x13e
	.byte	0
	.uleb128 0xa
	.long	0x50
	.long	0xcf
	.uleb128 0xb
	.long	0xcf
	.byte	0x7
	.byte	0
	.uleb128 0xc
	.byte	0x8
	.byte	0x7
	.long	.LASF2
	.uleb128 0xd
	.long	0xbf
	.uleb128 0xa
	.long	0xeb
	.long	0xeb
	.uleb128 0xb
	.long	0xcf
	.byte	0x3
	.byte	0
	.uleb128 0xc
	.byte	0x8
	.byte	0x4
	.long	.LASF3
	.uleb128 0xe
	.string	"s1"
	.byte	0x1
	.byte	0x4
	.long	0xdb
	.uleb128 0x9
	.byte	0x3
	.quad	s1
	.uleb128 0xe
	.string	"s2"
	.byte	0x1
	.byte	0x4
	.long	0xdb
	.uleb128 0x9
	.byte	0x3
	.quad	s2
	.uleb128 0xa
	.long	0xeb
	.long	0x12a
	.uleb128 0xb
	.long	0xcf
	.byte	0x3f
	.byte	0
	.uleb128 0xe
	.string	"s3"
	.byte	0x1
	.byte	0x4
	.long	0x11a
	.uleb128 0x9
	.byte	0x3
	.quad	s3
	.uleb128 0xf
	.long	.LASF7
	.byte	0x1
	.byte	0x3
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.quad	.LVL2
	.quad	.LVL3
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL4
	.quad	.LVL5
	.value	0x1
	.byte	0x50
	.quad	.LVL5
	.quad	.LVL6
	.value	0x3
	.byte	0x70
	.sleb128 1
	.byte	0x9f
	.quad	.LVL7
	.quad	.LVL8-1
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x3c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB2
	.quad	.LBE2
	.quad	.LBB3
	.quad	.LBE3
	.quad	.LBB4
	.quad	.LBE4
	.quad	0
	.quad	0
	.quad	.Ltext0
	.quad	.Letext0
	.quad	.LFB1
	.quad	.LFE1
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF4:
	.string	"GNU C 4.9.4 -march=haswell -g -O3 -fno-inline -fno-asynchronous-unwind-tables -fstack-protector-strong"
.LASF3:
	.string	"double"
.LASF6:
	.string	"/home/sdasgup3/x86-semantics/tests/gcc.c-torture/ieee"
.LASF2:
	.string	"sizetype"
.LASF7:
	.string	"abort"
.LASF1:
	.string	"masks"
.LASF0:
	.string	"main"
.LASF5:
	.string	"./src/pr50310.c"
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
