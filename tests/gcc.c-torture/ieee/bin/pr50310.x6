	.file	"pr50310.c"
	.text
.Ltext0:
	.cfi_sections	.debug_frame
	.globl	foo
	.type	foo, @function
foo:
.LFB0:
	.file 1 "./src/pr50310.c"
	.loc 1 8 0
	.cfi_startproc
.LVL0:
	.loc 1 10 0
	movl	$0, %eax
	jmp	.L2
.LVL1:
.L4:
	.loc 1 11 0
	movslq	%eax, %rdx
	vmovsd	s1(,%rdx,8), %xmm0
	vucomisd	s2(,%rdx,8), %xmm0
	jbe	.L59
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L3
.L59:
	vxorpd	%xmm0, %xmm0, %xmm0
.L3:
	.loc 1 11 0 is_stmt 0 discriminator 4
	movslq	%eax, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 10 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL2:
.L2:
	.loc 1 10 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L4
	movl	$0, %eax
.LVL3:
	jmp	.L5
.LVL4:
.L8:
	.loc 1 13 0 is_stmt 1
	leal	4(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	ja	.L84
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L6
.L84:
	vxorpd	%xmm0, %xmm0, %xmm0
.L6:
	.loc 1 13 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 12 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL5:
.L5:
	.loc 1 12 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L8
	movl	$0, %eax
.LVL6:
	jmp	.L9
.LVL7:
.L11:
	.loc 1 15 0 is_stmt 1
	leal	8(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jb	.L61
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L10
.L61:
	vxorpd	%xmm0, %xmm0, %xmm0
.L10:
	.loc 1 15 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 14 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL8:
.L9:
	.loc 1 14 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L11
	movl	$0, %eax
.LVL9:
	jmp	.L12
.LVL10:
.L15:
	.loc 1 17 0 is_stmt 1
	leal	12(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jnb	.L85
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L13
.L85:
	vxorpd	%xmm0, %xmm0, %xmm0
.L13:
	.loc 1 17 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 16 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL11:
.L12:
	.loc 1 16 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L15
	movl	$0, %eax
.LVL12:
	jmp	.L16
.LVL13:
.L18:
	.loc 1 19 0 is_stmt 1
	leal	16(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s2(,%rcx,8), %xmm0
	vucomisd	s1(,%rcx,8), %xmm0
	jbe	.L63
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L17
.L63:
	vxorpd	%xmm0, %xmm0, %xmm0
.L17:
	.loc 1 19 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 18 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL14:
.L16:
	.loc 1 18 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L18
	movl	$0, %eax
.LVL15:
	jmp	.L19
.LVL16:
.L22:
	.loc 1 21 0 is_stmt 1
	leal	20(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s2(,%rcx,8), %xmm0
	vucomisd	s1(,%rcx,8), %xmm0
	ja	.L86
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L20
.L86:
	vxorpd	%xmm0, %xmm0, %xmm0
.L20:
	.loc 1 21 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 20 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL17:
.L19:
	.loc 1 20 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L22
	movl	$0, %eax
.LVL18:
	jmp	.L23
.LVL19:
.L25:
	.loc 1 23 0 is_stmt 1
	leal	24(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s2(,%rcx,8), %xmm0
	vucomisd	s1(,%rcx,8), %xmm0
	jb	.L65
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L24
.L65:
	vxorpd	%xmm0, %xmm0, %xmm0
.L24:
	.loc 1 23 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 22 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL20:
.L23:
	.loc 1 22 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L25
	movl	$0, %eax
.LVL21:
	jmp	.L26
.LVL22:
.L29:
	.loc 1 25 0 is_stmt 1
	leal	28(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s2(,%rcx,8), %xmm0
	vucomisd	s1(,%rcx,8), %xmm0
	jnb	.L87
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L27
.L87:
	vxorpd	%xmm0, %xmm0, %xmm0
.L27:
	.loc 1 25 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 24 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL23:
.L26:
	.loc 1 24 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L29
	movl	$0, %eax
.LVL24:
	jmp	.L30
.LVL25:
.L32:
	.loc 1 27 0 is_stmt 1
	leal	32(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	je	.L67
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L31
.L67:
	vxorpd	%xmm0, %xmm0, %xmm0
.L31:
	.loc 1 27 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 26 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL26:
.L30:
	.loc 1 26 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L32
	movl	$0, %eax
.LVL27:
	jmp	.L33
.LVL28:
.L36:
	.loc 1 29 0 is_stmt 1
	leal	36(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jne	.L88
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L34
.L88:
	vxorpd	%xmm0, %xmm0, %xmm0
.L34:
	.loc 1 29 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 28 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL29:
.L33:
	.loc 1 28 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L36
	movl	$0, %eax
.LVL30:
	jmp	.L37
.LVL31:
.L39:
	.loc 1 31 0 is_stmt 1
	leal	40(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jnp	.L69
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L38
.L69:
	vxorpd	%xmm0, %xmm0, %xmm0
.L38:
	.loc 1 31 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 30 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL32:
.L37:
	.loc 1 30 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L39
	movl	$0, %eax
.LVL33:
	jmp	.L40
.LVL34:
.L42:
	.loc 1 33 0 is_stmt 1
	leal	44(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jp	.L70
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L41
.L70:
	vxorpd	%xmm0, %xmm0, %xmm0
.L41:
	.loc 1 33 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 32 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL35:
.L40:
	.loc 1 32 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L42
	movl	$0, %eax
.LVL36:
	jmp	.L43
.LVL37:
.L46:
	.loc 1 35 0 is_stmt 1
	leal	48(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jbe	.L89
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L44
.L89:
	vxorpd	%xmm0, %xmm0, %xmm0
.L44:
	.loc 1 35 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 34 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL38:
.L43:
	.loc 1 34 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L46
	movl	$0, %eax
.LVL39:
	jmp	.L47
.LVL40:
.L50:
	.loc 1 37 0 is_stmt 1
	leal	52(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s2(,%rcx,8), %xmm0
	vucomisd	s1(,%rcx,8), %xmm0
	jb	.L90
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L48
.L90:
	vxorpd	%xmm0, %xmm0, %xmm0
.L48:
	.loc 1 37 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 36 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL41:
.L47:
	.loc 1 36 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L50
	movl	$0, %eax
.LVL42:
	jmp	.L51
.LVL43:
.L54:
	.loc 1 39 0 is_stmt 1
	leal	56(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s2(,%rcx,8), %xmm0
	vucomisd	s1(,%rcx,8), %xmm0
	jbe	.L91
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L52
.L91:
	vxorpd	%xmm0, %xmm0, %xmm0
.L52:
	.loc 1 39 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 38 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL44:
.L51:
	.loc 1 38 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L54
	movl	$0, %eax
.LVL45:
	jmp	.L55
.LVL46:
.L58:
	.loc 1 41 0 is_stmt 1
	leal	60(%rax), %edx
	movslq	%eax, %rcx
	vmovsd	s1(,%rcx,8), %xmm0
	vucomisd	s2(,%rcx,8), %xmm0
	jb	.L92
	vmovsd	.LC0(%rip), %xmm0
	jmp	.L56
.L92:
	vxorpd	%xmm0, %xmm0, %xmm0
.L56:
	.loc 1 41 0 is_stmt 0 discriminator 4
	movslq	%edx, %rdx
	vmovsd	%xmm0, s3(,%rdx,8)
	.loc 1 40 0 is_stmt 1 discriminator 4
	addl	$1, %eax
.LVL47:
.L55:
	.loc 1 40 0 is_stmt 0 discriminator 2
	cmpl	$3, %eax
	jle	.L58
	.loc 1 42 0 is_stmt 1
	ret
	.cfi_endproc
.LFE0:
	.size	foo, .-foo
	.globl	main
	.type	main, @function
main:
.LFB1:
	.loc 1 46 0
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	.loc 1 48 0
	vmovsd	.LC2(%rip), %xmm0
	vmovsd	%xmm0, s1(%rip)
	.loc 1 49 0
	vmovsd	.LC3(%rip), %xmm1
	vmovsd	%xmm1, s1+8(%rip)
	.loc 1 50 0
	vmovsd	%xmm0, s1+16(%rip)
	.loc 1 51 0
	vmovsd	.LC4(%rip), %xmm2
	vmovsd	%xmm2, s1+24(%rip)
	.loc 1 52 0
	vmovsd	%xmm1, s2(%rip)
	.loc 1 53 0
	vmovsd	%xmm0, s2+8(%rip)
	.loc 1 54 0
	vmovsd	%xmm0, s2+16(%rip)
	.loc 1 55 0
	vmovsd	%xmm0, s2+24(%rip)
	.loc 1 56 0
	.loc 1 57 0
	call	foo
.LVL48:
	.loc 1 58 0
.LVL49:
	.loc 1 59 0
	movl	$0, %eax
	jmp	.L94
.LVL50:
.L102:
	.loc 1 60 0
	cmpl	$47, %eax
	jle	.L95
	.loc 1 60 0 is_stmt 0 discriminator 1
	movl	%eax, %edx
	andl	$3, %edx
	cmpl	$3, %edx
	jne	.L95
	.loc 1 62 0 is_stmt 1
	movslq	%eax, %rdx
	vmovsd	s3(,%rdx,8), %xmm0
	vucomisd	.LC1(%rip), %xmm0
	jp	.L104
	je	.L96
.L104:
	.loc 1 62 0 is_stmt 0 discriminator 1
	call	abort
.LVL51:
.L95:
.LBB2:
	.loc 1 67 0 is_stmt 1
	movslq	%eax, %rdx
	vmovsd	s3(,%rdx,8), %xmm0
	.loc 1 68 0
	testb	$4, %al
	je	.L98
	.loc 1 68 0 is_stmt 0 discriminator 1
	leal	7(%rax), %edx
	testl	%eax, %eax
	cmovns	%eax, %edx
	sarl	$3, %edx
	movslq	%edx, %rdx
	movl	masks.2296(,%rdx,4), %edx
	notl	%edx
	jmp	.L99
.L98:
	.loc 1 68 0 discriminator 2
	leal	7(%rax), %edx
	testl	%eax, %eax
	cmovns	%eax, %edx
	sarl	$3, %edx
	movslq	%edx, %rdx
	movl	masks.2296(,%rdx,4), %edx
.L99:
	.loc 1 68 0 discriminator 4
	movl	%eax, %ecx
	andl	$3, %ecx
	.loc 1 69 0 is_stmt 1 discriminator 4
	btl	%ecx, %edx
	jnc	.L103
	.loc 1 69 0 is_stmt 0
	vmovsd	.LC0(%rip), %xmm1
	jmp	.L100
.L103:
	vxorpd	%xmm1, %xmm1, %xmm1
.L100:
	.loc 1 67 0 is_stmt 1
	vucomisd	%xmm1, %xmm0
	jp	.L105
	je	.L96
.L105:
	.loc 1 70 0
	call	abort
.LVL52:
.L96:
.LBE2:
	.loc 1 59 0 discriminator 2
	addl	$1, %eax
.LVL53:
.L94:
	.loc 1 59 0 is_stmt 0 discriminator 1
	cmpl	$63, %eax
	jle	.L102
	.loc 1 73 0 is_stmt 1
	movl	$0, %eax
.LVL54:
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE1:
	.size	main, .-main
	.section	.rodata
	.align 32
	.type	masks.2296, @object
	.size	masks.2296, 32
masks.2296:
	.long	2
	.long	6
	.long	1
	.long	5
	.long	3
	.long	8
	.long	2
	.long	1
	.comm	s3,512,64
	.comm	s2,32,32
	.comm	s1,32,32
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	0
	.long	-1074790400
	.align 8
.LC1:
	.long	0
	.long	0
	.align 8
.LC2:
	.long	0
	.long	1075052544
	.align 8
.LC3:
	.long	0
	.long	1075314688
	.align 8
.LC4:
	.long	0
	.long	2146959360
	.text
.Letext0:
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x163
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF4
	.byte	0x1
	.long	.LASF5
	.long	.LASF6
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.string	"foo"
	.byte	0x1
	.byte	0x7
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.long	0x58
	.uleb128 0x3
	.string	"i"
	.byte	0x1
	.byte	0x9
	.long	0x58
	.long	.LLST0
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x5
	.long	.LASF0
	.byte	0x1
	.byte	0x2d
	.long	0x58
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0xe0
	.uleb128 0x3
	.string	"i"
	.byte	0x1
	.byte	0x2f
	.long	0x58
	.long	.LLST1
	.uleb128 0x6
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.long	0xc5
	.uleb128 0x7
	.long	.LASF1
	.byte	0x1
	.byte	0x42
	.long	0xf7
	.uleb128 0x9
	.byte	0x3
	.quad	masks.2296
	.uleb128 0x8
	.quad	.LVL52
	.long	0x15f
	.byte	0
	.uleb128 0x8
	.quad	.LVL48
	.long	0x2d
	.uleb128 0x8
	.quad	.LVL51
	.long	0x15f
	.byte	0
	.uleb128 0x9
	.long	0x58
	.long	0xf0
	.uleb128 0xa
	.long	0xf0
	.byte	0x7
	.byte	0
	.uleb128 0xb
	.byte	0x8
	.byte	0x7
	.long	.LASF2
	.uleb128 0xc
	.long	0xe0
	.uleb128 0x9
	.long	0x10c
	.long	0x10c
	.uleb128 0xa
	.long	0xf0
	.byte	0x3
	.byte	0
	.uleb128 0xb
	.byte	0x8
	.byte	0x4
	.long	.LASF3
	.uleb128 0xd
	.string	"s1"
	.byte	0x1
	.byte	0x4
	.long	0xfc
	.uleb128 0x9
	.byte	0x3
	.quad	s1
	.uleb128 0xd
	.string	"s2"
	.byte	0x1
	.byte	0x4
	.long	0xfc
	.uleb128 0x9
	.byte	0x3
	.quad	s2
	.uleb128 0x9
	.long	0x10c
	.long	0x14b
	.uleb128 0xa
	.long	0xf0
	.byte	0x3f
	.byte	0
	.uleb128 0xd
	.string	"s3"
	.byte	0x1
	.byte	0x4
	.long	0x13b
	.uleb128 0x9
	.byte	0x3
	.quad	s3
	.uleb128 0xe
	.long	.LASF7
	.byte	0x1
	.byte	0x3
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.quad	.LVL0-.Ltext0
	.quad	.LVL1-.Ltext0
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL1-.Ltext0
	.quad	.LVL3-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL4-.Ltext0
	.quad	.LVL6-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL7-.Ltext0
	.quad	.LVL9-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL10-.Ltext0
	.quad	.LVL12-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL13-.Ltext0
	.quad	.LVL15-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL16-.Ltext0
	.quad	.LVL18-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL19-.Ltext0
	.quad	.LVL21-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL22-.Ltext0
	.quad	.LVL24-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL25-.Ltext0
	.quad	.LVL27-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL28-.Ltext0
	.quad	.LVL30-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL31-.Ltext0
	.quad	.LVL33-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL34-.Ltext0
	.quad	.LVL36-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL37-.Ltext0
	.quad	.LVL39-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL40-.Ltext0
	.quad	.LVL42-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL43-.Ltext0
	.quad	.LVL45-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL46-.Ltext0
	.quad	.LFE0-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
.LLST1:
	.quad	.LVL49-.Ltext0
	.quad	.LVL50-.Ltext0
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL50-.Ltext0
	.quad	.LVL51-1-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL51-.Ltext0
	.quad	.LVL52-1-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL52-.Ltext0
	.quad	.LVL54-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF4:
	.string	"GNU C 4.9.4 -march=haswell -g -Og -fno-inline -fno-asynchronous-unwind-tables -fstack-protector-strong"
.LASF3:
	.string	"double"
.LASF6:
	.string	"/home/sdasgup3/x86-semantics/tests/gcc.c-torture/ieee"
.LASF2:
	.string	"sizetype"
.LASF7:
	.string	"abort"
.LASF1:
	.string	"masks"
.LASF0:
	.string	"main"
.LASF5:
	.string	"./src/pr50310.c"
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
