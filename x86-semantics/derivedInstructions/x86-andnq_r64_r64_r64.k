// Autogenerated using stratification.
requires "x86-configuration.k"

module ANDNQ-R64-R64-R64
  imports X86-CONFIGURATION

  rule <k>
    execinstr (andnq R1:R64, R2:R64, R3:R64,  .Typedoperands) => .
  ...</k>
    <regstate> ...
convToRegKeys(R2) |-> (MI556 => MI556)

 "SF" |-> ( _ => (#ifMInt (eqMInt(mi(bitwidthMInt(xorMInt(MI556, orMInt(MI556, MI557))), 1), lshrMInt(xorMInt(MI556, orMInt(MI556, MI557)),  ( bitwidthMInt(xorMInt(MI556, orMInt(MI556, MI557)))  -Int  1 ) )) ) #then ( mi(1, 1) ) #else ( mi(1, 0) ) #fi)  )

 "OF" |-> ( _ => mi(1, 0) )

 "CF" |-> ( _ => mi(1, 0) )

 "AF" |-> (_ => undef)

convToRegKeys(R1) |-> (MI557 => MI557)

convToRegKeys(R3) |-> ( _ => xorMInt(MI556, orMInt(MI556, MI557)) )

 "ZF" |-> ( _ => (#ifMInt (eqMInt(xorMInt(MI556, orMInt(MI556, MI557)), mi(bitwidthMInt(xorMInt(MI556, orMInt(MI556, MI557))), 0)) ) #then ( mi(1, 1) ) #else ( mi(1, 0) ) #fi)  )

 "PF" |-> (_ => undef)


    ...</regstate>
endmodule

module ANDNQ-R64-R64-R64-SEMANTICS
  imports ANDNQ-R64-R64-R64
endmodule
