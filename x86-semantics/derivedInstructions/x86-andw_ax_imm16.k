// Autogenerated using stratification.
requires "x86-configuration.k"

module ANDW-AX-IMM16
  imports X86-CONFIGURATION

  rule <k>
    execinstr (andw I1_16:Imm, %ax:R16,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
 "CF" |-> (mi(1, 0) )

 "SF" |-> ((#ifMInt (eqMInt(mi(64, 1), lshrMInt(mi(64, svalueMInt(concatenateMInt(xorMInt(orMInt(xorMInt(mi(8, 255), extractMInt(getParentValue(%ax, RSMap), 48, 56)), handleImmediateWithSignExtend(I1_16, 16, 16 )), xorMInt(mi(8, 255), extractMInt(getParentValue(%ax, RSMap), 48, 56))), xorMInt(extractMInt(getParentValue(%ax, RSMap), 56, 64), xorMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), orMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), extractMInt(getParentValue(%ax, RSMap), 56, 64))))))), 63)) ) #then ( mi(1, 1) ) #else ( mi(1, 0) ) #fi)  )

 "AF" |-> (undef)

 "PF" |-> ((#ifMInt ((#ifBool ( notBool  (  ( uvalueMInt(xorMInt(andMInt(mi(64, countOnes(xorMInt(extractMInt(getParentValue(%ax, RSMap), 56, 64), xorMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), orMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), extractMInt(getParentValue(%ax, RSMap), 56, 64)))), 0)), mi(64, 1)), mi(64, 1)))  ==K  0 )  )  ) #then ( true ) #else ( false ) #fi) ) #then ( mi(1, 1) ) #else ( mi(1, 0) ) #fi)  )

 "OF" |-> (mi(1, 0) )

convToRegKeys(%ax) |-> (concatenateMInt(extractMInt(getParentValue(%ax, RSMap), 0, 48), concatenateMInt(xorMInt(orMInt(xorMInt(mi(8, 255), extractMInt(getParentValue(%ax, RSMap), 48, 56)), handleImmediateWithSignExtend(I1_16, 16, 16 )), xorMInt(mi(8, 255), extractMInt(getParentValue(%ax, RSMap), 48, 56))), xorMInt(extractMInt(getParentValue(%ax, RSMap), 56, 64), xorMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), orMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), extractMInt(getParentValue(%ax, RSMap), 56, 64)))))) )

 "ZF" |-> ((#ifMInt (eqMInt(mi(64, svalueMInt(concatenateMInt(xorMInt(orMInt(xorMInt(mi(8, 255), extractMInt(getParentValue(%ax, RSMap), 48, 56)), handleImmediateWithSignExtend(I1_16, 16, 16 )), xorMInt(mi(8, 255), extractMInt(getParentValue(%ax, RSMap), 48, 56))), xorMInt(extractMInt(getParentValue(%ax, RSMap), 56, 64), xorMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), orMInt(handleImmediateWithSignExtend(I1_16, 16, 16 ), extractMInt(getParentValue(%ax, RSMap), 56, 64))))))), mi(64, 0)) ) #then ( mi(1, 1) ) #else ( mi(1, 0) ) #fi)    )


)

    </regstate>
endmodule
