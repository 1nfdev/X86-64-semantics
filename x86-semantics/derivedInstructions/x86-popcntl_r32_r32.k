// Autogenerated using stratification.
requires "x86-configuration.k"

module POPCNTL-R32-R32
  imports X86-CONFIGURATION

  rule <k>
    execinstr (popcntl R1:R32, R2:R32,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
 "CF" |-> (mi(1, 0) )

 "SF" |-> (mi(1, 0) )

 "AF" |-> (mi(1, 0) )

 "PF" |-> (mi(1, 0) )

 "OF" |-> (mi(1, 0) )

convToRegKeys(R2) |-> (mi(64, countOnes(extractMInt(getParentValue(R1, RSMap), 32, 64), 0)) )

 "ZF" |-> ((#ifMInt (eqMInt(concatenateMInt(mi(32, 0), extractMInt(getParentValue(R1, RSMap), 32, 64)), mi(64, 0)) ) #then ( mi(1, 1) ) #else ( mi(1, 0) ) #fi)    )


)

    </regstate>
endmodule

module POPCNTL-R32-R32-SEMANTICS
  imports POPCNTL-R32-R32
endmodule
/*
TargetInstr:
popcntl %ecx, %ebx
RWSet:
maybe read:{ %ecx }
must read:{ %ecx }
maybe write:{ %rbx %cf %pf %af %zf %sf %of }
must write:{ %rbx %cf %pf %af %zf %sf %of }
maybe undef:{ }
must undef:{ }
required flags:{ popcnt }

Circuit:
circuit:movl %ecx, %r8d    #  1     0    3      OPC=movl_r32_r32
circuit:popcntq %r8, %rbx  #  2     0x3  5      OPC=popcntq_r64_r64
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

popcntl %ecx, %ebx

  maybe read:      { %ecx }
  must read:       { %ecx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { popcnt }

-------------------------------------
Getting base circuit for movq $0x0, %rbx

Final state:
%rbx/%rbx: 0x0₆₄

-------------------------------------
-------------------------------------
Getting base circuit for movswq %bx, %r10

Final state:
%r10/%r10: sign-extend-64(%rbx_xchgl_r32_r32[15:0])

-------------------------------------
-------------------------------------
Getting base circuit for movslq %ebx, %rbx

Final state:
%rbx/%rbx: sign-extend-64(%rbx_xchgl_r32_r32[31:0])

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_032_016_ecx_r8w_r9w

Final state:
%rax/%rax: %rax_xchgl_r32_r32
%rdx/%rdx: %rdx_xchgl_r32_r32

%xmm0: %ymm0_xchgl_r32_r32[127:0]
%xmm1: %ymm1_xchgl_r32_r32[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_032_rbx_r10d_r11d

Final state:
%rax/%rax: %rax_xchgl_r32_r32
%rdx/%rdx: %rdx_xchgl_r32_r32

%xmm0: %ymm0_xchgl_r32_r32[127:0]
%xmm1: %ymm1_xchgl_r32_r32[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for movq %r10, %rcx

Final state:
%rcx/%rcx: 0x0₃₂ ∘ sign-extend-64(%rbx_xchgl_r32_r32[31:0])[31:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_016_032_r8w_r9w_ebx

Final state:
%rax/%rax: %rax_xchgl_r32_r32
%rdx/%rdx: %rdx_xchgl_r32_r32

%xmm0: %ymm0_xchgl_r32_r32[127:0]
%xmm1: %ymm1_xchgl_r32_r32[127:0]

-------------------------------------
=====================================
Computing circuit for xchgl %ebx, %ecx

.target:
movswq %bx, %r10
movslq %ebx, %rbx
callq .move_032_016_ecx_r8w_r9w
callq .move_064_032_rbx_r10d_r11d
movq %r10, %rcx
callq .move_016_032_r8w_r9w_ebx
retq 

Initial state:
%rcx/%rcx: %rcx_xaddl_r32_r32
%rbx/%rbx: %rbx_xaddl_r32_r32

State for specgen instruction: xchgl %ecx, %ebx:
%rcx/%rcx: 0x0₃₂ ∘ sign-extend-64(%rbx_xchgl_r32_r32[31:0])[31:0]
%rbx/%rbx: 0x0₃₂ ∘ ((%r9_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][31:16])[15:0][15:0] ∘ (%r8_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][15:0])[15:0][15:0])

Register        -> %rcx
  translates to => %rbx
Value is               -> 0x0₃₂ ∘ sign-extend-64(%rbx_xchgl_r32_r32[31:0])[31:0]
  after renaming it is => 0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0]

Register        -> %rbx
  translates to => %rcx
Value is               -> 0x0₃₂ ∘ ((%r9_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][31:16])[15:0][15:0] ∘ (%r8_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][15:0])[15:0][15:0])
  after renaming it is => 0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0]

Final state
%rcx/%rcx: 0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0]
%rbx/%rbx: 0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0]

=====================================
-------------------------------------
Getting base circuit for callq .clear_cf

Final state:
%rax/%rax: %rax_xaddl_r32_r32
%rdx/%rdx: %rdx_xaddl_r32_r32

%xmm0: %ymm0_xaddl_r32_r32[127:0]
%xmm1: %ymm1_xaddl_r32_r32[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for adcl %ecx, %ebx

Final state:
%rbx/%rbx: 0x0₃₂ ∘ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0]

%cf: ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[32:32] = 0x1₁
%pf: !(((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][0:0] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][1:1] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][2:2] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][3:3] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][4:4] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][5:5] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][6:6] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][7:7] = 0x1₁)
%af: (0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0][3:0] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0][3:0])[4:4] = 0x1₁
%zf: ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0] = 0x0₃₂
%sf: ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][31:31] = 0x1₁
%of: ((0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0][31:31] = 0x1₁ ↔ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0][31:31] = 0x1₁) ∧ !((0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0][31:31] = 0x1₁ ↔ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:31] = 0x1₁)

-------------------------------------
=====================================
Computing circuit for xaddl %ebx, %ecx

.target:
xchgl %ebx, %ecx
callq .clear_cf
adcl %ecx, %ebx
retq 

Initial state:
%rcx/%rcx: %rcx_movl_r32_r32
%rbx/%rbx: 0x0₆₄

%cf: %cf_movl_r32_r32
%pf: %pf_movl_r32_r32
%af: %af_movl_r32_r32
%zf: %zf_movl_r32_r32
%sf: %sf_movl_r32_r32
%of: %of_movl_r32_r32

State for specgen instruction: xaddl %ecx, %ebx:
%rcx/%rcx: 0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0]
%rbx/%rbx: 0x0₃₂ ∘ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0]

%cf: ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[32:32] = 0x1₁
%pf: !(((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][0:0] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][1:1] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][2:2] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][3:3] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][4:4] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][5:5] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][6:6] = 0x1₁ ⊕ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][7:0][7:7] = 0x1₁)
%af: (0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0][3:0] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0][3:0])[4:4] = 0x1₁
%zf: ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0] = 0x0₃₂
%sf: ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:0][31:31] = 0x1₁
%of: ((0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0][31:31] = 0x1₁ ↔ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0][31:31] = 0x1₁) ∧ !((0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0][31:31] = 0x1₁ ↔ ((false ? 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0] + 0x1₃₃ : 0x0₁ ∘ (0x0₃₂ ∘ %rbx_xaddl_r32_r32[31:0])[31:0]) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_xaddl_r32_r32[31:0])[31:0])[31:31] = 0x1₁)

Final state
%rcx/%rcx: 0x0₃₂ ∘ %rcx_movl_r32_r32[31:0]
%rbx/%rbx: 0x0₃₂ ∘ %rcx_movl_r32_r32[31:0]

%cf: false
%pf: !(%rcx_movl_r32_r32[0:0] = 0x1₁ ⊕ %rcx_movl_r32_r32[1:1] = 0x1₁ ⊕ %rcx_movl_r32_r32[2:2] = 0x1₁ ⊕ %rcx_movl_r32_r32[3:3] = 0x1₁ ⊕ %rcx_movl_r32_r32[4:4] = 0x1₁ ⊕ %rcx_movl_r32_r32[5:5] = 0x1₁ ⊕ %rcx_movl_r32_r32[6:6] = 0x1₁ ⊕ %rcx_movl_r32_r32[7:7] = 0x1₁)
%af: false
%zf: %rcx_movl_r32_r32[31:0] = 0x0₃₂
%sf: %rcx_movl_r32_r32[31:31] = 0x1₁
%of: (%rcx_movl_r32_r32[31:31] = 0x1₁ ↔ false) ∧ !(%rcx_movl_r32_r32[31:31] = 0x1₁ ↔ %rcx_movl_r32_r32[31:31] = 0x1₁)

=====================================
=====================================
Computing circuit for movl %ecx, %r8d

.target:
movq $0x0, %rbx
xaddl %ebx, %ecx
retq 

Initial state:
%r8/%r8: %r8_popcntl_r32_r32

State for specgen instruction: movl %ecx, %ebx:
%rbx/%rbx: 0x0₃₂ ∘ %rcx_movl_r32_r32[31:0]

Register        -> %rbx
  translates to => %r8
Value is               -> 0x0₃₂ ∘ %rcx_movl_r32_r32[31:0]
  after renaming it is => 0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0]

Final state
%r8/%r8: 0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0]

=====================================
-------------------------------------
Getting base circuit for popcntq %r8, %rbx

Final state:
%rbx/%rbx: 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][1:0][0:0])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][1:0][0:0]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][1:0][0:0])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][1:0][0:0])))))

%cf: false
%pf: false
%af: false
%zf: 0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0] = 0x0₆₄
%sf: false
%of: false

-------------------------------------
=====================================
Computing circuit for popcntl %ecx, %ebx

.target:
movl %ecx, %r8d
popcntq %r8, %rbx
retq 

Initial state:
%rbx/%rbx: %rbx

%cf: %cf
%pf: %pf
%af: %af
%zf: %zf
%sf: %sf
%of: %of

State for specgen instruction: popcntl %ecx, %ebx:
%rbx/%rbx: 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][1:0][0:0])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][1:0][0:0]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][1:0][0:0])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][1:0][0:0])))))

%cf: false
%pf: false
%af: false
%zf: 0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0] = 0x0₆₄
%sf: false
%of: false

Register        -> %rbx
  translates to => %rbx
Value is               -> 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][31:16][7:0][3:0][1:0][0:0])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[63:32][15:0][7:0][3:0][1:0][0:0]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][31:16][7:0][3:0][1:0][0:0])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][15:8][3:0][1:0][0:0]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][7:4][1:0][0:0])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][3:2][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][3:2][0:0]) + 0x0₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][1:0][1:1] + 0x0₁ ∘ (0x0₃₂ ∘ %rcx_popcntl_r32_r32[31:0])[31:0][15:0][7:0][3:0][1:0][0:0])))))
  after renaming it is => 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[31:31] + 0x0₁ ∘ %rcx[30:30]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[29:29] + 0x0₁ ∘ %rcx[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[27:27] + 0x0₁ ∘ %rcx[26:26]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[25:25] + 0x0₁ ∘ %rcx[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[23:23] + 0x0₁ ∘ %rcx[22:22]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[21:21] + 0x0₁ ∘ %rcx[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[19:19] + 0x0₁ ∘ %rcx[18:18]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[17:17] + 0x0₁ ∘ %rcx[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[15:15] + 0x0₁ ∘ %rcx[14:14]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[13:13] + 0x0₁ ∘ %rcx[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[11:11] + 0x0₁ ∘ %rcx[10:10]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[9:9] + 0x0₁ ∘ %rcx[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[7:7] + 0x0₁ ∘ %rcx[6:6]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[5:5] + 0x0₁ ∘ %rcx[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[3:3] + 0x0₁ ∘ %rcx[2:2]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[1:1] + 0x0₁ ∘ %rcx[0:0])))))

Final state
%rbx/%rbx: 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[31:31] + 0x0₁ ∘ %rcx[30:30]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[29:29] + 0x0₁ ∘ %rcx[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[27:27] + 0x0₁ ∘ %rcx[26:26]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[25:25] + 0x0₁ ∘ %rcx[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[23:23] + 0x0₁ ∘ %rcx[22:22]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[21:21] + 0x0₁ ∘ %rcx[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[19:19] + 0x0₁ ∘ %rcx[18:18]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[17:17] + 0x0₁ ∘ %rcx[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[15:15] + 0x0₁ ∘ %rcx[14:14]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[13:13] + 0x0₁ ∘ %rcx[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[11:11] + 0x0₁ ∘ %rcx[10:10]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[9:9] + 0x0₁ ∘ %rcx[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[7:7] + 0x0₁ ∘ %rcx[6:6]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[5:5] + 0x0₁ ∘ %rcx[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[3:3] + 0x0₁ ∘ %rcx[2:2]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[1:1] + 0x0₁ ∘ %rcx[0:0])))))

%cf: false
%pf: false
%af: false
%zf: 0x0₃₂ ∘ %rcx[31:0] = 0x0₆₄
%sf: false
%of: false

=====================================
Circuits:

%rbx   : 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[31:31] + 0x0₁ ∘ %rcx[30:30]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[29:29] + 0x0₁ ∘ %rcx[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[27:27] + 0x0₁ ∘ %rcx[26:26]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[25:25] + 0x0₁ ∘ %rcx[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[23:23] + 0x0₁ ∘ %rcx[22:22]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[21:21] + 0x0₁ ∘ %rcx[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[19:19] + 0x0₁ ∘ %rcx[18:18]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[17:17] + 0x0₁ ∘ %rcx[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[15:15] + 0x0₁ ∘ %rcx[14:14]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[13:13] + 0x0₁ ∘ %rcx[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[11:11] + 0x0₁ ∘ %rcx[10:10]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[9:9] + 0x0₁ ∘ %rcx[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[7:7] + 0x0₁ ∘ %rcx[6:6]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[5:5] + 0x0₁ ∘ %rcx[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[3:3] + 0x0₁ ∘ %rcx[2:2]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[1:1] + 0x0₁ ∘ %rcx[0:0])))))

%cf    : false
%pf    : false
%af    : false
%zf    : 0x0₃₂ ∘ %rcx[31:0] = 0x0₆₄
%sf    : false
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/