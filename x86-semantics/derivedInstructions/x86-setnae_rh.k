// Autogenerated using stratification.
requires "x86-configuration.k"

module SETNAE-RH
  imports X86-CONFIGURATION

  rule <k>
    execinstr (setnae R1:Rh,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> (concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 48), concatenateMInt(concatenateMInt(mi(7, 0), getFlag("CF", RSMap)), extractMInt(getParentValue(R1, RSMap), 56, 64))) )


)

    </regstate>
endmodule

module SETNAE-RH-SEMANTICS
  imports SETNAE-RH
endmodule
/*
setnae %ah
maybe read:{ %cf }
must read:{ %cf }
maybe write:{ %ah }
must write:{ %ah }
maybe undef:{ }
must undef:{ }
required flags:{ }

circuit:callq .read_cf_into_rbx  #  1     0    5      OPC=callq_label
circuit:movb %bl, %ah            #  2     0x5  2      OPC=movb_rh_r8

WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

setnae %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

-------------------------------------
Getting base circuit for callq .read_cf_into_rbx

Final state:
%rax/%rax: %rax_setnae_rh
%rdx/%rdx: %rdx_setnae_rh

%xmm0: %ymm0_setnae_rh[127:0]
%xmm1: %ymm1_setnae_rh[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for movb %bl, %ah

Final state:
%rax/%ah: %rax_setnae_rh[63:16] ∘ (0x0₆₃ ∘ (%cf_setnae_rh ? 0x1₁ : 0x0₁))[7:0] ∘ %rax_setnae_rh[7:0]

-------------------------------------
=====================================
Computing circuit for setnae %ah

.target:
callq .read_cf_into_rbx
movb %bl, %ah
retq 

Initial state:
%rax/%ah: %rax

State for specgen instruction: setnae %ah:
%rax/%ah: %rax_setnae_rh[63:16] ∘ (0x0₆₃ ∘ (%cf_setnae_rh ? 0x1₁ : 0x0₁))[7:0] ∘ %rax_setnae_rh[7:0]

Register        -> %ah
  translates to => %ah
Value is               -> (%rax_setnae_rh[63:16] ∘ (0x0₆₃ ∘ (%cf_setnae_rh ? 0x1₁ : 0x0₁))[7:0] ∘ %rax_setnae_rh[7:0])[15:8]
  after renaming it is => %cf ? 0x1₈ : 0x0₈

Final state
%rax/%ah: %rax[63:16] ∘ (%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

=====================================
Circuits:

%rax   : %rax[63:16] ∘ (%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/