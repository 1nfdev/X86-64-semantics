// Autogenerated using stratification.
requires "x86-configuration.k"

module SETPO-R8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (setpo R1:R8,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> (concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 56), xorMInt(concatenateMInt(mi(7, 0), getFlag("PF", RSMap)), mi(8, 1))) )


)

    </regstate>
endmodule

module SETPO-R8-SEMANTICS
  imports SETPO-R8
endmodule
/*
TargetInstr:
setpo %bl
RWSet:
maybe read:{ %pf }
must read:{ %pf }
maybe write:{ %bl }
must write:{ %bl }
maybe undef:{ }
must undef:{ }
required flags:{ }

Circuit:
circuit:callq .read_pf_into_rbx           #  1     0     5      OPC=callq_label
circuit:callq .move_064_032_rbx_r8d_r9d   #  2     0x5   5      OPC=callq_label
circuit:callq .move_byte_3_of_rbx_to_r9b  #  3     0xa   5      OPC=callq_label
circuit:xchgl %r8d, %r9d                  #  4     0xf   3      OPC=xchgl_r32_r32
circuit:xorq %rbx, %rbx                   #  5     0x12  3      OPC=xorq_r64_r64
circuit:callq .read_pf_into_rbx           #  6     0x15  5      OPC=callq_label
circuit:xorq %r9, %rbx                    #  7     0x1a  3      OPC=xorq_r64_r64
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

setpo %bl

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

-------------------------------------
Getting base circuit for callq .read_pf_into_rbx

Final state:
%rax/%rax: %rax_setpo_r8
%rdx/%rdx: %rdx_setpo_r8

%xmm0: %ymm0_setpo_r8[127:0]
%xmm1: %ymm1_setpo_r8[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_032_rbx_r8d_r9d

Final state:
%rax/%rax: %rax_setpo_r8
%rdx/%rdx: %rdx_setpo_r8

%xmm0: %ymm0_setpo_r8[127:0]
%xmm1: %ymm1_setpo_r8[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_byte_3_of_rbx_to_r9b

Final state:
%rax/%rax: %rax_setpo_r8
%rdx/%rdx: %rdx_setpo_r8

%xmm0: %ymm0_setpo_r8[127:0]
%xmm1: %ymm1_setpo_r8[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for movswq %bx, %r10

Final state:
%r10/%r10: sign-extend-64(%rbx_xchgl_r32_r32[15:0])

-------------------------------------
-------------------------------------
Getting base circuit for movslq %ebx, %rbx

Final state:
%rbx/%rbx: sign-extend-64(%rbx_xchgl_r32_r32[31:0])

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_032_016_ecx_r8w_r9w

Final state:
%rax/%rax: %rax_xchgl_r32_r32
%rdx/%rdx: %rdx_xchgl_r32_r32

%xmm0: %ymm0_xchgl_r32_r32[127:0]
%xmm1: %ymm1_xchgl_r32_r32[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_064_032_rbx_r10d_r11d

Final state:
%rax/%rax: %rax_xchgl_r32_r32
%rdx/%rdx: %rdx_xchgl_r32_r32

%xmm0: %ymm0_xchgl_r32_r32[127:0]
%xmm1: %ymm1_xchgl_r32_r32[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for movq %r10, %rcx

Final state:
%rcx/%rcx: 0x0₃₂ ∘ sign-extend-64(%rbx_xchgl_r32_r32[31:0])[31:0]

-------------------------------------
-------------------------------------
Getting base circuit for callq .move_016_032_r8w_r9w_ebx

Final state:
%rax/%rax: %rax_xchgl_r32_r32
%rdx/%rdx: %rdx_xchgl_r32_r32

%xmm0: %ymm0_xchgl_r32_r32[127:0]
%xmm1: %ymm1_xchgl_r32_r32[127:0]

-------------------------------------
=====================================
Computing circuit for xchgl %r8d, %r9d

.target:
movswq %bx, %r10
movslq %ebx, %rbx
callq .move_032_016_ecx_r8w_r9w
callq .move_064_032_rbx_r10d_r11d
movq %r10, %rcx
callq .move_016_032_r8w_r9w_ebx
retq 

Initial state:
%r8/%r8: 0x0₃₂ ∘ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[31:0]
%r9/%r9: (0x0₃₂ ∘ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[63:32])[63:8] ∘ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[31:24]

State for specgen instruction: xchgl %ecx, %ebx:
%rcx/%rcx: 0x0₃₂ ∘ sign-extend-64(%rbx_xchgl_r32_r32[31:0])[31:0]
%rbx/%rbx: 0x0₃₂ ∘ ((%r9_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][31:16])[15:0][15:0] ∘ (%r8_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][15:0])[15:0][15:0])

Register        -> %rcx
  translates to => %r8
Value is               -> 0x0₃₂ ∘ sign-extend-64(%rbx_xchgl_r32_r32[31:0])[31:0]
  after renaming it is => 0x0₆₄

Register        -> %rbx
  translates to => %r9
Value is               -> 0x0₃₂ ∘ ((%r9_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][31:16])[15:0][15:0] ∘ (%r8_xchgl_r32_r32[63:16] ∘ %rcx_xchgl_r32_r32[31:0][15:0])[15:0][15:0])
  after renaming it is => %pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄

Final state
%r8/%r8: 0x0₆₄
%r9/%r9: %pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄

=====================================
-------------------------------------
Getting base circuit for xorq %rbx, %rbx

Final state:
%rbx/%rbx: 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁)

%cf: false
%pf: !((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁)
%zf: (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁)) = 0x0₆₄
%sf: (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[63:63] = 0x1₁
%of: false

-------------------------------------
-------------------------------------
Getting base circuit for callq .read_pf_into_rbx

Final state:
%rax/%rax: %rax_setpo_r8
%rdx/%rdx: %rdx_setpo_r8

%xmm0: %ymm0_setpo_r8[127:0]
%xmm1: %ymm1_setpo_r8[127:0]

-------------------------------------
-------------------------------------
Getting base circuit for xorq %r9, %rbx

Final state:
%rbx/%rbx: 0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄)

%cf: false
%pf: !((0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0][7:7] = 0x1₁)
%zf: (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄)) = 0x0₆₄
%sf: (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[63:63] = 0x1₁
%of: false

-------------------------------------
=====================================
Computing circuit for setpo %bl

.target:
callq .read_pf_into_rbx
callq .move_064_032_rbx_r8d_r9d
callq .move_byte_3_of_rbx_to_r9b
xchgl %r8d, %r9d
xorq %rbx, %rbx
callq .read_pf_into_rbx
xorq %r9, %rbx
retq 

Initial state:
%rbx/%bl: %rbx

State for specgen instruction: setpo %bl:
%rbx/%bl: 0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄)

Register        -> %bl
  translates to => %bl
Value is               -> (0x0₆₃ ∘ (!((0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][0:0] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][1:1] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][2:2] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][3:3] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][4:4] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][5:5] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][6:6] = 0x1₁ ⊕ (0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁) ⊕ 0x0₆₃ ∘ (%pf_setpo_r8 ? 0x1₁ : 0x0₁))[7:0][7:7] = 0x1₁) ? 0x1₁ : 0x0₁) ⊕ (%pf_setpo_r8 ? 0x1₆₄ : 0x0₆₄))[7:0]
  after renaming it is => %pf ? 0x0₈ : 0x1₈

Final state
%rbx/%bl: %rbx[63:8] ∘ (%pf ? 0x0₈ : 0x1₈)

=====================================
Circuits:

%rbx   : %rbx[63:8] ∘ (%pf ? 0x0₈ : 0x1₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/