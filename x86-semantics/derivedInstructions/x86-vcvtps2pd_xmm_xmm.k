// Autogenerated using stratification.
requires "x86-configuration.k"

module VCVTPS2PD-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vcvtps2pd R1:Xmm, R2:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate> ...
convToRegKeys(R1) |-> (MI657 => MI657)

convToRegKeys(R2) |-> ( _ => concatenateMInt(mi(128, 0), extractMInt(concatenateMInt(Float2MInt(Float2Double(MInt2Float(extractMInt(extractMInt(orMInt(mi(256, 0), shlMInt(mi(256, uvalueMInt(concatenateMInt(extractMInt(extractMInt(MI657, 128, 256), 0, 64), extractMInt(extractMInt(MI657, 128, 256), 64, 128)))), 0)), 128, 256), 0, 32), 24, 8)), 64), concatenateMInt(Float2MInt(Float2Double(MInt2Float(extractMInt(extractMInt(orMInt(mi(256, 0), shlMInt(mi(256, uvalueMInt(concatenateMInt(extractMInt(extractMInt(MI657, 128, 256), 0, 64), extractMInt(extractMInt(MI657, 128, 256), 64, 128)))), 0)), 128, 256), 32, 64), 24, 8)), 64), concatenateMInt(Float2MInt(Float2Double(MInt2Float(extractMInt(extractMInt(orMInt(mi(256, 0), shlMInt(mi(256, uvalueMInt(concatenateMInt(extractMInt(extractMInt(MI657, 128, 256), 0, 64), extractMInt(extractMInt(MI657, 128, 256), 64, 128)))), 0)), 128, 256), 64, 96), 24, 8)), 64), Float2MInt(Float2Double(MInt2Float(extractMInt(extractMInt(orMInt(mi(256, 0), shlMInt(mi(256, uvalueMInt(concatenateMInt(extractMInt(extractMInt(MI657, 128, 256), 0, 64), extractMInt(extractMInt(MI657, 128, 256), 64, 128)))), 0)), 128, 256), 96, 128), 24, 8)), 64)))), 128, 256)) )


    ...</regstate>
endmodule

module VCVTPS2PD-XMM-XMM-SEMANTICS
  imports VCVTPS2PD-XMM-XMM
endmodule
