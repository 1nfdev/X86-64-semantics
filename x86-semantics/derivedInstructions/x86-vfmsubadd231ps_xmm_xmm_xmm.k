// Autogenerated using stratification.
requires "x86-configuration.k"

module VFMSUBADD231PS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfmsubadd231ps R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt(Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 160), 24, 8) )  +Float  ( negateFloat( ( MInt2Float(concatenateMInt(mi(24, 0), extractMInt(getParentValue(R3, RSMap), 224, 232)), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 160), 24, 8) ) )  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 128, 160), 24, 8) )  ) , 32), Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 160, 192), 24, 8) )  -Float  ( negateFloat( ( MInt2Float(concatenateMInt(mi(24, 0), extractMInt(getParentValue(R3, RSMap), 232, 240)), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 160, 192), 24, 8) ) )  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 160, 192), 24, 8) )  ) , 32)), concatenateMInt(Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 224), 24, 8) )  +Float  ( negateFloat( ( MInt2Float(concatenateMInt(mi(24, 0), extractMInt(getParentValue(R3, RSMap), 240, 248)), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 224), 24, 8) ) )  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 192, 224), 24, 8) )  ) , 32), Float2MInt( (  ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 224, 256), 24, 8) )  -Float  ( negateFloat( ( MInt2Float(concatenateMInt(mi(24, 0), extractMInt(getParentValue(R3, RSMap), 248, 256)), 24, 8)  *Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 224, 256), 24, 8) ) )  -Float  MInt2Float(extractMInt(getParentValue(R3, RSMap), 224, 256), 24, 8) )  ) , 32)))) )


)

    </regstate>
endmodule

module VFMSUBADD231PS-XMM-XMM-XMM-SEMANTICS
  imports VFMSUBADD231PS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfmsubadd231ps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vpmovzxbd %xmm1, %xmm8              #  1     0    5      OPC=vpmovzxbd_xmm_xmm
circuit:vfnmsub231ps %xmm1, %xmm8, %xmm1    #  2     0x5  5      OPC=vfnmsub231ps_xmm_xmm_xmm
circuit:vfmaddsub231ps %xmm3, %xmm2, %xmm1  #  3     0xa  5      OPC=vfmaddsub231ps_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfmsubadd231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96]))), %ymm3[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64]))), %ymm3[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])))) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32]))), %ymm3[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0]))), %ymm3[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/