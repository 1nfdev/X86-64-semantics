// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMADD231PS-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmadd231ps R1:Ymm, R2:Ymm, R3:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate> ...
convToRegKeys(R2) |-> (MI438 => MI438)

convToRegKeys(R3) |-> ( MI440 => concatenateMInt(extractMInt(mi(256, uvalueMInt(extractMInt(concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 0, 32), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 0, 32), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 0, 32), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 32, 64), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 32, 64), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 32, 64), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 64, 96), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 64, 96), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 64, 96), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 96, 128), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 96, 128), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 96, 128), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 128, 160), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 128, 160), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 160, 192), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 160, 192), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 192, 224), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 192, 224), 24, 8) ) ) ) , 32), Float2MInt( ( MInt2Float(extractMInt(MI440, 224, 256), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 224, 256), 24, 8) ) ) ) , 32)))))))), 0, 128))), 128, 256), extractMInt(mi(256, uvalueMInt(extractMInt(concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 0, 32), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 0, 32), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 0, 32), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 32, 64), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 32, 64), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 32, 64), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 64, 96), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 64, 96), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 64, 96), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 96, 128), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 96, 128), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 96, 128), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 128, 160), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 128, 160), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 128, 160), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 160, 192), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 160, 192), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 160, 192), 24, 8) ) ) ) , 32), concatenateMInt(Float2MInt( ( MInt2Float(extractMInt(MI440, 192, 224), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 192, 224), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 192, 224), 24, 8) ) ) ) , 32), Float2MInt( ( MInt2Float(extractMInt(MI440, 224, 256), 24, 8)  +Float  negateFloat( ( MInt2Float(extractMInt(MI438, 224, 256), 24, 8)  *Float  MInt2Float(extractMInt(MI439, 224, 256), 24, 8) ) ) ) , 32)))))))), 128, 256))), 128, 256)) )

convToRegKeys(R1) |-> (MI439 => MI439)


    ...</regstate>
endmodule

module VFNMADD231PS-YMM-YMM-YMM-SEMANTICS
  imports VFNMADD231PS-YMM-YMM-YMM
endmodule
