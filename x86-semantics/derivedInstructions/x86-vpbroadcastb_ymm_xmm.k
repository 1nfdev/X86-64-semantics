// Autogenerated using stratification.
requires "x86-configuration.k"

module VPBROADCASTB-YMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpbroadcastb R1:Xmm, R2:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)))), concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256))))), concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)))), concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 248, 256), extractMInt(getParentValue(R1, RSMap), 248, 256)))))) )


)

    </regstate>
endmodule

module VPBROADCASTB-YMM-XMM-SEMANTICS
  imports VPBROADCASTB-YMM-XMM
endmodule
/*
TargetInstr:
vpbroadcastb %xmm2, %ymm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx2 }

Circuit:
circuit:vpbroadcastb %xmm2, %xmm1             #  1     0     5      OPC=vpbroadcastb_xmm_xmm
circuit:callq .move_256_128_ymm1_xmm10_xmm11  #  2     0x5   5      OPC=callq_label
circuit:vaddpd %xmm10, %xmm11, %xmm0          #  3     0xa   5      OPC=vaddpd_xmm_xmm_xmm
circuit:callq .move_64_128_xmm10_xmm11_xmm3   #  4     0xf   5      OPC=callq_label
circuit:vmovlhps %xmm3, %xmm0, %xmm1          #  5     0x14  4      OPC=vmovlhps_xmm_xmm_xmm
circuit:vpbroadcastw %xmm1, %ymm1             #  6     0x18  5      OPC=vpbroadcastw_ymm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vpbroadcastb %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Circuits:

%ymm1  : %ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0])) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]))) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0])) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/