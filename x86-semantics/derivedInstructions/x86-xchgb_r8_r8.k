// Autogenerated using stratification.
requires "x86-configuration.k"

module XCHGB-R8-R8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (xchgb R1:R8, R2:R8,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> (concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 56), extractMInt(getParentValue(R2, RSMap), 56, 64)) )

convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 56), extractMInt(getParentValue(R1, RSMap), 56, 64)) )


)

    </regstate>
endmodule

module XCHGB-R8-R8-SEMANTICS
  imports XCHGB-R8-R8
endmodule
/*
TargetInstr:
xchgb %cl, %bl
RWSet:
maybe read:{ %cl %bl }
must read:{ %cl %bl }
maybe write:{ %cl %bl }
must write:{ %cl %bl }
maybe undef:{ }
must undef:{ }
required flags:{ }

Circuit:
circuit:movzbq %bl, %r8  #  1     0     4      OPC=movzbq_r64_r8
circuit:movzbw %cl, %cx  #  2     0x4   4      OPC=movzbw_r16_r8
circuit:movb %ch, %bh    #  3     0x8   2      OPC=movb_rh_rh
circuit:xaddb %bl, %ch   #  4     0xa   3      OPC=xaddb_rh_r8
circuit:xaddw %bx, %cx   #  5     0xd   4      OPC=xaddw_r16_r16
circuit:xchgw %cx, %r8w  #  6     0x11  4      OPC=xchgw_r16_r16
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

xchgb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %cl %bl }
  must write:      { %cl %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Circuits:

%rcx   : %rcx[63:8] ∘ %rbx[7:0]
%rbx   : %rbx[63:8] ∘ %rcx[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/