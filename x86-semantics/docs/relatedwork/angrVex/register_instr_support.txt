WARNING | 2018-04-08 20:47:50,191 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:50,211 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:50,249 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclq_r64_cl/rclq_r64_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = GET:I8(cl)
   08 | t7 = 8Uto64(t6)
   09 | t8 = amd64g_calculate_RCL(t0,t7,t5,0x0000000000000008):Ity_I64
   10 | t9 = 8Uto64(t6)
   11 | t10 = amd64g_calculate_RCL(t0,t9,t5,0xfffffffffffffff8):Ity_I64
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t10
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(rbx) = t8
   17 | PUT(pc) = 0x0000000000400003
   18 | ------ IMark(0x400003, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:50:56,320 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:56,339 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:56,349 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorl_r32_r32/xorl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = Xor32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000013
   07 | t5 = 32Uto64(t4)
   08 | PUT(cc_dep1) = t5
   09 | PUT(cc_dep2) = 0x0000000000000000
   10 | t6 = 32Uto64(t4)
   11 | PUT(rbx) = t6
   12 | PUT(pc) = 0x0000000000400002
   13 | ------ IMark(0x400002, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:55,810 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:55,822 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:55,831 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorb_rh_r8/xorb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = Xor8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(ah) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:52,070 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,157 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:52,217 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgw_r16_r16/cmpxchgw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I16 t8:Ity_I16 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I1 t14:Ity_I16 t15:Ity_I16 t16:Ity_I16 t17:Ity_I16 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = GET:I16(ax)
   04 | PUT(cc_op) = 0x0000000000000006
   05 | t3 = 16Uto64(t2)
   06 | t4 = t3
   07 | PUT(cc_dep1) = t4
   08 | t5 = 16Uto64(t0)
   09 | t6 = t5
   10 | PUT(cc_dep2) = t6
   11 | t7 = 64to16(t6)
   12 | t8 = 64to16(t4)
   13 | t9 = CmpEQ16(t8,t7)
   14 | t10 = 1Uto64(t9)
   15 | t11 = t10
   16 | t12 = 64to1(t11)
   17 | t13 = t12
   18 | t14 = ITE(t13,t1,t0)
   19 | t15 = t14
   20 | t16 = ITE(t13,t2,t0)
   21 | t17 = t16
   22 | PUT(ax) = t17
   23 | PUT(bx) = t15
   24 | PUT(pc) = 0x0000000000400004
   25 | ------ IMark(0x400004, 1, 0) ------
   26 | t18 = GET:I64(rsp)
   27 | t19 = LDle:I64(t18)
   28 | t20 = Add64(t18,0x0000000000000008)
   29 | PUT(rsp) = t20
   30 | t21 = Sub64(t20,0x0000000000000080)
   31 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:48:42,561 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:42,584 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:42,594 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vbroadcastss_xmm_xmm/vbroadcastss_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32HLto64(t0,t0)
   03 | t2 = 64HLtoV128(t1,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:50,990 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:51,019 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:51,030 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgb_r8_r8/xchgb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | PUT(cl) = t0
   04 | PUT(bl) = t1
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:36,533 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:36,554 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:36,585 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddps_xmm_xmm_xmm/vaddps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add32Fx4(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:54,168 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:54,190 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:54,245 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolb_r8_one/rolb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = Shr8(t0,0x07)
   03 | t2 = Shl8(t0,0x01)
   04 | t3 = Or8(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x0000000000000025
   11 | t9 = 8Uto64(t3)
   12 | PUT(cc_dep1) = t9
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = t8
   15 | PUT(bl) = t3
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:46:48,817 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:48,853 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:48,938 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnow_r16_r16/cmovnow_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000001,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:58,737 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:58,765 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:58,778 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaddubsw_xmm_xmm_xmm/vpmaddubsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = SarN16x8(t1,0x08)
   04 | t3 = ShlN16x8(t1,0x08)
   05 | t4 = SarN16x8(t3,0x08)
   06 | t5 = ShrN16x8(t0,0x08)
   07 | t6 = ShlN16x8(t0,0x08)
   08 | t7 = ShrN16x8(t6,0x08)
   09 | t8 = Mul16x8(t4,t7)
   10 | t9 = Mul16x8(t2,t5)
   11 | t10 = QAdd16Sx8(t9,t8)
   12 | PUT(xmm1) = t10
   13 | PUT(272) = 0
   14 | PUT(pc) = 0x0000000000400005
   15 | ------ IMark(0x400005, 1, 0) ------
   16 | t11 = GET:I64(rsp)
   17 | t12 = LDle:I64(t11)
   18 | t13 = Add64(t11,0x0000000000000008)
   19 | PUT(rsp) = t13
   20 | t14 = Sub64(t13,0x0000000000000080)
   21 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:49:02,086 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:02,103 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:02,123 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub231ps_xmm_xmm_xmm/vfmsub231ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t0)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = NegF32(t18)
   22 | t20 = 64HIto32(t4)
   23 | t21 = ReinterpI32asF32(t20)
   24 | t22 = 64HIto32(t3)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = MAddF32(0x00000000,t23,t21,t19)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = NegF32(t26)
   31 | t28 = 64to32(t7)
   32 | t29 = ReinterpI32asF32(t28)
   33 | t30 = 64to32(t6)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = MAddF32(0x00000000,t31,t29,t27)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = NegF32(t34)
   40 | t36 = 64HIto32(t7)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = 64HIto32(t6)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = MAddF32(0x00000000,t39,t37,t35)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:49:54,303 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:54,324 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:54,354 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphaddsw_ymm_ymm_ymm/vphaddsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = CatOddLanes16x4(t3,t2)
   12 | t11 = CatEvenLanes16x4(t3,t2)
   13 | t12 = QAdd16Sx4(t11,t10)
   14 | t13 = CatOddLanes16x4(t7,t6)
   15 | t14 = CatEvenLanes16x4(t7,t6)
   16 | t15 = QAdd16Sx4(t14,t13)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = CatOddLanes16x4(t5,t4)
   19 | t18 = CatEvenLanes16x4(t5,t4)
   20 | t19 = QAdd16Sx4(t18,t17)
   21 | t20 = CatOddLanes16x4(t9,t8)
   22 | t21 = CatEvenLanes16x4(t9,t8)
   23 | t22 = QAdd16Sx4(t21,t20)
   24 | t23 = 64HLtoV128(t22,t19)
   25 | t24 = V128HLtoV256(t23,t16)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:49:49,317 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:49,381 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:49,416 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqd_ymm_ymm_ymm/vpcmpeqd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpEQ32x8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:44,188 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:44,244 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:44,285 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtph2ps_xmm_xmm/vcvtph2ps_xmm_xmm.o
IRSB {
   

   NEXT: PUT(rip) = 0x0000000000400000; Ijk_NoDecode
}
WARNING | 2018-04-08 20:49:19,611 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:19,627 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:19,641 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmaxpd_xmm_xmm_xmm/vmaxpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max64Fx2(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:40,362 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:40,428 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:40,437 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovzxdq_xmm_xmm/pmovzxdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO32x4(0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:07,349 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:07,368 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:07,388 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovmskb_r64_ymm/vpmovmskb_r64_ymm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I16 t3:Ity_I16 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(272)
   03 | t2 = GetMSBs8x16(t0)
   04 | t3 = GetMSBs8x16(t1)
   05 | t4 = 16HLto32(t3,t2)
   06 | t5 = 32Uto64(t4)
   07 | PUT(rbx) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:34,999 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:35,029 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:35,068 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/ucomiss_xmm_xmm/ucomiss_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F64 t3:Ity_F64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = GET:F32(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = F32toF64(t0)
   06 | t3 = F32toF64(t1)
   07 | t4 = CmpF64(t3,t2)
   08 | t5 = 32Uto64(t4)
   09 | t6 = And64(t5,0x0000000000000045)
   10 | PUT(cc_dep1) = t6
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t7 = GET:I64(rsp)
   14 | t8 = LDle:I64(t7)
   15 | t9 = Add64(t7,0x0000000000000008)
   16 | PUT(rsp) = t9
   17 | t10 = Sub64(t9,0x0000000000000080)
   18 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:46,754 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:46,818 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:46,856 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubq_xmm_xmm/psubq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:40,638 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,777 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,877 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnbq_r64_r64/cmovnbq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000003,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:21,510 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:21,529 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:21,574 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setz_r8/setz_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000004,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:36,411 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:36,432 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:36,440 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpcklbw_ymm_ymm_ymm/vpunpcklbw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveLO8x16(t5,t3)
   08 | t7 = InterleaveLO8x16(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:39,093 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:39,112 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:39,123 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpxor_ymm_ymm_ymm/vpxor_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = XorV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:57,203 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:57,224 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:57,239 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub231pd_xmm_xmm_xmm/vfmaddsub231pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t0)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V128HIto64(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t18 = GET:I64(rsp)
   25 | t19 = LDle:I64(t18)
   26 | t20 = Add64(t18,0x0000000000000008)
   27 | PUT(rsp) = t20
   28 | t21 = Sub64(t20,0x0000000000000080)
   29 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:47:35,934 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:35,974 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:36,017 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaxud_xmm_xmm/pmaxud_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max32Ux4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:32,341 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:32,360 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:32,369 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pextq_r64_r64_r64/pextq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rdx)
   03 | t2 = And64(t0,t1)
   04 | t3 = amd64g_calculate_pext(t2,t1):Ity_I64
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:11,276 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:11,346 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:11,420 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movq_r64_xmm/movq_r64_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(ymm1)
   02 | PUT(rbx) = t0
   03 | PUT(pc) = 0x0000000000400005
   04 | ------ IMark(0x400005, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:13,730 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:13,743 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:13,750 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213ss_xmm_xmm_xmm/vfnmsub213ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = MAddF32(0x00000000,t1,t0,t2)
   05 | t4 = NegF32(t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:18,750 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:18,770 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:18,779 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmaxsd_xmm_xmm_xmm/vmaxsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Max64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:10,749 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:10,838 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:10,895 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movq_xmm_xmm/movq_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(264) = 0x0000000000000000
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:48:01,657 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:01,676 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:01,685 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarb_r8_one/sarb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = 8Sto64(t0)
   03 | t2 = Sar64(t1,0x01)
   04 | PUT(cc_op) = 0x0000000000000021
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(bl) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:13,825 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:13,866 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:13,889 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxwq_ymm_xmm/vpmovzxwq_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = InterleaveLO16x8(0,t1)
   04 | t3 = InterleaveLO16x8(0,t0)
   05 | t4 = InterleaveHI16x8(0,t3)
   06 | t5 = V128HLtoV256(t4,t2)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:52,185 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:52,202 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:52,212 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgb_rh_rh/xchgb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | PUT(bh) = t0
   04 | PUT(ah) = t1
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:23,433 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:23,462 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:23,526 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/notb_r8/notb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = Not8(t0)
   03 | PUT(bl) = t1
   04 | PUT(pc) = 0x0000000000400002
   05 | ------ IMark(0x400002, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:18,933 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:18,952 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:19,037 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulxq_r64_r64_r64/mulxq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = MullU64(t0,t1)
   04 | t3 = 128to64(t2)
   05 | PUT(rbx) = t3
   06 | t4 = 128HIto64(t2)
   07 | PUT(rax) = t4
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:34,384 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:34,403 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:34,441 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaxsb_xmm_xmm/pmaxsb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:34,009 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:34,035 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:34,054 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vorps_ymm_ymm_ymm/vorps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = OrV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:26,520 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:26,810 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:26,898 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andl_r32_r32/andl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = And32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000013
   07 | t5 = 32Uto64(t4)
   08 | PUT(cc_dep1) = t5
   09 | PUT(cc_dep2) = 0x0000000000000000
   10 | t6 = 32Uto64(t4)
   11 | PUT(rbx) = t6
   12 | PUT(pc) = 0x0000000000400002
   13 | ------ IMark(0x400002, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:38,381 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:38,400 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:38,428 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddq_xmm_xmm_xmm/vpaddq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add64x2(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:11,056 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:11,092 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:11,113 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxbd_ymm_xmm/vpmovzxbd_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = InterleaveLO8x16(0,t0)
   05 | t4 = InterleaveHI8x16(0,t3)
   06 | t5 = V128HLtoV256(t4,t2)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:27,461 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:27,627 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:27,736 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/bextrl_r32_r32_r32/bextrl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I16 t5:Ity_I8 t6:Ity_I8 t7:Ity_I32 t8:Ity_I32 t9:Ity_I1 t10:Ity_I32 t11:Ity_I8 t12:Ity_I8 t13:Ity_I8 t14:Ity_I32 t15:Ity_I32 t16:Ity_I1 t17:Ity_I32 t18:Ity_I32 t19:Ity_I32 t20:Ity_I32 t21:Ity_I1 t22:Ity_I32 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = 32to16(t1)
   06 | t5 = 16to8(t4)
   07 | t6 = 16HIto8(t4)
   08 | t7 = Shr32(t3,t5)
   09 | t8 = 8Uto32(t5)
   10 | t9 = CmpLT32U(t8,0x00000020)
   11 | t10 = ITE(t9,t7,0x00000000)
   12 | t11 = Sub8(0x20,t6)
   13 | t12 = Sub8(0x20,t5)
   14 | t13 = Sub8(t12,t6)
   15 | t14 = Shl32(t3,t13)
   16 | t15 = Shr32(t14,t11)
   17 | t16 = CmpEQ8(t6,0x00)
   18 | t17 = ITE(t16,0x00000000,t15)
   19 | t18 = 8Uto32(t6)
   20 | t19 = 8Uto32(t5)
   21 | t20 = Add32(t19,t18)
   22 | t21 = CmpLT32U(t20,0x00000020)
   23 | t22 = ITE(t21,t17,t10)
   24 | t23 = 32Uto64(t22)
   25 | PUT(rbx) = t23
   26 | PUT(cc_op) = 0x0000000000000035
   27 | t24 = 32Uto64(t22)
   28 | PUT(cc_dep1) = t24
   29 | PUT(cc_dep2) = 0x0000000000000000
   30 | PUT(pc) = 0x0000000000400005
   31 | ------ IMark(0x400005, 1, 0) ------
   32 | t25 = GET:I64(rsp)
   33 | t26 = LDle:I64(t25)
   34 | t27 = Add64(t25,0x0000000000000008)
   35 | PUT(rsp) = t27
   36 | t28 = Sub64(t27,0x0000000000000080)
   37 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:48:26,770 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:26,789 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:26,852 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrw_r16_one/shrw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = 16Uto64(t0)
   03 | t2 = Shr64(t1,0x01)
   04 | PUT(cc_op) = 0x0000000000000022
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to16(t2)
   08 | PUT(bx) = t3
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:52,460 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:52,477 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:52,492 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpermilps_xmm_xmm_xmm/vpermilps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = ShlN32x4(t0,0x1e)
   04 | t3 = ShrN32x4(t2,0x1e)
   05 | t4 = Perm32x4(t1,t3)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:08,328 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:08,374 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:08,422 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd213ps_ymm_ymm_ymm/vfnmadd213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_F32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_F32 t50:Ity_F32 t51:Ity_I32 t52:Ity_F32 t53:Ity_F32 t54:Ity_I32 t55:Ity_F32 t56:Ity_I32 t57:Ity_F32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_F32 t68:Ity_F32 t69:Ity_I32 t70:Ity_F32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_I32 t75:Ity_F32 t76:Ity_F32 t77:Ity_F32 t78:Ity_I32 t79:Ity_F32 t80:Ity_F32 t81:Ity_I32 t82:Ity_F32 t83:Ity_I32 t84:Ity_F32 t85:Ity_F32 t86:Ity_F32 t87:Ity_I64 t88:Ity_I64 t89:Ity_I64 t90:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | t23 = NegF32(t22)
   25 | PUT(ymm1) = t23
   26 | t24 = 64HIto32(t5)
   27 | t25 = ReinterpI32asF32(t24)
   28 | t26 = NegF32(t25)
   29 | t27 = 64HIto32(t4)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = 64HIto32(t3)
   32 | t30 = ReinterpI32asF32(t29)
   33 | t31 = MAddF32(0x00000000,t30,t28,t26)
   34 | t32 = NegF32(t31)
   35 | PUT(260) = t32
   36 | t33 = 64to32(t8)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = NegF32(t34)
   39 | t36 = 64to32(t7)
   40 | t37 = ReinterpI32asF32(t36)
   41 | t38 = 64to32(t6)
   42 | t39 = ReinterpI32asF32(t38)
   43 | t40 = MAddF32(0x00000000,t39,t37,t35)
   44 | t41 = NegF32(t40)
   45 | PUT(264) = t41
   46 | t42 = 64HIto32(t8)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = NegF32(t43)
   49 | t45 = 64HIto32(t7)
   50 | t46 = ReinterpI32asF32(t45)
   51 | t47 = 64HIto32(t6)
   52 | t48 = ReinterpI32asF32(t47)
   53 | t49 = MAddF32(0x00000000,t48,t46,t44)
   54 | t50 = NegF32(t49)
   55 | PUT(268) = t50
   56 | t51 = 64to32(t11)
   57 | t52 = ReinterpI32asF32(t51)
   58 | t53 = NegF32(t52)
   59 | t54 = 64to32(t10)
   60 | t55 = ReinterpI32asF32(t54)
   61 | t56 = 64to32(t9)
   62 | t57 = ReinterpI32asF32(t56)
   63 | t58 = MAddF32(0x00000000,t57,t55,t53)
   64 | t59 = NegF32(t58)
   65 | PUT(272) = t59
   66 | t60 = 64HIto32(t11)
   67 | t61 = ReinterpI32asF32(t60)
   68 | t62 = NegF32(t61)
   69 | t63 = 64HIto32(t10)
   70 | t64 = ReinterpI32asF32(t63)
   71 | t65 = 64HIto32(t9)
   72 | t66 = ReinterpI32asF32(t65)
   73 | t67 = MAddF32(0x00000000,t66,t64,t62)
   74 | t68 = NegF32(t67)
   75 | PUT(276) = t68
   76 | t69 = 64to32(t14)
   77 | t70 = ReinterpI32asF32(t69)
   78 | t71 = NegF32(t70)
   79 | t72 = 64to32(t13)
   80 | t73 = ReinterpI32asF32(t72)
   81 | t74 = 64to32(t12)
   82 | t75 = ReinterpI32asF32(t74)
   83 | t76 = MAddF32(0x00000000,t75,t73,t71)
   84 | t77 = NegF32(t76)
   85 | PUT(280) = t77
   86 | t78 = 64HIto32(t14)
   87 | t79 = ReinterpI32asF32(t78)
   88 | t80 = NegF32(t79)
   89 | t81 = 64HIto32(t13)
   90 | t82 = ReinterpI32asF32(t81)
   91 | t83 = 64HIto32(t12)
   92 | t84 = ReinterpI32asF32(t83)
   93 | t85 = MAddF32(0x00000000,t84,t82,t80)
   94 | t86 = NegF32(t85)
   95 | PUT(284) = t86
   96 | PUT(pc) = 0x0000000000400005
   97 | ------ IMark(0x400005, 1, 0) ------
   98 | t87 = GET:I64(rsp)
   99 | t88 = LDle:I64(t87)
   100 | t89 = Add64(t87,0x0000000000000008)
   101 | PUT(rsp) = t89
   102 | t90 = Sub64(t89,0x0000000000000080)
   103 | ====== AbiHint(0xt90, 128, t88) ======
   NEXT: PUT(rip) = t88; Ijk_Ret
}
WARNING | 2018-04-08 20:48:49,676 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:49,697 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:49,710 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtss2siq_r64_xmm/vcvtss2siq_r64_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F32toF64(t0)
   06 | t5 = F64toI64S(t3,t4)
   07 | PUT(rbx) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:43,148 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:43,179 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:43,197 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpand_ymm_ymm_ymm/vpand_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = AndV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:43,819 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:43,846 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:43,856 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psrlq_xmm_xmm/psrlq_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN64x2(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000040)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:11,135 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:11,216 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:11,246 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/minps_xmm_xmm/minps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min32Fx4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:55,849 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:55,870 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:55,895 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub132ps_ymm_ymm_ymm/vfmaddsub132ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_F32 t48:Ity_I32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_F32 t53:Ity_I32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t1)
   07 | t6 = V256to64_1(t0)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t1)
   10 | t9 = V256to64_2(t0)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t1)
   13 | t12 = V256to64_3(t0)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t1)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = NegF32(t31)
   36 | t33 = 64to32(t7)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = 64to32(t6)
   39 | t36 = ReinterpI32asF32(t35)
   40 | t37 = MAddF32(0x00000000,t36,t34,t32)
   41 | PUT(264) = t37
   42 | t38 = 64HIto32(t8)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = NegF32(t46)
   53 | t48 = 64to32(t10)
   54 | t49 = ReinterpI32asF32(t48)
   55 | t50 = 64to32(t9)
   56 | t51 = ReinterpI32asF32(t50)
   57 | t52 = MAddF32(0x00000000,t51,t49,t47)
   58 | PUT(272) = t52
   59 | t53 = 64HIto32(t11)
   60 | t54 = ReinterpI32asF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = NegF32(t61)
   70 | t63 = 64to32(t13)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = 64to32(t12)
   73 | t66 = ReinterpI32asF32(t65)
   74 | t67 = MAddF32(0x00000000,t66,t64,t62)
   75 | PUT(280) = t67
   76 | t68 = 64HIto32(t14)
   77 | t69 = ReinterpI32asF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
WARNING | 2018-04-08 20:46:23,716 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:23,928 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:24,064 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addb_rh_r8/addb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(ah) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:32,065 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:32,085 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:32,094 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subpd_xmm_xmm/subpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub64Fx2(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:55,427 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:55,544 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:55,631 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsi2ssl_xmm_r32/cvtsi2ssl_xmm_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I32 t5:Ity_F64 t6:Ity_F32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(sseround)
   02 | t1 = And64(t0,0x0000000000000003)
   03 | t2 = 64to32(t1)
   04 | t3 = GET:I64(rbx)
   05 | t4 = 64to32(t3)
   06 | t5 = I32StoF64(t4)
   07 | t6 = F64toF32(t2,t5)
   08 | PUT(ymm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:30,191 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:30,211 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:30,221 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subl_r32_r32/subl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = Sub32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000007
   07 | t5 = 32Uto64(t1)
   08 | PUT(cc_dep1) = t5
   09 | t6 = 32Uto64(t3)
   10 | PUT(cc_dep2) = t6
   11 | t7 = 32Uto64(t4)
   12 | PUT(rbx) = t7
   13 | PUT(pc) = 0x0000000000400002
   14 | ------ IMark(0x400002, 1, 0) ------
   15 | t8 = GET:I64(rsp)
   16 | t9 = LDle:I64(t8)
   17 | t10 = Add64(t8,0x0000000000000008)
   18 | PUT(rsp) = t10
   19 | t11 = Sub64(t10,0x0000000000000080)
   20 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:47:06,771 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:06,796 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:06,824 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/maxss_xmm_xmm/maxss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:00,176 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:00,251 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:00,329 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salb_rh_one/salb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Uto64(t0)
   03 | t2 = Shl64(t1,0x01)
   04 | PUT(cc_op) = 0x000000000000001d
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(ah) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,556 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,593 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,637 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnlew_r16_r16/cmovnlew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000f,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:50,188 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:50,258 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:50,338 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclq_r64_one/rclq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = amd64g_calculate_RCL(t0,0x0000000000000001,t5,0x0000000000000008):Ity_I64
   08 | t7 = amd64g_calculate_RCL(t0,0x0000000000000001,t5,0xfffffffffffffff8):Ity_I64
   09 | PUT(cc_op) = 0x0000000000000000
   10 | PUT(cc_dep1) = t7
   11 | PUT(cc_dep2) = 0x0000000000000000
   12 | PUT(cc_ndep) = 0x0000000000000000
   13 | PUT(rbx) = t6
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:50:10,635 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:10,652 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:10,661 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxwq_ymm_xmm/vpmovsxwq_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I16 t4:Ity_I16 t5:Ity_I16 t6:Ity_I16 t7:Ity_I64 t8:Ity_I64 t9:Ity_V128 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_V256 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = 64HIto32(t0)
   03 | t2 = 64to32(t0)
   04 | t3 = 32to16(t2)
   05 | t4 = 32HIto16(t2)
   06 | t5 = 32to16(t1)
   07 | t6 = 32HIto16(t1)
   08 | t7 = 16Sto64(t3)
   09 | t8 = 16Sto64(t4)
   10 | t9 = 64HLtoV128(t8,t7)
   11 | t10 = 16Sto64(t5)
   12 | t11 = 16Sto64(t6)
   13 | t12 = 64HLtoV128(t11,t10)
   14 | t13 = V128HLtoV256(t12,t9)
   15 | PUT(ymm1) = t13
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t14 = GET:I64(rsp)
   19 | t15 = LDle:I64(t14)
   20 | t16 = Add64(t14,0x0000000000000008)
   21 | PUT(rsp) = t16
   22 | t17 = Sub64(t16,0x0000000000000080)
   23 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:49:23,937 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:23,953 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:23,963 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovlhps_xmm_xmm_xmm/vmovlhps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:I64(ymm3)
   03 | t2 = 64HLtoV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:50,318 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:50,339 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:50,349 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddl_r32_r32/xaddl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = Add32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000003
   07 | t5 = 32Uto64(t1)
   08 | PUT(cc_dep1) = t5
   09 | t6 = 32Uto64(t3)
   10 | PUT(cc_dep2) = t6
   11 | t7 = 32Uto64(t1)
   12 | PUT(rcx) = t7
   13 | t8 = 32Uto64(t4)
   14 | PUT(rbx) = t8
   15 | PUT(pc) = 0x0000000000400003
   16 | ------ IMark(0x400003, 1, 0) ------
   17 | t9 = GET:I64(rsp)
   18 | t10 = LDle:I64(t9)
   19 | t11 = Add64(t9,0x0000000000000008)
   20 | PUT(rsp) = t11
   21 | t12 = Sub64(t11,0x0000000000000080)
   22 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:19,446 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:19,531 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:19,601 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/negb_r8/negb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = Sub8(0x00,t0)
   03 | PUT(cc_op) = 0x0000000000000005
   04 | PUT(cc_dep1) = 0x0000000000000000
   05 | t2 = 8Uto64(t0)
   06 | PUT(cc_dep2) = t2
   07 | PUT(bl) = t1
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:38,696 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:38,717 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:38,741 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddq_ymm_ymm_ymm/vpaddq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Add64x4(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:44,775 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:44,793 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:44,817 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubsb_xmm_xmm/psubsb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QSub8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,584 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,643 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,729 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovngew_r16_r16/cmovngew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000c,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:01,226 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:01,252 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:01,263 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxub_xmm_xmm_xmm/vpmaxub_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max8Ux16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:04,838 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:04,856 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:04,914 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbb_r8_rh/sbbb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Sub8(t0,t1)
   11 | t10 = Sub8(t9,t8)
   12 | PUT(cc_op) = 0x000000000000000d
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(bl) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:49:49,672 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:49,691 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:49,700 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtb_ymm_ymm_ymm/vpcmpgtb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpGT8Sx32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:52,351 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:52,381 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:52,402 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vdivss_xmm_xmm_xmm/vdivss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Div32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:27,987 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:28,014 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:28,033 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskps_r64_ymm/vmovmskps_r64_ymm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_I32 t17:Ity_I32 t18:Ity_I32 t19:Ity_I32 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I32 t25:Ity_I32 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(260)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(264)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(268)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = GET:I32(272)
   14 | t13 = Shr32(t12,0x1b)
   15 | t14 = And32(t13,0x00000010)
   16 | t15 = GET:I32(276)
   17 | t16 = Shr32(t15,0x1a)
   18 | t17 = And32(t16,0x00000020)
   19 | t18 = GET:I32(280)
   20 | t19 = Shr32(t18,0x19)
   21 | t20 = And32(t19,0x00000040)
   22 | t21 = GET:I32(284)
   23 | t22 = Shr32(t21,0x18)
   24 | t23 = And32(t22,0x00000080)
   25 | t24 = Or32(t20,t23)
   26 | t25 = Or32(t14,t17)
   27 | t26 = Or32(t25,t24)
   28 | t27 = Or32(t8,t11)
   29 | t28 = Or32(t2,t5)
   30 | t29 = Or32(t28,t27)
   31 | t30 = Or32(t29,t26)
   32 | t31 = 32Uto64(t30)
   33 | PUT(rbx) = t31
   34 | PUT(pc) = 0x0000000000400004
   35 | ------ IMark(0x400004, 1, 0) ------
   36 | t32 = GET:I64(rsp)
   37 | t33 = LDle:I64(t32)
   38 | t34 = Add64(t32,0x0000000000000008)
   39 | PUT(rsp) = t34
   40 | t35 = Sub64(t34,0x0000000000000080)
   41 | ====== AbiHint(0xt35, 128, t33) ======
   NEXT: PUT(rip) = t33; Ijk_Ret
}
WARNING | 2018-04-08 20:50:04,525 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:04,549 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:04,565 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminub_ymm_ymm_ymm/vpminub_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Min8Ux32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:27,632 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:27,652 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:27,669 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovshdup_xmm_xmm/vmovshdup_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64HIto32(t2)
   05 | t4 = 64HIto32(t1)
   06 | t5 = 32HLto64(t3,t3)
   07 | t6 = 32HLto64(t4,t4)
   08 | t7 = 64HLtoV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(272) = 0
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t8 = GET:I64(rsp)
   14 | t9 = LDle:I64(t8)
   15 | t10 = Add64(t8,0x0000000000000008)
   16 | PUT(rsp) = t10
   17 | t11 = Sub64(t10,0x0000000000000080)
   18 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:50:47,513 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:47,527 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:47,541 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vxorpd_xmm_xmm_xmm/vxorpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = XorV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,078 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,180 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,273 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpb_rh_r8/cmpb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | PUT(cc_op) = 0x0000000000000005
   04 | t2 = 8Uto64(t0)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t1)
   07 | PUT(cc_dep2) = t3
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:01,109 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:01,139 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:01,177 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salw_r16_cl/salw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I16 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 16Uto64(t0)
   05 | t4 = Shl64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shl64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x000000000000001e,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to16(t4)
   20 | PUT(bx) = t15
   21 | PUT(pc) = 0x0000000000400003
   22 | ------ IMark(0x400003, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:54,595 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:54,611 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:54,620 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgw_r16_ax/xchgw_r16_ax.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I16(ax)
   02 | t1 = GET:I16(bx)
   03 | t2 = 16Uto64(t1)
   04 | PUT(rax) = t2
   05 | PUT(bx) = t0
   06 | PUT(pc) = 0x0000000000400002
   07 | ------ IMark(0x400002, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:26,156 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:26,192 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:26,208 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskps_r64_xmm/vmovmskps_r64_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(260)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(264)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(268)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = Or32(t8,t11)
   14 | t13 = Or32(t2,t5)
   15 | t14 = Or32(t13,t12)
   16 | t15 = 32Uto64(t14)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400004
   19 | ------ IMark(0x400004, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:57,949 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:57,970 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:57,982 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphsubsw_xmm_xmm_xmm/vphsubsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = QSub16Sx4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = QSub16Sx4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:13,738 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:13,827 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,885 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movmskpd_r64_xmm/movmskpd_r64_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(260)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(268)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = Or32(t2,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:14,469 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:14,485 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:14,530 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub231ps_ymm_ymm_ymm/vfnmsub231ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_I32 t42:Ity_F32 t43:Ity_I32 t44:Ity_F32 t45:Ity_F32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_I32 t50:Ity_F32 t51:Ity_I32 t52:Ity_F32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_I32 t60:Ity_F32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_I32 t68:Ity_F32 t69:Ity_F32 t70:Ity_F32 t71:Ity_I32 t72:Ity_F32 t73:Ity_I32 t74:Ity_F32 t75:Ity_I32 t76:Ity_F32 t77:Ity_F32 t78:Ity_F32 t79:Ity_I64 t80:Ity_I64 t81:Ity_I64 t82:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t0)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t0)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t0)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t0)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | t22 = NegF32(t21)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | t30 = NegF32(t29)
   33 | PUT(260) = t30
   34 | t31 = 64to32(t8)
   35 | t32 = ReinterpI32asF32(t31)
   36 | t33 = 64to32(t7)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = 64to32(t6)
   39 | t36 = ReinterpI32asF32(t35)
   40 | t37 = MAddF32(0x00000000,t36,t34,t32)
   41 | t38 = NegF32(t37)
   42 | PUT(264) = t38
   43 | t39 = 64HIto32(t8)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = 64HIto32(t7)
   46 | t42 = ReinterpI32asF32(t41)
   47 | t43 = 64HIto32(t6)
   48 | t44 = ReinterpI32asF32(t43)
   49 | t45 = MAddF32(0x00000000,t44,t42,t40)
   50 | t46 = NegF32(t45)
   51 | PUT(268) = t46
   52 | t47 = 64to32(t11)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = 64to32(t10)
   55 | t50 = ReinterpI32asF32(t49)
   56 | t51 = 64to32(t9)
   57 | t52 = ReinterpI32asF32(t51)
   58 | t53 = MAddF32(0x00000000,t52,t50,t48)
   59 | t54 = NegF32(t53)
   60 | PUT(272) = t54
   61 | t55 = 64HIto32(t11)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t10)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = 64HIto32(t9)
   66 | t60 = ReinterpI32asF32(t59)
   67 | t61 = MAddF32(0x00000000,t60,t58,t56)
   68 | t62 = NegF32(t61)
   69 | PUT(276) = t62
   70 | t63 = 64to32(t14)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = 64to32(t13)
   73 | t66 = ReinterpI32asF32(t65)
   74 | t67 = 64to32(t12)
   75 | t68 = ReinterpI32asF32(t67)
   76 | t69 = MAddF32(0x00000000,t68,t66,t64)
   77 | t70 = NegF32(t69)
   78 | PUT(280) = t70
   79 | t71 = 64HIto32(t14)
   80 | t72 = ReinterpI32asF32(t71)
   81 | t73 = 64HIto32(t13)
   82 | t74 = ReinterpI32asF32(t73)
   83 | t75 = 64HIto32(t12)
   84 | t76 = ReinterpI32asF32(t75)
   85 | t77 = MAddF32(0x00000000,t76,t74,t72)
   86 | t78 = NegF32(t77)
   87 | PUT(284) = t78
   88 | PUT(pc) = 0x0000000000400005
   89 | ------ IMark(0x400005, 1, 0) ------
   90 | t79 = GET:I64(rsp)
   91 | t80 = LDle:I64(t79)
   92 | t81 = Add64(t79,0x0000000000000008)
   93 | PUT(rsp) = t81
   94 | t82 = Sub64(t81,0x0000000000000080)
   95 | ====== AbiHint(0xt82, 128, t80) ======
   NEXT: PUT(rip) = t80; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,240 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,358 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,459 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpb_r8_rh/cmpb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | PUT(cc_op) = 0x0000000000000005
   04 | t2 = 8Uto64(t0)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t1)
   07 | PUT(cc_dep2) = t3
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:09,811 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,830 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,891 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movmskps_r64_xmm/movmskps_r64_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(260)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(264)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(268)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = Or32(t8,t11)
   14 | t13 = Or32(t2,t5)
   15 | t14 = Or32(t13,t12)
   16 | t15 = 32Uto64(t14)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400003
   19 | ------ IMark(0x400003, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:10,470 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:10,510 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:10,525 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd231ps_ymm_ymm_ymm/vfnmadd231ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_F32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_F32 t50:Ity_F32 t51:Ity_I32 t52:Ity_F32 t53:Ity_F32 t54:Ity_I32 t55:Ity_F32 t56:Ity_I32 t57:Ity_F32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_F32 t68:Ity_F32 t69:Ity_I32 t70:Ity_F32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_I32 t75:Ity_F32 t76:Ity_F32 t77:Ity_F32 t78:Ity_I32 t79:Ity_F32 t80:Ity_F32 t81:Ity_I32 t82:Ity_F32 t83:Ity_I32 t84:Ity_F32 t85:Ity_F32 t86:Ity_F32 t87:Ity_I64 t88:Ity_I64 t89:Ity_I64 t90:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t0)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t0)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t0)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t0)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | t23 = NegF32(t22)
   25 | PUT(ymm1) = t23
   26 | t24 = 64HIto32(t5)
   27 | t25 = ReinterpI32asF32(t24)
   28 | t26 = NegF32(t25)
   29 | t27 = 64HIto32(t4)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = 64HIto32(t3)
   32 | t30 = ReinterpI32asF32(t29)
   33 | t31 = MAddF32(0x00000000,t30,t28,t26)
   34 | t32 = NegF32(t31)
   35 | PUT(260) = t32
   36 | t33 = 64to32(t8)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = NegF32(t34)
   39 | t36 = 64to32(t7)
   40 | t37 = ReinterpI32asF32(t36)
   41 | t38 = 64to32(t6)
   42 | t39 = ReinterpI32asF32(t38)
   43 | t40 = MAddF32(0x00000000,t39,t37,t35)
   44 | t41 = NegF32(t40)
   45 | PUT(264) = t41
   46 | t42 = 64HIto32(t8)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = NegF32(t43)
   49 | t45 = 64HIto32(t7)
   50 | t46 = ReinterpI32asF32(t45)
   51 | t47 = 64HIto32(t6)
   52 | t48 = ReinterpI32asF32(t47)
   53 | t49 = MAddF32(0x00000000,t48,t46,t44)
   54 | t50 = NegF32(t49)
   55 | PUT(268) = t50
   56 | t51 = 64to32(t11)
   57 | t52 = ReinterpI32asF32(t51)
   58 | t53 = NegF32(t52)
   59 | t54 = 64to32(t10)
   60 | t55 = ReinterpI32asF32(t54)
   61 | t56 = 64to32(t9)
   62 | t57 = ReinterpI32asF32(t56)
   63 | t58 = MAddF32(0x00000000,t57,t55,t53)
   64 | t59 = NegF32(t58)
   65 | PUT(272) = t59
   66 | t60 = 64HIto32(t11)
   67 | t61 = ReinterpI32asF32(t60)
   68 | t62 = NegF32(t61)
   69 | t63 = 64HIto32(t10)
   70 | t64 = ReinterpI32asF32(t63)
   71 | t65 = 64HIto32(t9)
   72 | t66 = ReinterpI32asF32(t65)
   73 | t67 = MAddF32(0x00000000,t66,t64,t62)
   74 | t68 = NegF32(t67)
   75 | PUT(276) = t68
   76 | t69 = 64to32(t14)
   77 | t70 = ReinterpI32asF32(t69)
   78 | t71 = NegF32(t70)
   79 | t72 = 64to32(t13)
   80 | t73 = ReinterpI32asF32(t72)
   81 | t74 = 64to32(t12)
   82 | t75 = ReinterpI32asF32(t74)
   83 | t76 = MAddF32(0x00000000,t75,t73,t71)
   84 | t77 = NegF32(t76)
   85 | PUT(280) = t77
   86 | t78 = 64HIto32(t14)
   87 | t79 = ReinterpI32asF32(t78)
   88 | t80 = NegF32(t79)
   89 | t81 = 64HIto32(t13)
   90 | t82 = ReinterpI32asF32(t81)
   91 | t83 = 64HIto32(t12)
   92 | t84 = ReinterpI32asF32(t83)
   93 | t85 = MAddF32(0x00000000,t84,t82,t80)
   94 | t86 = NegF32(t85)
   95 | PUT(284) = t86
   96 | PUT(pc) = 0x0000000000400005
   97 | ------ IMark(0x400005, 1, 0) ------
   98 | t87 = GET:I64(rsp)
   99 | t88 = LDle:I64(t87)
   100 | t89 = Add64(t87,0x0000000000000008)
   101 | PUT(rsp) = t89
   102 | t90 = Sub64(t89,0x0000000000000080)
   103 | ====== AbiHint(0xt90, 128, t88) ======
   NEXT: PUT(rip) = t88; Ijk_Ret
}
WARNING | 2018-04-08 20:48:47,451 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:47,471 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:47,510 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtss2sd_xmm_xmm_xmm/vcvtss2sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm3)
   02 | t1 = F32toF64(t0)
   03 | PUT(ymm1) = t1
   04 | t2 = GET:I64(296)
   05 | PUT(264) = t2
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t3 = GET:I64(rsp)
   10 | t4 = LDle:I64(t3)
   11 | t5 = Add64(t3,0x0000000000000008)
   12 | PUT(rsp) = t5
   13 | t6 = Sub64(t5,0x0000000000000080)
   14 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:41,282 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:41,305 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:41,312 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddusw_xmm_xmm_xmm/vpaddusw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QAdd16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:04,582 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:04,607 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:04,650 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarl_r32_one/sarl_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Sto64(t1)
   04 | t3 = Sar64(t2,0x01)
   05 | PUT(cc_op) = 0x0000000000000023
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = t2
   08 | t4 = 64to32(t3)
   09 | t5 = 32Uto64(t4)
   10 | PUT(rbx) = t5
   11 | PUT(pc) = 0x0000000000400002
   12 | ------ IMark(0x400002, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:56,821 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:56,846 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:56,861 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorb_r8_one/rorb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = Shl8(t0,0x07)
   03 | t2 = Shr8(t0,0x01)
   04 | t3 = Or8(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x0000000000000029
   11 | t9 = 8Uto64(t3)
   12 | PUT(cc_dep1) = t9
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = t8
   15 | PUT(bl) = t3
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:49:15,689 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:15,713 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:15,738 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub231pd_xmm_xmm_xmm/vfnmsub231pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | t10 = NegF64(t9)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t0)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V128HIto64(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | t18 = NegF64(t17)
   21 | PUT(264) = t18
   22 | PUT(272) = 0
   23 | PUT(pc) = 0x0000000000400005
   24 | ------ IMark(0x400005, 1, 0) ------
   25 | t19 = GET:I64(rsp)
   26 | t20 = LDle:I64(t19)
   27 | t21 = Add64(t19,0x0000000000000008)
   28 | PUT(rsp) = t21
   29 | t22 = Sub64(t21,0x0000000000000080)
   30 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:47:33,395 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:33,417 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:33,432 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaxub_xmm_xmm/pmaxub_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:57,215 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:57,318 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,402 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvttss2sil_r32_xmm/cvttss2sil_r32_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = F32toF64(t0)
   03 | t2 = F64toI32S(0x00000003,t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:46,175 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:46,192 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:46,200 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsd2ss_xmm_xmm_xmm/vcvtsd2ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I32 t3:Ity_F64 t4:Ity_F32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(sseround)
   02 | t1 = And64(t0,0x0000000000000003)
   03 | t2 = 64to32(t1)
   04 | t3 = GET:F64(ymm3)
   05 | t4 = F64toF32(t2,t3)
   06 | PUT(ymm1) = t4
   07 | t5 = GET:I32(292)
   08 | PUT(260) = t5
   09 | t6 = GET:I64(296)
   10 | PUT(264) = t6
   11 | PUT(272) = 0
   12 | PUT(pc) = 0x0000000000400004
   13 | ------ IMark(0x400004, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:38,799 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:38,819 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:38,845 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnel_r32_r32/cmovnel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000005,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:54,797 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:54,856 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:54,891 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd213sd_xmm_xmm_xmm/vfmadd213sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = MAddF64(0x00000000,t1,t0,t2)
   05 | PUT(ymm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:15,141 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:15,164 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:15,188 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub231ss_xmm_xmm_xmm/vfnmsub231ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = MAddF32(0x00000000,t1,t2,t0)
   05 | t4 = NegF32(t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,262 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:33,441 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:33,489 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btq_r64_r64/btq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rsp)
   03 | t2 = Sub64(t1,0x0000000000000120)
   04 | PUT(rsp) = t2
   05 | t3 = GET:I64(rbx)
   06 | STle(t2) = t3
   07 | t4 = And64(t0,0x000000000000003f)
   08 | t5 = Sar64(t4,0x03)
   09 | t6 = Add64(t2,t5)
   10 | t7 = And64(t4,0x0000000000000007)
   11 | t8 = 64to8(t7)
   12 | t9 = LDle:I8(t6)
   13 | PUT(cc_op) = 0x0000000000000000
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | t10 = 8Uto64(t9)
   16 | t11 = Shr64(t10,t8)
   17 | t12 = And64(t11,0x0000000000000001)
   18 | PUT(cc_dep1) = t12
   19 | PUT(cc_ndep) = 0x0000000000000000
   20 | t13 = Add64(t2,0x0000000000000120)
   21 | PUT(rsp) = t13
   22 | PUT(pc) = 0x0000000000400004
   23 | ------ IMark(0x400004, 1, 0) ------
   24 | t14 = LDle:I64(t13)
   25 | t15 = Add64(t13,0x0000000000000008)
   26 | PUT(rsp) = t15
   27 | t16 = Sub64(t15,0x0000000000000080)
   28 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:48:02,632 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:02,662 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:02,682 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sall_r32_cl/sall_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I32 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I8(cl)
   04 | t3 = And8(t2,0x1f)
   05 | t4 = 32Uto64(t1)
   06 | t5 = Shl64(t4,t3)
   07 | t6 = Sub8(t3,0x01)
   08 | t7 = And8(t6,0x1f)
   09 | t8 = Shl64(t4,t7)
   10 | t9 = CmpNE8(t3,0x00)
   11 | t10 = GET:I64(cc_op)
   12 | t11 = ITE(t9,0x000000000000001f,t10)
   13 | PUT(cc_op) = t11
   14 | t12 = GET:I64(cc_dep1)
   15 | t13 = ITE(t9,t5,t12)
   16 | PUT(cc_dep1) = t13
   17 | t14 = GET:I64(cc_dep2)
   18 | t15 = ITE(t9,t8,t14)
   19 | PUT(cc_dep2) = t15
   20 | t16 = 64to32(t5)
   21 | t17 = 32Uto64(t16)
   22 | PUT(rbx) = t17
   23 | PUT(pc) = 0x0000000000400002
   24 | ------ IMark(0x400002, 1, 0) ------
   25 | t18 = GET:I64(rsp)
   26 | t19 = LDle:I64(t18)
   27 | t20 = Add64(t18,0x0000000000000008)
   28 | PUT(rsp) = t20
   29 | t21 = Sub64(t20,0x0000000000000080)
   30 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:50:34,570 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:34,583 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:34,589 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhdq_xmm_xmm_xmm/vpunpckhdq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveHI32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:09,350 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:09,400 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:09,417 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd231pd_ymm_ymm_ymm/vfnmadd231pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_F64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_F64 t35:Ity_I64 t36:Ity_F64 t37:Ity_F64 t38:Ity_F64 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | t11 = NegF64(t10)
   13 | PUT(ymm1) = t11
   14 | t12 = V256to64_1(t0)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = NegF64(t13)
   17 | t15 = V256to64_1(t2)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = V256to64_1(t1)
   20 | t18 = ReinterpI64asF64(t17)
   21 | t19 = MAddF64(0x00000000,t18,t16,t14)
   22 | t20 = NegF64(t19)
   23 | PUT(264) = t20
   24 | t21 = V256to64_2(t0)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = NegF64(t22)
   27 | t24 = V256to64_2(t2)
   28 | t25 = ReinterpI64asF64(t24)
   29 | t26 = V256to64_2(t1)
   30 | t27 = ReinterpI64asF64(t26)
   31 | t28 = MAddF64(0x00000000,t27,t25,t23)
   32 | t29 = NegF64(t28)
   33 | PUT(272) = t29
   34 | t30 = V256to64_3(t0)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = NegF64(t31)
   37 | t33 = V256to64_3(t2)
   38 | t34 = ReinterpI64asF64(t33)
   39 | t35 = V256to64_3(t1)
   40 | t36 = ReinterpI64asF64(t35)
   41 | t37 = MAddF64(0x00000000,t36,t34,t32)
   42 | t38 = NegF64(t37)
   43 | PUT(280) = t38
   44 | PUT(pc) = 0x0000000000400005
   45 | ------ IMark(0x400005, 1, 0) ------
   46 | t39 = GET:I64(rsp)
   47 | t40 = LDle:I64(t39)
   48 | t41 = Add64(t39,0x0000000000000008)
   49 | PUT(rsp) = t41
   50 | t42 = Sub64(t41,0x0000000000000080)
   51 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:50:40,357 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:40,374 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:40,383 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vrsqrtps_xmm_xmm/vrsqrtps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = RSqrtEst32Fx4(t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:49:11,574 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:11,602 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:11,641 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub132sd_xmm_xmm_xmm/vfnmsub132sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = MAddF64(0x00000000,t0,t2,t1)
   05 | t4 = NegF64(t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,645 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,752 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,818 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnpl_r32_r32/cmovnpl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000b,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,494 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,667 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,722 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpol_r32_r32/cmovpol_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000b,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:43,049 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:43,072 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:43,081 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpavgb_ymm_ymm_ymm/vpavgb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Avg8Ux32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:30,913 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:30,931 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:30,977 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phaddd_xmm_xmm/phaddd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = InterleaveHI32x2(t2,t3)
   08 | t7 = InterleaveLO32x2(t2,t3)
   09 | t8 = Add32x2(t7,t6)
   10 | t9 = InterleaveHI32x2(t4,t5)
   11 | t10 = InterleaveLO32x2(t4,t5)
   12 | t11 = Add32x2(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:20,552 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:20,618 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:20,653 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/notl_r32/notl_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Not32(t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400002
   07 | ------ IMark(0x400002, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:16,541 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:16,589 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:16,614 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulld_ymm_ymm_ymm/vpmulld_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Mul32x8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,864 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:38,054 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:38,113 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovgq_r64_r64/cmovgq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000f,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:35,597 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:35,772 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:35,891 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmoval_r32_r32/cmoval_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000007,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:01,901 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:01,916 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:01,928 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub231pd_ymm_ymm_ymm/vfmsub231pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_I64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_F64 t22:Ity_I64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_F64 t27:Ity_I64 t28:Ity_F64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_I64 t33:Ity_F64 t34:Ity_F64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t0)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = NegF64(t12)
   16 | t14 = V256to64_1(t2)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = V256to64_1(t1)
   19 | t17 = ReinterpI64asF64(t16)
   20 | t18 = MAddF64(0x00000000,t17,t15,t13)
   21 | PUT(264) = t18
   22 | t19 = V256to64_2(t0)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = NegF64(t20)
   25 | t22 = V256to64_2(t2)
   26 | t23 = ReinterpI64asF64(t22)
   27 | t24 = V256to64_2(t1)
   28 | t25 = ReinterpI64asF64(t24)
   29 | t26 = MAddF64(0x00000000,t25,t23,t21)
   30 | PUT(272) = t26
   31 | t27 = V256to64_3(t0)
   32 | t28 = ReinterpI64asF64(t27)
   33 | t29 = NegF64(t28)
   34 | t30 = V256to64_3(t2)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = V256to64_3(t1)
   37 | t33 = ReinterpI64asF64(t32)
   38 | t34 = MAddF64(0x00000000,t33,t31,t29)
   39 | PUT(280) = t34
   40 | PUT(pc) = 0x0000000000400005
   41 | ------ IMark(0x400005, 1, 0) ------
   42 | t35 = GET:I64(rsp)
   43 | t36 = LDle:I64(t35)
   44 | t37 = Add64(t35,0x0000000000000008)
   45 | PUT(rsp) = t37
   46 | t38 = Sub64(t37,0x0000000000000080)
   47 | ====== AbiHint(0xt38, 128, t36) ======
   NEXT: PUT(rip) = t36; Ijk_Ret
}
WARNING | 2018-04-08 20:50:18,574 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:18,596 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:18,629 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpor_xmm_xmm_xmm/vpor_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = OrV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:31,845 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:31,868 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:31,889 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pdepl_r32_r32_r32/pdepl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rdx)
   04 | t3 = 64to32(t2)
   05 | t4 = 32Uto64(t1)
   06 | t5 = 32Uto64(t3)
   07 | t6 = amd64g_calculate_pdep(t4,t5):Ity_I64
   08 | t7 = 64to32(t6)
   09 | t8 = 32Uto64(t7)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400005
   12 | ------ IMark(0x400005, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:15,875 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:15,887 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:15,894 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub231ps_xmm_xmm_xmm/vfnmsub231ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t0)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | t16 = NegF32(t15)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | t24 = NegF32(t23)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | t32 = NegF32(t31)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = 64HIto32(t7)
   40 | t36 = ReinterpI32asF32(t35)
   41 | t37 = 64HIto32(t6)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = MAddF32(0x00000000,t38,t36,t34)
   44 | t40 = NegF32(t39)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:47:12,168 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,271 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:12,344 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movsd_xmm_xmm/movsd_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:46:39,040 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:39,191 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:39,300 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnael_r32_r32/cmovnael_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000002,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:25,984 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:26,009 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:26,026 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlxl_r32_r32_r32/shlxl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I8 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = And32(t1,0x0000001f)
   06 | t5 = 32to8(t4)
   07 | t6 = Shl32(t3,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:50:31,151 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:31,163 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:31,171 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubsw_ymm_ymm_ymm/vpsubsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QSub16Sx16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:56,978 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:56,997 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:57,018 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/roll_r32_one/roll_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Shr32(t1,0x1f)
   04 | t3 = Shl32(t1,0x01)
   05 | t4 = Or32(t3,t2)
   06 | t5 = GET:I64(cc_op)
   07 | t6 = GET:I64(cc_dep1)
   08 | t7 = GET:I64(cc_dep2)
   09 | t8 = GET:I64(cc_ndep)
   10 | t9 = amd64g_calculate_rflags_all(t5,t6,t7,t8):Ity_I64
   11 | PUT(cc_op) = 0x0000000000000027
   12 | t10 = 32Uto64(t4)
   13 | PUT(cc_dep1) = t10
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = t9
   16 | t11 = 32Uto64(t4)
   17 | PUT(rbx) = t11
   18 | PUT(pc) = 0x0000000000400002
   19 | ------ IMark(0x400002, 1, 0) ------
   20 | t12 = GET:I64(rsp)
   21 | t13 = LDle:I64(t12)
   22 | t14 = Add64(t12,0x0000000000000008)
   23 | PUT(rsp) = t14
   24 | t15 = Sub64(t14,0x0000000000000080)
   25 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:14,292 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:14,353 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:14,422 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movw_r16_r16/movw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(cx)
   02 | PUT(bx) = t0
   03 | PUT(pc) = 0x0000000000400003
   04 | ------ IMark(0x400003, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:46:40,224 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,315 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,386 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovncl_r32_r32/cmovncl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000003,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:24,189 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:24,216 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:24,265 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlb_rh_one/shlb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Uto64(t0)
   03 | t2 = Shl64(t1,0x01)
   04 | PUT(cc_op) = 0x000000000000001d
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(ah) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:02,227 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:02,259 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:02,288 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxuw_xmm_xmm_xmm/vpmaxuw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:05,692 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:05,711 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:05,721 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd231pd_ymm_ymm_ymm/vfmsubadd231pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_F64 t20:Ity_I64 t21:Ity_F64 t22:Ity_I64 t23:Ity_F64 t24:Ity_F64 t25:Ity_I64 t26:Ity_F64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V256to64_1(t0)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = NegF64(t11)
   15 | t13 = V256to64_1(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | t18 = V256to64_2(t0)
   22 | t19 = ReinterpI64asF64(t18)
   23 | t20 = V256to64_2(t2)
   24 | t21 = ReinterpI64asF64(t20)
   25 | t22 = V256to64_2(t1)
   26 | t23 = ReinterpI64asF64(t22)
   27 | t24 = MAddF64(0x00000000,t23,t21,t19)
   28 | PUT(272) = t24
   29 | t25 = V256to64_3(t0)
   30 | t26 = ReinterpI64asF64(t25)
   31 | t27 = NegF64(t26)
   32 | t28 = V256to64_3(t2)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = V256to64_3(t1)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = MAddF64(0x00000000,t31,t29,t27)
   37 | PUT(280) = t32
   38 | PUT(pc) = 0x0000000000400005
   39 | ------ IMark(0x400005, 1, 0) ------
   40 | t33 = GET:I64(rsp)
   41 | t34 = LDle:I64(t33)
   42 | t35 = Add64(t33,0x0000000000000008)
   43 | PUT(rsp) = t35
   44 | t36 = Sub64(t35,0x0000000000000080)
   45 | ====== AbiHint(0xt36, 128, t34) ======
   NEXT: PUT(rip) = t34; Ijk_Ret
}
WARNING | 2018-04-08 20:48:03,392 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:03,431 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:03,485 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarq_r64_one/sarq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Sar64(t0,0x01)
   03 | PUT(cc_op) = 0x0000000000000024
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | PUT(rbx) = t1
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t2 = GET:I64(rsp)
   10 | t3 = LDle:I64(t2)
   11 | t4 = Add64(t2,0x0000000000000008)
   12 | PUT(rsp) = t4
   13 | t5 = Sub64(t4,0x0000000000000080)
   14 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:57,937 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:57,967 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:57,984 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolw_r16_cl/rolw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I16 t6:Ity_I16 t7:Ity_I16 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = And8(t2,0x0f)
   05 | t4 = Sub8(0x10,t3)
   06 | t5 = Shr16(t0,t4)
   07 | t6 = Shl16(t0,t3)
   08 | t7 = Or16(t6,t5)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = GET:I64(cc_dep1)
   11 | t10 = GET:I64(cc_dep2)
   12 | t11 = GET:I64(cc_ndep)
   13 | t12 = amd64g_calculate_rflags_all(t8,t9,t10,t11):Ity_I64
   14 | t13 = CmpNE8(t2,0x00)
   15 | t14 = ITE(t13,0x0000000000000026,t8)
   16 | PUT(cc_op) = t14
   17 | t15 = 16Uto64(t7)
   18 | t16 = ITE(t13,t15,t9)
   19 | PUT(cc_dep1) = t16
   20 | t17 = ITE(t13,0x0000000000000000,t10)
   21 | PUT(cc_dep2) = t17
   22 | t18 = ITE(t13,t12,t11)
   23 | PUT(cc_ndep) = t18
   24 | PUT(bx) = t7
   25 | PUT(pc) = 0x0000000000400003
   26 | ------ IMark(0x400003, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:47:52,749 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:52,829 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:52,870 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrb_rh_cl/rcrb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I8 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = GET:I8(cl)
   09 | t8 = 8Uto64(t7)
   10 | t9 = amd64g_calculate_RCR(t6,t8,t5,0x0000000000000001):Ity_I64
   11 | t10 = 8Uto64(t0)
   12 | t11 = 8Uto64(t7)
   13 | t12 = amd64g_calculate_RCR(t10,t11,t5,0xffffffffffffffff):Ity_I64
   14 | t13 = 64to8(t9)
   15 | PUT(cc_op) = 0x0000000000000000
   16 | PUT(cc_dep1) = t12
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(ah) = t13
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:50:08,644 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:08,664 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:08,675 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxbd_xmm_xmm/vpmovsxbd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = ShlN32x4(t2,0x18)
   05 | t4 = SarN32x4(t3,0x18)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:33,042 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:33,075 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:33,085 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaxsw_xmm_xmm/pmaxsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:35,932 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:35,951 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:35,961 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpabsw_ymm_ymm/vpabsw_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_V128 t33:Ity_V256 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = V256toV128_1(t0)
   03 | t2 = V256toV128_0(t0)
   04 | t3 = V128HIto64(t2)
   05 | t4 = V128to64(t2)
   06 | t5 = SarN16x4(t4,0x0f)
   07 | t6 = Not64(t5)
   08 | t7 = Sub16x4(0x0000000000000000,t4)
   09 | t8 = And64(t7,t5)
   10 | t9 = And64(t4,t6)
   11 | t10 = Or64(t9,t8)
   12 | t11 = SarN16x4(t3,0x0f)
   13 | t12 = Not64(t11)
   14 | t13 = Sub16x4(0x0000000000000000,t3)
   15 | t14 = And64(t13,t11)
   16 | t15 = And64(t3,t12)
   17 | t16 = Or64(t15,t14)
   18 | t17 = 64HLtoV128(t16,t10)
   19 | t18 = V128HIto64(t1)
   20 | t19 = V128to64(t1)
   21 | t20 = SarN16x4(t19,0x0f)
   22 | t21 = Not64(t20)
   23 | t22 = Sub16x4(0x0000000000000000,t19)
   24 | t23 = And64(t22,t20)
   25 | t24 = And64(t19,t21)
   26 | t25 = Or64(t24,t23)
   27 | t26 = SarN16x4(t18,0x0f)
   28 | t27 = Not64(t26)
   29 | t28 = Sub16x4(0x0000000000000000,t18)
   30 | t29 = And64(t28,t26)
   31 | t30 = And64(t18,t27)
   32 | t31 = Or64(t30,t29)
   33 | t32 = 64HLtoV128(t31,t25)
   34 | t33 = V128HLtoV256(t32,t17)
   35 | PUT(ymm1) = t33
   36 | PUT(pc) = 0x0000000000400005
   37 | ------ IMark(0x400005, 1, 0) ------
   38 | t34 = GET:I64(rsp)
   39 | t35 = LDle:I64(t34)
   40 | t36 = Add64(t34,0x0000000000000008)
   41 | PUT(rsp) = t36
   42 | t37 = Sub64(t36,0x0000000000000080)
   43 | ====== AbiHint(0xt37, 128, t35) ======
   NEXT: PUT(rip) = t35; Ijk_Ret
}
WARNING | 2018-04-08 20:48:17,451 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:17,481 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:17,495 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnp_rh/setnp_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000b,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:39,207 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:39,254 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:39,345 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovneq_r64_r64/cmovneq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000005,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:17,432 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:17,449 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:17,458 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhsubps_xmm_xmm_xmm/vhsubps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V128 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = V128to64(t1)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = 32HLto64(t12,t10)
   16 | t15 = 32HLto64(t6,t4)
   17 | t16 = 64HLtoV128(t15,t14)
   18 | t17 = 32HLto64(t13,t11)
   19 | t18 = 32HLto64(t7,t5)
   20 | t19 = 64HLtoV128(t18,t17)
   21 | t20 = Sub32Fx4(0x00000000,t16,t19)
   22 | PUT(xmm1) = t20
   23 | PUT(272) = 0
   24 | PUT(pc) = 0x0000000000400004
   25 | ------ IMark(0x400004, 1, 0) ------
   26 | t21 = GET:I64(rsp)
   27 | t22 = LDle:I64(t21)
   28 | t23 = Add64(t21,0x0000000000000008)
   29 | PUT(rsp) = t23
   30 | t24 = Sub64(t23,0x0000000000000080)
   31 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:47:41,984 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,008 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,045 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psignd_xmm_xmm/psignd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_V128 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = Sub32x2(0x0000000000000000,t3)
   08 | t7 = CmpGT32Sx2(0x0000000000000000,t5)
   09 | t8 = CmpGT32Sx2(t5,0x0000000000000000)
   10 | t9 = Sub32x2(0x0000000000000000,t2)
   11 | t10 = CmpGT32Sx2(0x0000000000000000,t4)
   12 | t11 = CmpGT32Sx2(t4,0x0000000000000000)
   13 | t12 = And64(t6,t7)
   14 | t13 = And64(t3,t8)
   15 | t14 = Or64(t13,t12)
   16 | t15 = And64(t9,t10)
   17 | t16 = And64(t2,t11)
   18 | t17 = Or64(t16,t15)
   19 | t18 = 64HLtoV128(t17,t14)
   20 | PUT(xmm1) = t18
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t19 = GET:I64(rsp)
   24 | t20 = LDle:I64(t19)
   25 | t21 = Add64(t19,0x0000000000000008)
   26 | PUT(rsp) = t21
   27 | t22 = Sub64(t21,0x0000000000000080)
   28 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:48:38,897 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:38,914 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:38,922 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandnpd_ymm_ymm_ymm/vandnpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = NotV256(t0)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = AndV256(t1,t2)
   05 | PUT(ymm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:19,528 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:19,548 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:19,595 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnp_r8/setnp_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000b,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:47,341 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:47,353 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:47,360 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpcklps_ymm_ymm_ymm/vunpcklps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_V128 t15:Ity_I64 t16:Ity_I32 t17:Ity_I32 t18:Ity_I64 t19:Ity_I32 t20:Ity_I32 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128to64(t4)
   08 | t7 = 64to32(t6)
   09 | t8 = 64HIto32(t6)
   10 | t9 = V128to64(t2)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 32HLto64(t10,t7)
   14 | t13 = 32HLto64(t11,t8)
   15 | t14 = 64HLtoV128(t13,t12)
   16 | t15 = V128to64(t5)
   17 | t16 = 64to32(t15)
   18 | t17 = 64HIto32(t15)
   19 | t18 = V128to64(t3)
   20 | t19 = 64to32(t18)
   21 | t20 = 64HIto32(t18)
   22 | t21 = 32HLto64(t19,t16)
   23 | t22 = 32HLto64(t20,t17)
   24 | t23 = 64HLtoV128(t22,t21)
   25 | t24 = V128HLtoV256(t14,t23)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400004
   28 | ------ IMark(0x400004, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,075 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,127 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:56,202 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtss2siq_r64_xmm/cvtss2siq_r64_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F32toF64(t0)
   06 | t5 = F64toI64S(t3,t4)
   07 | PUT(rbx) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:16,746 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:16,765 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:16,777 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhaddps_ymm_ymm_ymm/vhaddps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_I32 t15:Ity_I32 t16:Ity_I32 t17:Ity_I32 t18:Ity_I64 t19:Ity_I64 t20:Ity_V128 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V128 t25:Ity_I64 t26:Ity_I64 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I64 t32:Ity_I64 t33:Ity_I32 t34:Ity_I32 t35:Ity_I32 t36:Ity_I32 t37:Ity_I64 t38:Ity_I64 t39:Ity_V128 t40:Ity_I64 t41:Ity_I64 t42:Ity_V128 t43:Ity_V128 t44:Ity_V256 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128HIto64(t5)
   08 | t7 = V128to64(t5)
   09 | t8 = 64to32(t7)
   10 | t9 = 64HIto32(t7)
   11 | t10 = 64to32(t6)
   12 | t11 = 64HIto32(t6)
   13 | t12 = V128HIto64(t3)
   14 | t13 = V128to64(t3)
   15 | t14 = 64to32(t13)
   16 | t15 = 64HIto32(t13)
   17 | t16 = 64to32(t12)
   18 | t17 = 64HIto32(t12)
   19 | t18 = 32HLto64(t16,t14)
   20 | t19 = 32HLto64(t10,t8)
   21 | t20 = 64HLtoV128(t19,t18)
   22 | t21 = 32HLto64(t17,t15)
   23 | t22 = 32HLto64(t11,t9)
   24 | t23 = 64HLtoV128(t22,t21)
   25 | t24 = Add32Fx4(0x00000000,t20,t23)
   26 | t25 = V128HIto64(t4)
   27 | t26 = V128to64(t4)
   28 | t27 = 64to32(t26)
   29 | t28 = 64HIto32(t26)
   30 | t29 = 64to32(t25)
   31 | t30 = 64HIto32(t25)
   32 | t31 = V128HIto64(t2)
   33 | t32 = V128to64(t2)
   34 | t33 = 64to32(t32)
   35 | t34 = 64HIto32(t32)
   36 | t35 = 64to32(t31)
   37 | t36 = 64HIto32(t31)
   38 | t37 = 32HLto64(t35,t33)
   39 | t38 = 32HLto64(t29,t27)
   40 | t39 = 64HLtoV128(t38,t37)
   41 | t40 = 32HLto64(t36,t34)
   42 | t41 = 32HLto64(t30,t28)
   43 | t42 = 64HLtoV128(t41,t40)
   44 | t43 = Add32Fx4(0x00000000,t39,t42)
   45 | t44 = V128HLtoV256(t43,t24)
   46 | PUT(ymm1) = t44
   47 | PUT(pc) = 0x0000000000400004
   48 | ------ IMark(0x400004, 1, 0) ------
   49 | t45 = GET:I64(rsp)
   50 | t46 = LDle:I64(t45)
   51 | t47 = Add64(t45,0x0000000000000008)
   52 | PUT(rsp) = t47
   53 | t48 = Sub64(t47,0x0000000000000080)
   54 | ====== AbiHint(0xt48, 128, t46) ======
   NEXT: PUT(rip) = t46; Ijk_Ret
}
WARNING | 2018-04-08 20:48:21,650 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:21,669 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:21,689 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setpe_rh/setpe_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000a,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:53,690 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:53,708 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:53,719 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd231ps_xmm_xmm_xmm/vfmadd231ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_I32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t0)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | PUT(ymm1) = t15
   18 | t16 = 64HIto32(t5)
   19 | t17 = ReinterpI32asF32(t16)
   20 | t18 = 64HIto32(t4)
   21 | t19 = ReinterpI32asF32(t18)
   22 | t20 = 64HIto32(t3)
   23 | t21 = ReinterpI32asF32(t20)
   24 | t22 = MAddF32(0x00000000,t21,t19,t17)
   25 | PUT(260) = t22
   26 | t23 = 64to32(t8)
   27 | t24 = ReinterpI32asF32(t23)
   28 | t25 = 64to32(t7)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t6)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = MAddF32(0x00000000,t28,t26,t24)
   33 | PUT(264) = t29
   34 | t30 = 64HIto32(t8)
   35 | t31 = ReinterpI32asF32(t30)
   36 | t32 = 64HIto32(t7)
   37 | t33 = ReinterpI32asF32(t32)
   38 | t34 = 64HIto32(t6)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = MAddF32(0x00000000,t35,t33,t31)
   41 | PUT(268) = t36
   42 | PUT(272) = 0
   43 | PUT(pc) = 0x0000000000400005
   44 | ------ IMark(0x400005, 1, 0) ------
   45 | t37 = GET:I64(rsp)
   46 | t38 = LDle:I64(t37)
   47 | t39 = Add64(t37,0x0000000000000008)
   48 | PUT(rsp) = t39
   49 | t40 = Sub64(t39,0x0000000000000080)
   50 | ====== AbiHint(0xt40, 128, t38) ======
   NEXT: PUT(rip) = t38; Ijk_Ret
}
WARNING | 2018-04-08 20:47:46,005 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:46,064 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:46,101 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubusw_xmm_xmm/psubusw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QSub16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:50,485 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:50,503 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:50,518 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtq_xmm_xmm_xmm/vpcmpgtq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpGT64Sx2(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:38,842 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:38,878 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,926 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovsxbw_xmm_xmm/pmovsxbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = ShlN16x8(t1,0x08)
   04 | t3 = SarN16x8(t2,0x08)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:11,894 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:11,914 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:11,963 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setle_r8/setle_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000e,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:29,740 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:29,903 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:30,082 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andw_r16_r16/andw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = And16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000012
   05 | t3 = 16Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bx) = t2
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:41,986 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:42,004 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:42,032 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpandn_xmm_xmm_xmm/vpandn_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = NotV128(t0)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = AndV128(t1,t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:18,316 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:18,339 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:18,374 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulsd_xmm_xmm/mulsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Mul64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:06,596 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:06,636 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:06,646 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovmskb_r32_xmm/vpmovmskb_r32_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GetMSBs8x16(t0)
   03 | t2 = 16Uto32(t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:52,046 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,151 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:52,191 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/comisd_xmm_xmm/comisd_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm2)
   02 | t1 = GET:F64(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = CmpF64(t1,t0)
   06 | t3 = 32Uto64(t2)
   07 | t4 = And64(t3,0x0000000000000045)
   08 | PUT(cc_dep1) = t4
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t5 = GET:I64(rsp)
   12 | t6 = LDle:I64(t5)
   13 | t7 = Add64(t5,0x0000000000000008)
   14 | PUT(rsp) = t7
   15 | t8 = Sub64(t7,0x0000000000000080)
   16 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:30,615 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:30,636 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:30,652 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubsw_xmm_xmm_xmm/vpsubsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QSub16Sx8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:26,610 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:26,649 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:26,674 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlvd_xmm_xmm_xmm/vpsrlvd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I8 t15:Ity_I32 t16:Ity_I1 t17:Ity_I32 t18:Ity_I8 t19:Ity_I32 t20:Ity_I1 t21:Ity_I32 t22:Ity_I8 t23:Ity_I32 t24:Ity_I1 t25:Ity_I32 t26:Ity_I8 t27:Ity_I32 t28:Ity_I1 t29:Ity_I32 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t1)
   04 | t3 = V128to64(t1)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = V128to64(t0)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = 32to8(t10)
   16 | t15 = Shr32(t4,t14)
   17 | t16 = CmpLT32U(t10,0x00000020)
   18 | t17 = ITE(t16,t15,0x00000000)
   19 | t18 = 32to8(t11)
   20 | t19 = Shr32(t5,t18)
   21 | t20 = CmpLT32U(t11,0x00000020)
   22 | t21 = ITE(t20,t19,0x00000000)
   23 | t22 = 32to8(t12)
   24 | t23 = Shr32(t6,t22)
   25 | t24 = CmpLT32U(t12,0x00000020)
   26 | t25 = ITE(t24,t23,0x00000000)
   27 | t26 = 32to8(t13)
   28 | t27 = Shr32(t7,t26)
   29 | t28 = CmpLT32U(t13,0x00000020)
   30 | t29 = ITE(t28,t27,0x00000000)
   31 | PUT(ymm1) = t17
   32 | PUT(260) = t21
   33 | PUT(264) = t25
   34 | PUT(268) = t29
   35 | PUT(272) = 0x00000000
   36 | PUT(276) = 0x00000000
   37 | PUT(280) = 0x00000000
   38 | PUT(284) = 0x00000000
   39 | PUT(pc) = 0x0000000000400005
   40 | ------ IMark(0x400005, 1, 0) ------
   41 | t30 = GET:I64(rsp)
   42 | t31 = LDle:I64(t30)
   43 | t32 = Add64(t30,0x0000000000000008)
   44 | PUT(rsp) = t32
   45 | t33 = Sub64(t32,0x0000000000000080)
   46 | ====== AbiHint(0xt33, 128, t31) ======
   NEXT: PUT(rip) = t31; Ijk_Ret
}
WARNING | 2018-04-08 20:49:21,335 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:21,359 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:21,367 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovddup_xmm_xmm/vmovddup_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128to64(t0)
   03 | t2 = 64HLtoV128(t1,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:20,568 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:20,674 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:20,707 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/notb_rh/notb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = Not8(t0)
   03 | PUT(ah) = t1
   04 | PUT(pc) = 0x0000000000400002
   05 | ------ IMark(0x400002, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:48,864 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:48,876 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:48,883 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vxorpd_ymm_ymm_ymm/vxorpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = XorV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:38,872 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:39,034 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:39,098 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovlw_r16_r16/cmovlw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000c,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:07,070 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:07,098 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:07,130 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/minsd_xmm_xmm/minsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:38,864 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:38,906 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,938 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovsxwd_xmm_xmm/pmovsxwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = ShlN32x4(t1,0x10)
   04 | t3 = SarN32x4(t2,0x10)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:03,670 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:03,726 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:03,801 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divps_xmm_xmm/divps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Div32Fx4(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:12,513 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,592 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:12,646 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movddup_xmm_xmm/movddup_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128to64(t0)
   03 | t2 = 64HLtoV128(t1,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:52,737 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:52,763 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:52,783 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgl_eax_r32/xchgl_eax_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = 32Uto64(t3)
   06 | PUT(rax) = t4
   07 | t5 = 32Uto64(t1)
   08 | PUT(rbx) = t5
   09 | PUT(pc) = 0x0000000000400001
   10 | ------ IMark(0x400001, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:09,131 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:09,148 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:09,183 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd213ss_xmm_xmm_xmm/vfnmadd213ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_F32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = NegF32(t2)
   05 | t4 = MAddF32(0x00000000,t1,t0,t3)
   06 | t5 = NegF32(t4)
   07 | PUT(ymm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:48,632 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:48,678 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:48,689 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vzeroupper/vzeroupper.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | PUT(240) = 0
   02 | PUT(272) = 0
   03 | PUT(304) = 0
   04 | PUT(336) = 0
   05 | PUT(368) = 0
   06 | PUT(400) = 0
   07 | PUT(432) = 0
   08 | PUT(464) = 0
   09 | PUT(496) = 0
   10 | PUT(528) = 0
   11 | PUT(560) = 0
   12 | PUT(592) = 0
   13 | PUT(624) = 0
   14 | PUT(656) = 0
   15 | PUT(688) = 0
   16 | PUT(720) = 0
   17 | PUT(pc) = 0x0000000000400003
   18 | ------ IMark(0x400003, 1, 0) ------
   19 | t0 = GET:I64(rsp)
   20 | t1 = LDle:I64(t0)
   21 | t2 = Add64(t0,0x0000000000000008)
   22 | PUT(rsp) = t2
   23 | t3 = Sub64(t2,0x0000000000000080)
   24 | ====== AbiHint(0xt3, 128, t1) ======
   NEXT: PUT(rip) = t1; Ijk_Ret
}
WARNING | 2018-04-08 20:50:45,666 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:45,701 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:45,713 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpckhps_xmm_xmm_xmm/vunpckhps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_V128 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = V128HIto64(t1)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 32HLto64(t6,t3)
   10 | t9 = 32HLto64(t7,t4)
   11 | t10 = 64HLtoV128(t9,t8)
   12 | PUT(xmm1) = t10
   13 | PUT(272) = 0
   14 | PUT(pc) = 0x0000000000400004
   15 | ------ IMark(0x400004, 1, 0) ------
   16 | t11 = GET:I64(rsp)
   17 | t12 = LDle:I64(t11)
   18 | t13 = Add64(t11,0x0000000000000008)
   19 | PUT(rsp) = t13
   20 | t14 = Sub64(t13,0x0000000000000080)
   21 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:49:26,381 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:26,401 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:26,413 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskpd_r64_xmm/vmovmskpd_r64_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(260)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(268)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = Or32(t2,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:04,089 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:04,104 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:04,115 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd213pd_xmm_xmm_xmm/vfmsubadd213pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t0)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V128HIto64(t2)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = NegF64(t11)
   15 | t13 = V128HIto64(t0)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t18 = GET:I64(rsp)
   25 | t19 = LDle:I64(t18)
   26 | t20 = Add64(t18,0x0000000000000008)
   27 | PUT(rsp) = t20
   28 | t21 = Sub64(t20,0x0000000000000080)
   29 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:49:39,458 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:39,489 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:39,497 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddsw_xmm_xmm_xmm/vpaddsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QAdd16Sx8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:09,579 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,641 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,670 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movmskpd_r32_xmm/movmskpd_r32_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(260)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(268)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = Or32(t2,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:46:46,212 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:46,301 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:46,402 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnaw_r16_r16/cmovnaw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000006,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:41,645 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:41,665 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:41,690 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vblendvps_ymm_ymm_ymm_ymm/vblendvps_ymm_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V256 t8:Ity_V256 t9:Ity_V256 t10:Ity_V256 t11:Ity_V256 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 6, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm4)
   04 | t3 = V256toV128_1(t2)
   05 | t4 = V256toV128_0(t2)
   06 | t5 = SarN32x4(t4,0x1f)
   07 | t6 = SarN32x4(t3,0x1f)
   08 | t7 = V128HLtoV256(t6,t5)
   09 | t8 = NotV256(t7)
   10 | t9 = AndV256(t1,t8)
   11 | t10 = AndV256(t0,t7)
   12 | t11 = OrV256(t10,t9)
   13 | PUT(ymm1) = t11
   14 | PUT(pc) = 0x0000000000400006
   15 | ------ IMark(0x400006, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:50,623 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:50,640 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:50,673 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclw_r16_one/rclw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I16 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 16Uto64(t0)
   08 | t7 = amd64g_calculate_RCL(t6,0x0000000000000001,t5,0x0000000000000002):Ity_I64
   09 | t8 = 16Uto64(t0)
   10 | t9 = amd64g_calculate_RCL(t8,0x0000000000000001,t5,0xfffffffffffffffe):Ity_I64
   11 | t10 = 64to16(t7)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t9
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(bx) = t10
   17 | PUT(pc) = 0x0000000000400003
   18 | ------ IMark(0x400003, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:49:58,411 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:58,433 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:58,443 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaddwd_ymm_ymm_ymm/vpmaddwd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V256 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = V128to64(t5)
   08 | t7 = V128HIto64(t5)
   09 | t8 = V128to64(t3)
   10 | t9 = V128HIto64(t3)
   11 | t10 = amd64g_calculate_mmx_pmaddwd(t7,t9):Ity_I64
   12 | t11 = amd64g_calculate_mmx_pmaddwd(t6,t8):Ity_I64
   13 | t12 = 64HLtoV128(t10,t11)
   14 | t13 = V128to64(t4)
   15 | t14 = V128HIto64(t4)
   16 | t15 = V128to64(t2)
   17 | t16 = V128HIto64(t2)
   18 | t17 = amd64g_calculate_mmx_pmaddwd(t14,t16):Ity_I64
   19 | t18 = amd64g_calculate_mmx_pmaddwd(t13,t15):Ity_I64
   20 | t19 = 64HLtoV128(t17,t18)
   21 | t20 = V128HLtoV256(t19,t12)
   22 | PUT(ymm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:50:06,989 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:07,001 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:07,008 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminuw_ymm_ymm_ymm/vpminuw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Min16Ux16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:23,376 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:23,405 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:23,426 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovd_xmm_r32/vmovd_xmm_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32UtoV128(t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:35,669 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:35,841 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:35,978 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnbel_r32_r32/cmovnbel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000007,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:31,087 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:31,131 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:31,140 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmulsd_xmm_xmm_xmm/vmulsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Mul64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:48,544 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:48,577 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:48,588 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsi2ssq_xmm_xmm_r64/vcvtsi2ssq_xmm_xmm_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I32 t3:Ity_I64 t4:Ity_F64 t5:Ity_F32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(sseround)
   02 | t1 = And64(t0,0x0000000000000003)
   03 | t2 = 64to32(t1)
   04 | t3 = GET:I64(rbx)
   05 | t4 = I64StoF64(t2,t3)
   06 | t5 = F64toF32(t2,t4)
   07 | PUT(ymm1) = t5
   08 | t6 = GET:I32(292)
   09 | PUT(260) = t6
   10 | t7 = GET:I64(296)
   11 | PUT(264) = t7
   12 | PUT(272) = 0
   13 | PUT(pc) = 0x0000000000400005
   14 | ------ IMark(0x400005, 1, 0) ------
   15 | t8 = GET:I64(rsp)
   16 | t9 = LDle:I64(t8)
   17 | t10 = Add64(t8,0x0000000000000008)
   18 | PUT(rsp) = t10
   19 | t11 = Sub64(t10,0x0000000000000080)
   20 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:22,943 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:22,963 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:22,992 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shll_r32_one/shll_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Uto64(t1)
   04 | t3 = Shl64(t2,0x01)
   05 | PUT(cc_op) = 0x000000000000001f
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = t2
   08 | t4 = 64to32(t3)
   09 | t5 = 32Uto64(t4)
   10 | PUT(rbx) = t5
   11 | PUT(pc) = 0x0000000000400002
   12 | ------ IMark(0x400002, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:22,116 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:22,139 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:22,156 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovdqa_ymm_ymm/vmovdqa_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:50:54,119 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:54,146 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:54,155 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgw_ax_r16/xchgw_ax_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I16(ax)
   02 | t1 = GET:I16(bx)
   03 | t2 = 16Uto64(t1)
   04 | PUT(rax) = t2
   05 | PUT(bx) = t0
   06 | PUT(pc) = 0x0000000000400002
   07 | ------ IMark(0x400002, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:32,346 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:32,370 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:32,378 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vorpd_ymm_ymm_ymm/vorpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = OrV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,877 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:58,939 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:58,985 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/decq_r64/decq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Sub64(t0,0x0000000000000001)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | PUT(cc_ndep) = t6
   09 | PUT(cc_op) = 0x000000000000001c
   10 | PUT(cc_dep1) = t1
   11 | PUT(cc_dep2) = 0x0000000000000000
   12 | PUT(rbx) = t1
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t7 = GET:I64(rsp)
   16 | t8 = LDle:I64(t7)
   17 | t9 = Add64(t7,0x0000000000000008)
   18 | PUT(rsp) = t9
   19 | t10 = Sub64(t9,0x0000000000000080)
   20 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:49,591 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:49,606 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:49,621 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddb_rh_r8/xaddb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bl) = t0
   10 | PUT(ah) = t2
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:02,897 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:02,912 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:02,930 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminsd_xmm_xmm_xmm/vpminsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min32Sx4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:13,113 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:13,164 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:13,213 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnb_rh/setnb_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000003,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:23,135 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:23,174 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:23,193 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlq_r64_cl/shlq_r64_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I8 t5:Ity_I8 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x3f)
   04 | t3 = Shl64(t0,t2)
   05 | t4 = Sub8(t2,0x01)
   06 | t5 = And8(t4,0x3f)
   07 | t6 = Shl64(t0,t5)
   08 | t7 = CmpNE8(t2,0x00)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = ITE(t7,0x0000000000000020,t8)
   11 | PUT(cc_op) = t9
   12 | t10 = GET:I64(cc_dep1)
   13 | t11 = ITE(t7,t3,t10)
   14 | PUT(cc_dep1) = t11
   15 | t12 = GET:I64(cc_dep2)
   16 | t13 = ITE(t7,t6,t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(rbx) = t3
   19 | PUT(pc) = 0x0000000000400003
   20 | ------ IMark(0x400003, 1, 0) ------
   21 | t14 = GET:I64(rsp)
   22 | t15 = LDle:I64(t14)
   23 | t16 = Add64(t14,0x0000000000000008)
   24 | PUT(rsp) = t16
   25 | t17 = Sub64(t16,0x0000000000000080)
   26 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:23,766 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:23,799 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:23,809 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlw_r16_cl/shlw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I16 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 16Uto64(t0)
   05 | t4 = Shl64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shl64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x000000000000001e,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to16(t4)
   20 | PUT(bx) = t15
   21 | PUT(pc) = 0x0000000000400003
   22 | ------ IMark(0x400003, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:41,904 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:41,944 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:41,976 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsubpd_xmm_xmm_xmm/vsubpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Sub64Fx2(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:27,547 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:27,829 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:27,961 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andnps_xmm_xmm/andnps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = NotV128(t1)
   04 | t3 = AndV128(t2,t0)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400003
   07 | ------ IMark(0x400003, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:53,036 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:53,048 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:53,056 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgl_r32_r32/xchgl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = 32Uto64(t1)
   06 | PUT(rcx) = t4
   07 | t5 = 32Uto64(t3)
   08 | PUT(rbx) = t5
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:54,007 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:54,029 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:54,047 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphaddd_ymm_ymm_ymm/vphaddd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = InterleaveHI32x2(t3,t2)
   12 | t11 = InterleaveLO32x2(t3,t2)
   13 | t12 = Add32x2(t11,t10)
   14 | t13 = InterleaveHI32x2(t7,t6)
   15 | t14 = InterleaveLO32x2(t7,t6)
   16 | t15 = Add32x2(t14,t13)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = InterleaveHI32x2(t5,t4)
   19 | t18 = InterleaveLO32x2(t5,t4)
   20 | t19 = Add32x2(t18,t17)
   21 | t20 = InterleaveHI32x2(t9,t8)
   22 | t21 = InterleaveLO32x2(t9,t8)
   23 | t22 = Add32x2(t21,t20)
   24 | t23 = 64HLtoV128(t22,t19)
   25 | t24 = V128HLtoV256(t23,t16)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:46:52,844 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,981 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:53,072 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpoq_r64_r64/cmovpoq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000b,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:30,158 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:30,202 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:30,210 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pdepq_r64_r64_r64/pdepq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rdx)
   03 | t2 = amd64g_calculate_pdep(t0,t1):Ity_I64
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:03,208 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:03,242 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:03,274 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd132pd_ymm_ymm_ymm/vfmsubadd132pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_F64 t20:Ity_I64 t21:Ity_F64 t22:Ity_I64 t23:Ity_F64 t24:Ity_F64 t25:Ity_I64 t26:Ity_F64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t0)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V256to64_1(t1)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = NegF64(t11)
   15 | t13 = V256to64_1(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | t18 = V256to64_2(t1)
   22 | t19 = ReinterpI64asF64(t18)
   23 | t20 = V256to64_2(t2)
   24 | t21 = ReinterpI64asF64(t20)
   25 | t22 = V256to64_2(t0)
   26 | t23 = ReinterpI64asF64(t22)
   27 | t24 = MAddF64(0x00000000,t23,t21,t19)
   28 | PUT(272) = t24
   29 | t25 = V256to64_3(t1)
   30 | t26 = ReinterpI64asF64(t25)
   31 | t27 = NegF64(t26)
   32 | t28 = V256to64_3(t2)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = V256to64_3(t0)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = MAddF64(0x00000000,t31,t29,t27)
   37 | PUT(280) = t32
   38 | PUT(pc) = 0x0000000000400005
   39 | ------ IMark(0x400005, 1, 0) ------
   40 | t33 = GET:I64(rsp)
   41 | t34 = LDle:I64(t33)
   42 | t35 = Add64(t33,0x0000000000000008)
   43 | PUT(rsp) = t35
   44 | t36 = Sub64(t35,0x0000000000000080)
   45 | ====== AbiHint(0xt36, 128, t34) ======
   NEXT: PUT(rip) = t34; Ijk_Ret
}
WARNING | 2018-04-08 20:48:08,346 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:08,365 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:08,377 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbw_r16_r16/sbbw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I16 t9:Ity_I16 t10:Ity_I16 t11:Ity_I64 t12:Ity_I16 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to16(t7)
   10 | t9 = Sub16(t0,t1)
   11 | t10 = Sub16(t9,t8)
   12 | PUT(cc_op) = 0x000000000000000e
   13 | t11 = 16Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor16(t1,t8)
   16 | t13 = 16Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(bx) = t10
   20 | PUT(pc) = 0x0000000000400003
   21 | ------ IMark(0x400003, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:30,932 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:30,952 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:30,968 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subq_r64_r64/subq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = Sub64(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000008
   05 | PUT(cc_dep1) = t0
   06 | PUT(cc_dep2) = t1
   07 | PUT(rbx) = t2
   08 | PUT(pc) = 0x0000000000400003
   09 | ------ IMark(0x400003, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,850 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,908 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,967 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/incb_r8/incb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = Add8(t0,0x01)
   03 | PUT(bl) = t1
   04 | t2 = GET:I64(cc_op)
   05 | t3 = GET:I64(cc_dep1)
   06 | t4 = GET:I64(cc_dep2)
   07 | t5 = GET:I64(cc_ndep)
   08 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   09 | PUT(cc_ndep) = t6
   10 | PUT(cc_op) = 0x0000000000000015
   11 | t7 = 8Uto64(t1)
   12 | PUT(cc_dep1) = t7
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(pc) = 0x0000000000400002
   15 | ------ IMark(0x400002, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:25,331 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:25,351 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:25,362 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskpd_r64_ymm/vmovmskpd_r64_ymm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(260)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(268)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(276)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(284)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = Or32(t8,t11)
   14 | t13 = Or32(t2,t5)
   15 | t14 = Or32(t13,t12)
   16 | t15 = 32Uto64(t14)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400004
   19 | ------ IMark(0x400004, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:29,759 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:29,774 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:29,783 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subb_r8_rh/subb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = Sub8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bl) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:26,169 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:26,395 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:26,552 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andnq_r64_r64_r64/andnq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rdx)
   03 | t2 = Not64(t0)
   04 | t3 = And64(t2,t1)
   05 | PUT(rbx) = t3
   06 | PUT(cc_op) = 0x0000000000000036
   07 | PUT(cc_dep1) = t3
   08 | PUT(cc_dep2) = 0x0000000000000000
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:43,540 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:43,566 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:43,580 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psadbw_xmm_xmm/psadbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = amd64g_calculate_mmx_psadbw(t2,t4):Ity_I64
   08 | t7 = amd64g_calculate_mmx_psadbw(t3,t5):Ity_I64
   09 | t8 = 64HLtoV128(t7,t6)
   10 | PUT(xmm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:48,036 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:48,063 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:48,075 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vxorps_xmm_xmm_xmm/vxorps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = XorV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:55,337 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:55,500 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:55,553 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgb_rh_rh/cmpxchgb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I8 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I1 t14:Ity_I8 t15:Ity_I8 t16:Ity_I8 t17:Ity_I8 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I8(ch)
   03 | t2 = GET:I8(al)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t2)
   06 | t4 = t3
   07 | PUT(cc_dep1) = t4
   08 | t5 = 8Uto64(t0)
   09 | t6 = t5
   10 | PUT(cc_dep2) = t6
   11 | t7 = 64to8(t6)
   12 | t8 = 64to8(t4)
   13 | t9 = CmpEQ8(t8,t7)
   14 | t10 = 1Uto64(t9)
   15 | t11 = t10
   16 | t12 = 64to1(t11)
   17 | t13 = t12
   18 | t14 = ITE(t13,t1,t0)
   19 | t15 = t14
   20 | t16 = ITE(t13,t2,t0)
   21 | t17 = t16
   22 | PUT(al) = t17
   23 | PUT(bh) = t15
   24 | PUT(pc) = 0x0000000000400003
   25 | ------ IMark(0x400003, 1, 0) ------
   26 | t18 = GET:I64(rsp)
   27 | t19 = LDle:I64(t18)
   28 | t20 = Add64(t18,0x0000000000000008)
   29 | PUT(rsp) = t20
   30 | t21 = Sub64(t20,0x0000000000000080)
   31 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:48:38,609 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:38,625 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:38,645 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddss_xmm_xmm_xmm/vaddss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Add32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,448 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,586 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,663 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsi2sdl_xmm_r32/cvtsi2sdl_xmm_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_F64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = I32StoF64(t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:39,332 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:39,352 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:39,379 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmulhuw_xmm_xmm/pmulhuw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = MulHi16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:31,199 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:31,217 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:31,255 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpgtd_xmm_xmm/pcmpgtd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpGT32Sx4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:41,786 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:41,809 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:41,817 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddw_ymm_ymm_ymm/vpaddw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Add16x16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:13,987 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:14,008 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:14,029 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub231pd_ymm_ymm_ymm/vfnmsub231pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_I64 t24:Ity_F64 t25:Ity_F64 t26:Ity_F64 t27:Ity_I64 t28:Ity_F64 t29:Ity_I64 t30:Ity_F64 t31:Ity_I64 t32:Ity_F64 t33:Ity_F64 t34:Ity_F64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | t10 = NegF64(t9)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t0)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V256to64_1(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | t18 = NegF64(t17)
   21 | PUT(264) = t18
   22 | t19 = V256to64_2(t0)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = V256to64_2(t2)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = V256to64_2(t1)
   27 | t24 = ReinterpI64asF64(t23)
   28 | t25 = MAddF64(0x00000000,t24,t22,t20)
   29 | t26 = NegF64(t25)
   30 | PUT(272) = t26
   31 | t27 = V256to64_3(t0)
   32 | t28 = ReinterpI64asF64(t27)
   33 | t29 = V256to64_3(t2)
   34 | t30 = ReinterpI64asF64(t29)
   35 | t31 = V256to64_3(t1)
   36 | t32 = ReinterpI64asF64(t31)
   37 | t33 = MAddF64(0x00000000,t32,t30,t28)
   38 | t34 = NegF64(t33)
   39 | PUT(280) = t34
   40 | PUT(pc) = 0x0000000000400005
   41 | ------ IMark(0x400005, 1, 0) ------
   42 | t35 = GET:I64(rsp)
   43 | t36 = LDle:I64(t35)
   44 | t37 = Add64(t35,0x0000000000000008)
   45 | PUT(rsp) = t37
   46 | t38 = Sub64(t37,0x0000000000000080)
   47 | ====== AbiHint(0xt38, 128, t36) ======
   NEXT: PUT(rip) = t36; Ijk_Ret
}
WARNING | 2018-04-08 20:48:47,542 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:47,579 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:47,598 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtss2sil_r32_xmm/vcvtss2sil_r32_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F32toF64(t0)
   06 | t5 = F64toI32S(t3,t4)
   07 | t6 = 32Uto64(t5)
   08 | PUT(rbx) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:16,522 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:16,543 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:16,593 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhaddps_xmm_xmm_xmm/vhaddps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V128 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = V128to64(t1)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = 32HLto64(t12,t10)
   16 | t15 = 32HLto64(t6,t4)
   17 | t16 = 64HLtoV128(t15,t14)
   18 | t17 = 32HLto64(t13,t11)
   19 | t18 = 32HLto64(t7,t5)
   20 | t19 = 64HLtoV128(t18,t17)
   21 | t20 = Add32Fx4(0x00000000,t16,t19)
   22 | PUT(xmm1) = t20
   23 | PUT(272) = 0
   24 | PUT(pc) = 0x0000000000400004
   25 | ------ IMark(0x400004, 1, 0) ------
   26 | t21 = GET:I64(rsp)
   27 | t22 = LDle:I64(t21)
   28 | t23 = Add64(t21,0x0000000000000008)
   29 | PUT(rsp) = t23
   30 | t24 = Sub64(t23,0x0000000000000080)
   31 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:50:34,019 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:34,036 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:34,046 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhbw_xmm_xmm_xmm/vpunpckhbw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveHI8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:28,818 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:28,987 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:29,223 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btsl_r32_r32/btsl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I8 t12:Ity_I8 t13:Ity_I8 t14:Ity_I8 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I32 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Sto64(t1)
   04 | t3 = GET:I64(rsp)
   05 | t4 = Sub64(t3,0x0000000000000120)
   06 | PUT(rsp) = t4
   07 | t5 = GET:I64(rbx)
   08 | t6 = 64to32(t5)
   09 | STle(t4) = t6
   10 | t7 = And64(t2,0x000000000000001f)
   11 | t8 = Sar64(t7,0x03)
   12 | t9 = Add64(t4,t8)
   13 | t10 = And64(t7,0x0000000000000007)
   14 | t11 = 64to8(t10)
   15 | t12 = Shl8(0x01,t11)
   16 | t13 = LDle:I8(t9)
   17 | t14 = Or8(t13,t12)
   18 | STle(t9) = t14
   19 | PUT(cc_op) = 0x0000000000000000
   20 | PUT(cc_dep2) = 0x0000000000000000
   21 | t15 = 8Uto64(t13)
   22 | t16 = Shr64(t15,t11)
   23 | t17 = And64(t16,0x0000000000000001)
   24 | PUT(cc_dep1) = t17
   25 | PUT(cc_ndep) = 0x0000000000000000
   26 | t18 = LDle:I32(t4)
   27 | t19 = 32Uto64(t18)
   28 | PUT(rbx) = t19
   29 | t20 = Add64(t4,0x0000000000000120)
   30 | PUT(rsp) = t20
   31 | PUT(pc) = 0x0000000000400003
   32 | ------ IMark(0x400003, 1, 0) ------
   33 | t21 = LDle:I64(t20)
   34 | t22 = Add64(t20,0x0000000000000008)
   35 | PUT(rsp) = t22
   36 | t23 = Sub64(t22,0x0000000000000080)
   37 | ====== AbiHint(0xt23, 128, t21) ======
   NEXT: PUT(rip) = t21; Ijk_Ret
}
WARNING | 2018-04-08 20:47:14,816 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:14,837 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:14,883 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movups_xmm_xmm/movups_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(pc) = 0x0000000000400003
   04 | ------ IMark(0x400003, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:03,125 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:03,191 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:03,277 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imull_r32/imull_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rax)
   04 | t3 = 64to32(t2)
   05 | PUT(cc_op) = 0x0000000000000033
   06 | t4 = 32Uto64(t3)
   07 | PUT(cc_dep1) = t4
   08 | t5 = 32Uto64(t1)
   09 | PUT(cc_dep2) = t5
   10 | t6 = MullS32(t3,t1)
   11 | t7 = 64HIto32(t6)
   12 | t8 = 64to32(t6)
   13 | t9 = 32Uto64(t7)
   14 | PUT(rdx) = t9
   15 | t10 = 32Uto64(t8)
   16 | PUT(rax) = t10
   17 | PUT(pc) = 0x0000000000400002
   18 | ------ IMark(0x400002, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:47:22,748 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:22,821 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:22,875 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orpd_xmm_xmm/orpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = OrV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:00,605 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:00,622 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:00,643 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213ps_ymm_ymm_ymm/vfmsub213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_I32 t45:Ity_F32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_F32 t58:Ity_I32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_F32 t66:Ity_I32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_F32 t71:Ity_I32 t72:Ity_F32 t73:Ity_F32 t74:Ity_I32 t75:Ity_F32 t76:Ity_I32 t77:Ity_F32 t78:Ity_F32 t79:Ity_I64 t80:Ity_I64 t81:Ity_I64 t82:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = NegF32(t24)
   28 | t26 = 64HIto32(t4)
   29 | t27 = ReinterpI32asF32(t26)
   30 | t28 = 64HIto32(t3)
   31 | t29 = ReinterpI32asF32(t28)
   32 | t30 = MAddF32(0x00000000,t29,t27,t25)
   33 | PUT(260) = t30
   34 | t31 = 64to32(t8)
   35 | t32 = ReinterpI32asF32(t31)
   36 | t33 = NegF32(t32)
   37 | t34 = 64to32(t7)
   38 | t35 = ReinterpI32asF32(t34)
   39 | t36 = 64to32(t6)
   40 | t37 = ReinterpI32asF32(t36)
   41 | t38 = MAddF32(0x00000000,t37,t35,t33)
   42 | PUT(264) = t38
   43 | t39 = 64HIto32(t8)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = NegF32(t40)
   46 | t42 = 64HIto32(t7)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = 64HIto32(t6)
   49 | t45 = ReinterpI32asF32(t44)
   50 | t46 = MAddF32(0x00000000,t45,t43,t41)
   51 | PUT(268) = t46
   52 | t47 = 64to32(t11)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = NegF32(t48)
   55 | t50 = 64to32(t10)
   56 | t51 = ReinterpI32asF32(t50)
   57 | t52 = 64to32(t9)
   58 | t53 = ReinterpI32asF32(t52)
   59 | t54 = MAddF32(0x00000000,t53,t51,t49)
   60 | PUT(272) = t54
   61 | t55 = 64HIto32(t11)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = NegF32(t56)
   64 | t58 = 64HIto32(t10)
   65 | t59 = ReinterpI32asF32(t58)
   66 | t60 = 64HIto32(t9)
   67 | t61 = ReinterpI32asF32(t60)
   68 | t62 = MAddF32(0x00000000,t61,t59,t57)
   69 | PUT(276) = t62
   70 | t63 = 64to32(t14)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = NegF32(t64)
   73 | t66 = 64to32(t13)
   74 | t67 = ReinterpI32asF32(t66)
   75 | t68 = 64to32(t12)
   76 | t69 = ReinterpI32asF32(t68)
   77 | t70 = MAddF32(0x00000000,t69,t67,t65)
   78 | PUT(280) = t70
   79 | t71 = 64HIto32(t14)
   80 | t72 = ReinterpI32asF32(t71)
   81 | t73 = NegF32(t72)
   82 | t74 = 64HIto32(t13)
   83 | t75 = ReinterpI32asF32(t74)
   84 | t76 = 64HIto32(t12)
   85 | t77 = ReinterpI32asF32(t76)
   86 | t78 = MAddF32(0x00000000,t77,t75,t73)
   87 | PUT(284) = t78
   88 | PUT(pc) = 0x0000000000400005
   89 | ------ IMark(0x400005, 1, 0) ------
   90 | t79 = GET:I64(rsp)
   91 | t80 = LDle:I64(t79)
   92 | t81 = Add64(t79,0x0000000000000008)
   93 | PUT(rsp) = t81
   94 | t82 = Sub64(t81,0x0000000000000080)
   95 | ====== AbiHint(0xt82, 128, t80) ======
   NEXT: PUT(rip) = t80; Ijk_Ret
}
WARNING | 2018-04-08 20:47:46,055 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:46,102 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:46,150 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubw_xmm_xmm/psubw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:31,417 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:31,430 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:31,437 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubusb_xmm_xmm_xmm/vpsubusb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QSub8Ux16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:11,296 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:11,378 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:11,436 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movq_xmm_r64/movq_xmm_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64UtoV128(t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:37,955 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:37,995 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,065 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovmskb_r32_xmm/pmovmskb_r32_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GetMSBs8x16(t0)
   03 | t2 = 16Uto32(t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:22,748 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:22,765 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:22,774 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllvq_xmm_xmm_xmm/vpsllvq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t1)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128HIto64(t0)
   07 | t6 = 64to8(t4)
   08 | t7 = Shl64(t2,t6)
   09 | t8 = CmpLT64U(t4,0x0000000000000040)
   10 | t9 = ITE(t8,t7,0x0000000000000000)
   11 | t10 = 64to8(t5)
   12 | t11 = Shl64(t3,t10)
   13 | t12 = CmpLT64U(t5,0x0000000000000040)
   14 | t13 = ITE(t12,t11,0x0000000000000000)
   15 | PUT(ymm1) = t9
   16 | PUT(264) = t13
   17 | PUT(272) = 0x0000000000000000
   18 | PUT(280) = 0x0000000000000000
   19 | PUT(pc) = 0x0000000000400005
   20 | ------ IMark(0x400005, 1, 0) ------
   21 | t14 = GET:I64(rsp)
   22 | t15 = LDle:I64(t14)
   23 | t16 = Add64(t14,0x0000000000000008)
   24 | PUT(rsp) = t16
   25 | t17 = Sub64(t16,0x0000000000000080)
   26 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:20,376 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:20,394 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:20,406 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setpo_rh/setpo_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000b,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:59,958 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:59,976 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:00,009 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorq_r64_one/rorq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Shl64(t0,0x3f)
   03 | t2 = Shr64(t0,0x01)
   04 | t3 = Or64(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x000000000000002c
   11 | PUT(cc_dep1) = t3
   12 | PUT(cc_dep2) = 0x0000000000000000
   13 | PUT(cc_ndep) = t8
   14 | PUT(rbx) = t3
   15 | PUT(pc) = 0x0000000000400003
   16 | ------ IMark(0x400003, 1, 0) ------
   17 | t9 = GET:I64(rsp)
   18 | t10 = LDle:I64(t9)
   19 | t11 = Add64(t9,0x0000000000000008)
   20 | PUT(rsp) = t11
   21 | t12 = Sub64(t11,0x0000000000000080)
   22 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:03,797 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:03,817 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:03,874 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarw_r16_one/sarw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = 16Sto64(t0)
   03 | t2 = Sar64(t1,0x01)
   04 | PUT(cc_op) = 0x0000000000000022
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to16(t2)
   08 | PUT(bx) = t3
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:26,220 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:26,240 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:26,257 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlq_xmm_xmm_xmm/vpsrlq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN64x2(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000040)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:40,847 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:40,866 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:40,922 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pshufb_xmm_xmm/pshufb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_V128 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = SarN8x8(t4,0x07)
   08 | t7 = Not64(t6)
   09 | t8 = ShlN8x8(t4,0x04)
   10 | t9 = SarN8x8(t8,0x07)
   11 | t10 = And64(t4,0x0707070707070707)
   12 | t11 = Not64(t9)
   13 | t12 = Perm8x8(t3,t10)
   14 | t13 = And64(t12,t11)
   15 | t14 = Perm8x8(t2,t10)
   16 | t15 = And64(t14,t9)
   17 | t16 = Or64(t15,t13)
   18 | t17 = And64(t16,t7)
   19 | t18 = SarN8x8(t5,0x07)
   20 | t19 = Not64(t18)
   21 | t20 = ShlN8x8(t5,0x04)
   22 | t21 = SarN8x8(t20,0x07)
   23 | t22 = And64(t5,0x0707070707070707)
   24 | t23 = Not64(t21)
   25 | t24 = Perm8x8(t3,t22)
   26 | t25 = And64(t24,t23)
   27 | t26 = Perm8x8(t2,t22)
   28 | t27 = And64(t26,t21)
   29 | t28 = Or64(t27,t25)
   30 | t29 = And64(t28,t19)
   31 | t30 = 64HLtoV128(t17,t29)
   32 | PUT(xmm1) = t30
   33 | PUT(pc) = 0x0000000000400005
   34 | ------ IMark(0x400005, 1, 0) ------
   35 | t31 = GET:I64(rsp)
   36 | t32 = LDle:I64(t31)
   37 | t33 = Add64(t31,0x0000000000000008)
   38 | PUT(rsp) = t33
   39 | t34 = Sub64(t33,0x0000000000000080)
   40 | ====== AbiHint(0xt34, 128, t32) ======
   NEXT: PUT(rip) = t32; Ijk_Ret
}
WARNING | 2018-04-08 20:48:16,309 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:16,346 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:16,362 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnle_r8/setnle_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000f,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:34,896 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:34,917 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:34,937 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpabsd_xmm_xmm/vpabsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = SarN32x2(t2,0x1f)
   05 | t4 = Not64(t3)
   06 | t5 = Sub32x2(0x0000000000000000,t2)
   07 | t6 = And64(t5,t3)
   08 | t7 = And64(t2,t4)
   09 | t8 = Or64(t7,t6)
   10 | t9 = SarN32x2(t1,0x1f)
   11 | t10 = Not64(t9)
   12 | t11 = Sub32x2(0x0000000000000000,t1)
   13 | t12 = And64(t11,t9)
   14 | t13 = And64(t1,t10)
   15 | t14 = Or64(t13,t12)
   16 | t15 = 64HLtoV128(t14,t8)
   17 | PUT(xmm1) = t15
   18 | PUT(272) = 0
   19 | PUT(pc) = 0x0000000000400005
   20 | ------ IMark(0x400005, 1, 0) ------
   21 | t16 = GET:I64(rsp)
   22 | t17 = LDle:I64(t16)
   23 | t18 = Add64(t16,0x0000000000000008)
   24 | PUT(rsp) = t18
   25 | t19 = Sub64(t18,0x0000000000000080)
   26 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:10,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:10,440 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:10,451 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setg_rh/setg_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000f,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:06,363 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:06,382 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:06,430 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbq_r64_r64/sbbq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = Sub64(t0,t1)
   10 | t9 = Sub64(t8,t7)
   11 | PUT(cc_op) = 0x0000000000000010
   12 | PUT(cc_dep1) = t0
   13 | t10 = Xor64(t1,t7)
   14 | PUT(cc_dep2) = t10
   15 | PUT(cc_ndep) = t7
   16 | PUT(rbx) = t9
   17 | PUT(pc) = 0x0000000000400003
   18 | ------ IMark(0x400003, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:48:44,177 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:44,242 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:44,268 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcomisd_xmm_xmm/vcomisd_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm2)
   02 | t1 = GET:F64(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = CmpF64(t1,t0)
   06 | t3 = 32Uto64(t2)
   07 | t4 = And64(t3,0x0000000000000045)
   08 | PUT(cc_dep1) = t4
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t5 = GET:I64(rsp)
   12 | t6 = LDle:I64(t5)
   13 | t7 = Add64(t5,0x0000000000000008)
   14 | PUT(rsp) = t7
   15 | t8 = Sub64(t7,0x0000000000000080)
   16 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:33,760 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:33,780 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:33,814 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phsubd_xmm_xmm/phsubd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = InterleaveHI32x2(t2,t3)
   08 | t7 = InterleaveLO32x2(t2,t3)
   09 | t8 = Sub32x2(t7,t6)
   10 | t9 = InterleaveHI32x2(t4,t5)
   11 | t10 = InterleaveLO32x2(t4,t5)
   12 | t11 = Sub32x2(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,299 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:37,468 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:37,539 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovgew_r16_r16/cmovgew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000d,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:12,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:12,408 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:12,453 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnbe_r8/setnbe_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000007,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:16,130 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:16,159 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:16,188 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnle_rh/setnle_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000f,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:18,913 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:18,964 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:19,020 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/negb_rh/negb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = Sub8(0x00,t0)
   03 | PUT(cc_op) = 0x0000000000000005
   04 | PUT(cc_dep1) = 0x0000000000000000
   05 | t2 = 8Uto64(t0)
   06 | PUT(cc_dep2) = t2
   07 | PUT(ah) = t1
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:56,526 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:56,542 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:56,551 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub213pd_ymm_ymm_ymm/vfmaddsub213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_I64 t24:Ity_F64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V256to64_1(t0)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | t18 = V256to64_2(t2)
   22 | t19 = ReinterpI64asF64(t18)
   23 | t20 = NegF64(t19)
   24 | t21 = V256to64_2(t0)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = V256to64_2(t1)
   27 | t24 = ReinterpI64asF64(t23)
   28 | t25 = MAddF64(0x00000000,t24,t22,t20)
   29 | PUT(272) = t25
   30 | t26 = V256to64_3(t2)
   31 | t27 = ReinterpI64asF64(t26)
   32 | t28 = V256to64_3(t0)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = V256to64_3(t1)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = MAddF64(0x00000000,t31,t29,t27)
   37 | PUT(280) = t32
   38 | PUT(pc) = 0x0000000000400005
   39 | ------ IMark(0x400005, 1, 0) ------
   40 | t33 = GET:I64(rsp)
   41 | t34 = LDle:I64(t33)
   42 | t35 = Add64(t33,0x0000000000000008)
   43 | PUT(rsp) = t35
   44 | t36 = Sub64(t35,0x0000000000000080)
   45 | ====== AbiHint(0xt36, 128, t34) ======
   NEXT: PUT(rip) = t34; Ijk_Ret
}
WARNING | 2018-04-08 20:50:08,491 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:08,514 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:08,551 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxbw_xmm_xmm/vpmovsxbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = ShlN16x8(t1,0x08)
   04 | t3 = SarN16x8(t2,0x08)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,580 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:58,648 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:58,697 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/decb_rh/decb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = Sub8(t0,0x01)
   03 | PUT(ah) = t1
   04 | t2 = GET:I64(cc_op)
   05 | t3 = GET:I64(cc_dep1)
   06 | t4 = GET:I64(cc_dep2)
   07 | t5 = GET:I64(cc_ndep)
   08 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   09 | PUT(cc_ndep) = t6
   10 | PUT(cc_op) = 0x0000000000000019
   11 | t7 = 8Uto64(t1)
   12 | PUT(cc_dep1) = t7
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(pc) = 0x0000000000400002
   15 | ------ IMark(0x400002, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:46:50,785 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:50,883 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:50,937 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgb_r8_r8/cmpxchgb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I8 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I1 t14:Ity_I8 t15:Ity_I8 t16:Ity_I8 t17:Ity_I8 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = GET:I8(al)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t2)
   06 | t4 = t3
   07 | PUT(cc_dep1) = t4
   08 | t5 = 8Uto64(t0)
   09 | t6 = t5
   10 | PUT(cc_dep2) = t6
   11 | t7 = 64to8(t6)
   12 | t8 = 64to8(t4)
   13 | t9 = CmpEQ8(t8,t7)
   14 | t10 = 1Uto64(t9)
   15 | t11 = t10
   16 | t12 = 64to1(t11)
   17 | t13 = t12
   18 | t14 = ITE(t13,t1,t0)
   19 | t15 = t14
   20 | t16 = ITE(t13,t2,t0)
   21 | t17 = t16
   22 | PUT(al) = t17
   23 | PUT(bl) = t15
   24 | PUT(pc) = 0x0000000000400003
   25 | ------ IMark(0x400003, 1, 0) ------
   26 | t18 = GET:I64(rsp)
   27 | t19 = LDle:I64(t18)
   28 | t20 = Add64(t18,0x0000000000000008)
   29 | PUT(rsp) = t20
   30 | t21 = Sub64(t20,0x0000000000000080)
   31 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:48:51,530 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:51,546 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:51,555 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd132ss_xmm_xmm_xmm/vfmadd132ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = MAddF32(0x00000000,t0,t2,t1)
   05 | PUT(ymm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:10,160 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:10,175 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:10,182 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setb_rh/setb_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000002,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:56,339 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:56,355 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:56,371 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphsubd_ymm_ymm_ymm/vphsubd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = InterleaveHI32x2(t3,t2)
   12 | t11 = InterleaveLO32x2(t3,t2)
   13 | t12 = Sub32x2(t11,t10)
   14 | t13 = InterleaveHI32x2(t7,t6)
   15 | t14 = InterleaveLO32x2(t7,t6)
   16 | t15 = Sub32x2(t14,t13)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = InterleaveHI32x2(t5,t4)
   19 | t18 = InterleaveLO32x2(t5,t4)
   20 | t19 = Sub32x2(t18,t17)
   21 | t20 = InterleaveHI32x2(t9,t8)
   22 | t21 = InterleaveLO32x2(t9,t8)
   23 | t22 = Sub32x2(t21,t20)
   24 | t23 = 64HLtoV128(t22,t19)
   25 | t24 = V128HLtoV256(t23,t16)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:48:28,535 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:28,556 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:28,611 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrl_r32_one/shrl_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Uto64(t1)
   04 | t3 = Shr64(t2,0x01)
   05 | PUT(cc_op) = 0x0000000000000023
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = t2
   08 | t4 = 64to32(t3)
   09 | t5 = 32Uto64(t4)
   10 | PUT(rbx) = t5
   11 | PUT(pc) = 0x0000000000400002
   12 | ------ IMark(0x400002, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:27,332 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:27,350 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:27,403 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovsd_xmm_xmm_xmm/vmovsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:I64(296)
   03 | t2 = 64HLtoV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:51,945 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:51,965 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:51,978 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd213pd_ymm_ymm_ymm/vfmadd213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_F64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t0)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V256to64_1(t2)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = V256to64_1(t0)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = V256to64_1(t1)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = MAddF64(0x00000000,t15,t13,t11)
   19 | PUT(264) = t16
   20 | t17 = V256to64_2(t2)
   21 | t18 = ReinterpI64asF64(t17)
   22 | t19 = V256to64_2(t0)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = V256to64_2(t1)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = MAddF64(0x00000000,t22,t20,t18)
   27 | PUT(272) = t23
   28 | t24 = V256to64_3(t2)
   29 | t25 = ReinterpI64asF64(t24)
   30 | t26 = V256to64_3(t0)
   31 | t27 = ReinterpI64asF64(t26)
   32 | t28 = V256to64_3(t1)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = MAddF64(0x00000000,t29,t27,t25)
   35 | PUT(280) = t30
   36 | PUT(pc) = 0x0000000000400005
   37 | ------ IMark(0x400005, 1, 0) ------
   38 | t31 = GET:I64(rsp)
   39 | t32 = LDle:I64(t31)
   40 | t33 = Add64(t31,0x0000000000000008)
   41 | PUT(rsp) = t33
   42 | t34 = Sub64(t33,0x0000000000000080)
   43 | ====== AbiHint(0xt34, 128, t32) ======
   NEXT: PUT(rip) = t32; Ijk_Ret
}
WARNING | 2018-04-08 20:48:05,062 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:05,088 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:05,125 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbb_rh_r8/sbbb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Sub8(t0,t1)
   11 | t10 = Sub8(t9,t8)
   12 | PUT(cc_op) = 0x000000000000000d
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(ah) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:46:42,842 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:42,993 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:43,069 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovlew_r16_r16/cmovlew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000e,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:41,412 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:41,430 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:41,462 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandnps_ymm_ymm_ymm/vandnps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = NotV256(t0)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = AndV256(t1,t2)
   05 | PUT(ymm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:40,585 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:40,602 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:40,618 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vrsqrtss_xmm_xmm_xmm/vrsqrtss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = SetV128lo32(t1,t0)
   04 | t3 = RSqrtEst32F0x4(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:55,726 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:55,744 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:55,764 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub132ps_xmm_xmm_xmm/vfmaddsub132ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | PUT(260) = t23
   27 | t24 = 64to32(t8)
   28 | t25 = ReinterpI32asF32(t24)
   29 | t26 = NegF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | PUT(264) = t31
   36 | t32 = 64HIto32(t8)
   37 | t33 = ReinterpI32asF32(t32)
   38 | t34 = 64HIto32(t7)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = 64HIto32(t6)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = MAddF32(0x00000000,t37,t35,t33)
   43 | PUT(268) = t38
   44 | PUT(272) = 0
   45 | PUT(pc) = 0x0000000000400005
   46 | ------ IMark(0x400005, 1, 0) ------
   47 | t39 = GET:I64(rsp)
   48 | t40 = LDle:I64(t39)
   49 | t41 = Add64(t39,0x0000000000000008)
   50 | PUT(rsp) = t41
   51 | t42 = Sub64(t41,0x0000000000000080)
   52 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:48:13,565 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:13,609 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:13,683 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnc_r8/setnc_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000003,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:45,065 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:45,094 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:45,145 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtdq2ps_xmm_xmm/vcvtdq2ps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_F64 t11:Ity_F32 t12:Ity_F64 t13:Ity_F32 t14:Ity_F64 t15:Ity_F32 t16:Ity_F64 t17:Ity_F32 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128HIto64(t0)
   06 | t5 = V128to64(t0)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = I32StoF64(t9)
   12 | t11 = F64toF32(t3,t10)
   13 | PUT(268) = t11
   14 | t12 = I32StoF64(t8)
   15 | t13 = F64toF32(t3,t12)
   16 | PUT(264) = t13
   17 | t14 = I32StoF64(t7)
   18 | t15 = F64toF32(t3,t14)
   19 | PUT(260) = t15
   20 | t16 = I32StoF64(t6)
   21 | t17 = F64toF32(t3,t16)
   22 | PUT(ymm1) = t17
   23 | PUT(272) = 0
   24 | PUT(pc) = 0x0000000000400004
   25 | ------ IMark(0x400004, 1, 0) ------
   26 | t18 = GET:I64(rsp)
   27 | t19 = LDle:I64(t18)
   28 | t20 = Add64(t18,0x0000000000000008)
   29 | PUT(rsp) = t20
   30 | t21 = Sub64(t20,0x0000000000000080)
   31 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:46:29,470 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:29,566 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:29,703 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andpd_xmm_xmm/andpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:57,416 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:57,550 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,622 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cwtd/cwtd.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I16(ax)
   02 | t1 = Sar16(t0,0x0f)
   03 | PUT(dx) = t1
   04 | PUT(pc) = 0x0000000000400002
   05 | ------ IMark(0x400002, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:23,454 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:23,478 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:23,494 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setz_rh/setz_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000004,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:27,888 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:27,921 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:27,969 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpeqb_xmm_xmm/pcmpeqb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpEQ8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:35,649 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:35,688 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:35,726 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovmskb_r64_xmm/pmovmskb_r64_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GetMSBs8x16(t0)
   03 | t2 = 16Uto32(t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:03,505 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:03,528 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:03,538 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd132pd_xmm_xmm_xmm/vfmsubadd132pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t0)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V128HIto64(t1)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = NegF64(t11)
   15 | t13 = V128HIto64(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t18 = GET:I64(rsp)
   25 | t19 = LDle:I64(t18)
   26 | t20 = Add64(t18,0x0000000000000008)
   27 | PUT(rsp) = t20
   28 | t21 = Sub64(t20,0x0000000000000080)
   29 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:48:21,297 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:21,316 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:21,363 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sets_rh/sets_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000008,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:55,369 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:55,397 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:55,407 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphaddw_ymm_ymm_ymm/vphaddw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = CatOddLanes16x4(t3,t2)
   12 | t11 = CatEvenLanes16x4(t3,t2)
   13 | t12 = Add16x4(t11,t10)
   14 | t13 = CatOddLanes16x4(t7,t6)
   15 | t14 = CatEvenLanes16x4(t7,t6)
   16 | t15 = Add16x4(t14,t13)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = CatOddLanes16x4(t5,t4)
   19 | t18 = CatEvenLanes16x4(t5,t4)
   20 | t19 = Add16x4(t18,t17)
   21 | t20 = CatOddLanes16x4(t9,t8)
   22 | t21 = CatEvenLanes16x4(t9,t8)
   23 | t22 = Add16x4(t21,t20)
   24 | t23 = 64HLtoV128(t22,t19)
   25 | t24 = V128HLtoV256(t23,t16)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,401 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,610 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,694 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btsw_r16_r16/btsw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I16 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Sto64(t0)
   03 | t2 = GET:I64(rsp)
   04 | t3 = Sub64(t2,0x0000000000000120)
   05 | PUT(rsp) = t3
   06 | t4 = GET:I16(bx)
   07 | STle(t3) = t4
   08 | t5 = And64(t1,0x000000000000000f)
   09 | t6 = Sar64(t5,0x03)
   10 | t7 = Add64(t3,t6)
   11 | t8 = And64(t5,0x0000000000000007)
   12 | t9 = 64to8(t8)
   13 | t10 = Shl8(0x01,t9)
   14 | t11 = LDle:I8(t7)
   15 | t12 = Or8(t11,t10)
   16 | STle(t7) = t12
   17 | PUT(cc_op) = 0x0000000000000000
   18 | PUT(cc_dep2) = 0x0000000000000000
   19 | t13 = 8Uto64(t11)
   20 | t14 = Shr64(t13,t9)
   21 | t15 = And64(t14,0x0000000000000001)
   22 | PUT(cc_dep1) = t15
   23 | PUT(cc_ndep) = 0x0000000000000000
   24 | t16 = LDle:I16(t3)
   25 | PUT(bx) = t16
   26 | t17 = Add64(t3,0x0000000000000120)
   27 | PUT(rsp) = t17
   28 | PUT(pc) = 0x0000000000400004
   29 | ------ IMark(0x400004, 1, 0) ------
   30 | t18 = LDle:I64(t17)
   31 | t19 = Add64(t17,0x0000000000000008)
   32 | PUT(rsp) = t19
   33 | t20 = Sub64(t19,0x0000000000000080)
   34 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:47:23,312 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:23,378 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:23,421 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/notw_r16/notw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = Not16(t0)
   03 | PUT(bx) = t1
   04 | PUT(pc) = 0x0000000000400003
   05 | ------ IMark(0x400003, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:26,776 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:26,799 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:26,818 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrb_r8_one/shrb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = 8Uto64(t0)
   03 | t2 = Shr64(t1,0x01)
   04 | PUT(cc_op) = 0x0000000000000021
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(bl) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,034 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,076 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,140 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imulq_r64/imulq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rax)
   03 | PUT(cc_op) = 0x0000000000000034
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | t2 = MullS64(t1,t0)
   07 | t3 = 128HIto64(t2)
   08 | t4 = 128to64(t2)
   09 | PUT(rdx) = t3
   10 | PUT(rax) = t4
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:00,740 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:00,806 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:00,855 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divw_r16/divw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I32 t4:Ity_I64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I16 t9:Ity_I32 t10:Ity_I16 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(ax)
   03 | t2 = GET:I16(dx)
   04 | t3 = 16HLto32(t2,t1)
   05 | t4 = 32Uto64(t3)
   06 | t5 = 16Uto32(t0)
   07 | t6 = DivModU64to32(t4,t5)
   08 | t7 = 64to32(t6)
   09 | t8 = 32to16(t7)
   10 | PUT(ax) = t8
   11 | t9 = 64HIto32(t6)
   12 | t10 = 32to16(t9)
   13 | PUT(dx) = t10
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t11 = GET:I64(rsp)
   17 | t12 = LDle:I64(t11)
   18 | t13 = Add64(t11,0x0000000000000008)
   19 | PUT(rsp) = t13
   20 | t14 = Sub64(t13,0x0000000000000080)
   21 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:48:05,381 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:05,399 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:05,414 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbb_rh_rh/sbbb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Sub8(t0,t1)
   11 | t10 = Sub8(t9,t8)
   12 | PUT(cc_op) = 0x000000000000000d
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(ah) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:00,467 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:00,499 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:00,525 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorw_r16_one/rorw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I16 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = Shl16(t0,0x0f)
   03 | t2 = Shr16(t0,0x01)
   04 | t3 = Or16(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x000000000000002a
   11 | t9 = 16Uto64(t3)
   12 | PUT(cc_dep1) = t9
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = t8
   15 | PUT(bx) = t3
   16 | PUT(pc) = 0x0000000000400003
   17 | ------ IMark(0x400003, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:48:58,891 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:58,922 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:58,965 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub132ps_xmm_xmm_xmm/vfmsub132ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = NegF32(t18)
   22 | t20 = 64HIto32(t4)
   23 | t21 = ReinterpI32asF32(t20)
   24 | t22 = 64HIto32(t3)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = MAddF32(0x00000000,t23,t21,t19)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = NegF32(t26)
   31 | t28 = 64to32(t7)
   32 | t29 = ReinterpI32asF32(t28)
   33 | t30 = 64to32(t6)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = MAddF32(0x00000000,t31,t29,t27)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = NegF32(t34)
   40 | t36 = 64HIto32(t7)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = 64HIto32(t6)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = MAddF32(0x00000000,t39,t37,t35)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:49:06,705 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:06,725 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:06,774 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd213ps_ymm_ymm_ymm/vfmsubadd213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_I32 t50:Ity_F32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_I32 t63:Ity_F32 t64:Ity_I32 t65:Ity_F32 t66:Ity_F32 t67:Ity_I32 t68:Ity_F32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | PUT(ymm1) = t21
   24 | t22 = 64HIto32(t5)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = NegF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t7)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = 64to32(t6)
   38 | t35 = ReinterpI32asF32(t34)
   39 | t36 = MAddF32(0x00000000,t35,t33,t31)
   40 | PUT(264) = t36
   41 | t37 = 64HIto32(t8)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = NegF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = 64to32(t10)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = 64to32(t9)
   55 | t50 = ReinterpI32asF32(t49)
   56 | t51 = MAddF32(0x00000000,t50,t48,t46)
   57 | PUT(272) = t51
   58 | t52 = 64HIto32(t11)
   59 | t53 = ReinterpI32asF32(t52)
   60 | t54 = NegF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = 64to32(t13)
   70 | t63 = ReinterpI32asF32(t62)
   71 | t64 = 64to32(t12)
   72 | t65 = ReinterpI32asF32(t64)
   73 | t66 = MAddF32(0x00000000,t65,t63,t61)
   74 | PUT(280) = t66
   75 | t67 = 64HIto32(t14)
   76 | t68 = ReinterpI32asF32(t67)
   77 | t69 = NegF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
WARNING | 2018-04-08 20:47:38,267 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:38,286 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,309 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovsxbq_xmm_xmm/pmovsxbq_xmm_xmm.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I16(ymm2)
   02 | t1 = 16to8(t0)
   03 | t2 = 8Sto64(t1)
   04 | t3 = 16HIto8(t0)
   05 | t4 = 8Sto64(t3)
   06 | t5 = 64HLtoV128(t4,t2)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:29,160 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:29,179 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:29,198 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sqrtss_xmm_xmm/sqrtss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I32 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:I32(ymm2)
   03 | t2 = SetV128lo32(t0,t1)
   04 | t3 = Sqrt32F0x4(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:43,914 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:43,935 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:43,947 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpavgw_ymm_ymm_ymm/vpavgw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Avg16Ux16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:39,029 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:39,052 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:39,076 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpcklwd_ymm_ymm_ymm/vpunpcklwd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveLO16x8(t5,t3)
   08 | t7 = InterleaveLO16x8(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:33,222 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:33,239 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:33,249 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubw_ymm_ymm_ymm/vpsubw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Sub16x16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:05,519 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,537 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,564 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/hsubpd_xmm_xmm/hsubpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = 64HLtoV128(t2,t4)
   08 | t7 = 64HLtoV128(t3,t5)
   09 | t8 = Sub64Fx2(0x00000000,t6,t7)
   10 | PUT(xmm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:14,920 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:14,962 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:14,971 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnb_r8/setnb_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000003,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,074 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,151 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,193 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpb_r8_r8/cmpb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | PUT(cc_op) = 0x0000000000000005
   04 | t2 = 8Uto64(t0)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t1)
   07 | PUT(cc_dep2) = t3
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:37,202 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:37,237 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:37,293 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovzxbd_xmm_xmm/pmovzxbd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:11,185 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:11,205 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:11,215 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setl_r8/setl_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000c,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:17,174 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:17,194 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:17,266 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulps_xmm_xmm/mulps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Mul32Fx4(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:11,749 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:11,766 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:11,786 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setna_r8/setna_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000006,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,598 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,714 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,785 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovzl_r32_r32/cmovzl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000004,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:13,045 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:13,069 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,102 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movsldup_xmm_xmm/movsldup_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64to32(t1)
   06 | t5 = 32HLto64(t3,t3)
   07 | t6 = 32HLto64(t4,t4)
   08 | t7 = 64HLtoV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:32,095 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:32,115 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:32,161 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testb_r8_r8/testb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = GET:I8(bl)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:43,448 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:43,636 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:43,721 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnoq_r64_r64/cmovnoq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000001,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:38,961 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:38,978 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:38,989 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpxor_xmm_xmm_xmm/vpxor_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = XorV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:38,278 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:38,325 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,357 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovzxwd_xmm_xmm/pmovzxwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:10,788 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:10,804 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:10,815 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setle_rh/setle_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000e,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:15,936 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:15,948 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:15,964 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulhw_xmm_xmm_xmm/vpmulhw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = MulHi16Sx8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:26,137 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:26,164 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:26,182 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pabsw_xmm_xmm/pabsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = SarN16x4(t2,0x0f)
   05 | t4 = Not64(t3)
   06 | t5 = Sub16x4(0x0000000000000000,t2)
   07 | t6 = And64(t5,t3)
   08 | t7 = And64(t2,t4)
   09 | t8 = Or64(t7,t6)
   10 | t9 = SarN16x4(t1,0x0f)
   11 | t10 = Not64(t9)
   12 | t11 = Sub16x4(0x0000000000000000,t1)
   13 | t12 = And64(t11,t9)
   14 | t13 = And64(t1,t10)
   15 | t14 = Or64(t13,t12)
   16 | t15 = 64HLtoV128(t14,t8)
   17 | PUT(xmm1) = t15
   18 | PUT(pc) = 0x0000000000400005
   19 | ------ IMark(0x400005, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:32,617 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:32,634 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:32,643 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubusw_ymm_ymm_ymm/vpsubusw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QSub16Ux16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:01,345 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:01,498 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:01,559 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/haddpd_xmm_xmm/haddpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = 64HLtoV128(t2,t4)
   08 | t7 = 64HLtoV128(t3,t5)
   09 | t8 = Add64Fx2(0x00000000,t6,t7)
   10 | PUT(xmm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:43,184 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:43,203 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:43,230 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/por_xmm_xmm/por_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = OrV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,691 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,751 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,826 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpow_r16_r16/cmovpow_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000b,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:32,903 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:32,928 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:32,993 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaxsd_xmm_xmm/pmaxsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max32Sx4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:34,721 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:34,746 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:34,786 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pminud_xmm_xmm/pminud_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min32Ux4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:05,495 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,555 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,621 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/maxpd_xmm_xmm/maxpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max64Fx2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:21,944 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:21,955 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:21,961 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovdqa_xmm_xmm/vmovdqa_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(272) = 0
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:40,527 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:40,544 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:40,552 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddusb_xmm_xmm_xmm/vpaddusb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QAdd8Ux16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:08,304 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:08,404 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:08,458 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movb_r8_r8/movb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(cl)
   02 | PUT(bl) = t0
   03 | PUT(pc) = 0x0000000000400002
   04 | ------ IMark(0x400002, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:21,710 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:21,728 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:21,791 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orb_r8_rh/orb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = Or8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bl) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:48,301 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:48,329 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:48,338 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvttps2dq_xmm_xmm/vcvttps2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_F32 t8:Ity_F64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F64 t12:Ity_I32 t13:Ity_F32 t14:Ity_F64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F64 t18:Ity_I32 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = 64to32(t1)
   07 | t6 = 64HIto32(t1)
   08 | t7 = ReinterpI32asF32(t6)
   09 | t8 = F32toF64(t7)
   10 | t9 = F64toI32S(0x00000003,t8)
   11 | PUT(268) = t9
   12 | t10 = ReinterpI32asF32(t5)
   13 | t11 = F32toF64(t10)
   14 | t12 = F64toI32S(0x00000003,t11)
   15 | PUT(264) = t12
   16 | t13 = ReinterpI32asF32(t4)
   17 | t14 = F32toF64(t13)
   18 | t15 = F64toI32S(0x00000003,t14)
   19 | PUT(260) = t15
   20 | t16 = ReinterpI32asF32(t3)
   21 | t17 = F32toF64(t16)
   22 | t18 = F64toI32S(0x00000003,t17)
   23 | PUT(ymm1) = t18
   24 | PUT(272) = 0
   25 | PUT(pc) = 0x0000000000400004
   26 | ------ IMark(0x400004, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:47:02,690 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:02,740 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:02,809 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imulb_rh/imulb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I8(al)
   03 | PUT(cc_op) = 0x0000000000000031
   04 | t2 = 8Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = MullS8(t1,t0)
   09 | PUT(ax) = t4
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:26,844 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:27,154 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:27,236 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addw_r16_r16/addw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = Add16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000002
   05 | t3 = 16Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 16Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bx) = t2
   10 | PUT(pc) = 0x0000000000400003
   11 | ------ IMark(0x400003, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:29,280 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:29,299 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:29,309 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubd_xmm_xmm_xmm/vpsubd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Sub32x4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:37,132 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:37,170 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:37,196 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddb_xmm_xmm_xmm/vpaddb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add8x16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:43,421 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:43,601 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:43,677 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnol_r32_r32/cmovnol_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000001,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:50:55,047 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:55,060 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:55,073 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorb_r8_r8/xorb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = Xor8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bl) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:46,469 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:46,486 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:46,494 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpckhpd_ymm_ymm_ymm/vunpckhpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_V256 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_1(t0)
   04 | t3 = V256to64_3(t0)
   05 | t4 = V256to64_1(t1)
   06 | t5 = V256to64_3(t1)
   07 | t6 = 64x4toV256(t5,t3,t4,t2)
   08 | PUT(ymm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:43,993 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:44,011 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:44,025 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpblendvb_xmm_xmm_xmm_xmm/vpblendvb_xmm_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 6, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm4)
   04 | t3 = SarN8x16(t2,0x07)
   05 | t4 = NotV128(t3)
   06 | t5 = AndV128(t1,t4)
   07 | t6 = AndV128(t0,t3)
   08 | t7 = OrV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(272) = 0
   11 | PUT(pc) = 0x0000000000400006
   12 | ------ IMark(0x400006, 1, 0) ------
   13 | t8 = GET:I64(rsp)
   14 | t9 = LDle:I64(t8)
   15 | t10 = Add64(t8,0x0000000000000008)
   16 | PUT(rsp) = t10
   17 | t11 = Sub64(t10,0x0000000000000080)
   18 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:33,213 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:33,237 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:33,254 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpabsb_ymm_ymm/vpabsb_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_V128 t33:Ity_V256 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = V256toV128_1(t0)
   03 | t2 = V256toV128_0(t0)
   04 | t3 = V128HIto64(t2)
   05 | t4 = V128to64(t2)
   06 | t5 = SarN8x8(t4,0x07)
   07 | t6 = Not64(t5)
   08 | t7 = Sub8x8(0x0000000000000000,t4)
   09 | t8 = And64(t7,t5)
   10 | t9 = And64(t4,t6)
   11 | t10 = Or64(t9,t8)
   12 | t11 = SarN8x8(t3,0x07)
   13 | t12 = Not64(t11)
   14 | t13 = Sub8x8(0x0000000000000000,t3)
   15 | t14 = And64(t13,t11)
   16 | t15 = And64(t3,t12)
   17 | t16 = Or64(t15,t14)
   18 | t17 = 64HLtoV128(t16,t10)
   19 | t18 = V128HIto64(t1)
   20 | t19 = V128to64(t1)
   21 | t20 = SarN8x8(t19,0x07)
   22 | t21 = Not64(t20)
   23 | t22 = Sub8x8(0x0000000000000000,t19)
   24 | t23 = And64(t22,t20)
   25 | t24 = And64(t19,t21)
   26 | t25 = Or64(t24,t23)
   27 | t26 = SarN8x8(t18,0x07)
   28 | t27 = Not64(t26)
   29 | t28 = Sub8x8(0x0000000000000000,t18)
   30 | t29 = And64(t28,t26)
   31 | t30 = And64(t18,t27)
   32 | t31 = Or64(t30,t29)
   33 | t32 = 64HLtoV128(t31,t25)
   34 | t33 = V128HLtoV256(t32,t17)
   35 | PUT(ymm1) = t33
   36 | PUT(pc) = 0x0000000000400005
   37 | ------ IMark(0x400005, 1, 0) ------
   38 | t34 = GET:I64(rsp)
   39 | t35 = LDle:I64(t34)
   40 | t36 = Add64(t34,0x0000000000000008)
   41 | PUT(rsp) = t36
   42 | t37 = Sub64(t36,0x0000000000000080)
   43 | ====== AbiHint(0xt37, 128, t35) ======
   NEXT: PUT(rip) = t35; Ijk_Ret
}
WARNING | 2018-04-08 20:49:00,159 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:00,193 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:00,232 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213pd_ymm_ymm_ymm/vfmsub213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_I64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_F64 t22:Ity_I64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_F64 t27:Ity_I64 t28:Ity_F64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_I64 t33:Ity_F64 t34:Ity_F64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = NegF64(t12)
   16 | t14 = V256to64_1(t0)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = V256to64_1(t1)
   19 | t17 = ReinterpI64asF64(t16)
   20 | t18 = MAddF64(0x00000000,t17,t15,t13)
   21 | PUT(264) = t18
   22 | t19 = V256to64_2(t2)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = NegF64(t20)
   25 | t22 = V256to64_2(t0)
   26 | t23 = ReinterpI64asF64(t22)
   27 | t24 = V256to64_2(t1)
   28 | t25 = ReinterpI64asF64(t24)
   29 | t26 = MAddF64(0x00000000,t25,t23,t21)
   30 | PUT(272) = t26
   31 | t27 = V256to64_3(t2)
   32 | t28 = ReinterpI64asF64(t27)
   33 | t29 = NegF64(t28)
   34 | t30 = V256to64_3(t0)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = V256to64_3(t1)
   37 | t33 = ReinterpI64asF64(t32)
   38 | t34 = MAddF64(0x00000000,t33,t31,t29)
   39 | PUT(280) = t34
   40 | PUT(pc) = 0x0000000000400005
   41 | ------ IMark(0x400005, 1, 0) ------
   42 | t35 = GET:I64(rsp)
   43 | t36 = LDle:I64(t35)
   44 | t37 = Add64(t35,0x0000000000000008)
   45 | PUT(rsp) = t37
   46 | t38 = Sub64(t37,0x0000000000000080)
   47 | ====== AbiHint(0xt38, 128, t36) ======
   NEXT: PUT(rip) = t36; Ijk_Ret
}
WARNING | 2018-04-08 20:47:26,991 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:27,009 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:27,034 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pavgb_xmm_xmm/pavgb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Avg8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:43,914 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:43,935 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:43,956 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psrlw_xmm_xmm/psrlw_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN16x8(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000010)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:53,056 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:53,070 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:53,084 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpermilpd_xmm_xmm_xmm/vpermilpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I1 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t1)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128HIto64(t0)
   07 | t6 = Shr64(t4,0x01)
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t3,t2)
   10 | t9 = Shr64(t5,0x01)
   11 | t10 = 64to1(t9)
   12 | t11 = ITE(t10,t3,t2)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:12,190 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:12,210 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:12,223 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxbw_xmm_xmm/vpmovzxbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:22,160 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:22,180 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:22,190 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllvd_ymm_ymm_ymm/vpsllvd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I64 t25:Ity_I64 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I8 t31:Ity_I32 t32:Ity_I1 t33:Ity_I32 t34:Ity_I8 t35:Ity_I32 t36:Ity_I1 t37:Ity_I32 t38:Ity_I8 t39:Ity_I32 t40:Ity_I1 t41:Ity_I32 t42:Ity_I8 t43:Ity_I32 t44:Ity_I1 t45:Ity_I32 t46:Ity_I8 t47:Ity_I32 t48:Ity_I1 t49:Ity_I32 t50:Ity_I8 t51:Ity_I32 t52:Ity_I1 t53:Ity_I32 t54:Ity_I8 t55:Ity_I32 t56:Ity_I1 t57:Ity_I32 t58:Ity_I8 t59:Ity_I32 t60:Ity_I1 t61:Ity_I32 t62:Ity_I64 t63:Ity_I64 t64:Ity_I64 t65:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t2)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = V128HIto64(t3)
   12 | t11 = V128to64(t3)
   13 | t12 = 64to32(t11)
   14 | t13 = 64HIto32(t11)
   15 | t14 = 64to32(t10)
   16 | t15 = 64HIto32(t10)
   17 | t16 = V256toV128_1(t0)
   18 | t17 = V256toV128_0(t0)
   19 | t18 = V128HIto64(t16)
   20 | t19 = V128to64(t16)
   21 | t20 = 64to32(t19)
   22 | t21 = 64HIto32(t19)
   23 | t22 = 64to32(t18)
   24 | t23 = 64HIto32(t18)
   25 | t24 = V128HIto64(t17)
   26 | t25 = V128to64(t17)
   27 | t26 = 64to32(t25)
   28 | t27 = 64HIto32(t25)
   29 | t28 = 64to32(t24)
   30 | t29 = 64HIto32(t24)
   31 | t30 = 32to8(t26)
   32 | t31 = Shl32(t12,t30)
   33 | t32 = CmpLT32U(t26,0x00000020)
   34 | t33 = ITE(t32,t31,0x00000000)
   35 | t34 = 32to8(t27)
   36 | t35 = Shl32(t13,t34)
   37 | t36 = CmpLT32U(t27,0x00000020)
   38 | t37 = ITE(t36,t35,0x00000000)
   39 | t38 = 32to8(t28)
   40 | t39 = Shl32(t14,t38)
   41 | t40 = CmpLT32U(t28,0x00000020)
   42 | t41 = ITE(t40,t39,0x00000000)
   43 | t42 = 32to8(t29)
   44 | t43 = Shl32(t15,t42)
   45 | t44 = CmpLT32U(t29,0x00000020)
   46 | t45 = ITE(t44,t43,0x00000000)
   47 | t46 = 32to8(t20)
   48 | t47 = Shl32(t6,t46)
   49 | t48 = CmpLT32U(t20,0x00000020)
   50 | t49 = ITE(t48,t47,0x00000000)
   51 | t50 = 32to8(t21)
   52 | t51 = Shl32(t7,t50)
   53 | t52 = CmpLT32U(t21,0x00000020)
   54 | t53 = ITE(t52,t51,0x00000000)
   55 | t54 = 32to8(t22)
   56 | t55 = Shl32(t8,t54)
   57 | t56 = CmpLT32U(t22,0x00000020)
   58 | t57 = ITE(t56,t55,0x00000000)
   59 | t58 = 32to8(t23)
   60 | t59 = Shl32(t9,t58)
   61 | t60 = CmpLT32U(t23,0x00000020)
   62 | t61 = ITE(t60,t59,0x00000000)
   63 | PUT(ymm1) = t33
   64 | PUT(260) = t37
   65 | PUT(264) = t41
   66 | PUT(268) = t45
   67 | PUT(272) = t49
   68 | PUT(276) = t53
   69 | PUT(280) = t57
   70 | PUT(284) = t61
   71 | PUT(pc) = 0x0000000000400005
   72 | ------ IMark(0x400005, 1, 0) ------
   73 | t62 = GET:I64(rsp)
   74 | t63 = LDle:I64(t62)
   75 | t64 = Add64(t62,0x0000000000000008)
   76 | PUT(rsp) = t64
   77 | t65 = Sub64(t64,0x0000000000000080)
   78 | ====== AbiHint(0xt65, 128, t63) ======
   NEXT: PUT(rip) = t63; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,696 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:37,931 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:38,043 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andnl_r32_r32_r32/andnl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rdx)
   04 | t3 = 64to32(t2)
   05 | t4 = Not32(t1)
   06 | t5 = And32(t4,t3)
   07 | t6 = 32Uto64(t5)
   08 | PUT(rbx) = t6
   09 | PUT(cc_op) = 0x0000000000000035
   10 | t7 = 32Uto64(t5)
   11 | PUT(cc_dep1) = t7
   12 | PUT(cc_dep2) = 0x0000000000000000
   13 | PUT(pc) = 0x0000000000400005
   14 | ------ IMark(0x400005, 1, 0) ------
   15 | t8 = GET:I64(rsp)
   16 | t9 = LDle:I64(t8)
   17 | t10 = Add64(t8,0x0000000000000008)
   18 | PUT(rsp) = t10
   19 | t11 = Sub64(t10,0x0000000000000080)
   20 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:47:30,409 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:30,428 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:30,460 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phaddsw_xmm_xmm/phaddsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = QAdd16Sx4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = QAdd16Sx4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:22,820 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:22,838 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:22,847 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/negw_r16/negw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = Sub16(0x0000,t0)
   03 | PUT(cc_op) = 0x0000000000000006
   04 | PUT(cc_dep1) = 0x0000000000000000
   05 | t2 = 16Uto64(t0)
   06 | PUT(cc_dep2) = t2
   07 | PUT(bx) = t1
   08 | PUT(pc) = 0x0000000000400003
   09 | ------ IMark(0x400003, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,041 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,135 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,198 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovlel_r32_r32/cmovlel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000e,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:23,669 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:23,908 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:24,055 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andb_rh_rh/andb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(ah) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:09,650 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:09,675 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:09,685 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd231pd_xmm_xmm_xmm/vfnmadd231pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | t11 = NegF64(t10)
   13 | PUT(ymm1) = t11
   14 | t12 = V128HIto64(t0)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = NegF64(t13)
   17 | t15 = V128HIto64(t2)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = V128HIto64(t1)
   20 | t18 = ReinterpI64asF64(t17)
   21 | t19 = MAddF64(0x00000000,t18,t16,t14)
   22 | t20 = NegF64(t19)
   23 | PUT(264) = t20
   24 | PUT(272) = 0
   25 | PUT(pc) = 0x0000000000400005
   26 | ------ IMark(0x400005, 1, 0) ------
   27 | t21 = GET:I64(rsp)
   28 | t22 = LDle:I64(t21)
   29 | t23 = Add64(t21,0x0000000000000008)
   30 | PUT(rsp) = t23
   31 | t24 = Sub64(t23,0x0000000000000080)
   32 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:49:25,480 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:25,499 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:25,515 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskps_r32_xmm/vmovmskps_r32_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(260)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(264)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(268)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = Or32(t8,t11)
   14 | t13 = Or32(t2,t5)
   15 | t14 = Or32(t13,t12)
   16 | t15 = 32Uto64(t14)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400004
   19 | ------ IMark(0x400004, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:20,908 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:20,960 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:20,999 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovaps_ymm_ymm/vmovaps_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:46:20,264 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:20,371 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:20,504 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/adcb_rh_rh/adcb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Add8(t0,t1)
   11 | t10 = Add8(t9,t8)
   12 | PUT(cc_op) = 0x0000000000000009
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(ah) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:49:48,554 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:48,569 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:48,577 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqq_ymm_ymm_ymm/vpcmpeqq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpEQ64x4(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:37,270 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:37,294 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:37,330 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddd_xmm_xmm_xmm/vpaddd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add32x4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:35,321 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:35,342 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:35,353 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testl_r32_r32/testl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = And32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000013
   07 | t5 = 32Uto64(t4)
   08 | PUT(cc_dep1) = t5
   09 | PUT(cc_dep2) = 0x0000000000000000
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t6 = GET:I64(rsp)
   13 | t7 = LDle:I64(t6)
   14 | t8 = Add64(t6,0x0000000000000008)
   15 | PUT(rsp) = t8
   16 | t9 = Sub64(t8,0x0000000000000080)
   17 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:56,385 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:56,410 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:56,420 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd231ss_xmm_xmm_xmm/vfmadd231ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = MAddF32(0x00000000,t1,t2,t0)
   05 | PUT(ymm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:03,380 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:03,411 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:03,446 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxud_ymm_ymm_ymm/vpmaxud_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Max32Ux8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:24,616 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:24,636 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:24,647 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlxq_r64_r64_r64/shlxq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = And64(t0,0x000000000000003f)
   04 | t3 = 64to8(t2)
   05 | t4 = Shl64(t1,t3)
   06 | PUT(rbx) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:02,197 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:02,215 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:02,255 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub231ps_ymm_ymm_ymm/vfmsub231ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_I32 t45:Ity_F32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_F32 t58:Ity_I32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_F32 t66:Ity_I32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_F32 t71:Ity_I32 t72:Ity_F32 t73:Ity_F32 t74:Ity_I32 t75:Ity_F32 t76:Ity_I32 t77:Ity_F32 t78:Ity_F32 t79:Ity_I64 t80:Ity_I64 t81:Ity_I64 t82:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t0)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t0)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t0)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t0)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = NegF32(t24)
   28 | t26 = 64HIto32(t4)
   29 | t27 = ReinterpI32asF32(t26)
   30 | t28 = 64HIto32(t3)
   31 | t29 = ReinterpI32asF32(t28)
   32 | t30 = MAddF32(0x00000000,t29,t27,t25)
   33 | PUT(260) = t30
   34 | t31 = 64to32(t8)
   35 | t32 = ReinterpI32asF32(t31)
   36 | t33 = NegF32(t32)
   37 | t34 = 64to32(t7)
   38 | t35 = ReinterpI32asF32(t34)
   39 | t36 = 64to32(t6)
   40 | t37 = ReinterpI32asF32(t36)
   41 | t38 = MAddF32(0x00000000,t37,t35,t33)
   42 | PUT(264) = t38
   43 | t39 = 64HIto32(t8)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = NegF32(t40)
   46 | t42 = 64HIto32(t7)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = 64HIto32(t6)
   49 | t45 = ReinterpI32asF32(t44)
   50 | t46 = MAddF32(0x00000000,t45,t43,t41)
   51 | PUT(268) = t46
   52 | t47 = 64to32(t11)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = NegF32(t48)
   55 | t50 = 64to32(t10)
   56 | t51 = ReinterpI32asF32(t50)
   57 | t52 = 64to32(t9)
   58 | t53 = ReinterpI32asF32(t52)
   59 | t54 = MAddF32(0x00000000,t53,t51,t49)
   60 | PUT(272) = t54
   61 | t55 = 64HIto32(t11)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = NegF32(t56)
   64 | t58 = 64HIto32(t10)
   65 | t59 = ReinterpI32asF32(t58)
   66 | t60 = 64HIto32(t9)
   67 | t61 = ReinterpI32asF32(t60)
   68 | t62 = MAddF32(0x00000000,t61,t59,t57)
   69 | PUT(276) = t62
   70 | t63 = 64to32(t14)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = NegF32(t64)
   73 | t66 = 64to32(t13)
   74 | t67 = ReinterpI32asF32(t66)
   75 | t68 = 64to32(t12)
   76 | t69 = ReinterpI32asF32(t68)
   77 | t70 = MAddF32(0x00000000,t69,t67,t65)
   78 | PUT(280) = t70
   79 | t71 = 64HIto32(t14)
   80 | t72 = ReinterpI32asF32(t71)
   81 | t73 = NegF32(t72)
   82 | t74 = 64HIto32(t13)
   83 | t75 = ReinterpI32asF32(t74)
   84 | t76 = 64HIto32(t12)
   85 | t77 = ReinterpI32asF32(t76)
   86 | t78 = MAddF32(0x00000000,t77,t75,t73)
   87 | PUT(284) = t78
   88 | PUT(pc) = 0x0000000000400005
   89 | ------ IMark(0x400005, 1, 0) ------
   90 | t79 = GET:I64(rsp)
   91 | t80 = LDle:I64(t79)
   92 | t81 = Add64(t79,0x0000000000000008)
   93 | PUT(rsp) = t81
   94 | t82 = Sub64(t81,0x0000000000000080)
   95 | ====== AbiHint(0xt82, 128, t80) ======
   NEXT: PUT(rip) = t80; Ijk_Ret
}
WARNING | 2018-04-08 20:49:09,144 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:09,207 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:09,236 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd213pd_xmm_xmm_xmm/vfnmadd213pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | t11 = NegF64(t10)
   13 | PUT(ymm1) = t11
   14 | t12 = V128HIto64(t2)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = NegF64(t13)
   17 | t15 = V128HIto64(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = V128HIto64(t1)
   20 | t18 = ReinterpI64asF64(t17)
   21 | t19 = MAddF64(0x00000000,t18,t16,t14)
   22 | t20 = NegF64(t19)
   23 | PUT(264) = t20
   24 | PUT(272) = 0
   25 | PUT(pc) = 0x0000000000400005
   26 | ------ IMark(0x400005, 1, 0) ------
   27 | t21 = GET:I64(rsp)
   28 | t22 = LDle:I64(t21)
   29 | t23 = Add64(t21,0x0000000000000008)
   30 | PUT(rsp) = t23
   31 | t24 = Sub64(t23,0x0000000000000080)
   32 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:50:05,402 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:05,420 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:05,453 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminuw_xmm_xmm_xmm/vpminuw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:07,138 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:07,159 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:07,179 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/seta_rh/seta_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000007,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:24,172 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:24,433 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:24,500 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addl_r32_r32/addl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = Add32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000003
   07 | t5 = 32Uto64(t1)
   08 | PUT(cc_dep1) = t5
   09 | t6 = 32Uto64(t3)
   10 | PUT(cc_dep2) = t6
   11 | t7 = 32Uto64(t4)
   12 | PUT(rbx) = t7
   13 | PUT(pc) = 0x0000000000400002
   14 | ------ IMark(0x400002, 1, 0) ------
   15 | t8 = GET:I64(rsp)
   16 | t9 = LDle:I64(t8)
   17 | t10 = Add64(t8,0x0000000000000008)
   18 | PUT(rsp) = t10
   19 | t11 = Sub64(t10,0x0000000000000080)
   20 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:19,363 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:19,388 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:19,398 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vminsd_xmm_xmm_xmm/vminsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Min64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,686 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,749 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:56,837 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvttsd2siq_r64_xmm/cvttsd2siq_r64_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = F64toI64S(0x00000003,t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:49:32,380 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:32,391 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:32,398 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vorps_xmm_xmm_xmm/vorps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = OrV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:26,352 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:26,370 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:26,397 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/packuswb_xmm_xmm/packuswb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = QNarrowBin16Sto8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,411 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,510 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsd2ss_xmm_xmm/cvtsd2ss_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F64toF32(t3,t0)
   06 | PUT(ymm1) = t4
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:41,046 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:41,082 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:41,113 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddusw_ymm_ymm_ymm/vpaddusw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QAdd16Ux16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:02,766 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:02,796 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:02,858 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/idivw_r16/idivw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I32 t4:Ity_I64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I16 t9:Ity_I32 t10:Ity_I16 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(ax)
   03 | t2 = GET:I16(dx)
   04 | t3 = 16HLto32(t2,t1)
   05 | t4 = 32Sto64(t3)
   06 | t5 = 16Sto32(t0)
   07 | t6 = DivModS64to32(t4,t5)
   08 | t7 = 64to32(t6)
   09 | t8 = 32to16(t7)
   10 | PUT(ax) = t8
   11 | t9 = 64HIto32(t6)
   12 | t10 = 32to16(t9)
   13 | PUT(dx) = t10
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t11 = GET:I64(rsp)
   17 | t12 = LDle:I64(t11)
   18 | t13 = Add64(t11,0x0000000000000008)
   19 | PUT(rsp) = t13
   20 | t14 = Sub64(t13,0x0000000000000080)
   21 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:47:03,874 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,011 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,057 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imull_r32_r32/imull_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | PUT(cc_op) = 0x0000000000000033
   06 | t4 = 32Uto64(t3)
   07 | PUT(cc_dep1) = t4
   08 | t5 = 32Uto64(t1)
   09 | PUT(cc_dep2) = t5
   10 | t6 = Mul32(t3,t1)
   11 | t7 = 32Uto64(t6)
   12 | PUT(rbx) = t7
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t8 = GET:I64(rsp)
   16 | t9 = LDle:I64(t8)
   17 | t10 = Add64(t8,0x0000000000000008)
   18 | PUT(rsp) = t10
   19 | t11 = Sub64(t10,0x0000000000000080)
   20 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:57,844 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:57,865 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:57,876 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub231pd_ymm_ymm_ymm/vfmaddsub231pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_I64 t24:Ity_F64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t0)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V256to64_1(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | t18 = V256to64_2(t0)
   22 | t19 = ReinterpI64asF64(t18)
   23 | t20 = NegF64(t19)
   24 | t21 = V256to64_2(t2)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = V256to64_2(t1)
   27 | t24 = ReinterpI64asF64(t23)
   28 | t25 = MAddF64(0x00000000,t24,t22,t20)
   29 | PUT(272) = t25
   30 | t26 = V256to64_3(t0)
   31 | t27 = ReinterpI64asF64(t26)
   32 | t28 = V256to64_3(t2)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = V256to64_3(t1)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = MAddF64(0x00000000,t31,t29,t27)
   37 | PUT(280) = t32
   38 | PUT(pc) = 0x0000000000400005
   39 | ------ IMark(0x400005, 1, 0) ------
   40 | t33 = GET:I64(rsp)
   41 | t34 = LDle:I64(t33)
   42 | t35 = Add64(t33,0x0000000000000008)
   43 | PUT(rsp) = t35
   44 | t36 = Sub64(t35,0x0000000000000080)
   45 | ====== AbiHint(0xt36, 128, t34) ======
   NEXT: PUT(rip) = t34; Ijk_Ret
}
WARNING | 2018-04-08 20:49:33,118 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:33,141 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:33,151 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpabsb_xmm_xmm/vpabsb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = SarN8x8(t2,0x07)
   05 | t4 = Not64(t3)
   06 | t5 = Sub8x8(0x0000000000000000,t2)
   07 | t6 = And64(t5,t3)
   08 | t7 = And64(t2,t4)
   09 | t8 = Or64(t7,t6)
   10 | t9 = SarN8x8(t1,0x07)
   11 | t10 = Not64(t9)
   12 | t11 = Sub8x8(0x0000000000000000,t1)
   13 | t12 = And64(t11,t9)
   14 | t13 = And64(t1,t10)
   15 | t14 = Or64(t13,t12)
   16 | t15 = 64HLtoV128(t14,t8)
   17 | PUT(xmm1) = t15
   18 | PUT(272) = 0
   19 | PUT(pc) = 0x0000000000400005
   20 | ------ IMark(0x400005, 1, 0) ------
   21 | t16 = GET:I64(rsp)
   22 | t17 = LDle:I64(t16)
   23 | t18 = Add64(t16,0x0000000000000008)
   24 | PUT(rsp) = t18
   25 | t19 = Sub64(t18,0x0000000000000080)
   26 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:40,420 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:40,451 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:40,464 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddusb_ymm_ymm_ymm/vpaddusb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QAdd8Ux32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:15,603 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:15,620 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:15,640 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhaddpd_xmm_xmm_xmm/vhaddpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = 64HLtoV128(t2,t4)
   08 | t7 = 64HLtoV128(t3,t5)
   09 | t8 = Add64Fx2(0x00000000,t6,t7)
   10 | PUT(xmm1) = t8
   11 | PUT(272) = 0
   12 | PUT(pc) = 0x0000000000400004
   13 | ------ IMark(0x400004, 1, 0) ------
   14 | t9 = GET:I64(rsp)
   15 | t10 = LDle:I64(t9)
   16 | t11 = Add64(t9,0x0000000000000008)
   17 | PUT(rsp) = t11
   18 | t12 = Sub64(t11,0x0000000000000080)
   19 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:56,858 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:56,869 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:56,875 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorb_rh_rh/xorb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = Xor8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(ah) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:31,304 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:31,325 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:31,339 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subb_r8_r8/subb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = Sub8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bl) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:07,599 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:07,621 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:07,634 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxbd_ymm_xmm/vpmovsxbd_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V256 t6:Ity_V256 t7:Ity_V256 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = InterleaveLO8x16(0,t0)
   05 | t4 = InterleaveHI8x16(0,t3)
   06 | t5 = V128HLtoV256(t4,t2)
   07 | t6 = ShlN32x8(t5,0x18)
   08 | t7 = SarN32x8(t6,0x18)
   09 | PUT(ymm1) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:47:58,418 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:58,433 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:58,469 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorw_r16_cl/rorw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I16 t6:Ity_I16 t7:Ity_I16 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = And8(t2,0x0f)
   05 | t4 = Sub8(0x10,t3)
   06 | t5 = Shl16(t0,t4)
   07 | t6 = Shr16(t0,t3)
   08 | t7 = Or16(t6,t5)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = GET:I64(cc_dep1)
   11 | t10 = GET:I64(cc_dep2)
   12 | t11 = GET:I64(cc_ndep)
   13 | t12 = amd64g_calculate_rflags_all(t8,t9,t10,t11):Ity_I64
   14 | t13 = CmpNE8(t2,0x00)
   15 | t14 = ITE(t13,0x000000000000002a,t8)
   16 | PUT(cc_op) = t14
   17 | t15 = 16Uto64(t7)
   18 | t16 = ITE(t13,t15,t9)
   19 | PUT(cc_dep1) = t16
   20 | t17 = ITE(t13,0x0000000000000000,t10)
   21 | PUT(cc_dep2) = t17
   22 | t18 = ITE(t13,t12,t11)
   23 | PUT(cc_ndep) = t18
   24 | PUT(bx) = t7
   25 | PUT(pc) = 0x0000000000400003
   26 | ------ IMark(0x400003, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:49:58,602 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:58,614 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:58,621 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxsb_xmm_xmm_xmm/vpmaxsb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max8Sx16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:12,150 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,232 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:12,296 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movaps_xmm_xmm/movaps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(pc) = 0x0000000000400003
   04 | ------ IMark(0x400003, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:34,676 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:34,693 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:34,722 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pminub_xmm_xmm/pminub_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,762 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,958 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:35,079 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cltq/cltq.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Sto64(t1)
   04 | PUT(rax) = t2
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:27,920 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:27,942 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:27,967 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlw_ymm_ymm_xmm/vpsrlw_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_I1 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN16x16(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000010)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:19,743 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:19,798 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:19,846 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/nopl_r32/nopl_r32.o
IRSB {
   

   NEXT: PUT(rip) = 0x0000000000400000; Ijk_NoDecode
}
WARNING | 2018-04-08 20:47:09,352 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,390 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,422 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movd_r32_xmm/movd_r32_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = 32Uto64(t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:49:37,580 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:37,646 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:37,666 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddb_ymm_ymm_ymm/vpaddb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Add8x32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:17,928 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:17,970 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:18,033 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulss_xmm_xmm/mulss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Mul32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:05,256 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:05,289 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:05,296 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd231pd_xmm_xmm_xmm/vfmsubadd231pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V128HIto64(t0)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = NegF64(t11)
   15 | t13 = V128HIto64(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t18 = GET:I64(rsp)
   25 | t19 = LDle:I64(t18)
   26 | t20 = Add64(t18,0x0000000000000008)
   27 | PUT(rsp) = t20
   28 | t21 = Sub64(t20,0x0000000000000080)
   29 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:48:08,694 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:08,730 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:08,753 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sete_r8/sete_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000004,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:24,665 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:24,684 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:24,693 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovd_r32_xmm/vmovd_r32_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = 32Uto64(t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:46:43,858 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,007 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,110 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cltd/cltd.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = 64to32(t0)
   03 | t2 = Sar32(t1,0x1f)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rdx) = t3
   06 | PUT(pc) = 0x0000000000400001
   07 | ------ IMark(0x400001, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:54,688 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:54,706 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:54,745 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd213ss_xmm_xmm_xmm/vfmadd213ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = MAddF32(0x00000000,t1,t0,t2)
   05 | PUT(ymm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,076 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,093 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,162 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/incb_rh/incb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = Add8(t0,0x01)
   03 | PUT(ah) = t1
   04 | t2 = GET:I64(cc_op)
   05 | t3 = GET:I64(cc_dep1)
   06 | t4 = GET:I64(cc_dep2)
   07 | t5 = GET:I64(cc_ndep)
   08 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   09 | PUT(cc_ndep) = t6
   10 | PUT(cc_op) = 0x0000000000000015
   11 | t7 = 8Uto64(t1)
   12 | PUT(cc_dep1) = t7
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(pc) = 0x0000000000400002
   15 | ------ IMark(0x400002, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:02,011 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:02,049 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:02,073 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarb_rh_cl/sarb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Sto64(t0)
   05 | t4 = Sar64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Sar64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x0000000000000021,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(ah) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,704 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,924 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:35,043 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovael_r32_r32/cmovael_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000003,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:46,978 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,149 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,209 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpew_r16_r16/cmovpew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000a,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:44,160 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:44,196 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:44,206 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vucomisd_xmm_xmm/vucomisd_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm2)
   02 | t1 = GET:F64(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = CmpF64(t1,t0)
   06 | t3 = 32Uto64(t2)
   07 | t4 = And64(t3,0x0000000000000045)
   08 | PUT(cc_dep1) = t4
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t5 = GET:I64(rsp)
   12 | t6 = LDle:I64(t5)
   13 | t7 = Add64(t5,0x0000000000000008)
   14 | PUT(rsp) = t7
   15 | t8 = Sub64(t7,0x0000000000000080)
   16 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:23,738 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:23,766 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:23,783 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrad_xmm_xmm_xmm/vpsrad_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_V128 t5:Ity_I1 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = SarN32x4(t1,0x1f)
   05 | t4 = SarN32x4(t1,t2)
   06 | t5 = CmpLT64U(t0,0x0000000000000020)
   07 | t6 = ITE(t5,t4,t3)
   08 | PUT(xmm1) = t6
   09 | PUT(272) = 0
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t7 = GET:I64(rsp)
   13 | t8 = LDle:I64(t7)
   14 | t9 = Add64(t7,0x0000000000000008)
   15 | PUT(rsp) = t9
   16 | t10 = Sub64(t9,0x0000000000000080)
   17 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:29,261 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:29,494 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:29,636 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andq_r64_r64/andq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = And64(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000014
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = 0x0000000000000000
   07 | PUT(rbx) = t2
   08 | PUT(pc) = 0x0000000000400003
   09 | ------ IMark(0x400003, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:23,767 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:23,794 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:23,804 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrad_ymm_ymm_xmm/vpsrad_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_V256 t5:Ity_I1 t6:Ity_V256 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = SarN32x8(t1,0x1f)
   05 | t4 = SarN32x8(t1,t2)
   06 | t5 = CmpLT64U(t0,0x0000000000000020)
   07 | t6 = ITE(t5,t4,t3)
   08 | PUT(ymm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:45,172 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:45,187 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:45,195 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpckhpd_xmm_xmm_xmm/vunpckhpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128HIto64(t1)
   05 | t4 = 64HLtoV128(t3,t2)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:55,170 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:55,264 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:55,354 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsi2sdq_xmm_r64/cvtsi2sdq_xmm_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = I64StoF64(t3,t0)
   06 | PUT(ymm1) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:20,675 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:20,694 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:20,703 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setp_r8/setp_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000a,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:28,044 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:28,316 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:28,513 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blsrl_r32_r32/blsrl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = Sub32(t1,0x00000001)
   04 | t3 = And32(t2,t1)
   05 | t4 = 32Uto64(t3)
   06 | PUT(rbx) = t4
   07 | PUT(cc_op) = 0x000000000000003b
   08 | t5 = 32Uto64(t3)
   09 | PUT(cc_dep1) = t5
   10 | t6 = 32Uto64(t1)
   11 | PUT(cc_dep2) = t6
   12 | PUT(pc) = 0x0000000000400005
   13 | ------ IMark(0x400005, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:24,952 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:25,283 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:25,431 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addsubpd_xmm_xmm/addsubpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add64Fx2(0x00000000,t1,t0)
   04 | t3 = Sub64Fx2(0x00000000,t1,t0)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t3)
   07 | t6 = 64HLtoV128(t4,t5)
   08 | PUT(xmm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:25,326 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:25,527 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:25,641 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addsd_xmm_xmm/addsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:22,671 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:22,689 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:22,700 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllvd_xmm_xmm_xmm/vpsllvd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I8 t15:Ity_I32 t16:Ity_I1 t17:Ity_I32 t18:Ity_I8 t19:Ity_I32 t20:Ity_I1 t21:Ity_I32 t22:Ity_I8 t23:Ity_I32 t24:Ity_I1 t25:Ity_I32 t26:Ity_I8 t27:Ity_I32 t28:Ity_I1 t29:Ity_I32 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t1)
   04 | t3 = V128to64(t1)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = V128to64(t0)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = 32to8(t10)
   16 | t15 = Shl32(t4,t14)
   17 | t16 = CmpLT32U(t10,0x00000020)
   18 | t17 = ITE(t16,t15,0x00000000)
   19 | t18 = 32to8(t11)
   20 | t19 = Shl32(t5,t18)
   21 | t20 = CmpLT32U(t11,0x00000020)
   22 | t21 = ITE(t20,t19,0x00000000)
   23 | t22 = 32to8(t12)
   24 | t23 = Shl32(t6,t22)
   25 | t24 = CmpLT32U(t12,0x00000020)
   26 | t25 = ITE(t24,t23,0x00000000)
   27 | t26 = 32to8(t13)
   28 | t27 = Shl32(t7,t26)
   29 | t28 = CmpLT32U(t13,0x00000020)
   30 | t29 = ITE(t28,t27,0x00000000)
   31 | PUT(ymm1) = t17
   32 | PUT(260) = t21
   33 | PUT(264) = t25
   34 | PUT(268) = t29
   35 | PUT(272) = 0x00000000
   36 | PUT(276) = 0x00000000
   37 | PUT(280) = 0x00000000
   38 | PUT(284) = 0x00000000
   39 | PUT(pc) = 0x0000000000400005
   40 | ------ IMark(0x400005, 1, 0) ------
   41 | t30 = GET:I64(rsp)
   42 | t31 = LDle:I64(t30)
   43 | t32 = Add64(t30,0x0000000000000008)
   44 | PUT(rsp) = t32
   45 | t33 = Sub64(t32,0x0000000000000080)
   46 | ====== AbiHint(0xt33, 128, t31) ======
   NEXT: PUT(rip) = t31; Ijk_Ret
}
WARNING | 2018-04-08 20:48:41,665 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:41,692 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:41,725 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandpd_ymm_ymm_ymm/vandpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = AndV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:56,994 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:57,025 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:57,059 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub213ps_ymm_ymm_ymm/vfmaddsub213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_F32 t48:Ity_I32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_F32 t53:Ity_I32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = NegF32(t31)
   36 | t33 = 64to32(t7)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = 64to32(t6)
   39 | t36 = ReinterpI32asF32(t35)
   40 | t37 = MAddF32(0x00000000,t36,t34,t32)
   41 | PUT(264) = t37
   42 | t38 = 64HIto32(t8)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = NegF32(t46)
   53 | t48 = 64to32(t10)
   54 | t49 = ReinterpI32asF32(t48)
   55 | t50 = 64to32(t9)
   56 | t51 = ReinterpI32asF32(t50)
   57 | t52 = MAddF32(0x00000000,t51,t49,t47)
   58 | PUT(272) = t52
   59 | t53 = 64HIto32(t11)
   60 | t54 = ReinterpI32asF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = NegF32(t61)
   70 | t63 = 64to32(t13)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = 64to32(t12)
   73 | t66 = ReinterpI32asF32(t65)
   74 | t67 = MAddF32(0x00000000,t66,t64,t62)
   75 | PUT(280) = t67
   76 | t68 = 64HIto32(t14)
   77 | t69 = ReinterpI32asF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
WARNING | 2018-04-08 20:46:31,629 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:31,804 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:31,970 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btrw_r16_r16/btrw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I8 t13:Ity_I8 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I16 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Sto64(t0)
   03 | t2 = GET:I64(rsp)
   04 | t3 = Sub64(t2,0x0000000000000120)
   05 | PUT(rsp) = t3
   06 | t4 = GET:I16(bx)
   07 | STle(t3) = t4
   08 | t5 = And64(t1,0x000000000000000f)
   09 | t6 = Sar64(t5,0x03)
   10 | t7 = Add64(t3,t6)
   11 | t8 = And64(t5,0x0000000000000007)
   12 | t9 = 64to8(t8)
   13 | t10 = Shl8(0x01,t9)
   14 | t11 = LDle:I8(t7)
   15 | t12 = Not8(t10)
   16 | t13 = And8(t11,t12)
   17 | STle(t7) = t13
   18 | PUT(cc_op) = 0x0000000000000000
   19 | PUT(cc_dep2) = 0x0000000000000000
   20 | t14 = 8Uto64(t11)
   21 | t15 = Shr64(t14,t9)
   22 | t16 = And64(t15,0x0000000000000001)
   23 | PUT(cc_dep1) = t16
   24 | PUT(cc_ndep) = 0x0000000000000000
   25 | t17 = LDle:I16(t3)
   26 | PUT(bx) = t17
   27 | t18 = Add64(t3,0x0000000000000120)
   28 | PUT(rsp) = t18
   29 | PUT(pc) = 0x0000000000400004
   30 | ------ IMark(0x400004, 1, 0) ------
   31 | t19 = LDle:I64(t18)
   32 | t20 = Add64(t18,0x0000000000000008)
   33 | PUT(rsp) = t20
   34 | t21 = Sub64(t20,0x0000000000000080)
   35 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:46:35,424 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:35,743 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:35,849 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovaew_r16_r16/cmovaew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000003,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:40,355 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,517 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,614 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovncq_r64_r64/cmovncq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000003,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:56,169 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:56,186 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:56,206 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphminposuw_xmm_xmm/vphminposuw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = amd64g_calculate_sse_phminposuw(t2,t1):Ity_I64
   05 | t4 = 64UtoV128(t3)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:59,204 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,252 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,322 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsi2ssq_xmm_r64/cvtsi2ssq_xmm_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I32 t3:Ity_I64 t4:Ity_F64 t5:Ity_F32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(sseround)
   02 | t1 = And64(t0,0x0000000000000003)
   03 | t2 = 64to32(t1)
   04 | t3 = GET:I64(rbx)
   05 | t4 = I64StoF64(t2,t3)
   06 | t5 = F64toF32(t2,t4)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:13,696 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:13,718 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:13,738 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnae_r8/setnae_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000002,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:42,831 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,856 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,880 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psllw_xmm_xmm/psllw_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN16x8(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:12,524 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:12,546 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:12,561 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213pd_ymm_ymm_ymm/vfnmsub213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_I64 t24:Ity_F64 t25:Ity_F64 t26:Ity_F64 t27:Ity_I64 t28:Ity_F64 t29:Ity_I64 t30:Ity_F64 t31:Ity_I64 t32:Ity_F64 t33:Ity_F64 t34:Ity_F64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t0)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | t10 = NegF64(t9)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V256to64_1(t0)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | t18 = NegF64(t17)
   21 | PUT(264) = t18
   22 | t19 = V256to64_2(t2)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = V256to64_2(t0)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = V256to64_2(t1)
   27 | t24 = ReinterpI64asF64(t23)
   28 | t25 = MAddF64(0x00000000,t24,t22,t20)
   29 | t26 = NegF64(t25)
   30 | PUT(272) = t26
   31 | t27 = V256to64_3(t2)
   32 | t28 = ReinterpI64asF64(t27)
   33 | t29 = V256to64_3(t0)
   34 | t30 = ReinterpI64asF64(t29)
   35 | t31 = V256to64_3(t1)
   36 | t32 = ReinterpI64asF64(t31)
   37 | t33 = MAddF64(0x00000000,t32,t30,t28)
   38 | t34 = NegF64(t33)
   39 | PUT(280) = t34
   40 | PUT(pc) = 0x0000000000400005
   41 | ------ IMark(0x400005, 1, 0) ------
   42 | t35 = GET:I64(rsp)
   43 | t36 = LDle:I64(t35)
   44 | t37 = Add64(t35,0x0000000000000008)
   45 | PUT(rsp) = t37
   46 | t38 = Sub64(t37,0x0000000000000080)
   47 | ====== AbiHint(0xt38, 128, t36) ======
   NEXT: PUT(rip) = t36; Ijk_Ret
}
WARNING | 2018-04-08 20:48:15,265 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:15,300 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:15,405 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setng_r8/setng_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000e,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:26,179 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:26,209 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:26,224 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrq_r64_one/shrq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Shr64(t0,0x01)
   03 | PUT(cc_op) = 0x0000000000000024
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | PUT(rbx) = t1
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t2 = GET:I64(rsp)
   10 | t3 = LDle:I64(t2)
   11 | t4 = Add64(t2,0x0000000000000008)
   12 | PUT(rsp) = t4
   13 | t5 = Sub64(t4,0x0000000000000080)
   14 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:19,135 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:19,155 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:19,164 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpshufb_xmm_xmm_xmm/vpshufb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_V128 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = SarN8x8(t4,0x07)
   08 | t7 = Not64(t6)
   09 | t8 = ShlN8x8(t4,0x04)
   10 | t9 = SarN8x8(t8,0x07)
   11 | t10 = And64(t4,0x0707070707070707)
   12 | t11 = Not64(t9)
   13 | t12 = Perm8x8(t3,t10)
   14 | t13 = And64(t12,t11)
   15 | t14 = Perm8x8(t2,t10)
   16 | t15 = And64(t14,t9)
   17 | t16 = Or64(t15,t13)
   18 | t17 = And64(t16,t7)
   19 | t18 = SarN8x8(t5,0x07)
   20 | t19 = Not64(t18)
   21 | t20 = ShlN8x8(t5,0x04)
   22 | t21 = SarN8x8(t20,0x07)
   23 | t22 = And64(t5,0x0707070707070707)
   24 | t23 = Not64(t21)
   25 | t24 = Perm8x8(t3,t22)
   26 | t25 = And64(t24,t23)
   27 | t26 = Perm8x8(t2,t22)
   28 | t27 = And64(t26,t21)
   29 | t28 = Or64(t27,t25)
   30 | t29 = And64(t28,t19)
   31 | t30 = 64HLtoV128(t17,t29)
   32 | PUT(xmm1) = t30
   33 | PUT(272) = 0
   34 | PUT(pc) = 0x0000000000400005
   35 | ------ IMark(0x400005, 1, 0) ------
   36 | t31 = GET:I64(rsp)
   37 | t32 = LDle:I64(t31)
   38 | t33 = Add64(t31,0x0000000000000008)
   39 | PUT(rsp) = t33
   40 | t34 = Sub64(t33,0x0000000000000080)
   41 | ====== AbiHint(0xt34, 128, t32) ======
   NEXT: PUT(rip) = t32; Ijk_Ret
}
WARNING | 2018-04-08 20:48:02,629 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:02,649 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:02,660 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarl_r32_cl/sarl_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I32 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I8(cl)
   04 | t3 = And8(t2,0x1f)
   05 | t4 = 32Sto64(t1)
   06 | t5 = Sar64(t4,t3)
   07 | t6 = Sub8(t3,0x01)
   08 | t7 = And8(t6,0x1f)
   09 | t8 = Sar64(t4,t7)
   10 | t9 = CmpNE8(t3,0x00)
   11 | t10 = GET:I64(cc_op)
   12 | t11 = ITE(t9,0x0000000000000023,t10)
   13 | PUT(cc_op) = t11
   14 | t12 = GET:I64(cc_dep1)
   15 | t13 = ITE(t9,t5,t12)
   16 | PUT(cc_dep1) = t13
   17 | t14 = GET:I64(cc_dep2)
   18 | t15 = ITE(t9,t8,t14)
   19 | PUT(cc_dep2) = t15
   20 | t16 = 64to32(t5)
   21 | t17 = 32Uto64(t16)
   22 | PUT(rbx) = t17
   23 | PUT(pc) = 0x0000000000400002
   24 | ------ IMark(0x400002, 1, 0) ------
   25 | t18 = GET:I64(rsp)
   26 | t19 = LDle:I64(t18)
   27 | t20 = Add64(t18,0x0000000000000008)
   28 | PUT(rsp) = t20
   29 | t21 = Sub64(t20,0x0000000000000080)
   30 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:50:31,656 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:31,674 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:31,692 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubusb_ymm_ymm_ymm/vpsubusb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QSub8Ux32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:18,307 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:18,363 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:18,421 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmaxps_xmm_xmm_xmm/vmaxps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max32Fx4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:01,137 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:01,154 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:01,181 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213sd_xmm_xmm_xmm/vfmsub213sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = NegF64(t2)
   05 | t4 = MAddF64(0x00000000,t1,t0,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:07,803 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:07,834 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:07,843 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxbq_xmm_xmm/vpmovsxbq_xmm_xmm.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I16(ymm2)
   02 | t1 = 16to8(t0)
   03 | t2 = 8Sto64(t1)
   04 | t3 = 16HIto8(t0)
   05 | t4 = 8Sto64(t3)
   06 | t5 = 64HLtoV128(t4,t2)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:55,834 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:55,869 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:55,909 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrq_r64_one/rcrq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = amd64g_calculate_RCR(t0,0x0000000000000001,t5,0x0000000000000008):Ity_I64
   08 | t7 = amd64g_calculate_RCR(t0,0x0000000000000001,t5,0xfffffffffffffff8):Ity_I64
   09 | PUT(cc_op) = 0x0000000000000000
   10 | PUT(cc_dep1) = t7
   11 | PUT(cc_dep2) = 0x0000000000000000
   12 | PUT(cc_ndep) = 0x0000000000000000
   13 | PUT(rbx) = t6
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:50:20,801 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:20,816 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:20,831 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpslld_ymm_ymm_xmm/vpslld_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_I1 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN32x8(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:35,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:35,397 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:35,407 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpacksswb_ymm_ymm_ymm/vpacksswb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = QNarrowBin16Sto8Sx16(t5,t3)
   08 | t7 = QNarrowBin16Sto8Sx16(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:30,183 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:30,383 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:30,528 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/bextrq_r64_r64_r64/bextrq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I16 t3:Ity_I8 t4:Ity_I8 t5:Ity_I64 t6:Ity_I32 t7:Ity_I1 t8:Ity_I64 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I64 t13:Ity_I64 t14:Ity_I1 t15:Ity_I64 t16:Ity_I32 t17:Ity_I32 t18:Ity_I32 t19:Ity_I1 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = 64to16(t0)
   04 | t3 = 16to8(t2)
   05 | t4 = 16HIto8(t2)
   06 | t5 = Shr64(t1,t3)
   07 | t6 = 8Uto32(t3)
   08 | t7 = CmpLT32U(t6,0x00000040)
   09 | t8 = ITE(t7,t5,0x0000000000000000)
   10 | t9 = Sub8(0x40,t4)
   11 | t10 = Sub8(0x40,t3)
   12 | t11 = Sub8(t10,t4)
   13 | t12 = Shl64(t1,t11)
   14 | t13 = Shr64(t12,t9)
   15 | t14 = CmpEQ8(t4,0x00)
   16 | t15 = ITE(t14,0x0000000000000000,t13)
   17 | t16 = 8Uto32(t4)
   18 | t17 = 8Uto32(t3)
   19 | t18 = Add32(t17,t16)
   20 | t19 = CmpLT32U(t18,0x00000040)
   21 | t20 = ITE(t19,t15,t8)
   22 | PUT(rbx) = t20
   23 | PUT(cc_op) = 0x0000000000000036
   24 | PUT(cc_dep1) = t20
   25 | PUT(cc_dep2) = 0x0000000000000000
   26 | PUT(pc) = 0x0000000000400005
   27 | ------ IMark(0x400005, 1, 0) ------
   28 | t21 = GET:I64(rsp)
   29 | t22 = LDle:I64(t21)
   30 | t23 = Add64(t21,0x0000000000000008)
   31 | PUT(rsp) = t23
   32 | t24 = Sub64(t23,0x0000000000000080)
   33 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:49:57,165 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:57,186 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:57,205 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphsubw_ymm_ymm_ymm/vphsubw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = CatOddLanes16x4(t3,t2)
   12 | t11 = CatEvenLanes16x4(t3,t2)
   13 | t12 = Sub16x4(t11,t10)
   14 | t13 = CatOddLanes16x4(t7,t6)
   15 | t14 = CatEvenLanes16x4(t7,t6)
   16 | t15 = Sub16x4(t14,t13)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = CatOddLanes16x4(t5,t4)
   19 | t18 = CatEvenLanes16x4(t5,t4)
   20 | t19 = Sub16x4(t18,t17)
   21 | t20 = CatOddLanes16x4(t9,t8)
   22 | t21 = CatEvenLanes16x4(t9,t8)
   23 | t22 = Sub16x4(t21,t20)
   24 | t23 = 64HLtoV128(t22,t19)
   25 | t24 = V128HLtoV256(t23,t16)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:48:39,367 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:39,385 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:39,425 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandpd_xmm_xmm_xmm/vandpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = AndV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:52,948 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:52,964 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:52,981 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpermps_ymm_ymm_ymm/vpermps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_V256 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = ShlN32x8(t0,0x1d)
   04 | t3 = ShrN32x8(t2,0x1d)
   05 | t4 = Perm32x8(t1,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:31,678 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:31,697 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:31,724 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phsubsw_xmm_xmm/phsubsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = QSub16Sx4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = QSub16Sx4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:29,608 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:29,620 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:29,628 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubq_xmm_xmm_xmm/vpsubq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Sub64x2(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:13,133 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:13,153 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:13,164 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxdq_ymm_xmm/vpmovzxdq_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO32x4(0,t0)
   03 | t2 = InterleaveHI32x4(0,t0)
   04 | t3 = V128HLtoV256(t2,t1)
   05 | PUT(ymm1) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:39,908 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,052 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,129 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnbew_r16_r16/cmovnbew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000007,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:28,608 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:28,654 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:28,692 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovq_xmm_r64/vmovq_xmm_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64UtoV128(t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:08,912 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,006 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,039 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movdqa_xmm_xmm/movdqa_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:46:45,407 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:45,528 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:45,652 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnbl_r32_r32/cmovnbl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000003,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:36,817 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:36,838 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:36,846 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpackuswb_xmm_xmm_xmm/vpackuswb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QNarrowBin16Sto8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:33,303 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:33,329 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:33,362 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vptest_ymm_ymm/vptest_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_V256 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_V128 t13:Ity_V128 t14:Ity_I64 t15:Ity_V128 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm1)
   03 | t2 = AndV256(t0,t1)
   04 | t3 = NotV256(t1)
   05 | t4 = AndV256(t0,t3)
   06 | t5 = V256toV128_1(t2)
   07 | t6 = V256toV128_0(t2)
   08 | t7 = V256toV128_1(t4)
   09 | t8 = V256toV128_0(t4)
   10 | t9 = OrV128(t5,t6)
   11 | t10 = OrV128(t7,t8)
   12 | t11 = InterleaveHI64x2(t9,t9)
   13 | t12 = InterleaveLO64x2(t9,t9)
   14 | t13 = OrV128(t12,t11)
   15 | t14 = V128to64(t13)
   16 | t15 = InterleaveHI64x2(t10,t10)
   17 | t16 = InterleaveLO64x2(t10,t10)
   18 | t17 = OrV128(t16,t15)
   19 | t18 = V128to64(t17)
   20 | t19 = Sub64(0x0000000000000000,t14)
   21 | t20 = Or64(t19,t14)
   22 | t21 = Sar64(t20,0x3f)
   23 | t22 = Not64(t21)
   24 | t23 = Sub64(0x0000000000000000,t18)
   25 | t24 = Or64(t23,t18)
   26 | t25 = Sar64(t24,0x3f)
   27 | t26 = Not64(t25)
   28 | t27 = And64(t26,0x0000000000000001)
   29 | t28 = And64(t22,0x0000000000000040)
   30 | t29 = Or64(t28,t27)
   31 | PUT(cc_dep1) = t29
   32 | PUT(cc_op) = 0x0000000000000000
   33 | PUT(cc_dep2) = 0x0000000000000000
   34 | PUT(cc_ndep) = 0x0000000000000000
   35 | PUT(pc) = 0x0000000000400005
   36 | ------ IMark(0x400005, 1, 0) ------
   37 | t30 = GET:I64(rsp)
   38 | t31 = LDle:I64(t30)
   39 | t32 = Add64(t30,0x0000000000000008)
   40 | PUT(rsp) = t32
   41 | t33 = Sub64(t32,0x0000000000000080)
   42 | ====== AbiHint(0xt33, 128, t31) ======
   NEXT: PUT(rip) = t31; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,697 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,841 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,934 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovbel_r32_r32/cmovbel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000006,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:03,542 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:03,598 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:03,657 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/decl_r32/decl_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Sub32(t1,0x00000001)
   04 | t3 = GET:I64(cc_op)
   05 | t4 = GET:I64(cc_dep1)
   06 | t5 = GET:I64(cc_dep2)
   07 | t6 = GET:I64(cc_ndep)
   08 | t7 = amd64g_calculate_rflags_c(t3,t4,t5,t6):Ity_I64
   09 | PUT(cc_ndep) = t7
   10 | PUT(cc_op) = 0x000000000000001b
   11 | t8 = 32Uto64(t2)
   12 | PUT(cc_dep1) = t8
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | t9 = 32Uto64(t2)
   15 | PUT(rbx) = t9
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:47:31,139 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:31,171 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:31,198 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phminposuw_xmm_xmm/phminposuw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = amd64g_calculate_sse_phminposuw(t2,t1):Ity_I64
   05 | t4 = 64UtoV128(t3)
   06 | PUT(xmm1) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:58,947 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:58,969 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:58,990 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub132sd_xmm_xmm_xmm/vfmsub132sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = NegF64(t1)
   05 | t4 = MAddF64(0x00000000,t0,t2,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,318 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,502 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,586 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btsq_r64_r64/btsq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rsp)
   03 | t2 = Sub64(t1,0x0000000000000120)
   04 | PUT(rsp) = t2
   05 | t3 = GET:I64(rbx)
   06 | STle(t2) = t3
   07 | t4 = And64(t0,0x000000000000003f)
   08 | t5 = Sar64(t4,0x03)
   09 | t6 = Add64(t2,t5)
   10 | t7 = And64(t4,0x0000000000000007)
   11 | t8 = 64to8(t7)
   12 | t9 = Shl8(0x01,t8)
   13 | t10 = LDle:I8(t6)
   14 | t11 = Or8(t10,t9)
   15 | STle(t6) = t11
   16 | PUT(cc_op) = 0x0000000000000000
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | t12 = 8Uto64(t10)
   19 | t13 = Shr64(t12,t8)
   20 | t14 = And64(t13,0x0000000000000001)
   21 | PUT(cc_dep1) = t14
   22 | PUT(cc_ndep) = 0x0000000000000000
   23 | t15 = LDle:I64(t2)
   24 | PUT(rbx) = t15
   25 | t16 = Add64(t2,0x0000000000000120)
   26 | PUT(rsp) = t16
   27 | PUT(pc) = 0x0000000000400004
   28 | ------ IMark(0x400004, 1, 0) ------
   29 | t17 = LDle:I64(t16)
   30 | t18 = Add64(t16,0x0000000000000008)
   31 | PUT(rsp) = t18
   32 | t19 = Sub64(t18,0x0000000000000080)
   33 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:43,911 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:43,933 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:43,947 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpavgw_xmm_xmm_xmm/vpavgw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Avg16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:51,097 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:51,115 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:51,124 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgb_r8_rh/xchgb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | PUT(ah) = t0
   04 | PUT(bl) = t1
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:49:12,123 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:12,170 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:12,194 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213pd_xmm_xmm_xmm/vfnmsub213pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t0)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | t10 = NegF64(t9)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V128HIto64(t0)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | t18 = NegF64(t17)
   21 | PUT(264) = t18
   22 | PUT(272) = 0
   23 | PUT(pc) = 0x0000000000400005
   24 | ------ IMark(0x400005, 1, 0) ------
   25 | t19 = GET:I64(rsp)
   26 | t20 = LDle:I64(t19)
   27 | t21 = Add64(t19,0x0000000000000008)
   28 | PUT(rsp) = t21
   29 | t22 = Sub64(t21,0x0000000000000080)
   30 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:50:11,474 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:11,495 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:11,508 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxbq_ymm_xmm/vpmovzxbq_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V256 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = InterleaveLO8x16(0,t2)
   05 | t4 = InterleaveLO8x16(0,t0)
   06 | t5 = InterleaveLO8x16(0,t4)
   07 | t6 = InterleaveHI8x16(0,t5)
   08 | t7 = V128HLtoV256(t6,t3)
   09 | PUT(ymm1) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:47:17,890 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:17,916 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:17,948 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulpd_xmm_xmm/mulpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Mul64Fx2(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:59,514 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:59,534 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:59,553 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salb_r8_one/salb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = 8Uto64(t0)
   03 | t2 = Shl64(t1,0x01)
   04 | PUT(cc_op) = 0x000000000000001d
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(bl) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:31,434 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:31,613 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:31,704 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovaq_r64_r64/cmovaq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000007,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:53,754 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:53,887 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:53,974 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtps2dq_xmm_xmm/cvtps2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_F32 t11:Ity_F64 t12:Ity_I32 t13:Ity_F32 t14:Ity_F64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F64 t18:Ity_I32 t19:Ity_F32 t20:Ity_F64 t21:Ity_I32 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128HIto64(t0)
   06 | t5 = V128to64(t0)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = F32toF64(t10)
   13 | t12 = F64toI32S(t3,t11)
   14 | PUT(268) = t12
   15 | t13 = ReinterpI32asF32(t8)
   16 | t14 = F32toF64(t13)
   17 | t15 = F64toI32S(t3,t14)
   18 | PUT(264) = t15
   19 | t16 = ReinterpI32asF32(t7)
   20 | t17 = F32toF64(t16)
   21 | t18 = F64toI32S(t3,t17)
   22 | PUT(260) = t18
   23 | t19 = ReinterpI32asF32(t6)
   24 | t20 = F32toF64(t19)
   25 | t21 = F64toI32S(t3,t20)
   26 | PUT(ymm1) = t21
   27 | PUT(pc) = 0x0000000000400004
   28 | ------ IMark(0x400004, 1, 0) ------
   29 | t22 = GET:I64(rsp)
   30 | t23 = LDle:I64(t22)
   31 | t24 = Add64(t22,0x0000000000000008)
   32 | PUT(rsp) = t24
   33 | t25 = Sub64(t24,0x0000000000000080)
   34 | ====== AbiHint(0xt25, 128, t23) ======
   NEXT: PUT(rip) = t23; Ijk_Ret
}
WARNING | 2018-04-08 20:47:39,909 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:39,982 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:40,022 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmuludq_xmm_xmm/pmuludq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64to32(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128to64(t1)
   09 | t8 = 64to32(t7)
   10 | t9 = 64to32(t6)
   11 | t10 = MullU32(t4,t8)
   12 | t11 = MullU32(t5,t9)
   13 | t12 = 64HLtoV128(t11,t10)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400004
   16 | ------ IMark(0x400004, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:49:15,901 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:15,921 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:15,930 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhaddpd_ymm_ymm_ymm/vhaddpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_V128 t11:Ity_V128 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_V128 t18:Ity_V128 t19:Ity_V128 t20:Ity_V256 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128to64(t5)
   08 | t7 = V128HIto64(t5)
   09 | t8 = V128to64(t3)
   10 | t9 = V128HIto64(t3)
   11 | t10 = 64HLtoV128(t6,t8)
   12 | t11 = 64HLtoV128(t7,t9)
   13 | t12 = Add64Fx2(0x00000000,t10,t11)
   14 | t13 = V128to64(t4)
   15 | t14 = V128HIto64(t4)
   16 | t15 = V128to64(t2)
   17 | t16 = V128HIto64(t2)
   18 | t17 = 64HLtoV128(t13,t15)
   19 | t18 = 64HLtoV128(t14,t16)
   20 | t19 = Add64Fx2(0x00000000,t17,t18)
   21 | t20 = V128HLtoV256(t19,t12)
   22 | PUT(ymm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:50:45,016 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:45,032 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:45,056 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vtestps_xmm_xmm/vtestps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t0,t1)
   04 | t3 = XorV128(t1,ffffffffffffffffffffffffffffffff)
   05 | t4 = AndV128(t0,t3)
   06 | t5 = InterleaveHI64x2(t2,t2)
   07 | t6 = InterleaveLO64x2(t2,t2)
   08 | t7 = OrV128(t6,t5)
   09 | t8 = V128to64(t7)
   10 | t9 = InterleaveHI64x2(t4,t4)
   11 | t10 = InterleaveLO64x2(t4,t4)
   12 | t11 = OrV128(t10,t9)
   13 | t12 = V128to64(t11)
   14 | t13 = And64(t8,0x8000000080000000)
   15 | t14 = And64(t12,0x8000000080000000)
   16 | t15 = Sub64(0x0000000000000000,t13)
   17 | t16 = Or64(t15,t13)
   18 | t17 = Sar64(t16,0x3f)
   19 | t18 = Not64(t17)
   20 | t19 = Sub64(0x0000000000000000,t14)
   21 | t20 = Or64(t19,t14)
   22 | t21 = Sar64(t20,0x3f)
   23 | t22 = Not64(t21)
   24 | t23 = And64(t22,0x0000000000000001)
   25 | t24 = And64(t18,0x0000000000000040)
   26 | t25 = Or64(t24,t23)
   27 | PUT(cc_dep1) = t25
   28 | PUT(cc_op) = 0x0000000000000000
   29 | PUT(cc_dep2) = 0x0000000000000000
   30 | PUT(cc_ndep) = 0x0000000000000000
   31 | PUT(pc) = 0x0000000000400005
   32 | ------ IMark(0x400005, 1, 0) ------
   33 | t26 = GET:I64(rsp)
   34 | t27 = LDle:I64(t26)
   35 | t28 = Add64(t26,0x0000000000000008)
   36 | PUT(rsp) = t28
   37 | t29 = Sub64(t28,0x0000000000000080)
   38 | ====== AbiHint(0xt29, 128, t27) ======
   NEXT: PUT(rip) = t27; Ijk_Ret
}
WARNING | 2018-04-08 20:48:58,379 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:58,414 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:58,425 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub231ps_ymm_ymm_ymm/vfmaddsub231ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_F32 t48:Ity_I32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_F32 t53:Ity_I32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t0)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t0)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t0)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t0)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = NegF32(t16)
   19 | t18 = 64to32(t4)
   20 | t19 = ReinterpI32asF32(t18)
   21 | t20 = 64to32(t3)
   22 | t21 = ReinterpI32asF32(t20)
   23 | t22 = MAddF32(0x00000000,t21,t19,t17)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = NegF32(t31)
   36 | t33 = 64to32(t7)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = 64to32(t6)
   39 | t36 = ReinterpI32asF32(t35)
   40 | t37 = MAddF32(0x00000000,t36,t34,t32)
   41 | PUT(264) = t37
   42 | t38 = 64HIto32(t8)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = NegF32(t46)
   53 | t48 = 64to32(t10)
   54 | t49 = ReinterpI32asF32(t48)
   55 | t50 = 64to32(t9)
   56 | t51 = ReinterpI32asF32(t50)
   57 | t52 = MAddF32(0x00000000,t51,t49,t47)
   58 | PUT(272) = t52
   59 | t53 = 64HIto32(t11)
   60 | t54 = ReinterpI32asF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = NegF32(t61)
   70 | t63 = 64to32(t13)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = 64to32(t12)
   73 | t66 = ReinterpI32asF32(t65)
   74 | t67 = MAddF32(0x00000000,t66,t64,t62)
   75 | PUT(280) = t67
   76 | t68 = 64HIto32(t14)
   77 | t69 = ReinterpI32asF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
WARNING | 2018-04-08 20:48:31,574 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:31,590 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:31,599 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subb_rh_rh/subb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = Sub8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(ah) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,966 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,026 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,107 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divb_r8/divb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I16 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I16 t9:Ity_I8 t10:Ity_I32 t11:Ity_I16 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I16(ax)
   03 | t2 = 16Uto32(t1)
   04 | t3 = 32Uto64(t2)
   05 | t4 = 8Uto16(t0)
   06 | t5 = 16Uto32(t4)
   07 | t6 = DivModU64to32(t3,t5)
   08 | t7 = 64to32(t6)
   09 | t8 = 32to16(t7)
   10 | t9 = 16to8(t8)
   11 | PUT(al) = t9
   12 | t10 = 64HIto32(t6)
   13 | t11 = 32to16(t10)
   14 | t12 = 16to8(t11)
   15 | PUT(ah) = t12
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:49:46,244 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:46,263 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:46,275 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastb_xmm_xmm/vpbroadcastb_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I8 t2:Ity_I16 t3:Ity_I32 t4:Ity_I64 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to8(t0)
   03 | t2 = 8HLto16(t1,t1)
   04 | t3 = 16HLto32(t2,t2)
   05 | t4 = 32HLto64(t3,t3)
   06 | t5 = 64HLtoV128(t4,t4)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:52,512 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:52,529 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:52,537 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtw_xmm_xmm_xmm/vpcmpgtw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpGT16Sx8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:28,813 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,840 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,882 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpeqq_xmm_xmm/pcmpeqq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpEQ64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:42,532 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:42,697 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:42,772 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnlel_r32_r32/cmovnlel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000f,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,938 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,007 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,074 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/incq_r64/incq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Add64(t0,0x0000000000000001)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | PUT(cc_ndep) = t6
   09 | PUT(cc_op) = 0x0000000000000018
   10 | PUT(cc_dep1) = t1
   11 | PUT(cc_dep2) = 0x0000000000000000
   12 | PUT(rbx) = t1
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t7 = GET:I64(rsp)
   16 | t8 = LDle:I64(t7)
   17 | t9 = Add64(t7,0x0000000000000008)
   18 | PUT(rsp) = t9
   19 | t10 = Sub64(t9,0x0000000000000080)
   20 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:52,068 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,211 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:52,257 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnzw_r16_r16/cmovnzw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000005,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:15,240 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:15,265 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:15,274 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulhrsw_ymm_ymm_ymm/vpmulhrsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64 t49:Ity_I64 t50:Ity_I64 t51:Ity_I64 t52:Ity_I64 t53:Ity_I64 t54:Ity_I64 t55:Ity_I64 t56:Ity_I64 t57:Ity_I64 t58:Ity_I64 t59:Ity_I64 t60:Ity_I64 t61:Ity_I64 t62:Ity_I64 t63:Ity_I64 t64:Ity_I64 t65:Ity_I64 t66:Ity_I64 t67:Ity_I64 t68:Ity_I64 t69:Ity_I64 t70:Ity_I64 t71:Ity_I64 t72:Ity_I64 t73:Ity_I64 t74:Ity_I64 t75:Ity_I64 t76:Ity_V128 t77:Ity_I64 t78:Ity_I64 t79:Ity_V128 t80:Ity_V256 t81:Ity_I64 t82:Ity_I64 t83:Ity_I64 t84:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = InterleaveHI16x4(t6,t6)
   12 | t11 = SarN32x2(t10,0x10)
   13 | t12 = InterleaveLO16x4(t6,t6)
   14 | t13 = SarN32x2(t12,0x10)
   15 | t14 = InterleaveHI16x4(t2,t2)
   16 | t15 = SarN32x2(t14,0x10)
   17 | t16 = InterleaveLO16x4(t2,t2)
   18 | t17 = SarN32x2(t16,0x10)
   19 | t18 = Mul32x2(t11,t15)
   20 | t19 = ShrN32x2(t18,0x0e)
   21 | t20 = Add32x2(t19,0x0000000100000001)
   22 | t21 = ShrN32x2(t20,0x01)
   23 | t22 = Mul32x2(t13,t17)
   24 | t23 = ShrN32x2(t22,0x0e)
   25 | t24 = Add32x2(t23,0x0000000100000001)
   26 | t25 = ShrN32x2(t24,0x01)
   27 | t26 = InterleaveHI16x4(t7,t7)
   28 | t27 = SarN32x2(t26,0x10)
   29 | t28 = InterleaveLO16x4(t7,t7)
   30 | t29 = SarN32x2(t28,0x10)
   31 | t30 = InterleaveHI16x4(t3,t3)
   32 | t31 = SarN32x2(t30,0x10)
   33 | t32 = InterleaveLO16x4(t3,t3)
   34 | t33 = SarN32x2(t32,0x10)
   35 | t34 = Mul32x2(t27,t31)
   36 | t35 = ShrN32x2(t34,0x0e)
   37 | t36 = Add32x2(t35,0x0000000100000001)
   38 | t37 = ShrN32x2(t36,0x01)
   39 | t38 = Mul32x2(t29,t33)
   40 | t39 = ShrN32x2(t38,0x0e)
   41 | t40 = Add32x2(t39,0x0000000100000001)
   42 | t41 = ShrN32x2(t40,0x01)
   43 | t42 = InterleaveHI16x4(t8,t8)
   44 | t43 = SarN32x2(t42,0x10)
   45 | t44 = InterleaveLO16x4(t8,t8)
   46 | t45 = SarN32x2(t44,0x10)
   47 | t46 = InterleaveHI16x4(t4,t4)
   48 | t47 = SarN32x2(t46,0x10)
   49 | t48 = InterleaveLO16x4(t4,t4)
   50 | t49 = SarN32x2(t48,0x10)
   51 | t50 = Mul32x2(t43,t47)
   52 | t51 = ShrN32x2(t50,0x0e)
   53 | t52 = Add32x2(t51,0x0000000100000001)
   54 | t53 = ShrN32x2(t52,0x01)
   55 | t54 = Mul32x2(t45,t49)
   56 | t55 = ShrN32x2(t54,0x0e)
   57 | t56 = Add32x2(t55,0x0000000100000001)
   58 | t57 = ShrN32x2(t56,0x01)
   59 | t58 = InterleaveHI16x4(t9,t9)
   60 | t59 = SarN32x2(t58,0x10)
   61 | t60 = InterleaveLO16x4(t9,t9)
   62 | t61 = SarN32x2(t60,0x10)
   63 | t62 = InterleaveHI16x4(t5,t5)
   64 | t63 = SarN32x2(t62,0x10)
   65 | t64 = InterleaveLO16x4(t5,t5)
   66 | t65 = SarN32x2(t64,0x10)
   67 | t66 = Mul32x2(t59,t63)
   68 | t67 = ShrN32x2(t66,0x0e)
   69 | t68 = Add32x2(t67,0x0000000100000001)
   70 | t69 = ShrN32x2(t68,0x01)
   71 | t70 = Mul32x2(t61,t65)
   72 | t71 = ShrN32x2(t70,0x0e)
   73 | t72 = Add32x2(t71,0x0000000100000001)
   74 | t73 = ShrN32x2(t72,0x01)
   75 | t74 = CatEvenLanes16x4(t21,t25)
   76 | t75 = CatEvenLanes16x4(t37,t41)
   77 | t76 = 64HLtoV128(t75,t74)
   78 | t77 = CatEvenLanes16x4(t53,t57)
   79 | t78 = CatEvenLanes16x4(t69,t73)
   80 | t79 = 64HLtoV128(t78,t77)
   81 | t80 = V128HLtoV256(t79,t76)
   82 | PUT(ymm1) = t80
   83 | PUT(pc) = 0x0000000000400005
   84 | ------ IMark(0x400005, 1, 0) ------
   85 | t81 = GET:I64(rsp)
   86 | t82 = LDle:I64(t81)
   87 | t83 = Add64(t81,0x0000000000000008)
   88 | PUT(rsp) = t83
   89 | t84 = Sub64(t83,0x0000000000000080)
   90 | ====== AbiHint(0xt84, 128, t82) ======
   NEXT: PUT(rip) = t82; Ijk_Ret
}
WARNING | 2018-04-08 20:47:56,327 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:56,360 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:56,385 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolb_r8_cl/rolb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I8 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = And8(t2,0x07)
   05 | t4 = Sub8(0x08,t3)
   06 | t5 = Shr8(t0,t4)
   07 | t6 = Shl8(t0,t3)
   08 | t7 = Or8(t6,t5)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = GET:I64(cc_dep1)
   11 | t10 = GET:I64(cc_dep2)
   12 | t11 = GET:I64(cc_ndep)
   13 | t12 = amd64g_calculate_rflags_all(t8,t9,t10,t11):Ity_I64
   14 | t13 = CmpNE8(t2,0x00)
   15 | t14 = ITE(t13,0x0000000000000025,t8)
   16 | PUT(cc_op) = t14
   17 | t15 = 8Uto64(t7)
   18 | t16 = ITE(t13,t15,t9)
   19 | PUT(cc_dep1) = t16
   20 | t17 = ITE(t13,0x0000000000000000,t10)
   21 | PUT(cc_dep2) = t17
   22 | t18 = ITE(t13,t12,t11)
   23 | PUT(cc_ndep) = t18
   24 | PUT(bl) = t7
   25 | PUT(pc) = 0x0000000000400002
   26 | ------ IMark(0x400002, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:50:28,771 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:28,804 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:28,821 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubb_ymm_ymm_ymm/vpsubb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Sub8x32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:53,493 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:53,513 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:53,534 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrw_r16_cl/rcrw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I16 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 16Uto64(t0)
   08 | t7 = GET:I8(cl)
   09 | t8 = 8Uto64(t7)
   10 | t9 = amd64g_calculate_RCR(t6,t8,t5,0x0000000000000002):Ity_I64
   11 | t10 = 16Uto64(t0)
   12 | t11 = 8Uto64(t7)
   13 | t12 = amd64g_calculate_RCR(t10,t11,t5,0xfffffffffffffffe):Ity_I64
   14 | t13 = 64to16(t9)
   15 | PUT(cc_op) = 0x0000000000000000
   16 | PUT(cc_dep1) = t12
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(bx) = t13
   20 | PUT(pc) = 0x0000000000400003
   21 | ------ IMark(0x400003, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:46:30,554 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:30,758 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:30,894 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btcq_r64_r64/btcq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rsp)
   03 | t2 = Sub64(t1,0x0000000000000120)
   04 | PUT(rsp) = t2
   05 | t3 = GET:I64(rbx)
   06 | STle(t2) = t3
   07 | t4 = And64(t0,0x000000000000003f)
   08 | t5 = Sar64(t4,0x03)
   09 | t6 = Add64(t2,t5)
   10 | t7 = And64(t4,0x0000000000000007)
   11 | t8 = 64to8(t7)
   12 | t9 = Shl8(0x01,t8)
   13 | t10 = LDle:I8(t6)
   14 | t11 = Xor8(t10,t9)
   15 | STle(t6) = t11
   16 | PUT(cc_op) = 0x0000000000000000
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | t12 = 8Uto64(t10)
   19 | t13 = Shr64(t12,t8)
   20 | t14 = And64(t13,0x0000000000000001)
   21 | PUT(cc_dep1) = t14
   22 | PUT(cc_ndep) = 0x0000000000000000
   23 | t15 = LDle:I64(t2)
   24 | PUT(rbx) = t15
   25 | t16 = Add64(t2,0x0000000000000120)
   26 | PUT(rsp) = t16
   27 | PUT(pc) = 0x0000000000400004
   28 | ------ IMark(0x400004, 1, 0) ------
   29 | t17 = LDle:I64(t16)
   30 | t18 = Add64(t16,0x0000000000000008)
   31 | PUT(rsp) = t18
   32 | t19 = Sub64(t18,0x0000000000000080)
   33 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:47:50,632 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:50,647 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:50,679 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcpps_xmm_xmm/rcpps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = RecipEst32Fx4(t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400003
   05 | ------ IMark(0x400003, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:28,951 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:29,003 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:29,016 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlvq_xmm_xmm_xmm/vpsrlvq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t1)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128HIto64(t0)
   07 | t6 = 64to8(t4)
   08 | t7 = Shr64(t2,t6)
   09 | t8 = CmpLT64U(t4,0x0000000000000040)
   10 | t9 = ITE(t8,t7,0x0000000000000000)
   11 | t10 = 64to8(t5)
   12 | t11 = Shr64(t3,t10)
   13 | t12 = CmpLT64U(t5,0x0000000000000040)
   14 | t13 = ITE(t12,t11,0x0000000000000000)
   15 | PUT(ymm1) = t9
   16 | PUT(264) = t13
   17 | PUT(272) = 0x0000000000000000
   18 | PUT(280) = 0x0000000000000000
   19 | PUT(pc) = 0x0000000000400005
   20 | ------ IMark(0x400005, 1, 0) ------
   21 | t14 = GET:I64(rsp)
   22 | t15 = LDle:I64(t14)
   23 | t16 = Add64(t14,0x0000000000000008)
   24 | PUT(rsp) = t16
   25 | t17 = Sub64(t16,0x0000000000000080)
   26 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:47:48,679 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:48,722 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:48,743 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pxor_xmm_xmm/pxor_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = XorV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:57,704 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:57,713 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:57,719 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorw_r16_r16/xorw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = Xor16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000012
   05 | t3 = 16Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bx) = t2
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:49,706 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:49,734 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:49,752 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvttss2siq_r64_xmm/vcvttss2siq_r64_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = F32toF64(t0)
   03 | t2 = F64toI64S(0x00000003,t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:52,661 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:52,701 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:52,738 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrb_rh_one/rcrb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = amd64g_calculate_RCR(t6,0x0000000000000001,t5,0x0000000000000001):Ity_I64
   09 | t8 = 8Uto64(t0)
   10 | t9 = amd64g_calculate_RCR(t8,0x0000000000000001,t5,0xffffffffffffffff):Ity_I64
   11 | t10 = 64to8(t7)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t9
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(ah) = t10
   17 | PUT(pc) = 0x0000000000400002
   18 | ------ IMark(0x400002, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:46:31,730 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:31,931 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:32,023 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blsmskl_r32_r32/blsmskl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = Sub32(t1,0x00000001)
   04 | t3 = Xor32(t2,t1)
   05 | t4 = 32Uto64(t3)
   06 | PUT(rbx) = t4
   07 | PUT(cc_op) = 0x0000000000000039
   08 | t5 = 32Uto64(t3)
   09 | PUT(cc_dep1) = t5
   10 | t6 = 32Uto64(t1)
   11 | PUT(cc_dep2) = t6
   12 | PUT(pc) = 0x0000000000400005
   13 | ------ IMark(0x400005, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:37,465 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:37,483 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:37,552 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovzxbq_xmm_xmm/pmovzxbq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = InterleaveLO8x16(0,t2)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:54,758 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:54,775 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:54,784 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgw_r16_r16/xchgw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | PUT(cx) = t0
   04 | PUT(bx) = t1
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:51,560 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:51,578 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:51,602 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcll_r32_cl/rcll_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_all(t2,t3,t4,t5):Ity_I64
   08 | t7 = 32Uto64(t1)
   09 | t8 = GET:I8(cl)
   10 | t9 = 8Uto64(t8)
   11 | t10 = amd64g_calculate_RCL(t7,t9,t6,0x0000000000000004):Ity_I64
   12 | t11 = 32Uto64(t1)
   13 | t12 = 8Uto64(t8)
   14 | t13 = amd64g_calculate_RCL(t11,t12,t6,0xfffffffffffffffc):Ity_I64
   15 | t14 = 64to32(t10)
   16 | PUT(cc_op) = 0x0000000000000000
   17 | PUT(cc_dep1) = t13
   18 | PUT(cc_dep2) = 0x0000000000000000
   19 | PUT(cc_ndep) = 0x0000000000000000
   20 | t15 = 32Uto64(t14)
   21 | PUT(rbx) = t15
   22 | PUT(pc) = 0x0000000000400002
   23 | ------ IMark(0x400002, 1, 0) ------
   24 | t16 = GET:I64(rsp)
   25 | t17 = LDle:I64(t16)
   26 | t18 = Add64(t16,0x0000000000000008)
   27 | PUT(rsp) = t18
   28 | t19 = Sub64(t18,0x0000000000000080)
   29 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:17,109 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:17,128 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:17,140 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmullw_xmm_xmm_xmm/vpmullw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Mul16x8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:23,617 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:23,645 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:23,657 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovhlps_xmm_xmm_xmm/vmovhlps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(328)
   02 | t1 = GET:I64(296)
   03 | t2 = 64HLtoV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:24,284 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:24,352 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:24,373 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskpd_r32_xmm/vmovmskpd_r32_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(260)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(268)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = Or32(t2,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:47:23,128 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:23,196 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:23,226 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pabsb_xmm_xmm/pabsb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = SarN8x8(t2,0x07)
   05 | t4 = Not64(t3)
   06 | t5 = Sub8x8(0x0000000000000000,t2)
   07 | t6 = And64(t5,t3)
   08 | t7 = And64(t2,t4)
   09 | t8 = Or64(t7,t6)
   10 | t9 = SarN8x8(t1,0x07)
   11 | t10 = Not64(t9)
   12 | t11 = Sub8x8(0x0000000000000000,t1)
   13 | t12 = And64(t11,t9)
   14 | t13 = And64(t1,t10)
   15 | t14 = Or64(t13,t12)
   16 | t15 = 64HLtoV128(t14,t8)
   17 | PUT(xmm1) = t15
   18 | PUT(pc) = 0x0000000000400005
   19 | ------ IMark(0x400005, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:47:15,874 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:15,915 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:15,947 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzbw_r16_rh/movzbw_r16_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Uto16(t0)
   03 | PUT(bx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:35,995 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:36,036 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:36,055 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaxuw_xmm_xmm/pmaxuw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:21,888 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:22,145 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:22,302 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/adcb_r8_rh/adcb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Add8(t0,t1)
   11 | t10 = Add8(t9,t8)
   12 | PUT(cc_op) = 0x0000000000000009
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(bl) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:59,734 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:59,756 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:59,773 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub132ss_xmm_xmm_xmm/vfmsub132ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = NegF32(t1)
   05 | t4 = MAddF32(0x00000000,t0,t2,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:57,475 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:57,571 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,590 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/decb_r8/decb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = Sub8(t0,0x01)
   03 | PUT(bl) = t1
   04 | t2 = GET:I64(cc_op)
   05 | t3 = GET:I64(cc_dep1)
   06 | t4 = GET:I64(cc_dep2)
   07 | t5 = GET:I64(cc_ndep)
   08 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   09 | PUT(cc_ndep) = t6
   10 | PUT(cc_op) = 0x0000000000000019
   11 | t7 = 8Uto64(t1)
   12 | PUT(cc_dep1) = t7
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(pc) = 0x0000000000400002
   15 | ------ IMark(0x400002, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:06,518 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:06,542 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:06,553 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarxq_r64_r64_r64/sarxq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = And64(t0,0x000000000000003f)
   04 | t3 = 64to8(t2)
   05 | t4 = Sar64(t1,t3)
   06 | PUT(rbx) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:07,804 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:07,885 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:07,924 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movb_rh_rh/movb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bh)
   02 | PUT(ah) = t0
   03 | PUT(pc) = 0x0000000000400002
   04 | ------ IMark(0x400002, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:48:25,798 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:25,836 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:25,902 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrb_rh_one/shrb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Uto64(t0)
   03 | t2 = Shr64(t1,0x01)
   04 | PUT(cc_op) = 0x0000000000000021
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(ah) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:28,551 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:28,568 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:28,587 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovss_xmm_xmm_xmm/vmovss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm3)
   02 | t1 = GET:I32(292)
   03 | t2 = 32HLto64(t1,t0)
   04 | t3 = GET:I64(296)
   05 | t4 = 64HLtoV128(t3,t2)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:00,472 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:00,497 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:00,514 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213ps_xmm_xmm_xmm/vfmsub213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = NegF32(t18)
   22 | t20 = 64HIto32(t4)
   23 | t21 = ReinterpI32asF32(t20)
   24 | t22 = 64HIto32(t3)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = MAddF32(0x00000000,t23,t21,t19)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = NegF32(t26)
   31 | t28 = 64to32(t7)
   32 | t29 = ReinterpI32asF32(t28)
   33 | t30 = 64to32(t6)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = MAddF32(0x00000000,t31,t29,t27)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = NegF32(t34)
   40 | t36 = 64HIto32(t7)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = 64HIto32(t6)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = MAddF32(0x00000000,t39,t37,t35)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:50:42,633 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:42,661 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:42,672 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsubsd_xmm_xmm_xmm/vsubsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Sub64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:43,918 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:43,937 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:43,956 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psrld_xmm_xmm/psrld_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN32x4(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:15,736 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:15,754 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:15,803 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setng_rh/setng_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000e,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:46,285 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:46,303 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:46,315 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastq_ymm_xmm/vpbroadcastq_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = 64x4toV256(t0,t0,t0,t0)
   03 | PUT(ymm1) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:05,858 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,912 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,946 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/lzcntq_r64_r64/lzcntq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I1 t3:Ity_I64 t4:Ity_I1 t5:Ity_I64 t6:Ity_I1 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = Clz64(t0)
   03 | t2 = CmpEQ64(t0,0x0000000000000000)
   04 | t3 = ITE(t2,0x0000000000000040,t1)
   05 | PUT(rbx) = t3
   06 | t4 = CmpEQ64(t0,0x0000000000000000)
   07 | t5 = 1Uto64(t4)
   08 | t6 = CmpEQ64(t3,0x0000000000000000)
   09 | t7 = 1Uto64(t6)
   10 | t8 = Shl64(t7,0x06)
   11 | t9 = Or64(t8,t5)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = 0x0000000000000000
   15 | PUT(cc_dep1) = t9
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:50:21,383 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:21,407 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:21,424 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllq_xmm_xmm_xmm/vpsllq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN64x2(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000040)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:48,985 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:49,004 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:49,043 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqb_xmm_xmm_xmm/vpcmpeqb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpEQ8x16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:03,822 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:03,839 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:03,893 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarxl_r32_r32_r32/sarxl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I8 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = And32(t1,0x0000001f)
   06 | t5 = 32to8(t4)
   07 | t6 = Sar32(t3,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,171 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,260 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,372 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovbew_r16_r16/cmovbew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000006,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:19,941 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:19,963 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:19,978 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsignb_xmm_xmm_xmm/vpsignb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_V128 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = Sub8x8(0x0000000000000000,t2)
   08 | t7 = CmpGT8Sx8(0x0000000000000000,t4)
   09 | t8 = CmpGT8Sx8(t4,0x0000000000000000)
   10 | t9 = Sub8x8(0x0000000000000000,t3)
   11 | t10 = CmpGT8Sx8(0x0000000000000000,t5)
   12 | t11 = CmpGT8Sx8(t5,0x0000000000000000)
   13 | t12 = And64(t6,t7)
   14 | t13 = And64(t2,t8)
   15 | t14 = Or64(t13,t12)
   16 | t15 = And64(t9,t10)
   17 | t16 = And64(t3,t11)
   18 | t17 = Or64(t16,t15)
   19 | t18 = 64HLtoV128(t17,t14)
   20 | PUT(xmm1) = t18
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t19 = GET:I64(rsp)
   25 | t20 = LDle:I64(t19)
   26 | t21 = Add64(t19,0x0000000000000008)
   27 | PUT(rsp) = t21
   28 | t22 = Sub64(t21,0x0000000000000080)
   29 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:49:10,672 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:10,687 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:10,697 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd231sd_xmm_xmm_xmm/vfnmadd231sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = NegF64(t0)
   05 | t4 = MAddF64(0x00000000,t1,t2,t3)
   06 | t5 = NegF64(t4)
   07 | PUT(ymm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:35,996 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,215 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,286 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovaw_r16_r16/cmovaw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000007,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:50,023 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:50,170 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:50,216 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpl_r32_r32/cmpl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | PUT(cc_op) = 0x0000000000000007
   06 | t4 = 32Uto64(t1)
   07 | PUT(cc_dep1) = t4
   08 | t5 = 32Uto64(t3)
   09 | PUT(cc_dep2) = t5
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t6 = GET:I64(rsp)
   13 | t7 = LDle:I64(t6)
   14 | t8 = Add64(t6,0x0000000000000008)
   15 | PUT(rsp) = t8
   16 | t9 = Sub64(t8,0x0000000000000080)
   17 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,794 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,868 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,938 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovsl_r32_r32/cmovsl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000008,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:45,449 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:45,480 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:45,517 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubusb_xmm_xmm/psubusb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QSub8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:45,644 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:45,829 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:45,869 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnzq_r64_r64/cmovnzq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000005,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:39,055 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:39,199 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:39,310 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnaeq_r64_r64/cmovnaeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000002,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:38,040 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:38,086 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:38,096 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddsubps_xmm_xmm_xmm/vaddsubps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_V128 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add32Fx4(0x00000000,t0,t1)
   04 | t3 = Sub32Fx4(0x00000000,t0,t1)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t2)
   07 | t6 = 64HIto32(t5)
   08 | t7 = 64HIto32(t4)
   09 | t8 = V128HIto64(t3)
   10 | t9 = V128to64(t3)
   11 | t10 = 64to32(t9)
   12 | t11 = 64to32(t8)
   13 | t12 = 32HLto64(t6,t10)
   14 | t13 = 32HLto64(t7,t11)
   15 | t14 = 64HLtoV128(t13,t12)
   16 | PUT(xmm1) = t14
   17 | PUT(272) = 0
   18 | PUT(pc) = 0x0000000000400004
   19 | ------ IMark(0x400004, 1, 0) ------
   20 | t15 = GET:I64(rsp)
   21 | t16 = LDle:I64(t15)
   22 | t17 = Add64(t15,0x0000000000000008)
   23 | PUT(rsp) = t17
   24 | t18 = Sub64(t17,0x0000000000000080)
   25 | ====== AbiHint(0xt18, 128, t16) ======
   NEXT: PUT(rip) = t16; Ijk_Ret
}
WARNING | 2018-04-08 20:50:36,076 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:36,091 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:36,100 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhwd_ymm_ymm_ymm/vpunpckhwd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveHI16x8(t5,t3)
   08 | t7 = InterleaveHI16x8(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:44,379 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:44,410 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:44,420 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpavgb_xmm_xmm_xmm/vpavgb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Avg8Ux16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,364 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,483 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,566 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnpq_r64_r64/cmovnpq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000b,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:24,463 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:24,534 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:24,570 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/packssdw_xmm_xmm/packssdw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = QNarrowBin32Sto16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:45,886 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:45,912 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:45,928 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpckhps_ymm_ymm_ymm/vunpckhps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_V128 t15:Ity_I64 t16:Ity_I32 t17:Ity_I32 t18:Ity_I64 t19:Ity_I32 t20:Ity_I32 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128HIto64(t4)
   08 | t7 = 64to32(t6)
   09 | t8 = 64HIto32(t6)
   10 | t9 = V128HIto64(t2)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 32HLto64(t10,t7)
   14 | t13 = 32HLto64(t11,t8)
   15 | t14 = 64HLtoV128(t13,t12)
   16 | t15 = V128HIto64(t5)
   17 | t16 = 64to32(t15)
   18 | t17 = 64HIto32(t15)
   19 | t18 = V128HIto64(t3)
   20 | t19 = 64to32(t18)
   21 | t20 = 64HIto32(t18)
   22 | t21 = 32HLto64(t19,t16)
   23 | t22 = 32HLto64(t20,t17)
   24 | t23 = 64HLtoV128(t22,t21)
   25 | t24 = V128HLtoV256(t14,t23)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400004
   28 | ------ IMark(0x400004, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:46:41,198 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:41,251 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:41,268 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnll_r32_r32/cmovnll_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000d,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,644 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:37,882 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:38,018 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovgw_r16_r16/cmovgw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000f,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:45,454 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:45,478 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:45,514 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastd_xmm_xmm/vpbroadcastd_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32HLto64(t0,t0)
   03 | t2 = 64HLtoV128(t1,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:53,799 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:53,837 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:53,845 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgq_rax_r64/xchgq_rax_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = GET:I64(rbx)
   03 | PUT(rax) = t1
   04 | PUT(rbx) = t0
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:46:57,672 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:57,795 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,874 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgb_rh_r8/cmpxchgb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I8 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I1 t14:Ity_I8 t15:Ity_I8 t16:Ity_I8 t17:Ity_I8 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I8(cl)
   03 | t2 = GET:I8(al)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t2)
   06 | t4 = t3
   07 | PUT(cc_dep1) = t4
   08 | t5 = 8Uto64(t0)
   09 | t6 = t5
   10 | PUT(cc_dep2) = t6
   11 | t7 = 64to8(t6)
   12 | t8 = 64to8(t4)
   13 | t9 = CmpEQ8(t8,t7)
   14 | t10 = 1Uto64(t9)
   15 | t11 = t10
   16 | t12 = 64to1(t11)
   17 | t13 = t12
   18 | t14 = ITE(t13,t1,t0)
   19 | t15 = t14
   20 | t16 = ITE(t13,t2,t0)
   21 | t17 = t16
   22 | PUT(al) = t17
   23 | PUT(bh) = t15
   24 | PUT(pc) = 0x0000000000400003
   25 | ------ IMark(0x400003, 1, 0) ------
   26 | t18 = GET:I64(rsp)
   27 | t19 = LDle:I64(t18)
   28 | t20 = Add64(t18,0x0000000000000008)
   29 | PUT(rsp) = t20
   30 | t21 = Sub64(t20,0x0000000000000080)
   31 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:48:56,071 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:56,094 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:56,109 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub213pd_xmm_xmm_xmm/vfmaddsub213pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V128HIto64(t0)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t18 = GET:I64(rsp)
   25 | t19 = LDle:I64(t18)
   26 | t20 = Add64(t18,0x0000000000000008)
   27 | PUT(rsp) = t20
   28 | t21 = Sub64(t20,0x0000000000000080)
   29 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:50:37,781 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:37,799 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:37,825 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpcklwd_xmm_xmm_xmm/vpunpcklwd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveLO16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:48,099 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:48,113 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:48,125 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqq_xmm_xmm_xmm/vpcmpeqq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpEQ64x2(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:27,786 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:27,805 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:27,842 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddsb_xmm_xmm/paddsb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QAdd8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:18,749 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:18,772 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:18,788 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpor_ymm_ymm_ymm/vpor_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = OrV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:24,232 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:24,248 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:24,268 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsravd_xmm_xmm_xmm/vpsravd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I8 t16:Ity_I32 t17:Ity_I1 t18:Ity_I32 t19:Ity_I32 t20:Ity_I8 t21:Ity_I32 t22:Ity_I1 t23:Ity_I32 t24:Ity_I32 t25:Ity_I8 t26:Ity_I32 t27:Ity_I1 t28:Ity_I32 t29:Ity_I32 t30:Ity_I8 t31:Ity_I32 t32:Ity_I1 t33:Ity_I32 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t1)
   04 | t3 = V128to64(t1)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = V128to64(t0)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = Sar32(t4,0x1f)
   16 | t15 = 32to8(t10)
   17 | t16 = Sar32(t4,t15)
   18 | t17 = CmpLT32U(t10,0x00000020)
   19 | t18 = ITE(t17,t16,t14)
   20 | t19 = Sar32(t5,0x1f)
   21 | t20 = 32to8(t11)
   22 | t21 = Sar32(t5,t20)
   23 | t22 = CmpLT32U(t11,0x00000020)
   24 | t23 = ITE(t22,t21,t19)
   25 | t24 = Sar32(t6,0x1f)
   26 | t25 = 32to8(t12)
   27 | t26 = Sar32(t6,t25)
   28 | t27 = CmpLT32U(t12,0x00000020)
   29 | t28 = ITE(t27,t26,t24)
   30 | t29 = Sar32(t7,0x1f)
   31 | t30 = 32to8(t13)
   32 | t31 = Sar32(t7,t30)
   33 | t32 = CmpLT32U(t13,0x00000020)
   34 | t33 = ITE(t32,t31,t29)
   35 | PUT(ymm1) = t18
   36 | PUT(260) = t23
   37 | PUT(264) = t28
   38 | PUT(268) = t33
   39 | PUT(272) = 0x00000000
   40 | PUT(276) = 0x00000000
   41 | PUT(280) = 0x00000000
   42 | PUT(284) = 0x00000000
   43 | PUT(pc) = 0x0000000000400005
   44 | ------ IMark(0x400005, 1, 0) ------
   45 | t34 = GET:I64(rsp)
   46 | t35 = LDle:I64(t34)
   47 | t36 = Add64(t34,0x0000000000000008)
   48 | PUT(rsp) = t36
   49 | t37 = Sub64(t36,0x0000000000000080)
   50 | ====== AbiHint(0xt37, 128, t35) ======
   NEXT: PUT(rip) = t35; Ijk_Ret
}
WARNING | 2018-04-08 20:47:14,492 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:14,565 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:14,619 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzbl_r32_r8/movzbl_r32_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = 8Uto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:15,558 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:15,578 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:15,587 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulhrsw_xmm_xmm_xmm/vpmulhrsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_V128 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = InterleaveHI16x4(t4,t4)
   08 | t7 = SarN32x2(t6,0x10)
   09 | t8 = InterleaveLO16x4(t4,t4)
   10 | t9 = SarN32x2(t8,0x10)
   11 | t10 = InterleaveHI16x4(t2,t2)
   12 | t11 = SarN32x2(t10,0x10)
   13 | t12 = InterleaveLO16x4(t2,t2)
   14 | t13 = SarN32x2(t12,0x10)
   15 | t14 = Mul32x2(t7,t11)
   16 | t15 = ShrN32x2(t14,0x0e)
   17 | t16 = Add32x2(t15,0x0000000100000001)
   18 | t17 = ShrN32x2(t16,0x01)
   19 | t18 = Mul32x2(t9,t13)
   20 | t19 = ShrN32x2(t18,0x0e)
   21 | t20 = Add32x2(t19,0x0000000100000001)
   22 | t21 = ShrN32x2(t20,0x01)
   23 | t22 = InterleaveHI16x4(t5,t5)
   24 | t23 = SarN32x2(t22,0x10)
   25 | t24 = InterleaveLO16x4(t5,t5)
   26 | t25 = SarN32x2(t24,0x10)
   27 | t26 = InterleaveHI16x4(t3,t3)
   28 | t27 = SarN32x2(t26,0x10)
   29 | t28 = InterleaveLO16x4(t3,t3)
   30 | t29 = SarN32x2(t28,0x10)
   31 | t30 = Mul32x2(t23,t27)
   32 | t31 = ShrN32x2(t30,0x0e)
   33 | t32 = Add32x2(t31,0x0000000100000001)
   34 | t33 = ShrN32x2(t32,0x01)
   35 | t34 = Mul32x2(t25,t29)
   36 | t35 = ShrN32x2(t34,0x0e)
   37 | t36 = Add32x2(t35,0x0000000100000001)
   38 | t37 = ShrN32x2(t36,0x01)
   39 | t38 = CatEvenLanes16x4(t17,t21)
   40 | t39 = CatEvenLanes16x4(t33,t37)
   41 | t40 = 64HLtoV128(t39,t38)
   42 | PUT(xmm1) = t40
   43 | PUT(272) = 0
   44 | PUT(pc) = 0x0000000000400005
   45 | ------ IMark(0x400005, 1, 0) ------
   46 | t41 = GET:I64(rsp)
   47 | t42 = LDle:I64(t41)
   48 | t43 = Add64(t41,0x0000000000000008)
   49 | PUT(rsp) = t43
   50 | t44 = Sub64(t43,0x0000000000000080)
   51 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:46:39,382 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:39,518 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:39,593 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnaq_r64_r64/cmovnaq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000006,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:10,448 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:10,467 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:10,477 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxbd_xmm_xmm/vpmovzxbd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:44,677 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:44,693 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:44,703 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcomiss_xmm_xmm/vcomiss_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F64 t3:Ity_F64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = GET:F32(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = F32toF64(t0)
   06 | t3 = F32toF64(t1)
   07 | t4 = CmpF64(t3,t2)
   08 | t5 = 32Uto64(t4)
   09 | t6 = And64(t5,0x0000000000000045)
   10 | PUT(cc_dep1) = t6
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t7 = GET:I64(rsp)
   14 | t8 = LDle:I64(t7)
   15 | t9 = Add64(t7,0x0000000000000008)
   16 | PUT(rsp) = t9
   17 | t10 = Sub64(t9,0x0000000000000080)
   18 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,189 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,322 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,420 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovgl_r32_r32/cmovgl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000f,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:32,625 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:32,664 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:32,694 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testb_rh_rh/testb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I8(ah)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:32,138 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:32,386 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:32,490 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blsmskq_r64_r64/blsmskq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = Sub64(t0,0x0000000000000001)
   03 | t2 = Xor64(t1,t0)
   04 | PUT(rbx) = t2
   05 | PUT(cc_op) = 0x000000000000003a
   06 | PUT(cc_dep1) = t2
   07 | PUT(cc_dep2) = t0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:04,124 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:04,146 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:04,175 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminsw_xmm_xmm_xmm/vpminsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min16Sx8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:28,723 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:28,759 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:28,787 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sqrtsd_xmm_xmm/sqrtsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:I64(ymm2)
   03 | t2 = SetV128lo64(t0,t1)
   04 | t3 = Sqrt64F0x2(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:54,506 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:54,526 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:54,554 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd231sd_xmm_xmm_xmm/vfmadd231sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = MAddF64(0x00000000,t1,t2,t0)
   05 | PUT(ymm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:28,606 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:28,876 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:28,954 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andps_xmm_xmm/andps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:03,384 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:03,423 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:03,441 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminsd_ymm_ymm_ymm/vpminsd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Min32Sx8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:08,913 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:08,988 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,058 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movhlps_xmm_xmm/movhlps_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(296)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400003
   04 | ------ IMark(0x400003, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:54,807 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:54,834 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:54,845 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphaddw_xmm_xmm_xmm/vphaddw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = Add16x4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = Add16x4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:46:57,692 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:57,818 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,874 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cwtl/cwtl.o
IRSB {
   t0:Ity_I16 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I16(ax)
   02 | t1 = 16Sto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rax) = t2
   05 | PUT(pc) = 0x0000000000400001
   06 | ------ IMark(0x400001, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:27,807 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:27,824 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:27,852 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sqrtpd_xmm_xmm/sqrtpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = Sqrt64Fx2(0x00000000,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:14,552 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:14,571 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:14,580 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnge_rh/setnge_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000c,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:27,966 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,020 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,062 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddq_xmm_xmm/paddq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:16,041 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:16,058 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:16,153 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzwl_r32_r16/movzwl_r32_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Uto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:40,516 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,665 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,765 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnbw_r16_r16/cmovnbw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000003,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:52,556 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:52,582 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:52,629 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclw_r16_cl/rclw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I16 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 16Uto64(t0)
   08 | t7 = GET:I8(cl)
   09 | t8 = 8Uto64(t7)
   10 | t9 = amd64g_calculate_RCL(t6,t8,t5,0x0000000000000002):Ity_I64
   11 | t10 = 16Uto64(t0)
   12 | t11 = 8Uto64(t7)
   13 | t12 = amd64g_calculate_RCL(t10,t11,t5,0xfffffffffffffffe):Ity_I64
   14 | t13 = 64to16(t9)
   15 | PUT(cc_op) = 0x0000000000000000
   16 | PUT(cc_dep1) = t12
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(bx) = t13
   20 | PUT(pc) = 0x0000000000400003
   21 | ------ IMark(0x400003, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:46:43,957 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,122 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,209 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnzl_r32_r32/cmovnzl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000005,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:50:17,784 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:17,804 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:17,818 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmuludq_ymm_ymm_ymm/vpmuludq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I32 t20:Ity_I32 t21:Ity_I64 t22:Ity_I64 t23:Ity_I32 t24:Ity_I32 t25:Ity_I64 t26:Ity_I64 t27:Ity_V128 t28:Ity_V256 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128HIto64(t3)
   08 | t7 = V128to64(t3)
   09 | t8 = 64to32(t7)
   10 | t9 = 64to32(t6)
   11 | t10 = V128HIto64(t5)
   12 | t11 = V128to64(t5)
   13 | t12 = 64to32(t11)
   14 | t13 = 64to32(t10)
   15 | t14 = MullU32(t8,t12)
   16 | t15 = MullU32(t9,t13)
   17 | t16 = 64HLtoV128(t15,t14)
   18 | t17 = V128HIto64(t2)
   19 | t18 = V128to64(t2)
   20 | t19 = 64to32(t18)
   21 | t20 = 64to32(t17)
   22 | t21 = V128HIto64(t4)
   23 | t22 = V128to64(t4)
   24 | t23 = 64to32(t22)
   25 | t24 = 64to32(t21)
   26 | t25 = MullU32(t19,t23)
   27 | t26 = MullU32(t20,t24)
   28 | t27 = 64HLtoV128(t26,t25)
   29 | t28 = V128HLtoV256(t27,t16)
   30 | PUT(ymm1) = t28
   31 | PUT(pc) = 0x0000000000400004
   32 | ------ IMark(0x400004, 1, 0) ------
   33 | t29 = GET:I64(rsp)
   34 | t30 = LDle:I64(t29)
   35 | t31 = Add64(t29,0x0000000000000008)
   36 | PUT(rsp) = t31
   37 | t32 = Sub64(t31,0x0000000000000080)
   38 | ====== AbiHint(0xt32, 128, t30) ======
   NEXT: PUT(rip) = t30; Ijk_Ret
}
WARNING | 2018-04-08 20:49:29,640 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:29,655 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:29,668 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovshdup_ymm_ymm/vmovshdup_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_V128 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = V256toV128_1(t0)
   03 | t2 = V256toV128_0(t0)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t1)
   06 | t5 = 64HIto32(t4)
   07 | t6 = 64HIto32(t3)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128to64(t2)
   10 | t9 = 64HIto32(t8)
   11 | t10 = 64HIto32(t7)
   12 | t11 = 32HLto64(t5,t5)
   13 | t12 = 32HLto64(t6,t6)
   14 | t13 = 64HLtoV128(t12,t11)
   15 | PUT(272) = t13
   16 | t14 = 32HLto64(t9,t9)
   17 | t15 = 32HLto64(t10,t10)
   18 | t16 = 64HLtoV128(t15,t14)
   19 | PUT(xmm1) = t16
   20 | PUT(pc) = 0x0000000000400004
   21 | ------ IMark(0x400004, 1, 0) ------
   22 | t17 = GET:I64(rsp)
   23 | t18 = LDle:I64(t17)
   24 | t19 = Add64(t17,0x0000000000000008)
   25 | PUT(rsp) = t19
   26 | t20 = Sub64(t19,0x0000000000000080)
   27 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:47:54,867 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:54,886 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:54,911 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrl_r32_cl/rcrl_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_all(t2,t3,t4,t5):Ity_I64
   08 | t7 = 32Uto64(t1)
   09 | t8 = GET:I8(cl)
   10 | t9 = 8Uto64(t8)
   11 | t10 = amd64g_calculate_RCR(t7,t9,t6,0x0000000000000004):Ity_I64
   12 | t11 = 32Uto64(t1)
   13 | t12 = 8Uto64(t8)
   14 | t13 = amd64g_calculate_RCR(t11,t12,t6,0xfffffffffffffffc):Ity_I64
   15 | t14 = 64to32(t10)
   16 | PUT(cc_op) = 0x0000000000000000
   17 | PUT(cc_dep1) = t13
   18 | PUT(cc_dep2) = 0x0000000000000000
   19 | PUT(cc_ndep) = 0x0000000000000000
   20 | t15 = 32Uto64(t14)
   21 | PUT(rbx) = t15
   22 | PUT(pc) = 0x0000000000400002
   23 | ------ IMark(0x400002, 1, 0) ------
   24 | t16 = GET:I64(rsp)
   25 | t17 = LDle:I64(t16)
   26 | t18 = Add64(t16,0x0000000000000008)
   27 | PUT(rsp) = t18
   28 | t19 = Sub64(t18,0x0000000000000080)
   29 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:20,528 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:20,562 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:20,609 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnz_rh/setnz_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000005,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:59,856 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,933 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,982 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divl_r32/divl_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I64 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rax)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(rdx)
   06 | t5 = 64to32(t4)
   07 | t6 = 32HLto64(t5,t3)
   08 | t7 = DivModU64to32(t6,t1)
   09 | t8 = 64to32(t7)
   10 | t9 = 32Uto64(t8)
   11 | PUT(rax) = t9
   12 | t10 = 64HIto32(t7)
   13 | t11 = 32Uto64(t10)
   14 | PUT(rdx) = t11
   15 | PUT(pc) = 0x0000000000400002
   16 | ------ IMark(0x400002, 1, 0) ------
   17 | t12 = GET:I64(rsp)
   18 | t13 = LDle:I64(t12)
   19 | t14 = Add64(t12,0x0000000000000008)
   20 | PUT(rsp) = t14
   21 | t15 = Sub64(t14,0x0000000000000080)
   22 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:07,471 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:07,526 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:07,550 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/minss_xmm_xmm/minss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:53,391 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:53,433 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:53,466 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrq_r64_cl/rcrq_r64_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = GET:I8(cl)
   08 | t7 = 8Uto64(t6)
   09 | t8 = amd64g_calculate_RCR(t0,t7,t5,0x0000000000000008):Ity_I64
   10 | t9 = 8Uto64(t6)
   11 | t10 = amd64g_calculate_RCR(t0,t9,t5,0xfffffffffffffff8):Ity_I64
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t10
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(rbx) = t8
   17 | PUT(pc) = 0x0000000000400003
   18 | ------ IMark(0x400003, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:48:39,963 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:40,001 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:40,055 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandps_xmm_xmm_xmm/vandps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = AndV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,441 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,569 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,641 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovow_r16_r16/cmovow_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000000,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,592 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,736 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,797 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovaeq_r64_r64/cmovaeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000003,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:28,838 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,855 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,913 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpgtq_xmm_xmm/pcmpgtq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpGT64Sx2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,692 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:37,888 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:38,018 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addpd_xmm_xmm/addpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add64Fx2(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:07,841 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:07,858 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:07,880 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd213pd_ymm_ymm_ymm/vfnmadd213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_F64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_F64 t35:Ity_I64 t36:Ity_F64 t37:Ity_F64 t38:Ity_F64 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | t11 = NegF64(t10)
   13 | PUT(ymm1) = t11
   14 | t12 = V256to64_1(t2)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = NegF64(t13)
   17 | t15 = V256to64_1(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = V256to64_1(t1)
   20 | t18 = ReinterpI64asF64(t17)
   21 | t19 = MAddF64(0x00000000,t18,t16,t14)
   22 | t20 = NegF64(t19)
   23 | PUT(264) = t20
   24 | t21 = V256to64_2(t2)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = NegF64(t22)
   27 | t24 = V256to64_2(t0)
   28 | t25 = ReinterpI64asF64(t24)
   29 | t26 = V256to64_2(t1)
   30 | t27 = ReinterpI64asF64(t26)
   31 | t28 = MAddF64(0x00000000,t27,t25,t23)
   32 | t29 = NegF64(t28)
   33 | PUT(272) = t29
   34 | t30 = V256to64_3(t2)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = NegF64(t31)
   37 | t33 = V256to64_3(t0)
   38 | t34 = ReinterpI64asF64(t33)
   39 | t35 = V256to64_3(t1)
   40 | t36 = ReinterpI64asF64(t35)
   41 | t37 = MAddF64(0x00000000,t36,t34,t32)
   42 | t38 = NegF64(t37)
   43 | PUT(280) = t38
   44 | PUT(pc) = 0x0000000000400005
   45 | ------ IMark(0x400005, 1, 0) ------
   46 | t39 = GET:I64(rsp)
   47 | t40 = LDle:I64(t39)
   48 | t41 = Add64(t39,0x0000000000000008)
   49 | PUT(rsp) = t41
   50 | t42 = Sub64(t41,0x0000000000000080)
   51 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:48:56,861 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:56,884 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:56,898 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub132pd_ymm_ymm_ymm/vfmaddsub132pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_I64 t24:Ity_F64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V256to64_0(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V256to64_0(t0)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V256to64_1(t1)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V256to64_1(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | t18 = V256to64_2(t1)
   22 | t19 = ReinterpI64asF64(t18)
   23 | t20 = NegF64(t19)
   24 | t21 = V256to64_2(t2)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = V256to64_2(t0)
   27 | t24 = ReinterpI64asF64(t23)
   28 | t25 = MAddF64(0x00000000,t24,t22,t20)
   29 | PUT(272) = t25
   30 | t26 = V256to64_3(t1)
   31 | t27 = ReinterpI64asF64(t26)
   32 | t28 = V256to64_3(t2)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = V256to64_3(t0)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = MAddF64(0x00000000,t31,t29,t27)
   37 | PUT(280) = t32
   38 | PUT(pc) = 0x0000000000400005
   39 | ------ IMark(0x400005, 1, 0) ------
   40 | t33 = GET:I64(rsp)
   41 | t34 = LDle:I64(t33)
   42 | t35 = Add64(t33,0x0000000000000008)
   43 | PUT(rsp) = t35
   44 | t36 = Sub64(t35,0x0000000000000080)
   45 | ====== AbiHint(0xt36, 128, t34) ======
   NEXT: PUT(rip) = t34; Ijk_Ret
}
WARNING | 2018-04-08 20:50:21,388 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:21,415 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:21,429 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllq_ymm_ymm_xmm/vpsllq_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_I1 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN64x4(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000040)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:20,330 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:20,348 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:20,358 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovapd_ymm_ymm/vmovapd_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,184 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:37,378 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:37,459 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovll_r32_r32/cmovll_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000c,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:34,918 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:34,957 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:35,000 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/ucomisd_xmm_xmm/ucomisd_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm2)
   02 | t1 = GET:F64(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = CmpF64(t1,t0)
   06 | t3 = 32Uto64(t2)
   07 | t4 = And64(t3,0x0000000000000045)
   08 | PUT(cc_dep1) = t4
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t5 = GET:I64(rsp)
   12 | t6 = LDle:I64(t5)
   13 | t7 = Add64(t5,0x0000000000000008)
   14 | PUT(rsp) = t7
   15 | t8 = Sub64(t7,0x0000000000000080)
   16 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:44,426 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:44,443 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:44,457 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vtestpd_xmm_xmm/vtestpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t0,t1)
   04 | t3 = XorV128(t1,ffffffffffffffffffffffffffffffff)
   05 | t4 = AndV128(t0,t3)
   06 | t5 = InterleaveHI64x2(t2,t2)
   07 | t6 = InterleaveLO64x2(t2,t2)
   08 | t7 = OrV128(t6,t5)
   09 | t8 = V128to64(t7)
   10 | t9 = InterleaveHI64x2(t4,t4)
   11 | t10 = InterleaveLO64x2(t4,t4)
   12 | t11 = OrV128(t10,t9)
   13 | t12 = V128to64(t11)
   14 | t13 = Sar64(t8,0x3f)
   15 | t14 = Not64(t13)
   16 | t15 = Sar64(t12,0x3f)
   17 | t16 = Not64(t15)
   18 | t17 = And64(t16,0x0000000000000001)
   19 | t18 = And64(t14,0x0000000000000040)
   20 | t19 = Or64(t18,t17)
   21 | PUT(cc_dep1) = t19
   22 | PUT(cc_op) = 0x0000000000000000
   23 | PUT(cc_dep2) = 0x0000000000000000
   24 | PUT(cc_ndep) = 0x0000000000000000
   25 | PUT(pc) = 0x0000000000400005
   26 | ------ IMark(0x400005, 1, 0) ------
   27 | t20 = GET:I64(rsp)
   28 | t21 = LDle:I64(t20)
   29 | t22 = Add64(t20,0x0000000000000008)
   30 | PUT(rsp) = t22
   31 | t23 = Sub64(t22,0x0000000000000080)
   32 | ====== AbiHint(0xt23, 128, t21) ======
   NEXT: PUT(rip) = t21; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,982 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:45,103 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:45,198 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnsw_r16_r16/cmovnsw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000009,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:19,043 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:19,060 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:19,086 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/seto_rh/seto_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000000,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:31,566 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:31,602 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:31,622 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phsubw_xmm_xmm/phsubw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = Sub16x4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = Sub16x4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:49:27,153 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:27,166 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:27,172 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovq_xmm_xmm/vmovq_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(264) = 0x0000000000000000
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t1 = GET:I64(rsp)
   08 | t2 = LDle:I64(t1)
   09 | t3 = Add64(t1,0x0000000000000008)
   10 | PUT(rsp) = t3
   11 | t4 = Sub64(t3,0x0000000000000080)
   12 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:48:30,672 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:30,696 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:30,711 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subps_xmm_xmm/subps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub32Fx4(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:29,216 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:29,237 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:29,261 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/stc/stc.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_rflags_all(t0,t1,t2,t3):Ity_I64
   06 | t5 = Or64(t4,0x0000000000000001)
   07 | PUT(cc_op) = 0x0000000000000000
   08 | PUT(cc_dep2) = 0x0000000000000000
   09 | PUT(cc_dep1) = t5
   10 | PUT(cc_ndep) = 0x0000000000000000
   11 | PUT(pc) = 0x0000000000400001
   12 | ------ IMark(0x400001, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:54,449 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:54,468 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:54,511 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolb_rh_cl/rolb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I8 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = And8(t2,0x07)
   05 | t4 = Sub8(0x08,t3)
   06 | t5 = Shr8(t0,t4)
   07 | t6 = Shl8(t0,t3)
   08 | t7 = Or8(t6,t5)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = GET:I64(cc_dep1)
   11 | t10 = GET:I64(cc_dep2)
   12 | t11 = GET:I64(cc_ndep)
   13 | t12 = amd64g_calculate_rflags_all(t8,t9,t10,t11):Ity_I64
   14 | t13 = CmpNE8(t2,0x00)
   15 | t14 = ITE(t13,0x0000000000000025,t8)
   16 | PUT(cc_op) = t14
   17 | t15 = 8Uto64(t7)
   18 | t16 = ITE(t13,t15,t9)
   19 | PUT(cc_dep1) = t16
   20 | t17 = ITE(t13,0x0000000000000000,t10)
   21 | PUT(cc_dep2) = t17
   22 | t18 = ITE(t13,t12,t11)
   23 | PUT(cc_ndep) = t18
   24 | PUT(ah) = t7
   25 | PUT(pc) = 0x0000000000400002
   26 | ------ IMark(0x400002, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:47:41,398 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:41,447 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:41,486 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psignb_xmm_xmm/psignb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_V128 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = Sub8x8(0x0000000000000000,t3)
   08 | t7 = CmpGT8Sx8(0x0000000000000000,t5)
   09 | t8 = CmpGT8Sx8(t5,0x0000000000000000)
   10 | t9 = Sub8x8(0x0000000000000000,t2)
   11 | t10 = CmpGT8Sx8(0x0000000000000000,t4)
   12 | t11 = CmpGT8Sx8(t4,0x0000000000000000)
   13 | t12 = And64(t6,t7)
   14 | t13 = And64(t3,t8)
   15 | t14 = Or64(t13,t12)
   16 | t15 = And64(t9,t10)
   17 | t16 = And64(t2,t11)
   18 | t17 = Or64(t16,t15)
   19 | t18 = 64HLtoV128(t17,t14)
   20 | PUT(xmm1) = t18
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t19 = GET:I64(rsp)
   24 | t20 = LDle:I64(t19)
   25 | t21 = Add64(t19,0x0000000000000008)
   26 | PUT(rsp) = t21
   27 | t22 = Sub64(t21,0x0000000000000080)
   28 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:46:48,051 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:48,189 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:48,283 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpw_r16_r16/cmovpw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000a,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:13,956 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:13,980 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:13,995 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmuldq_ymm_ymm_ymm/vpmuldq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I32 t20:Ity_I32 t21:Ity_I64 t22:Ity_I64 t23:Ity_I32 t24:Ity_I32 t25:Ity_I64 t26:Ity_I64 t27:Ity_V128 t28:Ity_V256 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128HIto64(t5)
   08 | t7 = V128to64(t5)
   09 | t8 = 64to32(t7)
   10 | t9 = 64to32(t6)
   11 | t10 = V128HIto64(t3)
   12 | t11 = V128to64(t3)
   13 | t12 = 64to32(t11)
   14 | t13 = 64to32(t10)
   15 | t14 = MullS32(t8,t12)
   16 | t15 = MullS32(t9,t13)
   17 | t16 = 64HLtoV128(t15,t14)
   18 | t17 = V128HIto64(t4)
   19 | t18 = V128to64(t4)
   20 | t19 = 64to32(t18)
   21 | t20 = 64to32(t17)
   22 | t21 = V128HIto64(t2)
   23 | t22 = V128to64(t2)
   24 | t23 = 64to32(t22)
   25 | t24 = 64to32(t21)
   26 | t25 = MullS32(t19,t23)
   27 | t26 = MullS32(t20,t24)
   28 | t27 = 64HLtoV128(t26,t25)
   29 | t28 = V128HLtoV256(t27,t16)
   30 | PUT(ymm1) = t28
   31 | PUT(pc) = 0x0000000000400005
   32 | ------ IMark(0x400005, 1, 0) ------
   33 | t29 = GET:I64(rsp)
   34 | t30 = LDle:I64(t29)
   35 | t31 = Add64(t29,0x0000000000000008)
   36 | PUT(rsp) = t31
   37 | t32 = Sub64(t31,0x0000000000000080)
   38 | ====== AbiHint(0xt32, 128, t30) ======
   NEXT: PUT(rip) = t30; Ijk_Ret
}
WARNING | 2018-04-08 20:47:13,845 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:13,870 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,919 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movswl_r32_r16/movswl_r32_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Sto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:52,151 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,311 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:52,432 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnsq_r64_r64/cmovnsq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000009,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:52,053 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:52,095 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:52,111 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddq_r64_r64/xaddq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = Add64(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000004
   05 | PUT(cc_dep1) = t0
   06 | PUT(cc_dep2) = t1
   07 | PUT(rcx) = t0
   08 | PUT(rbx) = t2
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t3 = GET:I64(rsp)
   12 | t4 = LDle:I64(t3)
   13 | t5 = Add64(t3,0x0000000000000008)
   14 | PUT(rsp) = t5
   15 | t6 = Sub64(t5,0x0000000000000080)
   16 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:09,953 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:09,977 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:09,987 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setbe_rh/setbe_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000006,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:26,723 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:26,748 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:26,776 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovq_r64_xmm/vmovq_r64_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(ymm1)
   02 | PUT(rbx) = t0
   03 | PUT(pc) = 0x0000000000400005
   04 | ------ IMark(0x400005, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:15,263 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:15,293 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:15,331 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzbq_r64_r8/movzbq_r64_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = 8Uto64(t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:10,239 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:10,257 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:10,268 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setc_r8/setc_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000002,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:13,243 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:13,258 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:13,266 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213ps_ymm_ymm_ymm/vfnmsub213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_I32 t42:Ity_F32 t43:Ity_I32 t44:Ity_F32 t45:Ity_F32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_I32 t50:Ity_F32 t51:Ity_I32 t52:Ity_F32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_I32 t60:Ity_F32 t61:Ity_F32 t62:Ity_F32 t63:Ity_I32 t64:Ity_F32 t65:Ity_I32 t66:Ity_F32 t67:Ity_I32 t68:Ity_F32 t69:Ity_F32 t70:Ity_F32 t71:Ity_I32 t72:Ity_F32 t73:Ity_I32 t74:Ity_F32 t75:Ity_I32 t76:Ity_F32 t77:Ity_F32 t78:Ity_F32 t79:Ity_I64 t80:Ity_I64 t81:Ity_I64 t82:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | t22 = NegF32(t21)
   24 | PUT(ymm1) = t22
   25 | t23 = 64HIto32(t5)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | t30 = NegF32(t29)
   33 | PUT(260) = t30
   34 | t31 = 64to32(t8)
   35 | t32 = ReinterpI32asF32(t31)
   36 | t33 = 64to32(t7)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = 64to32(t6)
   39 | t36 = ReinterpI32asF32(t35)
   40 | t37 = MAddF32(0x00000000,t36,t34,t32)
   41 | t38 = NegF32(t37)
   42 | PUT(264) = t38
   43 | t39 = 64HIto32(t8)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = 64HIto32(t7)
   46 | t42 = ReinterpI32asF32(t41)
   47 | t43 = 64HIto32(t6)
   48 | t44 = ReinterpI32asF32(t43)
   49 | t45 = MAddF32(0x00000000,t44,t42,t40)
   50 | t46 = NegF32(t45)
   51 | PUT(268) = t46
   52 | t47 = 64to32(t11)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = 64to32(t10)
   55 | t50 = ReinterpI32asF32(t49)
   56 | t51 = 64to32(t9)
   57 | t52 = ReinterpI32asF32(t51)
   58 | t53 = MAddF32(0x00000000,t52,t50,t48)
   59 | t54 = NegF32(t53)
   60 | PUT(272) = t54
   61 | t55 = 64HIto32(t11)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t10)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = 64HIto32(t9)
   66 | t60 = ReinterpI32asF32(t59)
   67 | t61 = MAddF32(0x00000000,t60,t58,t56)
   68 | t62 = NegF32(t61)
   69 | PUT(276) = t62
   70 | t63 = 64to32(t14)
   71 | t64 = ReinterpI32asF32(t63)
   72 | t65 = 64to32(t13)
   73 | t66 = ReinterpI32asF32(t65)
   74 | t67 = 64to32(t12)
   75 | t68 = ReinterpI32asF32(t67)
   76 | t69 = MAddF32(0x00000000,t68,t66,t64)
   77 | t70 = NegF32(t69)
   78 | PUT(280) = t70
   79 | t71 = 64HIto32(t14)
   80 | t72 = ReinterpI32asF32(t71)
   81 | t73 = 64HIto32(t13)
   82 | t74 = ReinterpI32asF32(t73)
   83 | t75 = 64HIto32(t12)
   84 | t76 = ReinterpI32asF32(t75)
   85 | t77 = MAddF32(0x00000000,t76,t74,t72)
   86 | t78 = NegF32(t77)
   87 | PUT(284) = t78
   88 | PUT(pc) = 0x0000000000400005
   89 | ------ IMark(0x400005, 1, 0) ------
   90 | t79 = GET:I64(rsp)
   91 | t80 = LDle:I64(t79)
   92 | t81 = Add64(t79,0x0000000000000008)
   93 | PUT(rsp) = t81
   94 | t82 = Sub64(t81,0x0000000000000080)
   95 | ====== AbiHint(0xt82, 128, t80) ======
   NEXT: PUT(rip) = t80; Ijk_Ret
}
WARNING | 2018-04-08 20:49:33,868 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:33,887 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:33,897 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpabsw_xmm_xmm/vpabsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = SarN16x4(t2,0x0f)
   05 | t4 = Not64(t3)
   06 | t5 = Sub16x4(0x0000000000000000,t2)
   07 | t6 = And64(t5,t3)
   08 | t7 = And64(t2,t4)
   09 | t8 = Or64(t7,t6)
   10 | t9 = SarN16x4(t1,0x0f)
   11 | t10 = Not64(t9)
   12 | t11 = Sub16x4(0x0000000000000000,t1)
   13 | t12 = And64(t11,t9)
   14 | t13 = And64(t1,t10)
   15 | t14 = Or64(t13,t12)
   16 | t15 = 64HLtoV128(t14,t8)
   17 | PUT(xmm1) = t15
   18 | PUT(272) = 0
   19 | PUT(pc) = 0x0000000000400005
   20 | ------ IMark(0x400005, 1, 0) ------
   21 | t16 = GET:I64(rsp)
   22 | t17 = LDle:I64(t16)
   23 | t18 = Add64(t16,0x0000000000000008)
   24 | PUT(rsp) = t18
   25 | t19 = Sub64(t18,0x0000000000000080)
   26 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:22,122 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:22,140 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:22,161 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlb_r8_cl/shlb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Uto64(t0)
   05 | t4 = Shl64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shl64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x000000000000001d,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(bl) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:47:53,702 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:53,721 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:53,755 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrb_r8_one/rcrb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = amd64g_calculate_RCR(t6,0x0000000000000001,t5,0x0000000000000001):Ity_I64
   09 | t8 = 8Uto64(t0)
   10 | t9 = amd64g_calculate_RCR(t8,0x0000000000000001,t5,0xffffffffffffffff):Ity_I64
   11 | t10 = 64to8(t7)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t9
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(bl) = t10
   17 | PUT(pc) = 0x0000000000400002
   18 | ------ IMark(0x400002, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:48:08,945 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:08,978 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:09,025 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sete_rh/sete_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000004,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:42,662 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,689 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,741 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmulld_xmm_xmm/pmulld_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Mul32x4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:35,125 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:35,166 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:35,199 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhqdq_ymm_ymm_ymm/vpunpckhqdq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveHI64x2(t5,t3)
   08 | t7 = InterleaveHI64x2(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:36,259 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:36,279 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:36,294 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpcklbw_xmm_xmm_xmm/vpunpcklbw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveLO8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,922 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:45,017 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:45,094 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovcw_r16_r16/cmovcw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000002,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:24,072 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:24,151 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:24,198 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/packsswb_xmm_xmm/packsswb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = QNarrowBin16Sto8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,552 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,688 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,789 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovcl_r32_r32/cmovcl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000002,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:46,143 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:46,176 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:46,207 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpckhbw_xmm_xmm/punpckhbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveHI8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:48,852 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:48,869 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:48,883 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvttsd2sil_r32_xmm/vcvttsd2sil_r32_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = F64toI32S(0x00000003,t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,030 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:33,262 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:33,365 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btrl_r32_r32/btrl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I8 t12:Ity_I8 t13:Ity_I8 t14:Ity_I8 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I32 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Sto64(t1)
   04 | t3 = GET:I64(rsp)
   05 | t4 = Sub64(t3,0x0000000000000120)
   06 | PUT(rsp) = t4
   07 | t5 = GET:I64(rbx)
   08 | t6 = 64to32(t5)
   09 | STle(t4) = t6
   10 | t7 = And64(t2,0x000000000000001f)
   11 | t8 = Sar64(t7,0x03)
   12 | t9 = Add64(t4,t8)
   13 | t10 = And64(t7,0x0000000000000007)
   14 | t11 = 64to8(t10)
   15 | t12 = Shl8(0x01,t11)
   16 | t13 = LDle:I8(t9)
   17 | t14 = Not8(t12)
   18 | t15 = And8(t13,t14)
   19 | STle(t9) = t15
   20 | PUT(cc_op) = 0x0000000000000000
   21 | PUT(cc_dep2) = 0x0000000000000000
   22 | t16 = 8Uto64(t13)
   23 | t17 = Shr64(t16,t11)
   24 | t18 = And64(t17,0x0000000000000001)
   25 | PUT(cc_dep1) = t18
   26 | PUT(cc_ndep) = 0x0000000000000000
   27 | t19 = LDle:I32(t4)
   28 | t20 = 32Uto64(t19)
   29 | PUT(rbx) = t20
   30 | t21 = Add64(t4,0x0000000000000120)
   31 | PUT(rsp) = t21
   32 | PUT(pc) = 0x0000000000400003
   33 | ------ IMark(0x400003, 1, 0) ------
   34 | t22 = LDle:I64(t21)
   35 | t23 = Add64(t21,0x0000000000000008)
   36 | PUT(rsp) = t23
   37 | t24 = Sub64(t23,0x0000000000000080)
   38 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:48:07,091 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:07,147 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:07,179 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/seta_r8/seta_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000007,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:12,871 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:12,886 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:12,894 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setl_rh/setl_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000c,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:31,286 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:31,303 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:31,340 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vorpd_xmm_xmm_xmm/vorpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = OrV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:40,605 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,786 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,890 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blsrq_r64_r64/blsrq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = Sub64(t0,0x0000000000000001)
   03 | t2 = And64(t1,t0)
   04 | PUT(rbx) = t2
   05 | PUT(cc_op) = 0x000000000000003c
   06 | PUT(cc_dep1) = t2
   07 | PUT(cc_dep2) = t0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:54,823 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:54,843 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:54,857 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphaddd_xmm_xmm_xmm/vphaddd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = InterleaveHI32x2(t2,t3)
   08 | t7 = InterleaveLO32x2(t2,t3)
   09 | t8 = Add32x2(t7,t6)
   10 | t9 = InterleaveHI32x2(t4,t5)
   11 | t10 = InterleaveLO32x2(t4,t5)
   12 | t11 = Add32x2(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:49:29,692 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:29,709 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:29,720 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovupd_ymm_ymm/vmovupd_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:50:19,899 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:19,924 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:19,957 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpshufb_ymm_ymm_ymm/vpshufb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_V128 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64 t49:Ity_I64 t50:Ity_I64 t51:Ity_I64 t52:Ity_I64 t53:Ity_I64 t54:Ity_I64 t55:Ity_I64 t56:Ity_I64 t57:Ity_I64 t58:Ity_I64 t59:Ity_I64 t60:Ity_I64 t61:Ity_I64 t62:Ity_I64 t63:Ity_V128 t64:Ity_V256 t65:Ity_I64 t66:Ity_I64 t67:Ity_I64 t68:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = V128HIto64(t3)
   08 | t7 = V128to64(t3)
   09 | t8 = V128HIto64(t5)
   10 | t9 = V128to64(t5)
   11 | t10 = SarN8x8(t8,0x07)
   12 | t11 = Not64(t10)
   13 | t12 = ShlN8x8(t8,0x04)
   14 | t13 = SarN8x8(t12,0x07)
   15 | t14 = And64(t8,0x0707070707070707)
   16 | t15 = Not64(t13)
   17 | t16 = Perm8x8(t7,t14)
   18 | t17 = And64(t16,t15)
   19 | t18 = Perm8x8(t6,t14)
   20 | t19 = And64(t18,t13)
   21 | t20 = Or64(t19,t17)
   22 | t21 = And64(t20,t11)
   23 | t22 = SarN8x8(t9,0x07)
   24 | t23 = Not64(t22)
   25 | t24 = ShlN8x8(t9,0x04)
   26 | t25 = SarN8x8(t24,0x07)
   27 | t26 = And64(t9,0x0707070707070707)
   28 | t27 = Not64(t25)
   29 | t28 = Perm8x8(t7,t26)
   30 | t29 = And64(t28,t27)
   31 | t30 = Perm8x8(t6,t26)
   32 | t31 = And64(t30,t25)
   33 | t32 = Or64(t31,t29)
   34 | t33 = And64(t32,t23)
   35 | t34 = 64HLtoV128(t21,t33)
   36 | t35 = V128HIto64(t2)
   37 | t36 = V128to64(t2)
   38 | t37 = V128HIto64(t4)
   39 | t38 = V128to64(t4)
   40 | t39 = SarN8x8(t37,0x07)
   41 | t40 = Not64(t39)
   42 | t41 = ShlN8x8(t37,0x04)
   43 | t42 = SarN8x8(t41,0x07)
   44 | t43 = And64(t37,0x0707070707070707)
   45 | t44 = Not64(t42)
   46 | t45 = Perm8x8(t36,t43)
   47 | t46 = And64(t45,t44)
   48 | t47 = Perm8x8(t35,t43)
   49 | t48 = And64(t47,t42)
   50 | t49 = Or64(t48,t46)
   51 | t50 = And64(t49,t40)
   52 | t51 = SarN8x8(t38,0x07)
   53 | t52 = Not64(t51)
   54 | t53 = ShlN8x8(t38,0x04)
   55 | t54 = SarN8x8(t53,0x07)
   56 | t55 = And64(t38,0x0707070707070707)
   57 | t56 = Not64(t54)
   58 | t57 = Perm8x8(t36,t55)
   59 | t58 = And64(t57,t56)
   60 | t59 = Perm8x8(t35,t55)
   61 | t60 = And64(t59,t54)
   62 | t61 = Or64(t60,t58)
   63 | t62 = And64(t61,t52)
   64 | t63 = 64HLtoV128(t50,t62)
   65 | t64 = V128HLtoV256(t63,t34)
   66 | PUT(ymm1) = t64
   67 | PUT(pc) = 0x0000000000400005
   68 | ------ IMark(0x400005, 1, 0) ------
   69 | t65 = GET:I64(rsp)
   70 | t66 = LDle:I64(t65)
   71 | t67 = Add64(t65,0x0000000000000008)
   72 | PUT(rsp) = t67
   73 | t68 = Sub64(t67,0x0000000000000080)
   74 | ====== AbiHint(0xt68, 128, t66) ======
   NEXT: PUT(rip) = t66; Ijk_Ret
}
WARNING | 2018-04-08 20:50:08,787 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:08,813 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:08,851 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxbw_ymm_xmm/vpmovsxbw_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V256 t4:Ity_V256 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveHI8x16(0,t0)
   04 | t3 = V128HLtoV256(t2,t1)
   05 | t4 = ShlN16x16(t3,0x08)
   06 | t5 = SarN16x16(t4,0x08)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:50,107 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:50,124 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:50,133 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vdivps_xmm_xmm_xmm/vdivps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Div32Fx4(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:24,483 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:24,501 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:24,557 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsravd_ymm_ymm_ymm/vpsravd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I64 t25:Ity_I64 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I8 t32:Ity_I32 t33:Ity_I1 t34:Ity_I32 t35:Ity_I32 t36:Ity_I8 t37:Ity_I32 t38:Ity_I1 t39:Ity_I32 t40:Ity_I32 t41:Ity_I8 t42:Ity_I32 t43:Ity_I1 t44:Ity_I32 t45:Ity_I32 t46:Ity_I8 t47:Ity_I32 t48:Ity_I1 t49:Ity_I32 t50:Ity_I32 t51:Ity_I8 t52:Ity_I32 t53:Ity_I1 t54:Ity_I32 t55:Ity_I32 t56:Ity_I8 t57:Ity_I32 t58:Ity_I1 t59:Ity_I32 t60:Ity_I32 t61:Ity_I8 t62:Ity_I32 t63:Ity_I1 t64:Ity_I32 t65:Ity_I32 t66:Ity_I8 t67:Ity_I32 t68:Ity_I1 t69:Ity_I32 t70:Ity_I64 t71:Ity_I64 t72:Ity_I64 t73:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t2)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = V128HIto64(t3)
   12 | t11 = V128to64(t3)
   13 | t12 = 64to32(t11)
   14 | t13 = 64HIto32(t11)
   15 | t14 = 64to32(t10)
   16 | t15 = 64HIto32(t10)
   17 | t16 = V256toV128_1(t0)
   18 | t17 = V256toV128_0(t0)
   19 | t18 = V128HIto64(t16)
   20 | t19 = V128to64(t16)
   21 | t20 = 64to32(t19)
   22 | t21 = 64HIto32(t19)
   23 | t22 = 64to32(t18)
   24 | t23 = 64HIto32(t18)
   25 | t24 = V128HIto64(t17)
   26 | t25 = V128to64(t17)
   27 | t26 = 64to32(t25)
   28 | t27 = 64HIto32(t25)
   29 | t28 = 64to32(t24)
   30 | t29 = 64HIto32(t24)
   31 | t30 = Sar32(t12,0x1f)
   32 | t31 = 32to8(t26)
   33 | t32 = Sar32(t12,t31)
   34 | t33 = CmpLT32U(t26,0x00000020)
   35 | t34 = ITE(t33,t32,t30)
   36 | t35 = Sar32(t13,0x1f)
   37 | t36 = 32to8(t27)
   38 | t37 = Sar32(t13,t36)
   39 | t38 = CmpLT32U(t27,0x00000020)
   40 | t39 = ITE(t38,t37,t35)
   41 | t40 = Sar32(t14,0x1f)
   42 | t41 = 32to8(t28)
   43 | t42 = Sar32(t14,t41)
   44 | t43 = CmpLT32U(t28,0x00000020)
   45 | t44 = ITE(t43,t42,t40)
   46 | t45 = Sar32(t15,0x1f)
   47 | t46 = 32to8(t29)
   48 | t47 = Sar32(t15,t46)
   49 | t48 = CmpLT32U(t29,0x00000020)
   50 | t49 = ITE(t48,t47,t45)
   51 | t50 = Sar32(t6,0x1f)
   52 | t51 = 32to8(t20)
   53 | t52 = Sar32(t6,t51)
   54 | t53 = CmpLT32U(t20,0x00000020)
   55 | t54 = ITE(t53,t52,t50)
   56 | t55 = Sar32(t7,0x1f)
   57 | t56 = 32to8(t21)
   58 | t57 = Sar32(t7,t56)
   59 | t58 = CmpLT32U(t21,0x00000020)
   60 | t59 = ITE(t58,t57,t55)
   61 | t60 = Sar32(t8,0x1f)
   62 | t61 = 32to8(t22)
   63 | t62 = Sar32(t8,t61)
   64 | t63 = CmpLT32U(t22,0x00000020)
   65 | t64 = ITE(t63,t62,t60)
   66 | t65 = Sar32(t9,0x1f)
   67 | t66 = 32to8(t23)
   68 | t67 = Sar32(t9,t66)
   69 | t68 = CmpLT32U(t23,0x00000020)
   70 | t69 = ITE(t68,t67,t65)
   71 | PUT(ymm1) = t34
   72 | PUT(260) = t39
   73 | PUT(264) = t44
   74 | PUT(268) = t49
   75 | PUT(272) = t54
   76 | PUT(276) = t59
   77 | PUT(280) = t64
   78 | PUT(284) = t69
   79 | PUT(pc) = 0x0000000000400005
   80 | ------ IMark(0x400005, 1, 0) ------
   81 | t70 = GET:I64(rsp)
   82 | t71 = LDle:I64(t70)
   83 | t72 = Add64(t70,0x0000000000000008)
   84 | PUT(rsp) = t72
   85 | t73 = Sub64(t72,0x0000000000000080)
   86 | ====== AbiHint(0xt73, 128, t71) ======
   NEXT: PUT(rip) = t71; Ijk_Ret
}
WARNING | 2018-04-08 20:47:20,910 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:20,937 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:20,957 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulxl_r32_r32_r32/mulxl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = MullU32(t1,t3)
   06 | t5 = 64to32(t4)
   07 | t6 = 32Uto64(t5)
   08 | PUT(rbx) = t6
   09 | t7 = 64HIto32(t4)
   10 | t8 = 32Uto64(t7)
   11 | PUT(rax) = t8
   12 | PUT(pc) = 0x0000000000400005
   13 | ------ IMark(0x400005, 1, 0) ------
   14 | t9 = GET:I64(rsp)
   15 | t10 = LDle:I64(t9)
   16 | t11 = Add64(t9,0x0000000000000008)
   17 | PUT(rsp) = t11
   18 | t12 = Sub64(t11,0x0000000000000080)
   19 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:48,023 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:48,166 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:48,244 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnlw_r16_r16/cmovnlw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000d,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:59,447 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,466 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,484 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divsd_xmm_xmm/divsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Div64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,208 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,243 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,347 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovbq_r64_r64/cmovbq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000002,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:41,389 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:41,425 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:41,467 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmulhrsw_xmm_xmm/pmulhrsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_V128 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = InterleaveHI16x4(t5,t5)
   08 | t7 = SarN32x2(t6,0x10)
   09 | t8 = InterleaveLO16x4(t5,t5)
   10 | t9 = SarN32x2(t8,0x10)
   11 | t10 = InterleaveHI16x4(t3,t3)
   12 | t11 = SarN32x2(t10,0x10)
   13 | t12 = InterleaveLO16x4(t3,t3)
   14 | t13 = SarN32x2(t12,0x10)
   15 | t14 = Mul32x2(t7,t11)
   16 | t15 = ShrN32x2(t14,0x0e)
   17 | t16 = Add32x2(t15,0x0000000100000001)
   18 | t17 = ShrN32x2(t16,0x01)
   19 | t18 = Mul32x2(t9,t13)
   20 | t19 = ShrN32x2(t18,0x0e)
   21 | t20 = Add32x2(t19,0x0000000100000001)
   22 | t21 = ShrN32x2(t20,0x01)
   23 | t22 = InterleaveHI16x4(t4,t4)
   24 | t23 = SarN32x2(t22,0x10)
   25 | t24 = InterleaveLO16x4(t4,t4)
   26 | t25 = SarN32x2(t24,0x10)
   27 | t26 = InterleaveHI16x4(t2,t2)
   28 | t27 = SarN32x2(t26,0x10)
   29 | t28 = InterleaveLO16x4(t2,t2)
   30 | t29 = SarN32x2(t28,0x10)
   31 | t30 = Mul32x2(t23,t27)
   32 | t31 = ShrN32x2(t30,0x0e)
   33 | t32 = Add32x2(t31,0x0000000100000001)
   34 | t33 = ShrN32x2(t32,0x01)
   35 | t34 = Mul32x2(t25,t29)
   36 | t35 = ShrN32x2(t34,0x0e)
   37 | t36 = Add32x2(t35,0x0000000100000001)
   38 | t37 = ShrN32x2(t36,0x01)
   39 | t38 = CatEvenLanes16x4(t17,t21)
   40 | t39 = CatEvenLanes16x4(t33,t37)
   41 | t40 = 64HLtoV128(t39,t38)
   42 | PUT(xmm1) = t40
   43 | PUT(pc) = 0x0000000000400005
   44 | ------ IMark(0x400005, 1, 0) ------
   45 | t41 = GET:I64(rsp)
   46 | t42 = LDle:I64(t41)
   47 | t43 = Add64(t41,0x0000000000000008)
   48 | PUT(rsp) = t43
   49 | t44 = Sub64(t43,0x0000000000000080)
   50 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:49:05,034 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:05,048 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:05,057 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd213ps_xmm_xmm_xmm/vfmsubadd213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_I32 t17:Ity_F32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | PUT(ymm1) = t15
   18 | t16 = 64HIto32(t5)
   19 | t17 = ReinterpI32asF32(t16)
   20 | t18 = NegF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | PUT(260) = t23
   27 | t24 = 64to32(t8)
   28 | t25 = ReinterpI32asF32(t24)
   29 | t26 = 64to32(t7)
   30 | t27 = ReinterpI32asF32(t26)
   31 | t28 = 64to32(t6)
   32 | t29 = ReinterpI32asF32(t28)
   33 | t30 = MAddF32(0x00000000,t29,t27,t25)
   34 | PUT(264) = t30
   35 | t31 = 64HIto32(t8)
   36 | t32 = ReinterpI32asF32(t31)
   37 | t33 = NegF32(t32)
   38 | t34 = 64HIto32(t7)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = 64HIto32(t6)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = MAddF32(0x00000000,t37,t35,t33)
   43 | PUT(268) = t38
   44 | PUT(272) = 0
   45 | PUT(pc) = 0x0000000000400005
   46 | ------ IMark(0x400005, 1, 0) ------
   47 | t39 = GET:I64(rsp)
   48 | t40 = LDle:I64(t39)
   49 | t41 = Add64(t39,0x0000000000000008)
   50 | PUT(rsp) = t41
   51 | t42 = Sub64(t41,0x0000000000000080)
   52 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:46:45,408 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:45,527 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:45,612 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpel_r32_r32/cmovpel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000a,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:29,325 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:29,340 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:29,351 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovsldup_xmm_xmm/vmovsldup_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64to32(t1)
   06 | t5 = 32HLto64(t3,t3)
   07 | t6 = 32HLto64(t4,t4)
   08 | t7 = 64HLtoV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(272) = 0
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t8 = GET:I64(rsp)
   14 | t9 = LDle:I64(t8)
   15 | t10 = Add64(t8,0x0000000000000008)
   16 | PUT(rsp) = t10
   17 | t11 = Sub64(t10,0x0000000000000080)
   18 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,453 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,598 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,729 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnal_r32_r32/cmovnal_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000006,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,642 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,752 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:56,793 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtpd2ps_xmm_xmm/cvtpd2ps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_F32 t9:Ity_F32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128to64(t0)
   06 | t5 = ReinterpI64asF64(t4)
   07 | t6 = V128HIto64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | PUT(268) = 0x00000000
   10 | PUT(264) = 0x00000000
   11 | t8 = F64toF32(t3,t7)
   12 | PUT(260) = t8
   13 | t9 = F64toF32(t3,t5)
   14 | PUT(ymm1) = t9
   15 | PUT(pc) = 0x0000000000400004
   16 | ------ IMark(0x400004, 1, 0) ------
   17 | t10 = GET:I64(rsp)
   18 | t11 = LDle:I64(t10)
   19 | t12 = Add64(t10,0x0000000000000008)
   20 | PUT(rsp) = t12
   21 | t13 = Sub64(t12,0x0000000000000080)
   22 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:50:22,924 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:22,948 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:22,958 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllvq_ymm_ymm_ymm/vpsllvq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I8 t15:Ity_I64 t16:Ity_I1 t17:Ity_I64 t18:Ity_I8 t19:Ity_I64 t20:Ity_I1 t21:Ity_I64 t22:Ity_I8 t23:Ity_I64 t24:Ity_I1 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256to64_0(t1)
   04 | t3 = V256to64_1(t1)
   05 | t4 = V256to64_2(t1)
   06 | t5 = V256to64_3(t1)
   07 | t6 = V256to64_0(t0)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_2(t0)
   10 | t9 = V256to64_3(t0)
   11 | t10 = 64to8(t6)
   12 | t11 = Shl64(t2,t10)
   13 | t12 = CmpLT64U(t6,0x0000000000000040)
   14 | t13 = ITE(t12,t11,0x0000000000000000)
   15 | t14 = 64to8(t7)
   16 | t15 = Shl64(t3,t14)
   17 | t16 = CmpLT64U(t7,0x0000000000000040)
   18 | t17 = ITE(t16,t15,0x0000000000000000)
   19 | t18 = 64to8(t8)
   20 | t19 = Shl64(t4,t18)
   21 | t20 = CmpLT64U(t8,0x0000000000000040)
   22 | t21 = ITE(t20,t19,0x0000000000000000)
   23 | t22 = 64to8(t9)
   24 | t23 = Shl64(t5,t22)
   25 | t24 = CmpLT64U(t9,0x0000000000000040)
   26 | t25 = ITE(t24,t23,0x0000000000000000)
   27 | PUT(ymm1) = t13
   28 | PUT(264) = t17
   29 | PUT(272) = t21
   30 | PUT(280) = t25
   31 | PUT(pc) = 0x0000000000400005
   32 | ------ IMark(0x400005, 1, 0) ------
   33 | t26 = GET:I64(rsp)
   34 | t27 = LDle:I64(t26)
   35 | t28 = Add64(t26,0x0000000000000008)
   36 | PUT(rsp) = t28
   37 | t29 = Sub64(t28,0x0000000000000080)
   38 | ====== AbiHint(0xt29, 128, t27) ======
   NEXT: PUT(rip) = t27; Ijk_Ret
}
WARNING | 2018-04-08 20:47:05,371 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,444 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,501 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/incl_r32/incl_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Add32(t1,0x00000001)
   04 | t3 = GET:I64(cc_op)
   05 | t4 = GET:I64(cc_dep1)
   06 | t5 = GET:I64(cc_dep2)
   07 | t6 = GET:I64(cc_ndep)
   08 | t7 = amd64g_calculate_rflags_c(t3,t4,t5,t6):Ity_I64
   09 | PUT(cc_ndep) = t7
   10 | PUT(cc_op) = 0x0000000000000017
   11 | t8 = 32Uto64(t2)
   12 | PUT(cc_dep1) = t8
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | t9 = 32Uto64(t2)
   15 | PUT(rbx) = t9
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:47:01,221 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:01,269 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:01,325 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvttsd2sil_r32_xmm/cvttsd2sil_r32_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = F64toI32S(0x00000003,t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:47,011 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:47,034 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:47,047 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastw_xmm_xmm/vpbroadcastw_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to16(t0)
   03 | t2 = 16HLto32(t1,t1)
   04 | t3 = 32HLto64(t2,t2)
   05 | t4 = 64HLtoV128(t3,t3)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:52,387 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:52,417 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:52,445 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgl_r32_eax/xchgl_r32_eax.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = 32Uto64(t3)
   06 | PUT(rax) = t4
   07 | t5 = 32Uto64(t1)
   08 | PUT(rbx) = t5
   09 | PUT(pc) = 0x0000000000400001
   10 | ------ IMark(0x400001, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:06,305 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:06,332 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:06,370 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/maxps_xmm_xmm/maxps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max32Fx4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:04,429 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:04,453 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:04,463 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminub_xmm_xmm_xmm/vpminub_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min8Ux16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:27,686 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:28,045 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:28,131 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andb_r8_rh/andb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bl) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:39,986 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:40,129 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:40,215 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnbeq_r64_r64/cmovnbeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000007,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:09,406 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:09,425 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:09,445 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setge_r8/setge_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000d,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:07,346 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:07,359 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:07,368 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd231ps_xmm_xmm_xmm/vfmsubadd231ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_I32 t17:Ity_F32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t0)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | PUT(ymm1) = t15
   18 | t16 = 64HIto32(t5)
   19 | t17 = ReinterpI32asF32(t16)
   20 | t18 = NegF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | PUT(260) = t23
   27 | t24 = 64to32(t8)
   28 | t25 = ReinterpI32asF32(t24)
   29 | t26 = 64to32(t7)
   30 | t27 = ReinterpI32asF32(t26)
   31 | t28 = 64to32(t6)
   32 | t29 = ReinterpI32asF32(t28)
   33 | t30 = MAddF32(0x00000000,t29,t27,t25)
   34 | PUT(264) = t30
   35 | t31 = 64HIto32(t8)
   36 | t32 = ReinterpI32asF32(t31)
   37 | t33 = NegF32(t32)
   38 | t34 = 64HIto32(t7)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = 64HIto32(t6)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = MAddF32(0x00000000,t37,t35,t33)
   43 | PUT(268) = t38
   44 | PUT(272) = 0
   45 | PUT(pc) = 0x0000000000400005
   46 | ------ IMark(0x400005, 1, 0) ------
   47 | t39 = GET:I64(rsp)
   48 | t40 = LDle:I64(t39)
   49 | t41 = Add64(t39,0x0000000000000008)
   50 | PUT(rsp) = t41
   51 | t42 = Sub64(t41,0x0000000000000080)
   52 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:47:26,181 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:26,220 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:26,281 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddusw_xmm_xmm/paddusw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QAdd16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:38,429 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:38,466 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:38,482 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpackuswb_ymm_ymm_ymm/vpackuswb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = QNarrowBin16Sto8Ux16(t5,t3)
   08 | t7 = QNarrowBin16Sto8Ux16(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:57,628 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:57,645 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:57,693 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorl_r32_one/rorl_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Shl32(t1,0x1f)
   04 | t3 = Shr32(t1,0x01)
   05 | t4 = Or32(t3,t2)
   06 | t5 = GET:I64(cc_op)
   07 | t6 = GET:I64(cc_dep1)
   08 | t7 = GET:I64(cc_dep2)
   09 | t8 = GET:I64(cc_ndep)
   10 | t9 = amd64g_calculate_rflags_all(t5,t6,t7,t8):Ity_I64
   11 | PUT(cc_op) = 0x000000000000002b
   12 | t10 = 32Uto64(t4)
   13 | PUT(cc_dep1) = t10
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = t9
   16 | t11 = 32Uto64(t4)
   17 | PUT(rbx) = t11
   18 | PUT(pc) = 0x0000000000400002
   19 | ------ IMark(0x400002, 1, 0) ------
   20 | t12 = GET:I64(rsp)
   21 | t13 = LDle:I64(t12)
   22 | t14 = Add64(t12,0x0000000000000008)
   23 | PUT(rsp) = t14
   24 | t15 = Sub64(t14,0x0000000000000080)
   25 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:40,064 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:40,090 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:40,136 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddsb_xmm_xmm_xmm/vpaddsb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QAdd8Sx16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:34,297 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:34,322 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:34,393 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pminsd_xmm_xmm/pminsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min32Sx4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:20,986 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:21,010 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:21,022 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vminss_xmm_xmm_xmm/vminss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Min32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:10,209 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:10,226 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:10,265 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxwq_xmm_xmm/vpmovsxwq_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I16 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to16(t0)
   03 | t2 = 16Sto64(t1)
   04 | t3 = 32HIto16(t0)
   05 | t4 = 16Sto64(t3)
   06 | t5 = 64HLtoV128(t4,t2)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:36,071 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:36,100 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:36,119 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/unpcklpd_xmm_xmm/unpcklpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t0)
   04 | t3 = V128to64(t1)
   05 | t4 = 64HLtoV128(t3,t2)
   06 | PUT(xmm1) = t4
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:35,842 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:35,865 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:35,875 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/tzcntl_r32_r32/tzcntl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I1 t5:Ity_I64 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I1 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Uto64(t1)
   04 | t3 = Ctz64(t2)
   05 | t4 = CmpEQ64(t2,0x0000000000000000)
   06 | t5 = ITE(t4,0x0000000000000020,t3)
   07 | t6 = 64to32(t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | t8 = 32Uto64(t1)
   11 | t9 = 32Uto64(t6)
   12 | t10 = CmpEQ64(t8,0x0000000000000000)
   13 | t11 = 1Uto64(t10)
   14 | t12 = CmpEQ64(t9,0x0000000000000000)
   15 | t13 = 1Uto64(t12)
   16 | t14 = Shl64(t13,0x06)
   17 | t15 = Or64(t14,t11)
   18 | PUT(cc_op) = 0x0000000000000000
   19 | PUT(cc_dep2) = 0x0000000000000000
   20 | PUT(cc_ndep) = 0x0000000000000000
   21 | PUT(cc_dep1) = t15
   22 | PUT(pc) = 0x0000000000400004
   23 | ------ IMark(0x400004, 1, 0) ------
   24 | t16 = GET:I64(rsp)
   25 | t17 = LDle:I64(t16)
   26 | t18 = Add64(t16,0x0000000000000008)
   27 | PUT(rsp) = t18
   28 | t19 = Sub64(t18,0x0000000000000080)
   29 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:37,954 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:37,978 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:38,012 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/unpcklps_xmm_xmm/unpcklps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_V128 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 32HLto64(t6,t3)
   10 | t9 = 32HLto64(t7,t4)
   11 | t10 = 64HLtoV128(t9,t8)
   12 | PUT(xmm1) = t10
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t11 = GET:I64(rsp)
   16 | t12 = LDle:I64(t11)
   17 | t13 = Add64(t11,0x0000000000000008)
   18 | PUT(rsp) = t13
   19 | t14 = Sub64(t13,0x0000000000000080)
   20 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,054 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:58,110 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:58,170 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsd2sil_r32_xmm/cvtsd2sil_r32_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F64toI32S(t3,t0)
   06 | t5 = 32Uto64(t4)
   07 | PUT(rbx) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:34,019 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:34,058 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:34,080 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testb_r8_rh/testb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,323 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,469 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,566 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpq_r64_r64/cmovpq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000a,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:18,806 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:18,823 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:18,834 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmaxss_xmm_xmm_xmm/vmaxss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Max32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:25,632 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:25,654 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:25,663 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskps_r32_ymm/vmovmskps_r32_ymm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_I32 t17:Ity_I32 t18:Ity_I32 t19:Ity_I32 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I32 t25:Ity_I32 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(260)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(264)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(268)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = GET:I32(272)
   14 | t13 = Shr32(t12,0x1b)
   15 | t14 = And32(t13,0x00000010)
   16 | t15 = GET:I32(276)
   17 | t16 = Shr32(t15,0x1a)
   18 | t17 = And32(t16,0x00000020)
   19 | t18 = GET:I32(280)
   20 | t19 = Shr32(t18,0x19)
   21 | t20 = And32(t19,0x00000040)
   22 | t21 = GET:I32(284)
   23 | t22 = Shr32(t21,0x18)
   24 | t23 = And32(t22,0x00000080)
   25 | t24 = Or32(t20,t23)
   26 | t25 = Or32(t14,t17)
   27 | t26 = Or32(t25,t24)
   28 | t27 = Or32(t8,t11)
   29 | t28 = Or32(t2,t5)
   30 | t29 = Or32(t28,t27)
   31 | t30 = Or32(t29,t26)
   32 | t31 = 32Uto64(t30)
   33 | PUT(rbx) = t31
   34 | PUT(pc) = 0x0000000000400004
   35 | ------ IMark(0x400004, 1, 0) ------
   36 | t32 = GET:I64(rsp)
   37 | t33 = LDle:I64(t32)
   38 | t34 = Add64(t32,0x0000000000000008)
   39 | PUT(rsp) = t34
   40 | t35 = Sub64(t34,0x0000000000000080)
   41 | ====== AbiHint(0xt35, 128, t33) ======
   NEXT: PUT(rip) = t33; Ijk_Ret
}
WARNING | 2018-04-08 20:47:51,658 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:51,679 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:51,730 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrb_r8_cl/rcrb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I8 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = GET:I8(cl)
   09 | t8 = 8Uto64(t7)
   10 | t9 = amd64g_calculate_RCR(t6,t8,t5,0x0000000000000001):Ity_I64
   11 | t10 = 8Uto64(t0)
   12 | t11 = 8Uto64(t7)
   13 | t12 = amd64g_calculate_RCR(t10,t11,t5,0xffffffffffffffff):Ity_I64
   14 | t13 = 64to8(t9)
   15 | PUT(cc_op) = 0x0000000000000000
   16 | PUT(cc_dep1) = t12
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(bl) = t13
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:34,691 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:34,711 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:34,728 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/tzcntw_r16_r16/tzcntw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I1 t4:Ity_I64 t5:Ity_I16 t6:Ity_I64 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I1 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Uto64(t0)
   03 | t2 = Ctz64(t1)
   04 | t3 = CmpEQ64(t1,0x0000000000000000)
   05 | t4 = ITE(t3,0x0000000000000010,t2)
   06 | t5 = 64to16(t4)
   07 | PUT(bx) = t5
   08 | t6 = 16Uto64(t0)
   09 | t7 = 16Uto64(t5)
   10 | t8 = CmpEQ64(t6,0x0000000000000000)
   11 | t9 = 1Uto64(t8)
   12 | t10 = CmpEQ64(t7,0x0000000000000000)
   13 | t11 = 1Uto64(t10)
   14 | t12 = Shl64(t11,0x06)
   15 | t13 = Or64(t12,t9)
   16 | PUT(cc_op) = 0x0000000000000000
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(cc_dep1) = t13
   20 | PUT(pc) = 0x0000000000400005
   21 | ------ IMark(0x400005, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:50:15,026 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:15,044 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:15,063 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxwd_ymm_xmm/vpmovzxwd_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = InterleaveHI16x8(0,t0)
   04 | t3 = V128HLtoV256(t2,t1)
   05 | PUT(ymm1) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:47,040 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:47,058 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:47,096 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsi2ssl_xmm_xmm_r32/vcvtsi2ssl_xmm_xmm_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I32 t5:Ity_F64 t6:Ity_F32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(sseround)
   02 | t1 = And64(t0,0x0000000000000003)
   03 | t2 = 64to32(t1)
   04 | t3 = GET:I64(rbx)
   05 | t4 = 64to32(t3)
   06 | t5 = I32StoF64(t4)
   07 | t6 = F64toF32(t2,t5)
   08 | PUT(ymm1) = t6
   09 | t7 = GET:I32(292)
   10 | PUT(260) = t7
   11 | t8 = GET:I64(296)
   12 | PUT(264) = t8
   13 | PUT(272) = 0
   14 | PUT(pc) = 0x0000000000400004
   15 | ------ IMark(0x400004, 1, 0) ------
   16 | t9 = GET:I64(rsp)
   17 | t10 = LDle:I64(t9)
   18 | t11 = Add64(t9,0x0000000000000008)
   19 | PUT(rsp) = t11
   20 | t12 = Sub64(t11,0x0000000000000080)
   21 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:42,120 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:42,137 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:42,147 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsqrtpd_xmm_xmm/vsqrtpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = Sqrt64Fx2(0x00000000,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:11,954 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,064 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:12,118 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movsbl_r32_r8/movsbl_r32_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = 8Sto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:41,486 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:41,662 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:41,785 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovngeq_r64_r64/cmovngeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000c,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:13,927 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:13,968 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:14,029 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setna_rh/setna_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000006,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:50,855 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:50,873 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:50,892 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddw_r16_r16/xaddw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = Add16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000002
   05 | t3 = 16Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 16Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(cx) = t0
   10 | PUT(bx) = t2
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:38,049 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:38,066 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,077 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovzxbw_xmm_xmm/pmovzxbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:48,942 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:48,963 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:48,973 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclb_r8_cl/rclb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I8 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = GET:I8(cl)
   09 | t8 = 8Uto64(t7)
   10 | t9 = amd64g_calculate_RCL(t6,t8,t5,0x0000000000000001):Ity_I64
   11 | t10 = 8Uto64(t0)
   12 | t11 = 8Uto64(t7)
   13 | t12 = amd64g_calculate_RCL(t10,t11,t5,0xffffffffffffffff):Ity_I64
   14 | t13 = 64to8(t9)
   15 | PUT(cc_op) = 0x0000000000000000
   16 | PUT(cc_dep1) = t12
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(bl) = t13
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:25,966 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:25,998 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:26,010 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlw_r16_one/shlw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = 16Uto64(t0)
   03 | t2 = Shl64(t1,0x01)
   04 | PUT(cc_op) = 0x000000000000001e
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to16(t2)
   08 | PUT(bx) = t3
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:36,515 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:36,555 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:36,575 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpackssdw_ymm_ymm_ymm/vpackssdw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = QNarrowBin32Sto16Sx8(t5,t3)
   08 | t7 = QNarrowBin32Sto16Sx8(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,455 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,680 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,820 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/bzhiq_r64_r64_r64/bzhiq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I8 t3:Ity_I32 t4:Ity_I1 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = 64to8(t0)
   04 | t3 = 8Uto32(t2)
   05 | t4 = CmpLT32U(t3,0x00000040)
   06 | t5 = Sub8(0x40,t2)
   07 | t6 = Sub8(0x40,t2)
   08 | t7 = Shl64(t1,t6)
   09 | t8 = Shr64(t7,t5)
   10 | t9 = CmpEQ8(t2,0x00)
   11 | t10 = ITE(t9,0x0000000000000000,t8)
   12 | t11 = ITE(t4,t10,t1)
   13 | PUT(rbx) = t11
   14 | PUT(cc_op) = 0x000000000000003c
   15 | PUT(cc_dep1) = t11
   16 | t12 = 1Uto64(t4)
   17 | PUT(cc_dep2) = t12
   18 | PUT(pc) = 0x0000000000400005
   19 | ------ IMark(0x400005, 1, 0) ------
   20 | t13 = GET:I64(rsp)
   21 | t14 = LDle:I64(t13)
   22 | t15 = Add64(t13,0x0000000000000008)
   23 | PUT(rsp) = t15
   24 | t16 = Sub64(t15,0x0000000000000080)
   25 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:35,232 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:35,248 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:35,290 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pminuw_xmm_xmm/pminuw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:54,182 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:54,204 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:54,263 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphaddsw_xmm_xmm_xmm/vphaddsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = QAdd16Sx4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = QAdd16Sx4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:39,984 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:40,000 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:40,043 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/popcntw_r16_r16/popcntw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I16 t4:Ity_I16 t5:Ity_I16 t6:Ity_I16 t7:Ity_I16 t8:Ity_I16 t9:Ity_I16 t10:Ity_I16 t11:Ity_I16 t12:Ity_I16 t13:Ity_I16 t14:Ity_I16 t15:Ity_I16 t16:Ity_I16 t17:Ity_I64 t18:Ity_I1 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = Shr16(t0,0x01)
   03 | t2 = And16(t1,0x5555)
   04 | t3 = And16(t0,0x5555)
   05 | t4 = Add16(t3,t2)
   06 | t5 = Shr16(t4,0x02)
   07 | t6 = And16(t5,0x3333)
   08 | t7 = And16(t4,0x3333)
   09 | t8 = Add16(t7,t6)
   10 | t9 = Shr16(t8,0x04)
   11 | t10 = And16(t9,0x0f0f)
   12 | t11 = And16(t8,0x0f0f)
   13 | t12 = Add16(t11,t10)
   14 | t13 = Shr16(t12,0x08)
   15 | t14 = And16(t13,0x00ff)
   16 | t15 = And16(t12,0x00ff)
   17 | t16 = Add16(t15,t14)
   18 | PUT(bx) = t16
   19 | PUT(cc_op) = 0x0000000000000000
   20 | PUT(cc_dep2) = 0x0000000000000000
   21 | PUT(cc_ndep) = 0x0000000000000000
   22 | t17 = 16Uto64(t0)
   23 | t18 = CmpEQ64(t17,0x0000000000000000)
   24 | t19 = 1Uto64(t18)
   25 | t20 = Shl64(t19,0x06)
   26 | PUT(cc_dep1) = t20
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t21 = GET:I64(rsp)
   30 | t22 = LDle:I64(t21)
   31 | t23 = Add64(t21,0x0000000000000008)
   32 | PUT(rsp) = t23
   33 | t24 = Sub64(t23,0x0000000000000080)
   34 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:47:47,181 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:47,223 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:47,245 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpckhdq_xmm_xmm/punpckhdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveHI32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:56,174 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:56,230 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:56,263 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrw_r16_one/rcrw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I16 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 16Uto64(t0)
   08 | t7 = amd64g_calculate_RCR(t6,0x0000000000000001,t5,0x0000000000000002):Ity_I64
   09 | t8 = 16Uto64(t0)
   10 | t9 = amd64g_calculate_RCR(t8,0x0000000000000001,t5,0xfffffffffffffffe):Ity_I64
   11 | t10 = 64to16(t7)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t9
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(bx) = t10
   17 | PUT(pc) = 0x0000000000400003
   18 | ------ IMark(0x400003, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:46:57,573 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:57,618 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,686 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgl_r32_r32/cmpxchgl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I32 t14:Ity_I32 t15:Ity_I1 t16:Ity_I64 t17:Ity_I64 t18:Ity_I1 t19:Ity_I1 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = t1
   04 | t3 = GET:I64(rcx)
   05 | t4 = 64to32(t3)
   06 | t5 = t4
   07 | t6 = GET:I64(rax)
   08 | t7 = 64to32(t6)
   09 | t8 = t7
   10 | PUT(cc_op) = 0x0000000000000007
   11 | t9 = 32Uto64(t8)
   12 | t10 = t9
   13 | PUT(cc_dep1) = t10
   14 | t11 = 32Uto64(t2)
   15 | t12 = t11
   16 | PUT(cc_dep2) = t12
   17 | t13 = 64to32(t12)
   18 | t14 = 64to32(t10)
   19 | t15 = CmpEQ32(t14,t13)
   20 | t16 = 1Uto64(t15)
   21 | t17 = t16
   22 | t18 = 64to1(t17)
   23 | t19 = t18
   24 | t20 = ITE(t19,t5,t2)
   25 | t21 = t20
   26 | t22 = ITE(t19,t8,t2)
   27 | t23 = t22
   28 | t24 = 32Uto64(t23)
   29 | t25 = t24
   30 | PUT(rax) = t25
   31 | t26 = 32Uto64(t21)
   32 | t27 = t26
   33 | PUT(rbx) = t27
   34 | PUT(pc) = 0x0000000000400003
   35 | ------ IMark(0x400003, 1, 0) ------
   36 | t28 = GET:I64(rsp)
   37 | t29 = LDle:I64(t28)
   38 | t30 = Add64(t28,0x0000000000000008)
   39 | PUT(rsp) = t30
   40 | t31 = Sub64(t30,0x0000000000000080)
   41 | ====== AbiHint(0xt31, 128, t29) ======
   NEXT: PUT(rip) = t29; Ijk_Ret
}
WARNING | 2018-04-08 20:46:53,296 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:53,339 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:53,425 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtss2sd_xmm_xmm/cvtss2sd_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = F32toF64(t0)
   03 | PUT(ymm1) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:40,994 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:41,031 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:41,074 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vblendvpd_ymm_ymm_ymm_ymm/vblendvpd_ymm_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V256 t8:Ity_V256 t9:Ity_V256 t10:Ity_V256 t11:Ity_V256 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 6, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm4)
   04 | t3 = V256toV128_1(t2)
   05 | t4 = V256toV128_0(t2)
   06 | t5 = SarN64x2(t4,0x3f)
   07 | t6 = SarN64x2(t3,0x3f)
   08 | t7 = V128HLtoV256(t6,t5)
   09 | t8 = NotV256(t7)
   10 | t9 = AndV256(t1,t8)
   11 | t10 = AndV256(t0,t7)
   12 | t11 = OrV256(t10,t9)
   13 | PUT(ymm1) = t11
   14 | PUT(pc) = 0x0000000000400006
   15 | ------ IMark(0x400006, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:06,195 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:06,287 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:06,337 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/idivb_rh/idivb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I16 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I16 t9:Ity_I8 t10:Ity_I32 t11:Ity_I16 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I16(ax)
   03 | t2 = 16Sto32(t1)
   04 | t3 = 32Sto64(t2)
   05 | t4 = 8Sto16(t0)
   06 | t5 = 16Sto32(t4)
   07 | t6 = DivModS64to32(t3,t5)
   08 | t7 = 64to32(t6)
   09 | t8 = 32to16(t7)
   10 | t9 = 16to8(t8)
   11 | PUT(al) = t9
   12 | t10 = 64HIto32(t6)
   13 | t11 = 32to16(t10)
   14 | t12 = 16to8(t11)
   15 | PUT(ah) = t12
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:55,943 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:55,960 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:56,013 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolq_r64_one/rolq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Shr64(t0,0x3f)
   03 | t2 = Shl64(t0,0x01)
   04 | t3 = Or64(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x0000000000000028
   11 | PUT(cc_dep1) = t3
   12 | PUT(cc_dep2) = 0x0000000000000000
   13 | PUT(cc_ndep) = t8
   14 | PUT(rbx) = t3
   15 | PUT(pc) = 0x0000000000400003
   16 | ------ IMark(0x400003, 1, 0) ------
   17 | t9 = GET:I64(rsp)
   18 | t10 = LDle:I64(t9)
   19 | t11 = Add64(t9,0x0000000000000008)
   20 | PUT(rsp) = t11
   21 | t12 = Sub64(t11,0x0000000000000080)
   22 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:54,665 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:54,677 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:54,684 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpermilps_ymm_ymm_ymm/vpermilps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_V256 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = ShlN32x4(t4,0x1e)
   08 | t7 = ShrN32x4(t6,0x1e)
   09 | t8 = Perm32x4(t2,t7)
   10 | t9 = ShlN32x4(t5,0x1e)
   11 | t10 = ShrN32x4(t9,0x1e)
   12 | t11 = Perm32x4(t3,t10)
   13 | t12 = V128HLtoV256(t8,t11)
   14 | PUT(ymm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:37,584 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:37,606 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:37,629 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpcklqdq_xmm_xmm_xmm/vpunpcklqdq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveLO64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:13,467 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:13,486 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:13,500 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213sd_xmm_xmm_xmm/vfnmsub213sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = MAddF64(0x00000000,t1,t0,t2)
   05 | t4 = NegF64(t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:27,487 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:27,728 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:27,924 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addsubps_xmm_xmm/addsubps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_V128 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add32Fx4(0x00000000,t1,t0)
   04 | t3 = Sub32Fx4(0x00000000,t1,t0)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t2)
   07 | t6 = 64HIto32(t5)
   08 | t7 = 64HIto32(t4)
   09 | t8 = V128HIto64(t3)
   10 | t9 = V128to64(t3)
   11 | t10 = 64to32(t9)
   12 | t11 = 64to32(t8)
   13 | t12 = 32HLto64(t6,t10)
   14 | t13 = 32HLto64(t7,t11)
   15 | t14 = 64HLtoV128(t13,t12)
   16 | PUT(xmm1) = t14
   17 | PUT(pc) = 0x0000000000400004
   18 | ------ IMark(0x400004, 1, 0) ------
   19 | t15 = GET:I64(rsp)
   20 | t16 = LDle:I64(t15)
   21 | t17 = Add64(t15,0x0000000000000008)
   22 | PUT(rsp) = t17
   23 | t18 = Sub64(t17,0x0000000000000080)
   24 | ====== AbiHint(0xt18, 128, t16) ======
   NEXT: PUT(rip) = t16; Ijk_Ret
}
WARNING | 2018-04-08 20:47:13,001 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:13,017 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,027 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movshdup_xmm_xmm/movshdup_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64HIto32(t2)
   05 | t4 = 64HIto32(t1)
   06 | t5 = 32HLto64(t3,t3)
   07 | t6 = 32HLto64(t4,t4)
   08 | t7 = 64HLtoV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:42,697 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:42,715 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:42,732 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpand_xmm_xmm_xmm/vpand_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = AndV128(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:02,491 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:02,535 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:02,559 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salq_r64_one/salq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Shl64(t0,0x01)
   03 | PUT(cc_op) = 0x0000000000000020
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | PUT(rbx) = t1
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t2 = GET:I64(rsp)
   10 | t3 = LDle:I64(t2)
   11 | t4 = Add64(t2,0x0000000000000008)
   12 | PUT(rsp) = t4
   13 | t5 = Sub64(t4,0x0000000000000080)
   14 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:14,933 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:14,951 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:14,969 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzbw_r16_r8/movzbw_r16_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = 8Uto16(t0)
   03 | PUT(bx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:25,738 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:25,758 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:25,791 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrb_rh_cl/shrb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Uto64(t0)
   05 | t4 = Shr64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shr64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x0000000000000021,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(ah) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,442 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:58,513 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:58,555 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divb_rh/divb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I16 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I16 t9:Ity_I8 t10:Ity_I32 t11:Ity_I16 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I16(ax)
   03 | t2 = 16Uto32(t1)
   04 | t3 = 32Uto64(t2)
   05 | t4 = 8Uto16(t0)
   06 | t5 = 16Uto32(t4)
   07 | t6 = DivModU64to32(t3,t5)
   08 | t7 = 64to32(t6)
   09 | t8 = 32to16(t7)
   10 | t9 = 16to8(t8)
   11 | PUT(al) = t9
   12 | t10 = 64HIto32(t6)
   13 | t11 = 32to16(t10)
   14 | t12 = 16to8(t11)
   15 | PUT(ah) = t12
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:47:11,340 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:11,379 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:11,472 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movapd_xmm_xmm/movapd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:48:52,756 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:52,768 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:52,795 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd213ps_xmm_xmm_xmm/vfmadd213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_I32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | PUT(ymm1) = t15
   18 | t16 = 64HIto32(t5)
   19 | t17 = ReinterpI32asF32(t16)
   20 | t18 = 64HIto32(t4)
   21 | t19 = ReinterpI32asF32(t18)
   22 | t20 = 64HIto32(t3)
   23 | t21 = ReinterpI32asF32(t20)
   24 | t22 = MAddF32(0x00000000,t21,t19,t17)
   25 | PUT(260) = t22
   26 | t23 = 64to32(t8)
   27 | t24 = ReinterpI32asF32(t23)
   28 | t25 = 64to32(t7)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t6)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = MAddF32(0x00000000,t28,t26,t24)
   33 | PUT(264) = t29
   34 | t30 = 64HIto32(t8)
   35 | t31 = ReinterpI32asF32(t30)
   36 | t32 = 64HIto32(t7)
   37 | t33 = ReinterpI32asF32(t32)
   38 | t34 = 64HIto32(t6)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = MAddF32(0x00000000,t35,t33,t31)
   41 | PUT(268) = t36
   42 | PUT(272) = 0
   43 | PUT(pc) = 0x0000000000400005
   44 | ------ IMark(0x400005, 1, 0) ------
   45 | t37 = GET:I64(rsp)
   46 | t38 = LDle:I64(t37)
   47 | t39 = Add64(t37,0x0000000000000008)
   48 | PUT(rsp) = t39
   49 | t40 = Sub64(t39,0x0000000000000080)
   50 | ====== AbiHint(0xt40, 128, t38) ======
   NEXT: PUT(rip) = t38; Ijk_Ret
}
WARNING | 2018-04-08 20:49:31,384 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:31,412 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:31,457 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmulss_xmm_xmm_xmm/vmulss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Mul32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:32,244 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:32,577 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:32,695 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btl_r32_r32/btl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I8 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Sto64(t1)
   04 | t3 = GET:I64(rsp)
   05 | t4 = Sub64(t3,0x0000000000000120)
   06 | PUT(rsp) = t4
   07 | t5 = GET:I64(rbx)
   08 | t6 = 64to32(t5)
   09 | STle(t4) = t6
   10 | t7 = And64(t2,0x000000000000001f)
   11 | t8 = Sar64(t7,0x03)
   12 | t9 = Add64(t4,t8)
   13 | t10 = And64(t7,0x0000000000000007)
   14 | t11 = 64to8(t10)
   15 | t12 = LDle:I8(t9)
   16 | PUT(cc_op) = 0x0000000000000000
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | t13 = 8Uto64(t12)
   19 | t14 = Shr64(t13,t11)
   20 | t15 = And64(t14,0x0000000000000001)
   21 | PUT(cc_dep1) = t15
   22 | PUT(cc_ndep) = 0x0000000000000000
   23 | t16 = Add64(t4,0x0000000000000120)
   24 | PUT(rsp) = t16
   25 | PUT(pc) = 0x0000000000400003
   26 | ------ IMark(0x400003, 1, 0) ------
   27 | t17 = LDle:I64(t16)
   28 | t18 = Add64(t16,0x0000000000000008)
   29 | PUT(rsp) = t18
   30 | t19 = Sub64(t18,0x0000000000000080)
   31 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:17,905 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:17,924 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:17,961 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnl_r8/setnl_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000d,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:50,317 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:50,445 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:50,492 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpw_r16_r16/cmpw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | PUT(cc_op) = 0x0000000000000006
   04 | t2 = 16Uto64(t0)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 16Uto64(t1)
   07 | PUT(cc_dep2) = t3
   08 | PUT(pc) = 0x0000000000400003
   09 | ------ IMark(0x400003, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:43,071 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:43,219 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:43,298 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnlq_r64_r64/cmovnlq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000d,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:53,664 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:53,774 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:53,851 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtpd2dq_xmm_xmm/cvtpd2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128to64(t0)
   06 | t5 = ReinterpI64asF64(t4)
   07 | t6 = V128HIto64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | PUT(268) = 0x00000000
   10 | PUT(264) = 0x00000000
   11 | t8 = F64toI32S(t3,t7)
   12 | PUT(260) = t8
   13 | t9 = F64toI32S(t3,t5)
   14 | PUT(ymm1) = t9
   15 | PUT(pc) = 0x0000000000400004
   16 | ------ IMark(0x400004, 1, 0) ------
   17 | t10 = GET:I64(rsp)
   18 | t11 = LDle:I64(t10)
   19 | t12 = Add64(t10,0x0000000000000008)
   20 | PUT(rsp) = t12
   21 | t13 = Sub64(t12,0x0000000000000080)
   22 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,229 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,426 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,561 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovel_r32_r32/cmovel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000004,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:14,695 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:14,745 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:14,784 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setne_rh/setne_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000005,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:56,653 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:56,677 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:56,686 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorb_rh_cl/rorb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I8 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = And8(t2,0x07)
   05 | t4 = Sub8(0x08,t3)
   06 | t5 = Shl8(t0,t4)
   07 | t6 = Shr8(t0,t3)
   08 | t7 = Or8(t6,t5)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = GET:I64(cc_dep1)
   11 | t10 = GET:I64(cc_dep2)
   12 | t11 = GET:I64(cc_ndep)
   13 | t12 = amd64g_calculate_rflags_all(t8,t9,t10,t11):Ity_I64
   14 | t13 = CmpNE8(t2,0x00)
   15 | t14 = ITE(t13,0x0000000000000029,t8)
   16 | PUT(cc_op) = t14
   17 | t15 = 8Uto64(t7)
   18 | t16 = ITE(t13,t15,t9)
   19 | PUT(cc_dep1) = t16
   20 | t17 = ITE(t13,0x0000000000000000,t10)
   21 | PUT(cc_dep2) = t17
   22 | t18 = ITE(t13,t12,t11)
   23 | PUT(cc_ndep) = t18
   24 | PUT(ah) = t7
   25 | PUT(pc) = 0x0000000000400002
   26 | ------ IMark(0x400002, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:49:47,659 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:47,671 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:47,678 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqd_xmm_xmm_xmm/vpcmpeqd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpEQ32x4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:20,181 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:20,199 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:20,250 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/nopw_r16/nopw_r16.o
IRSB {
   

   NEXT: PUT(rip) = 0x0000000000400000; Ijk_NoDecode
}
WARNING | 2018-04-08 20:50:15,379 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:15,396 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:15,407 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulhuw_ymm_ymm_ymm/vpmulhuw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = MulHi16Ux16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:07,935 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:07,976 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:08,042 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imulq_r64_r64/imulq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | PUT(cc_op) = 0x0000000000000034
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | t2 = Mul64(t1,t0)
   07 | PUT(rbx) = t2
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:01,198 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:01,282 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:01,369 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/haddps_xmm_xmm/haddps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V128 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = V128to64(t1)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = 32HLto64(t12,t10)
   16 | t15 = 32HLto64(t6,t4)
   17 | t16 = 64HLtoV128(t15,t14)
   18 | t17 = 32HLto64(t13,t11)
   19 | t18 = 32HLto64(t7,t5)
   20 | t19 = 64HLtoV128(t18,t17)
   21 | t20 = Add32Fx4(0x00000000,t16,t19)
   22 | PUT(xmm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:46:45,818 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:45,934 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:45,990 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovol_r32_r32/cmovol_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000000,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:29,285 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:29,310 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:29,323 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpgtw_xmm_xmm/pcmpgtw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpGT16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:43,444 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:43,460 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:43,502 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtpd2dqx_xmm_xmm/vcvtpd2dqx_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128to64(t0)
   06 | t5 = ReinterpI64asF64(t4)
   07 | t6 = V128HIto64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | PUT(268) = 0x00000000
   10 | PUT(264) = 0x00000000
   11 | t8 = F64toI32S(t3,t7)
   12 | PUT(260) = t8
   13 | t9 = F64toI32S(t3,t5)
   14 | PUT(ymm1) = t9
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400004
   17 | ------ IMark(0x400004, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:49:11,187 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:11,205 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:11,224 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub132pd_xmm_xmm_xmm/vfnmsub132pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t0)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | t10 = NegF64(t9)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t1)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V128HIto64(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | t18 = NegF64(t17)
   21 | PUT(264) = t18
   22 | PUT(272) = 0
   23 | PUT(pc) = 0x0000000000400005
   24 | ------ IMark(0x400005, 1, 0) ------
   25 | t19 = GET:I64(rsp)
   26 | t20 = LDle:I64(t19)
   27 | t21 = Add64(t19,0x0000000000000008)
   28 | PUT(rsp) = t21
   29 | t22 = Sub64(t21,0x0000000000000080)
   30 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:48:01,865 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:01,883 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:01,894 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarb_r8_cl/sarb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Sto64(t0)
   05 | t4 = Sar64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Sar64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x0000000000000021,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(bl) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:19,502 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:19,526 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:19,537 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setpe_r8/setpe_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000a,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:19,987 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:20,007 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:20,015 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovapd_xmm_xmm/vmovapd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(272) = 0
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:12,128 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,210 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:12,257 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movsbl_r32_rh/movsbl_r32_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Sto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:18,538 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:18,556 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:18,578 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/seto_r8/seto_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000000,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:23,176 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:23,384 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:23,461 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addb_rh_rh/addb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(ah) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:01,319 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:01,340 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:01,351 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213ss_xmm_xmm_xmm/vfmsub213ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = NegF32(t2)
   05 | t4 = MAddF32(0x00000000,t1,t0,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:20,153 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:20,273 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:20,388 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addb_r8_r8/addb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bl) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:50,173 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:50,186 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:50,192 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtd_ymm_ymm_ymm/vpcmpgtd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpGT32Sx8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:55,526 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:55,545 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:55,553 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorb_r8_rh/xorb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = Xor8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bl) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:22,155 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:22,172 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:22,200 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovaps_xmm_xmm/vmovaps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(272) = 0
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:28,740 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,759 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,829 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpgtb_xmm_xmm/pcmpgtb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpGT8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:17,309 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:17,322 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:17,329 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmullw_ymm_ymm_ymm/vpmullw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Mul16x16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:20,127 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:20,143 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:20,153 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsignd_xmm_xmm_xmm/vpsignd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_V128 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = Sub32x2(0x0000000000000000,t2)
   08 | t7 = CmpGT32Sx2(0x0000000000000000,t4)
   09 | t8 = CmpGT32Sx2(t4,0x0000000000000000)
   10 | t9 = Sub32x2(0x0000000000000000,t3)
   11 | t10 = CmpGT32Sx2(0x0000000000000000,t5)
   12 | t11 = CmpGT32Sx2(t5,0x0000000000000000)
   13 | t12 = And64(t6,t7)
   14 | t13 = And64(t2,t8)
   15 | t14 = Or64(t13,t12)
   16 | t15 = And64(t9,t10)
   17 | t16 = And64(t3,t11)
   18 | t17 = Or64(t16,t15)
   19 | t18 = 64HLtoV128(t17,t14)
   20 | PUT(xmm1) = t18
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t19 = GET:I64(rsp)
   25 | t20 = LDle:I64(t19)
   26 | t21 = Add64(t19,0x0000000000000008)
   27 | PUT(rsp) = t21
   28 | t22 = Sub64(t21,0x0000000000000080)
   29 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:46:26,599 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:26,807 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:26,904 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addq_r64_r64/addq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = Add64(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000004
   05 | PUT(cc_dep1) = t0
   06 | PUT(cc_dep2) = t1
   07 | PUT(rbx) = t2
   08 | PUT(pc) = 0x0000000000400003
   09 | ------ IMark(0x400003, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:37,083 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:37,238 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:37,342 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovcq_r64_r64/cmovcq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000002,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:46,008 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:46,028 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:46,109 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psraw_xmm_xmm/psraw_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_V128 t5:Ity_I1 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = SarN16x8(t1,0x0f)
   05 | t4 = SarN16x8(t1,t2)
   06 | t5 = CmpLT64U(t0,0x0000000000000010)
   07 | t6 = ITE(t5,t4,t3)
   08 | PUT(xmm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:19,550 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:19,599 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:19,647 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/negq_r64/negq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Sub64(0x0000000000000000,t0)
   03 | PUT(cc_op) = 0x0000000000000008
   04 | PUT(cc_dep1) = 0x0000000000000000
   05 | PUT(cc_dep2) = t0
   06 | PUT(rbx) = t1
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t2 = GET:I64(rsp)
   10 | t3 = LDle:I64(t2)
   11 | t4 = Add64(t2,0x0000000000000008)
   12 | PUT(rsp) = t4
   13 | t5 = Sub64(t4,0x0000000000000080)
   14 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:49:12,593 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:12,613 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:12,624 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd231ss_xmm_xmm_xmm/vfnmadd231ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_F32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = NegF32(t0)
   05 | t4 = MAddF32(0x00000000,t1,t2,t3)
   06 | t5 = NegF32(t4)
   07 | PUT(ymm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,695 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:33,943 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,078 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/bzhil_r32_r32_r32/bzhil_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I8 t5:Ity_I32 t6:Ity_I1 t7:Ity_I8 t8:Ity_I8 t9:Ity_I32 t10:Ity_I32 t11:Ity_I1 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = 32to8(t1)
   06 | t5 = 8Uto32(t4)
   07 | t6 = CmpLT32U(t5,0x00000020)
   08 | t7 = Sub8(0x20,t4)
   09 | t8 = Sub8(0x20,t4)
   10 | t9 = Shl32(t3,t8)
   11 | t10 = Shr32(t9,t7)
   12 | t11 = CmpEQ8(t4,0x00)
   13 | t12 = ITE(t11,0x00000000,t10)
   14 | t13 = ITE(t6,t12,t3)
   15 | t14 = 32Uto64(t13)
   16 | PUT(rbx) = t14
   17 | PUT(cc_op) = 0x000000000000003b
   18 | t15 = 32Uto64(t13)
   19 | PUT(cc_dep1) = t15
   20 | t16 = 1Uto64(t6)
   21 | PUT(cc_dep2) = t16
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t17 = GET:I64(rsp)
   25 | t18 = LDle:I64(t17)
   26 | t19 = Add64(t17,0x0000000000000008)
   27 | PUT(rsp) = t19
   28 | t20 = Sub64(t19,0x0000000000000080)
   29 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:48:29,989 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:30,015 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:30,036 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subb_rh_r8/subb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = Sub8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(ah) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:01,696 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:01,758 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:01,834 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/idivq_r64/idivq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I128 t4:Ity_I128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rax)
   03 | t2 = GET:I64(rdx)
   04 | t3 = 64HLto128(t2,t1)
   05 | t4 = DivModS128to64(t3,t0)
   06 | t5 = 128to64(t4)
   07 | PUT(rax) = t5
   08 | t6 = 128HIto64(t4)
   09 | PUT(rdx) = t6
   10 | PUT(pc) = 0x0000000000400003
   11 | ------ IMark(0x400003, 1, 0) ------
   12 | t7 = GET:I64(rsp)
   13 | t8 = LDle:I64(t7)
   14 | t9 = Add64(t7,0x0000000000000008)
   15 | PUT(rsp) = t9
   16 | t10 = Sub64(t9,0x0000000000000080)
   17 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:16,709 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:16,743 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:16,805 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulb_r8/mulb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(al)
   03 | PUT(cc_op) = 0x000000000000002d
   04 | t2 = 8Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = MullU8(t1,t0)
   09 | PUT(ax) = t4
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:55,148 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:55,174 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:55,187 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub132pd_xmm_xmm_xmm/vfmaddsub132pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t0)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t1)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = V128HIto64(t2)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V128HIto64(t0)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t18 = GET:I64(rsp)
   25 | t19 = LDle:I64(t18)
   26 | t20 = Add64(t18,0x0000000000000008)
   27 | PUT(rsp) = t20
   28 | t21 = Sub64(t20,0x0000000000000080)
   29 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:50:27,455 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:27,467 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:27,494 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlvq_ymm_ymm_ymm/vpsrlvq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I8 t15:Ity_I64 t16:Ity_I1 t17:Ity_I64 t18:Ity_I8 t19:Ity_I64 t20:Ity_I1 t21:Ity_I64 t22:Ity_I8 t23:Ity_I64 t24:Ity_I1 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256to64_0(t1)
   04 | t3 = V256to64_1(t1)
   05 | t4 = V256to64_2(t1)
   06 | t5 = V256to64_3(t1)
   07 | t6 = V256to64_0(t0)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_2(t0)
   10 | t9 = V256to64_3(t0)
   11 | t10 = 64to8(t6)
   12 | t11 = Shr64(t2,t10)
   13 | t12 = CmpLT64U(t6,0x0000000000000040)
   14 | t13 = ITE(t12,t11,0x0000000000000000)
   15 | t14 = 64to8(t7)
   16 | t15 = Shr64(t3,t14)
   17 | t16 = CmpLT64U(t7,0x0000000000000040)
   18 | t17 = ITE(t16,t15,0x0000000000000000)
   19 | t18 = 64to8(t8)
   20 | t19 = Shr64(t4,t18)
   21 | t20 = CmpLT64U(t8,0x0000000000000040)
   22 | t21 = ITE(t20,t19,0x0000000000000000)
   23 | t22 = 64to8(t9)
   24 | t23 = Shr64(t5,t22)
   25 | t24 = CmpLT64U(t9,0x0000000000000040)
   26 | t25 = ITE(t24,t23,0x0000000000000000)
   27 | PUT(ymm1) = t13
   28 | PUT(264) = t17
   29 | PUT(272) = t21
   30 | PUT(280) = t25
   31 | PUT(pc) = 0x0000000000400005
   32 | ------ IMark(0x400005, 1, 0) ------
   33 | t26 = GET:I64(rsp)
   34 | t27 = LDle:I64(t26)
   35 | t28 = Add64(t26,0x0000000000000008)
   36 | PUT(rsp) = t28
   37 | t29 = Sub64(t28,0x0000000000000080)
   38 | ====== AbiHint(0xt29, 128, t27) ======
   NEXT: PUT(rip) = t27; Ijk_Ret
}
WARNING | 2018-04-08 20:48:41,421 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:41,440 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:41,478 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vblendvps_xmm_xmm_xmm_xmm/vblendvps_xmm_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 6, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm4)
   04 | t3 = SarN32x4(t2,0x1f)
   05 | t4 = NotV128(t3)
   06 | t5 = AndV128(t1,t4)
   07 | t6 = AndV128(t0,t3)
   08 | t7 = OrV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(272) = 0
   11 | PUT(pc) = 0x0000000000400006
   12 | ------ IMark(0x400006, 1, 0) ------
   13 | t8 = GET:I64(rsp)
   14 | t9 = LDle:I64(t8)
   15 | t10 = Add64(t8,0x0000000000000008)
   16 | PUT(rsp) = t10
   17 | t11 = Sub64(t10,0x0000000000000080)
   18 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:58,364 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:58,380 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:58,403 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub132pd_xmm_xmm_xmm/vfmsub132pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_I64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t0)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t1)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = NegF64(t12)
   16 | t14 = V128HIto64(t2)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = V128HIto64(t0)
   19 | t17 = ReinterpI64asF64(t16)
   20 | t18 = MAddF64(0x00000000,t17,t15,t13)
   21 | PUT(264) = t18
   22 | PUT(272) = 0
   23 | PUT(pc) = 0x0000000000400005
   24 | ------ IMark(0x400005, 1, 0) ------
   25 | t19 = GET:I64(rsp)
   26 | t20 = LDle:I64(t19)
   27 | t21 = Add64(t19,0x0000000000000008)
   28 | PUT(rsp) = t21
   29 | t22 = Sub64(t21,0x0000000000000080)
   30 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:48:03,099 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:03,115 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:03,125 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salw_r16_one/salw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = 16Uto64(t0)
   03 | t2 = Shl64(t1,0x01)
   04 | PUT(cc_op) = 0x000000000000001e
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to16(t2)
   08 | PUT(bx) = t3
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:11,475 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:11,496 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:11,508 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxbq_xmm_xmm/vpmovzxbq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = InterleaveLO8x16(0,t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:46,399 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:46,418 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:46,457 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpcklpd_ymm_ymm_ymm/vunpcklpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_V256 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_2(t0)
   05 | t4 = V256to64_0(t1)
   06 | t5 = V256to64_2(t1)
   07 | t6 = 64x4toV256(t5,t3,t4,t2)
   08 | PUT(ymm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:03,581 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:03,598 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:03,608 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd132ps_xmm_xmm_xmm/vfmsubadd132ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_I32 t17:Ity_F32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_I32 t29:Ity_F32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | PUT(ymm1) = t15
   18 | t16 = 64HIto32(t5)
   19 | t17 = ReinterpI32asF32(t16)
   20 | t18 = NegF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | PUT(260) = t23
   27 | t24 = 64to32(t8)
   28 | t25 = ReinterpI32asF32(t24)
   29 | t26 = 64to32(t7)
   30 | t27 = ReinterpI32asF32(t26)
   31 | t28 = 64to32(t6)
   32 | t29 = ReinterpI32asF32(t28)
   33 | t30 = MAddF32(0x00000000,t29,t27,t25)
   34 | PUT(264) = t30
   35 | t31 = 64HIto32(t8)
   36 | t32 = ReinterpI32asF32(t31)
   37 | t33 = NegF32(t32)
   38 | t34 = 64HIto32(t7)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = 64HIto32(t6)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = MAddF32(0x00000000,t37,t35,t33)
   43 | PUT(268) = t38
   44 | PUT(272) = 0
   45 | PUT(pc) = 0x0000000000400005
   46 | ------ IMark(0x400005, 1, 0) ------
   47 | t39 = GET:I64(rsp)
   48 | t40 = LDle:I64(t39)
   49 | t41 = Add64(t39,0x0000000000000008)
   50 | PUT(rsp) = t41
   51 | t42 = Sub64(t41,0x0000000000000080)
   52 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:50:09,166 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:09,186 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:09,209 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxdq_xmm_xmm/vpmovsxdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I32 t5:Ity_I64 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128to64(t0)
   03 | t2 = 64to32(t1)
   04 | t3 = 32Sto64(t2)
   05 | t4 = 64HIto32(t1)
   06 | t5 = 32Sto64(t4)
   07 | t6 = 64HLtoV128(t5,t3)
   08 | PUT(xmm1) = t6
   09 | PUT(272) = 0
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t7 = GET:I64(rsp)
   13 | t8 = LDle:I64(t7)
   14 | t9 = Add64(t7,0x0000000000000008)
   15 | PUT(rsp) = t9
   16 | t10 = Sub64(t9,0x0000000000000080)
   17 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:54,270 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:54,320 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:54,397 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtss2sil_r32_xmm/cvtss2sil_r32_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F32toF64(t0)
   06 | t5 = F64toI32S(t3,t4)
   07 | t6 = 32Uto64(t5)
   08 | PUT(rbx) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:27,084 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:27,103 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:27,118 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlvd_ymm_ymm_ymm/vpsrlvd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I32 t21:Ity_I32 t22:Ity_I32 t23:Ity_I32 t24:Ity_I64 t25:Ity_I64 t26:Ity_I32 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I8 t31:Ity_I32 t32:Ity_I1 t33:Ity_I32 t34:Ity_I8 t35:Ity_I32 t36:Ity_I1 t37:Ity_I32 t38:Ity_I8 t39:Ity_I32 t40:Ity_I1 t41:Ity_I32 t42:Ity_I8 t43:Ity_I32 t44:Ity_I1 t45:Ity_I32 t46:Ity_I8 t47:Ity_I32 t48:Ity_I1 t49:Ity_I32 t50:Ity_I8 t51:Ity_I32 t52:Ity_I1 t53:Ity_I32 t54:Ity_I8 t55:Ity_I32 t56:Ity_I1 t57:Ity_I32 t58:Ity_I8 t59:Ity_I32 t60:Ity_I1 t61:Ity_I32 t62:Ity_I64 t63:Ity_I64 t64:Ity_I64 t65:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t2)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = V128HIto64(t3)
   12 | t11 = V128to64(t3)
   13 | t12 = 64to32(t11)
   14 | t13 = 64HIto32(t11)
   15 | t14 = 64to32(t10)
   16 | t15 = 64HIto32(t10)
   17 | t16 = V256toV128_1(t0)
   18 | t17 = V256toV128_0(t0)
   19 | t18 = V128HIto64(t16)
   20 | t19 = V128to64(t16)
   21 | t20 = 64to32(t19)
   22 | t21 = 64HIto32(t19)
   23 | t22 = 64to32(t18)
   24 | t23 = 64HIto32(t18)
   25 | t24 = V128HIto64(t17)
   26 | t25 = V128to64(t17)
   27 | t26 = 64to32(t25)
   28 | t27 = 64HIto32(t25)
   29 | t28 = 64to32(t24)
   30 | t29 = 64HIto32(t24)
   31 | t30 = 32to8(t26)
   32 | t31 = Shr32(t12,t30)
   33 | t32 = CmpLT32U(t26,0x00000020)
   34 | t33 = ITE(t32,t31,0x00000000)
   35 | t34 = 32to8(t27)
   36 | t35 = Shr32(t13,t34)
   37 | t36 = CmpLT32U(t27,0x00000020)
   38 | t37 = ITE(t36,t35,0x00000000)
   39 | t38 = 32to8(t28)
   40 | t39 = Shr32(t14,t38)
   41 | t40 = CmpLT32U(t28,0x00000020)
   42 | t41 = ITE(t40,t39,0x00000000)
   43 | t42 = 32to8(t29)
   44 | t43 = Shr32(t15,t42)
   45 | t44 = CmpLT32U(t29,0x00000020)
   46 | t45 = ITE(t44,t43,0x00000000)
   47 | t46 = 32to8(t20)
   48 | t47 = Shr32(t6,t46)
   49 | t48 = CmpLT32U(t20,0x00000020)
   50 | t49 = ITE(t48,t47,0x00000000)
   51 | t50 = 32to8(t21)
   52 | t51 = Shr32(t7,t50)
   53 | t52 = CmpLT32U(t21,0x00000020)
   54 | t53 = ITE(t52,t51,0x00000000)
   55 | t54 = 32to8(t22)
   56 | t55 = Shr32(t8,t54)
   57 | t56 = CmpLT32U(t22,0x00000020)
   58 | t57 = ITE(t56,t55,0x00000000)
   59 | t58 = 32to8(t23)
   60 | t59 = Shr32(t9,t58)
   61 | t60 = CmpLT32U(t23,0x00000020)
   62 | t61 = ITE(t60,t59,0x00000000)
   63 | PUT(ymm1) = t33
   64 | PUT(260) = t37
   65 | PUT(264) = t41
   66 | PUT(268) = t45
   67 | PUT(272) = t49
   68 | PUT(276) = t53
   69 | PUT(280) = t57
   70 | PUT(284) = t61
   71 | PUT(pc) = 0x0000000000400005
   72 | ------ IMark(0x400005, 1, 0) ------
   73 | t62 = GET:I64(rsp)
   74 | t63 = LDle:I64(t62)
   75 | t64 = Add64(t62,0x0000000000000008)
   76 | PUT(rsp) = t64
   77 | t65 = Sub64(t64,0x0000000000000080)
   78 | ====== AbiHint(0xt65, 128, t63) ======
   NEXT: PUT(rip) = t63; Ijk_Ret
}
WARNING | 2018-04-08 20:50:41,146 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:41,166 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:41,195 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsqrtps_xmm_xmm/vsqrtps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = Sqrt32Fx4(0x00000000,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:44,314 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:44,367 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:44,384 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubd_xmm_xmm/psubd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:48,232 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:48,247 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:48,255 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vxorps_ymm_ymm_ymm/vxorps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = XorV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:41,077 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:41,153 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:41,217 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vblendvpd_xmm_xmm_xmm_xmm/vblendvpd_xmm_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 6, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm4)
   04 | t3 = SarN64x2(t2,0x3f)
   05 | t4 = NotV128(t3)
   06 | t5 = AndV128(t1,t4)
   07 | t6 = AndV128(t0,t3)
   08 | t7 = OrV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(272) = 0
   11 | PUT(pc) = 0x0000000000400006
   12 | ------ IMark(0x400006, 1, 0) ------
   13 | t8 = GET:I64(rsp)
   14 | t9 = LDle:I64(t8)
   15 | t10 = Add64(t8,0x0000000000000008)
   16 | PUT(rsp) = t10
   17 | t11 = Sub64(t10,0x0000000000000080)
   18 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:29,022 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:29,041 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:29,051 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovsldup_ymm_ymm/vmovsldup_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_V128 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = V256toV128_1(t0)
   03 | t2 = V256toV128_0(t0)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t1)
   06 | t5 = 64to32(t4)
   07 | t6 = 64to32(t3)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128to64(t2)
   10 | t9 = 64to32(t8)
   11 | t10 = 64to32(t7)
   12 | t11 = 32HLto64(t5,t5)
   13 | t12 = 32HLto64(t6,t6)
   14 | t13 = 64HLtoV128(t12,t11)
   15 | PUT(272) = t13
   16 | t14 = 32HLto64(t9,t9)
   17 | t15 = 32HLto64(t10,t10)
   18 | t16 = 64HLtoV128(t15,t14)
   19 | PUT(xmm1) = t16
   20 | PUT(pc) = 0x0000000000400004
   21 | ------ IMark(0x400004, 1, 0) ------
   22 | t17 = GET:I64(rsp)
   23 | t18 = LDle:I64(t17)
   24 | t19 = Add64(t17,0x0000000000000008)
   25 | PUT(rsp) = t19
   26 | t20 = Sub64(t19,0x0000000000000080)
   27 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:47:42,055 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,080 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,138 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psignw_xmm_xmm/psignw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_V128 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = Sub16x4(0x0000000000000000,t3)
   08 | t7 = CmpGT16Sx4(0x0000000000000000,t5)
   09 | t8 = CmpGT16Sx4(t5,0x0000000000000000)
   10 | t9 = Sub16x4(0x0000000000000000,t2)
   11 | t10 = CmpGT16Sx4(0x0000000000000000,t4)
   12 | t11 = CmpGT16Sx4(t4,0x0000000000000000)
   13 | t12 = And64(t6,t7)
   14 | t13 = And64(t3,t8)
   15 | t14 = Or64(t13,t12)
   16 | t15 = And64(t9,t10)
   17 | t16 = And64(t2,t11)
   18 | t17 = Or64(t16,t15)
   19 | t18 = 64HLtoV128(t17,t14)
   20 | PUT(xmm1) = t18
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t19 = GET:I64(rsp)
   24 | t20 = LDle:I64(t19)
   25 | t21 = Add64(t19,0x0000000000000008)
   26 | PUT(rsp) = t21
   27 | t22 = Sub64(t21,0x0000000000000080)
   28 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:49:32,136 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:32,161 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:32,179 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmulps_xmm_xmm_xmm/vmulps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Mul32Fx4(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:32,741 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:32,772 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:32,783 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubw_xmm_xmm_xmm/vpsubw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Sub16x8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:45,604 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:45,622 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:45,640 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtps2pd_xmm_xmm/vcvtps2pd_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F64 t3:Ity_F64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = GET:F32(292)
   03 | t2 = F32toF64(t1)
   04 | PUT(264) = t2
   05 | t3 = F32toF64(t0)
   06 | PUT(ymm1) = t3
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:56,829 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:56,852 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:56,862 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorb_r8_cl/rorb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I8 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = And8(t2,0x07)
   05 | t4 = Sub8(0x08,t3)
   06 | t5 = Shl8(t0,t4)
   07 | t6 = Shr8(t0,t3)
   08 | t7 = Or8(t6,t5)
   09 | t8 = GET:I64(cc_op)
   10 | t9 = GET:I64(cc_dep1)
   11 | t10 = GET:I64(cc_dep2)
   12 | t11 = GET:I64(cc_ndep)
   13 | t12 = amd64g_calculate_rflags_all(t8,t9,t10,t11):Ity_I64
   14 | t13 = CmpNE8(t2,0x00)
   15 | t14 = ITE(t13,0x0000000000000029,t8)
   16 | PUT(cc_op) = t14
   17 | t15 = 8Uto64(t7)
   18 | t16 = ITE(t13,t15,t9)
   19 | PUT(cc_dep1) = t16
   20 | t17 = ITE(t13,0x0000000000000000,t10)
   21 | PUT(cc_dep2) = t17
   22 | t18 = ITE(t13,t12,t11)
   23 | PUT(cc_ndep) = t18
   24 | PUT(bl) = t7
   25 | PUT(pc) = 0x0000000000400002
   26 | ------ IMark(0x400002, 1, 0) ------
   27 | t19 = GET:I64(rsp)
   28 | t20 = LDle:I64(t19)
   29 | t21 = Add64(t19,0x0000000000000008)
   30 | PUT(rsp) = t21
   31 | t22 = Sub64(t21,0x0000000000000080)
   32 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:50:24,309 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:24,327 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:24,336 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllw_xmm_xmm_xmm/vpsllw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN16x8(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:23,399 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:23,422 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:23,440 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsllw_ymm_ymm_xmm/vpsllw_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_I1 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN16x16(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:50,432 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:50,453 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:50,473 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtd_xmm_xmm_xmm/vpcmpgtd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpGT32Sx4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:04,212 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:04,260 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:04,321 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd132ps_ymm_ymm_ymm/vfmsubadd132ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_I32 t50:Ity_F32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_I32 t63:Ity_F32 t64:Ity_I32 t65:Ity_F32 t66:Ity_F32 t67:Ity_I32 t68:Ity_F32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t1)
   07 | t6 = V256to64_1(t0)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t1)
   10 | t9 = V256to64_2(t0)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t1)
   13 | t12 = V256to64_3(t0)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t1)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | PUT(ymm1) = t21
   24 | t22 = 64HIto32(t5)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = NegF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t7)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = 64to32(t6)
   38 | t35 = ReinterpI32asF32(t34)
   39 | t36 = MAddF32(0x00000000,t35,t33,t31)
   40 | PUT(264) = t36
   41 | t37 = 64HIto32(t8)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = NegF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = 64to32(t10)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = 64to32(t9)
   55 | t50 = ReinterpI32asF32(t49)
   56 | t51 = MAddF32(0x00000000,t50,t48,t46)
   57 | PUT(272) = t51
   58 | t52 = 64HIto32(t11)
   59 | t53 = ReinterpI32asF32(t52)
   60 | t54 = NegF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = 64to32(t13)
   70 | t63 = ReinterpI32asF32(t62)
   71 | t64 = 64to32(t12)
   72 | t65 = ReinterpI32asF32(t64)
   73 | t66 = MAddF32(0x00000000,t65,t63,t61)
   74 | PUT(280) = t66
   75 | t67 = 64HIto32(t14)
   76 | t68 = ReinterpI32asF32(t67)
   77 | t69 = NegF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
WARNING | 2018-04-08 20:48:44,633 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:44,651 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:44,670 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtph2ps_ymm_xmm/vcvtph2ps_ymm_xmm.o
IRSB {
   

   NEXT: PUT(rip) = 0x0000000000400000; Ijk_NoDecode
}
WARNING | 2018-04-08 20:49:22,867 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:22,884 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:22,894 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovdqu_ymm_ymm/vmovdqu_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:15,897 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:15,927 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:15,966 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzwq_r64_r16/movzwq_r64_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Uto64(t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:37,338 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:37,358 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:37,370 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/unpckhps_xmm_xmm/unpckhps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_V128 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = V128HIto64(t1)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 32HLto64(t6,t3)
   10 | t9 = 32HLto64(t7,t4)
   11 | t10 = 64HLtoV128(t9,t8)
   12 | PUT(xmm1) = t10
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t11 = GET:I64(rsp)
   16 | t12 = LDle:I64(t11)
   17 | t13 = Add64(t11,0x0000000000000008)
   18 | PUT(rsp) = t13
   19 | t14 = Sub64(t13,0x0000000000000080)
   20 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,009 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:33,176 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:33,248 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btcw_r16_r16/btcw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I16 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Sto64(t0)
   03 | t2 = GET:I64(rsp)
   04 | t3 = Sub64(t2,0x0000000000000120)
   05 | PUT(rsp) = t3
   06 | t4 = GET:I16(bx)
   07 | STle(t3) = t4
   08 | t5 = And64(t1,0x000000000000000f)
   09 | t6 = Sar64(t5,0x03)
   10 | t7 = Add64(t3,t6)
   11 | t8 = And64(t5,0x0000000000000007)
   12 | t9 = 64to8(t8)
   13 | t10 = Shl8(0x01,t9)
   14 | t11 = LDle:I8(t7)
   15 | t12 = Xor8(t11,t10)
   16 | STle(t7) = t12
   17 | PUT(cc_op) = 0x0000000000000000
   18 | PUT(cc_dep2) = 0x0000000000000000
   19 | t13 = 8Uto64(t11)
   20 | t14 = Shr64(t13,t9)
   21 | t15 = And64(t14,0x0000000000000001)
   22 | PUT(cc_dep1) = t15
   23 | PUT(cc_ndep) = 0x0000000000000000
   24 | t16 = LDle:I16(t3)
   25 | PUT(bx) = t16
   26 | t17 = Add64(t3,0x0000000000000120)
   27 | PUT(rsp) = t17
   28 | PUT(pc) = 0x0000000000400004
   29 | ------ IMark(0x400004, 1, 0) ------
   30 | t18 = LDle:I64(t17)
   31 | t19 = Add64(t17,0x0000000000000008)
   32 | PUT(rsp) = t19
   33 | t20 = Sub64(t19,0x0000000000000080)
   34 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:49:20,496 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:20,515 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:20,522 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vminpd_xmm_xmm_xmm/vminpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min64Fx2(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:39,177 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:39,192 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:39,200 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddsubpd_xmm_xmm_xmm/vaddsubpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add64Fx2(0x00000000,t0,t1)
   04 | t3 = Sub64Fx2(0x00000000,t0,t1)
   05 | t4 = V128HIto64(t2)
   06 | t5 = V128to64(t3)
   07 | t6 = 64HLtoV128(t4,t5)
   08 | PUT(xmm1) = t6
   09 | PUT(272) = 0
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t7 = GET:I64(rsp)
   13 | t8 = LDle:I64(t7)
   14 | t9 = Add64(t7,0x0000000000000008)
   15 | PUT(rsp) = t9
   16 | t10 = Sub64(t9,0x0000000000000080)
   17 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,768 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,909 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:56,978 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvttps2dq_xmm_xmm/cvttps2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_F32 t8:Ity_F64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F64 t12:Ity_I32 t13:Ity_F32 t14:Ity_F64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F64 t18:Ity_I32 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = 64to32(t1)
   07 | t6 = 64HIto32(t1)
   08 | t7 = ReinterpI32asF32(t6)
   09 | t8 = F32toF64(t7)
   10 | t9 = F64toI32S(0x00000003,t8)
   11 | PUT(268) = t9
   12 | t10 = ReinterpI32asF32(t5)
   13 | t11 = F32toF64(t10)
   14 | t12 = F64toI32S(0x00000003,t11)
   15 | PUT(264) = t12
   16 | t13 = ReinterpI32asF32(t4)
   17 | t14 = F32toF64(t13)
   18 | t15 = F64toI32S(0x00000003,t14)
   19 | PUT(260) = t15
   20 | t16 = ReinterpI32asF32(t3)
   21 | t17 = F32toF64(t16)
   22 | t18 = F64toI32S(0x00000003,t17)
   23 | PUT(ymm1) = t18
   24 | PUT(pc) = 0x0000000000400004
   25 | ------ IMark(0x400004, 1, 0) ------
   26 | t19 = GET:I64(rsp)
   27 | t20 = LDle:I64(t19)
   28 | t21 = Add64(t19,0x0000000000000008)
   29 | PUT(rsp) = t21
   30 | t22 = Sub64(t21,0x0000000000000080)
   31 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:47:35,459 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:35,481 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:35,536 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovsxbd_xmm_xmm/pmovsxbd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveLO8x16(0,t1)
   04 | t3 = ShlN32x4(t2,0x18)
   05 | t4 = SarN32x4(t3,0x18)
   06 | PUT(xmm1) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:06,263 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:06,283 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:06,298 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminud_xmm_xmm_xmm/vpminud_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min32Ux4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:05,628 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:05,647 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:05,678 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbl_r32_r32/sbbl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I64 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_c(t4,t5,t6,t7):Ity_I64
   10 | t9 = And64(t8,0x0000000000000001)
   11 | t10 = 64to32(t9)
   12 | t11 = Sub32(t1,t3)
   13 | t12 = Sub32(t11,t10)
   14 | PUT(cc_op) = 0x000000000000000f
   15 | t13 = 32Uto64(t1)
   16 | PUT(cc_dep1) = t13
   17 | t14 = Xor32(t3,t10)
   18 | t15 = 32Uto64(t14)
   19 | PUT(cc_dep2) = t15
   20 | PUT(cc_ndep) = t9
   21 | t16 = 32Uto64(t12)
   22 | PUT(rbx) = t16
   23 | PUT(pc) = 0x0000000000400002
   24 | ------ IMark(0x400002, 1, 0) ------
   25 | t17 = GET:I64(rsp)
   26 | t18 = LDle:I64(t17)
   27 | t19 = Add64(t17,0x0000000000000008)
   28 | PUT(rsp) = t19
   29 | t20 = Sub64(t19,0x0000000000000080)
   30 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:48:07,749 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:07,784 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:07,797 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setb_r8/setb_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000002,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:51,996 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:52,016 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:52,055 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpermilpd_ymm_ymm_ymm/vpermilpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I1 t12:Ity_I64 t13:Ity_I64 t14:Ity_I1 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I1 t23:Ity_I64 t24:Ity_I64 t25:Ity_I1 t26:Ity_I64 t27:Ity_V128 t28:Ity_V256 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128to64(t2)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128to64(t4)
   10 | t9 = V128HIto64(t4)
   11 | t10 = Shr64(t8,0x01)
   12 | t11 = 64to1(t10)
   13 | t12 = ITE(t11,t7,t6)
   14 | t13 = Shr64(t9,0x01)
   15 | t14 = 64to1(t13)
   16 | t15 = ITE(t14,t7,t6)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = V128to64(t3)
   19 | t18 = V128HIto64(t3)
   20 | t19 = V128to64(t5)
   21 | t20 = V128HIto64(t5)
   22 | t21 = Shr64(t19,0x01)
   23 | t22 = 64to1(t21)
   24 | t23 = ITE(t22,t18,t17)
   25 | t24 = Shr64(t20,0x01)
   26 | t25 = 64to1(t24)
   27 | t26 = ITE(t25,t18,t17)
   28 | t27 = 64HLtoV128(t26,t23)
   29 | t28 = V128HLtoV256(t16,t27)
   30 | PUT(ymm1) = t28
   31 | PUT(pc) = 0x0000000000400005
   32 | ------ IMark(0x400005, 1, 0) ------
   33 | t29 = GET:I64(rsp)
   34 | t30 = LDle:I64(t29)
   35 | t31 = Add64(t29,0x0000000000000008)
   36 | PUT(rsp) = t31
   37 | t32 = Sub64(t31,0x0000000000000080)
   38 | ====== AbiHint(0xt32, 128, t30) ======
   NEXT: PUT(rip) = t30; Ijk_Ret
}
WARNING | 2018-04-08 20:49:21,742 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:21,759 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:21,778 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovddup_ymm_ymm/vmovddup_ymm_ymm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:I64(304)
   03 | PUT(ymm1) = t0
   04 | PUT(264) = t0
   05 | PUT(272) = t1
   06 | PUT(280) = t1
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t2 = GET:I64(rsp)
   10 | t3 = LDle:I64(t2)
   11 | t4 = Add64(t2,0x0000000000000008)
   12 | PUT(rsp) = t4
   13 | t5 = Sub64(t4,0x0000000000000080)
   14 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:05,652 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,692 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,717 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/lzcntw_r16_r16/lzcntw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I1 t5:Ity_I64 t6:Ity_I16 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I64 t11:Ity_I1 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Uto64(t0)
   03 | t2 = Shl64(t1,0x30)
   04 | t3 = Clz64(t2)
   05 | t4 = CmpEQ64(t2,0x0000000000000000)
   06 | t5 = ITE(t4,0x0000000000000010,t3)
   07 | t6 = 64to16(t5)
   08 | PUT(bx) = t6
   09 | t7 = 16Uto64(t0)
   10 | t8 = 16Uto64(t6)
   11 | t9 = CmpEQ64(t7,0x0000000000000000)
   12 | t10 = 1Uto64(t9)
   13 | t11 = CmpEQ64(t8,0x0000000000000000)
   14 | t12 = 1Uto64(t11)
   15 | t13 = Shl64(t12,0x06)
   16 | t14 = Or64(t13,t10)
   17 | PUT(cc_op) = 0x0000000000000000
   18 | PUT(cc_dep2) = 0x0000000000000000
   19 | PUT(cc_ndep) = 0x0000000000000000
   20 | PUT(cc_dep1) = t14
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t15 = GET:I64(rsp)
   24 | t16 = LDle:I64(t15)
   25 | t17 = Add64(t15,0x0000000000000008)
   26 | PUT(rsp) = t17
   27 | t18 = Sub64(t17,0x0000000000000080)
   28 | ====== AbiHint(0xt18, 128, t16) ======
   NEXT: PUT(rip) = t16; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,829 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,892 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,957 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovleq_r64_r64/cmovleq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000e,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:33,784 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:33,803 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:33,862 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/tzcntq_r64_r64/tzcntq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I1 t3:Ity_I64 t4:Ity_I1 t5:Ity_I64 t6:Ity_I1 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = Ctz64(t0)
   03 | t2 = CmpEQ64(t0,0x0000000000000000)
   04 | t3 = ITE(t2,0x0000000000000040,t1)
   05 | PUT(rbx) = t3
   06 | t4 = CmpEQ64(t0,0x0000000000000000)
   07 | t5 = 1Uto64(t4)
   08 | t6 = CmpEQ64(t3,0x0000000000000000)
   09 | t7 = 1Uto64(t6)
   10 | t8 = Shl64(t7,0x06)
   11 | t9 = Or64(t8,t5)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = 0x0000000000000000
   15 | PUT(cc_dep1) = t9
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:50:39,653 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:39,665 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:39,673 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vrcpss_xmm_xmm_xmm/vrcpss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = SetV128lo32(t1,t0)
   04 | t3 = RecipEst32F0x4(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:27,836 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:27,883 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:27,928 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrxq_r64_r64_r64/shrxq_r64_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = And64(t0,0x000000000000003f)
   04 | t3 = 64to8(t2)
   05 | t4 = Shr64(t1,t3)
   06 | PUT(rbx) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:29,767 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:29,793 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:29,825 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pextl_r32_r32_r32/pextl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rdx)
   04 | t3 = 64to32(t2)
   05 | t4 = And32(t1,t3)
   06 | t5 = 32Uto64(t4)
   07 | t6 = 32Uto64(t3)
   08 | t7 = amd64g_calculate_pext(t5,t6):Ity_I64
   09 | t8 = 64to32(t7)
   10 | t9 = 32Uto64(t8)
   11 | PUT(rbx) = t9
   12 | PUT(pc) = 0x0000000000400005
   13 | ------ IMark(0x400005, 1, 0) ------
   14 | t10 = GET:I64(rsp)
   15 | t11 = LDle:I64(t10)
   16 | t12 = Add64(t10,0x0000000000000008)
   17 | PUT(rsp) = t12
   18 | t13 = Sub64(t12,0x0000000000000080)
   19 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:47:47,589 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:47,624 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:47,637 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpckhwd_xmm_xmm/punpckhwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveHI16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:21,300 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:21,320 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:21,347 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sets_r8/sets_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000008,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:50,313 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:50,325 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:50,332 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvttsd2siq_r64_xmm/vcvttsd2siq_r64_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = F64toI64S(0x00000003,t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:22,325 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:22,344 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:22,376 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setp_rh/setp_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000a,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:48,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:48,394 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:48,415 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpcklwd_xmm_xmm/punpcklwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveLO16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:51,685 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:51,718 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:51,761 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd213pd_xmm_xmm_xmm/vfmadd213pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_F64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t0)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V128HIto64(t2)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = V128HIto64(t0)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = V128HIto64(t1)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = MAddF64(0x00000000,t15,t13,t11)
   19 | PUT(264) = t16
   20 | PUT(272) = 0
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t17 = GET:I64(rsp)
   24 | t18 = LDle:I64(t17)
   25 | t19 = Add64(t17,0x0000000000000008)
   26 | PUT(rsp) = t19
   27 | t20 = Sub64(t19,0x0000000000000080)
   28 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,115 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,174 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:56,261 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpq_r64_r64/cmpq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | PUT(cc_op) = 0x0000000000000008
   04 | PUT(cc_dep1) = t0
   05 | PUT(cc_dep2) = t1
   06 | PUT(pc) = 0x0000000000400003
   07 | ------ IMark(0x400003, 1, 0) ------
   08 | t2 = GET:I64(rsp)
   09 | t3 = LDle:I64(t2)
   10 | t4 = Add64(t2,0x0000000000000008)
   11 | PUT(rsp) = t4
   12 | t5 = Sub64(t4,0x0000000000000080)
   13 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:39,723 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:39,788 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:39,799 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmullw_xmm_xmm/pmullw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Mul16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:42,171 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:42,211 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:42,235 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpandn_ymm_ymm_ymm/vpandn_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = NotV256(t0)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = AndV256(t1,t2)
   05 | PUT(ymm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:10,623 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:10,649 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:10,713 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/maxsd_xmm_xmm/maxsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Max64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:58,016 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:58,035 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:58,078 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolw_r16_one/rolw_r16_one.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I16 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = Shr16(t0,0x0f)
   03 | t2 = Shl16(t0,0x01)
   04 | t3 = Or16(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x0000000000000026
   11 | t9 = 16Uto64(t3)
   12 | PUT(cc_dep1) = t9
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = t8
   15 | PUT(bx) = t3
   16 | PUT(pc) = 0x0000000000400003
   17 | ------ IMark(0x400003, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:50:46,753 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:46,765 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:46,772 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpcklps_xmm_xmm_xmm/vunpcklps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_V128 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 32HLto64(t6,t3)
   10 | t9 = 32HLto64(t7,t4)
   11 | t10 = 64HLtoV128(t9,t8)
   12 | PUT(xmm1) = t10
   13 | PUT(272) = 0
   14 | PUT(pc) = 0x0000000000400004
   15 | ------ IMark(0x400004, 1, 0) ------
   16 | t11 = GET:I64(rsp)
   17 | t12 = LDle:I64(t11)
   18 | t13 = Add64(t11,0x0000000000000008)
   19 | PUT(rsp) = t13
   20 | t14 = Sub64(t13,0x0000000000000080)
   21 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:47:47,534 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:47,562 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:47,605 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubsw_xmm_xmm/psubsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QSub16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:27,570 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:27,583 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:27,592 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlw_xmm_xmm_xmm/vpsrlw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN16x8(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000010)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:32,765 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:32,825 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:32,876 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/phaddw_xmm_xmm/phaddw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = Add16x4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = Add16x4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:48:35,226 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:35,244 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:35,255 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testq_r64_r64/testq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = And64(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000014
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = 0x0000000000000000
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t3 = GET:I64(rsp)
   10 | t4 = LDle:I64(t3)
   11 | t5 = Add64(t3,0x0000000000000008)
   12 | PUT(rsp) = t5
   13 | t6 = Sub64(t5,0x0000000000000080)
   14 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:37,370 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:37,385 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:37,394 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpcklqdq_ymm_ymm_ymm/vpunpcklqdq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveLO64x2(t5,t3)
   08 | t7 = InterleaveLO64x2(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:33,614 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:33,631 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:33,648 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpabsd_ymm_ymm/vpabsd_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_V128 t33:Ity_V256 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64 t37:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = V256toV128_1(t0)
   03 | t2 = V256toV128_0(t0)
   04 | t3 = V128HIto64(t2)
   05 | t4 = V128to64(t2)
   06 | t5 = SarN32x2(t4,0x1f)
   07 | t6 = Not64(t5)
   08 | t7 = Sub32x2(0x0000000000000000,t4)
   09 | t8 = And64(t7,t5)
   10 | t9 = And64(t4,t6)
   11 | t10 = Or64(t9,t8)
   12 | t11 = SarN32x2(t3,0x1f)
   13 | t12 = Not64(t11)
   14 | t13 = Sub32x2(0x0000000000000000,t3)
   15 | t14 = And64(t13,t11)
   16 | t15 = And64(t3,t12)
   17 | t16 = Or64(t15,t14)
   18 | t17 = 64HLtoV128(t16,t10)
   19 | t18 = V128HIto64(t1)
   20 | t19 = V128to64(t1)
   21 | t20 = SarN32x2(t19,0x1f)
   22 | t21 = Not64(t20)
   23 | t22 = Sub32x2(0x0000000000000000,t19)
   24 | t23 = And64(t22,t20)
   25 | t24 = And64(t19,t21)
   26 | t25 = Or64(t24,t23)
   27 | t26 = SarN32x2(t18,0x1f)
   28 | t27 = Not64(t26)
   29 | t28 = Sub32x2(0x0000000000000000,t18)
   30 | t29 = And64(t28,t26)
   31 | t30 = And64(t18,t27)
   32 | t31 = Or64(t30,t29)
   33 | t32 = 64HLtoV128(t31,t25)
   34 | t33 = V128HLtoV256(t32,t17)
   35 | PUT(ymm1) = t33
   36 | PUT(pc) = 0x0000000000400005
   37 | ------ IMark(0x400005, 1, 0) ------
   38 | t34 = GET:I64(rsp)
   39 | t35 = LDle:I64(t34)
   40 | t36 = Add64(t34,0x0000000000000008)
   41 | PUT(rsp) = t36
   42 | t37 = Sub64(t36,0x0000000000000080)
   43 | ====== AbiHint(0xt37, 128, t35) ======
   NEXT: PUT(rip) = t35; Ijk_Ret
}
WARNING | 2018-04-08 20:48:33,232 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:33,275 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:33,293 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subss_xmm_xmm/subss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,738 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,805 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,909 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpb_rh_rh/cmpb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | PUT(cc_op) = 0x0000000000000005
   04 | t2 = 8Uto64(t0)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t1)
   07 | PUT(cc_dep2) = t3
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:42,956 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:42,977 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:42,991 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtdq2pd_xmm_xmm/vcvtdq2pd_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_F64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = 64to32(t0)
   03 | t2 = I32StoF64(t1)
   04 | PUT(ymm1) = t2
   05 | t3 = 64HIto32(t0)
   06 | t4 = I32StoF64(t3)
   07 | PUT(264) = t4
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t5 = GET:I64(rsp)
   12 | t6 = LDle:I64(t5)
   13 | t7 = Add64(t5,0x0000000000000008)
   14 | PUT(rsp) = t7
   15 | t8 = Sub64(t7,0x0000000000000080)
   16 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,376 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,545 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,650 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovgeq_r64_r64/cmovgeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000d,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:06,905 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:06,925 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:06,978 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setae_rh/setae_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000003,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:41,197 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:41,341 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:41,444 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovngel_r32_r32/cmovngel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000c,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:48,262 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:48,401 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:48,510 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovsq_r64_r64/cmovsq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000008,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:24,083 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:24,104 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:24,115 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlb_rh_cl/shlb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Uto64(t0)
   05 | t4 = Shl64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shl64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x000000000000001d,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(ah) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:46:51,910 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,031 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:52,084 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgq_r64_r64/cmpxchgq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I1 t4:Ity_I64 t5:Ity_I64 t6:Ity_I1 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | t2 = GET:I64(rax)
   04 | PUT(cc_op) = 0x0000000000000008
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t0
   07 | t3 = CmpEQ64(t2,t0)
   08 | t4 = 1Uto64(t3)
   09 | t5 = t4
   10 | t6 = 64to1(t5)
   11 | t7 = t6
   12 | t8 = ITE(t7,t1,t0)
   13 | t9 = t8
   14 | t10 = ITE(t7,t2,t0)
   15 | t11 = t10
   16 | PUT(rax) = t11
   17 | PUT(rbx) = t9
   18 | PUT(pc) = 0x0000000000400004
   19 | ------ IMark(0x400004, 1, 0) ------
   20 | t12 = GET:I64(rsp)
   21 | t13 = LDle:I64(t12)
   22 | t14 = Add64(t12,0x0000000000000008)
   23 | PUT(rsp) = t14
   24 | t15 = Sub64(t14,0x0000000000000080)
   25 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:09,727 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:09,759 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:09,774 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd213ps_xmm_xmm_xmm/vfnmadd213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_I32 t42:Ity_F32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | t17 = NegF32(t16)
   19 | PUT(ymm1) = t17
   20 | t18 = 64HIto32(t5)
   21 | t19 = ReinterpI32asF32(t18)
   22 | t20 = NegF32(t19)
   23 | t21 = 64HIto32(t4)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = 64HIto32(t3)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = MAddF32(0x00000000,t24,t22,t20)
   28 | t26 = NegF32(t25)
   29 | PUT(260) = t26
   30 | t27 = 64to32(t8)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = NegF32(t28)
   33 | t30 = 64to32(t7)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t6)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = MAddF32(0x00000000,t33,t31,t29)
   38 | t35 = NegF32(t34)
   39 | PUT(264) = t35
   40 | t36 = 64HIto32(t8)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = NegF32(t37)
   43 | t39 = 64HIto32(t7)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = 64HIto32(t6)
   46 | t42 = ReinterpI32asF32(t41)
   47 | t43 = MAddF32(0x00000000,t42,t40,t38)
   48 | t44 = NegF32(t43)
   49 | PUT(268) = t44
   50 | PUT(272) = 0
   51 | PUT(pc) = 0x0000000000400005
   52 | ------ IMark(0x400005, 1, 0) ------
   53 | t45 = GET:I64(rsp)
   54 | t46 = LDle:I64(t45)
   55 | t47 = Add64(t45,0x0000000000000008)
   56 | PUT(rsp) = t47
   57 | t48 = Sub64(t47,0x0000000000000080)
   58 | ====== AbiHint(0xt48, 128, t46) ======
   NEXT: PUT(rip) = t46; Ijk_Ret
}
WARNING | 2018-04-08 20:47:54,753 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:54,770 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:54,795 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolb_rh_one/rolb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = Shr8(t0,0x07)
   03 | t2 = Shl8(t0,0x01)
   04 | t3 = Or8(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x0000000000000025
   11 | t9 = 8Uto64(t3)
   12 | PUT(cc_dep1) = t9
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = t8
   15 | PUT(ah) = t3
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:46:29,038 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:29,314 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:29,405 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blsil_r32_r32/blsil_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = Sub32(0x00000000,t1)
   04 | t3 = And32(t2,t1)
   05 | t4 = 32Uto64(t3)
   06 | PUT(rbx) = t4
   07 | PUT(cc_op) = 0x0000000000000037
   08 | t5 = 32Uto64(t3)
   09 | PUT(cc_dep1) = t5
   10 | t6 = 32Uto64(t1)
   11 | PUT(cc_dep2) = t6
   12 | PUT(pc) = 0x0000000000400005
   13 | ------ IMark(0x400005, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:29,179 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:29,198 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:29,207 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubb_xmm_xmm_xmm/vpsubb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Sub8x16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:39,728 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:39,747 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:39,762 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddsw_ymm_ymm_ymm/vpaddsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QAdd16Sx16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:42,171 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:42,311 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:42,369 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btcl_r32_r32/btcl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I8 t12:Ity_I8 t13:Ity_I8 t14:Ity_I8 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I32 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Sto64(t1)
   04 | t3 = GET:I64(rsp)
   05 | t4 = Sub64(t3,0x0000000000000120)
   06 | PUT(rsp) = t4
   07 | t5 = GET:I64(rbx)
   08 | t6 = 64to32(t5)
   09 | STle(t4) = t6
   10 | t7 = And64(t2,0x000000000000001f)
   11 | t8 = Sar64(t7,0x03)
   12 | t9 = Add64(t4,t8)
   13 | t10 = And64(t7,0x0000000000000007)
   14 | t11 = 64to8(t10)
   15 | t12 = Shl8(0x01,t11)
   16 | t13 = LDle:I8(t9)
   17 | t14 = Xor8(t13,t12)
   18 | STle(t9) = t14
   19 | PUT(cc_op) = 0x0000000000000000
   20 | PUT(cc_dep2) = 0x0000000000000000
   21 | t15 = 8Uto64(t13)
   22 | t16 = Shr64(t15,t11)
   23 | t17 = And64(t16,0x0000000000000001)
   24 | PUT(cc_dep1) = t17
   25 | PUT(cc_ndep) = 0x0000000000000000
   26 | t18 = LDle:I32(t4)
   27 | t19 = 32Uto64(t18)
   28 | PUT(rbx) = t19
   29 | t20 = Add64(t4,0x0000000000000120)
   30 | PUT(rsp) = t20
   31 | PUT(pc) = 0x0000000000400003
   32 | ------ IMark(0x400003, 1, 0) ------
   33 | t21 = LDle:I64(t20)
   34 | t22 = Add64(t20,0x0000000000000008)
   35 | PUT(rsp) = t22
   36 | t23 = Sub64(t22,0x0000000000000080)
   37 | ====== AbiHint(0xt23, 128, t21) ======
   NEXT: PUT(rip) = t21; Ijk_Ret
}
WARNING | 2018-04-08 20:50:12,311 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:12,332 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:12,352 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxbw_ymm_xmm/vpmovzxbw_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO8x16(0,t0)
   03 | t2 = InterleaveHI8x16(0,t0)
   04 | t3 = V128HLtoV256(t2,t1)
   05 | PUT(ymm1) = t3
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:12,468 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:12,515 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:12,565 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnbe_rh/setnbe_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000007,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:06,365 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:06,382 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:06,393 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovmskb_r32_ymm/vpmovmskb_r32_ymm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I16 t3:Ity_I16 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(272)
   03 | t2 = GetMSBs8x16(t0)
   04 | t3 = GetMSBs8x16(t1)
   05 | t4 = 16HLto32(t3,t2)
   06 | t5 = 32Uto64(t4)
   07 | PUT(rbx) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:53,338 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:53,353 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:53,360 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgq_r64_r64/xchgq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rcx)
   03 | PUT(rcx) = t0
   04 | PUT(rbx) = t1
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:28,750 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,809 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,869 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpeqw_xmm_xmm/pcmpeqw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpEQ16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:26,939 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:27,001 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:27,021 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pabsd_xmm_xmm/pabsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = SarN32x2(t2,0x1f)
   05 | t4 = Not64(t3)
   06 | t5 = Sub32x2(0x0000000000000000,t2)
   07 | t6 = And64(t5,t3)
   08 | t7 = And64(t2,t4)
   09 | t8 = Or64(t7,t6)
   10 | t9 = SarN32x2(t1,0x1f)
   11 | t10 = Not64(t9)
   12 | t11 = Sub32x2(0x0000000000000000,t1)
   13 | t12 = And64(t11,t9)
   14 | t13 = And64(t1,t10)
   15 | t14 = Or64(t13,t12)
   16 | t15 = 64HLtoV128(t14,t8)
   17 | PUT(xmm1) = t15
   18 | PUT(pc) = 0x0000000000400005
   19 | ------ IMark(0x400005, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:25,655 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:25,675 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:25,685 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrld_xmm_xmm_xmm/vpsrld_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN32x4(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:16,330 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:16,349 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:16,358 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulld_xmm_xmm_xmm/vpmulld_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Mul32x4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:49,599 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:49,620 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:49,662 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpcklbw_xmm_xmm/punpcklbw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveLO8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:53,160 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:53,278 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:53,349 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtdq2pd_xmm_xmm/cvtdq2pd_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_F64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = 64to32(t0)
   03 | t2 = I32StoF64(t1)
   04 | PUT(ymm1) = t2
   05 | t3 = 64HIto32(t0)
   06 | t4 = I32StoF64(t3)
   07 | PUT(264) = t4
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:48,580 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:48,597 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:48,606 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddb_r8_r8/xaddb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(cl) = t0
   10 | PUT(bl) = t2
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:17,522 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:17,538 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:17,550 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setns_r8/setns_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000009,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:39,677 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:39,694 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:39,705 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vrcpps_xmm_xmm/vrcpps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = RecipEst32Fx4(t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:34,013 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:34,034 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:34,056 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pminsb_xmm_xmm/pminsb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,949 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,101 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,244 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btw_r16_r16/btw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = 16Sto64(t0)
   03 | t2 = GET:I64(rsp)
   04 | t3 = Sub64(t2,0x0000000000000120)
   05 | PUT(rsp) = t3
   06 | t4 = GET:I16(bx)
   07 | STle(t3) = t4
   08 | t5 = And64(t1,0x000000000000000f)
   09 | t6 = Sar64(t5,0x03)
   10 | t7 = Add64(t3,t6)
   11 | t8 = And64(t5,0x0000000000000007)
   12 | t9 = 64to8(t8)
   13 | t10 = LDle:I8(t7)
   14 | PUT(cc_op) = 0x0000000000000000
   15 | PUT(cc_dep2) = 0x0000000000000000
   16 | t11 = 8Uto64(t10)
   17 | t12 = Shr64(t11,t9)
   18 | t13 = And64(t12,0x0000000000000001)
   19 | PUT(cc_dep1) = t13
   20 | PUT(cc_ndep) = 0x0000000000000000
   21 | t14 = Add64(t3,0x0000000000000120)
   22 | PUT(rsp) = t14
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t15 = LDle:I64(t14)
   26 | t16 = Add64(t14,0x0000000000000008)
   27 | PUT(rsp) = t16
   28 | t17 = Sub64(t16,0x0000000000000080)
   29 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:48:46,174 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:46,197 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:46,209 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsd2siq_r64_xmm/vcvtsd2siq_r64_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F64toI64S(t3,t0)
   06 | PUT(rbx) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:42,678 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:42,691 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:42,700 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsubss_xmm_xmm_xmm/vsubss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Sub32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:47,994 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:48,038 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:48,053 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvttpd2dq_xmm_xmm/vcvttpd2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_F64 t3:Ity_I64 t4:Ity_F64 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128to64(t0)
   03 | t2 = ReinterpI64asF64(t1)
   04 | t3 = V128HIto64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | PUT(268) = 0x00000000
   07 | PUT(264) = 0x00000000
   08 | t5 = F64toI32S(0x00000003,t4)
   09 | PUT(260) = t5
   10 | t6 = F64toI32S(0x00000003,t2)
   11 | PUT(ymm1) = t6
   12 | PUT(272) = 0
   13 | PUT(pc) = 0x0000000000400004
   14 | ------ IMark(0x400004, 1, 0) ------
   15 | t7 = GET:I64(rsp)
   16 | t8 = LDle:I64(t7)
   17 | t9 = Add64(t7,0x0000000000000008)
   18 | PUT(rsp) = t9
   19 | t10 = Sub64(t9,0x0000000000000080)
   20 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,710 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,965 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:35,071 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/clc/clc.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_rflags_all(t0,t1,t2,t3):Ity_I64
   06 | t5 = And64(t4,0xfffffffffffffffe)
   07 | PUT(cc_op) = 0x0000000000000000
   08 | PUT(cc_dep2) = 0x0000000000000000
   09 | PUT(cc_dep1) = t5
   10 | PUT(cc_ndep) = 0x0000000000000000
   11 | PUT(pc) = 0x0000000000400001
   12 | ------ IMark(0x400001, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:10,298 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:10,342 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:10,351 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd231ps_xmm_xmm_xmm/vfnmadd231ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_I32 t42:Ity_F32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t0)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | t17 = NegF32(t16)
   19 | PUT(ymm1) = t17
   20 | t18 = 64HIto32(t5)
   21 | t19 = ReinterpI32asF32(t18)
   22 | t20 = NegF32(t19)
   23 | t21 = 64HIto32(t4)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = 64HIto32(t3)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = MAddF32(0x00000000,t24,t22,t20)
   28 | t26 = NegF32(t25)
   29 | PUT(260) = t26
   30 | t27 = 64to32(t8)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = NegF32(t28)
   33 | t30 = 64to32(t7)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t6)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = MAddF32(0x00000000,t33,t31,t29)
   38 | t35 = NegF32(t34)
   39 | PUT(264) = t35
   40 | t36 = 64HIto32(t8)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = NegF32(t37)
   43 | t39 = 64HIto32(t7)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = 64HIto32(t6)
   46 | t42 = ReinterpI32asF32(t41)
   47 | t43 = MAddF32(0x00000000,t42,t40,t38)
   48 | t44 = NegF32(t43)
   49 | PUT(268) = t44
   50 | PUT(272) = 0
   51 | PUT(pc) = 0x0000000000400005
   52 | ------ IMark(0x400005, 1, 0) ------
   53 | t45 = GET:I64(rsp)
   54 | t46 = LDle:I64(t45)
   55 | t47 = Add64(t45,0x0000000000000008)
   56 | PUT(rsp) = t47
   57 | t48 = Sub64(t47,0x0000000000000080)
   58 | ====== AbiHint(0xt48, 128, t46) ======
   NEXT: PUT(rip) = t46; Ijk_Ret
}
WARNING | 2018-04-08 20:48:53,350 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:53,403 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:53,459 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd231pd_ymm_ymm_ymm/vfmadd231pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_I64 t20:Ity_F64 t21:Ity_I64 t22:Ity_F64 t23:Ity_F64 t24:Ity_I64 t25:Ity_F64 t26:Ity_I64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_F64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V256to64_1(t0)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = V256to64_1(t2)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = V256to64_1(t1)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = MAddF64(0x00000000,t15,t13,t11)
   19 | PUT(264) = t16
   20 | t17 = V256to64_2(t0)
   21 | t18 = ReinterpI64asF64(t17)
   22 | t19 = V256to64_2(t2)
   23 | t20 = ReinterpI64asF64(t19)
   24 | t21 = V256to64_2(t1)
   25 | t22 = ReinterpI64asF64(t21)
   26 | t23 = MAddF64(0x00000000,t22,t20,t18)
   27 | PUT(272) = t23
   28 | t24 = V256to64_3(t0)
   29 | t25 = ReinterpI64asF64(t24)
   30 | t26 = V256to64_3(t2)
   31 | t27 = ReinterpI64asF64(t26)
   32 | t28 = V256to64_3(t1)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = MAddF64(0x00000000,t29,t27,t25)
   35 | PUT(280) = t30
   36 | PUT(pc) = 0x0000000000400005
   37 | ------ IMark(0x400005, 1, 0) ------
   38 | t31 = GET:I64(rsp)
   39 | t32 = LDle:I64(t31)
   40 | t33 = Add64(t31,0x0000000000000008)
   41 | PUT(rsp) = t33
   42 | t34 = Sub64(t33,0x0000000000000080)
   43 | ====== AbiHint(0xt34, 128, t32) ======
   NEXT: PUT(rip) = t32; Ijk_Ret
}
WARNING | 2018-04-08 20:50:00,875 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:00,896 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:00,929 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxud_xmm_xmm_xmm/vpmaxud_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max32Ux4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:41,190 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:41,227 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:41,256 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsqrtsd_xmm_xmm_xmm/vsqrtsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = SetV128lo64(t1,t0)
   04 | t3 = Sqrt64F0x2(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:59,091 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:59,108 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:59,120 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorb_rh_one/rorb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = Shl8(t0,0x07)
   03 | t2 = Shr8(t0,0x01)
   04 | t3 = Or8(t2,t1)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_rflags_all(t4,t5,t6,t7):Ity_I64
   10 | PUT(cc_op) = 0x0000000000000029
   11 | t9 = 8Uto64(t3)
   12 | PUT(cc_dep1) = t9
   13 | PUT(cc_dep2) = 0x0000000000000000
   14 | PUT(cc_ndep) = t8
   15 | PUT(ah) = t3
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:48:35,590 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:35,620 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:35,629 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/unpckhpd_xmm_xmm/unpckhpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128HIto64(t1)
   05 | t4 = 64HLtoV128(t3,t2)
   06 | PUT(xmm1) = t4
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:14,004 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:14,099 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:14,135 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movss_xmm_xmm/movss_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:50:36,921 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:36,939 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:36,970 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckldq_xmm_xmm_xmm/vpunpckldq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveLO32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:42,490 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,516 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,553 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/popcntl_r32_r32/popcntl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I32 t16:Ity_I32 t17:Ity_I32 t18:Ity_I32 t19:Ity_I32 t20:Ity_I32 t21:Ity_I32 t22:Ity_I64 t23:Ity_I64 t24:Ity_I1 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = Shr32(t1,0x01)
   04 | t3 = And32(t2,0x55555555)
   05 | t4 = And32(t1,0x55555555)
   06 | t5 = Add32(t4,t3)
   07 | t6 = Shr32(t5,0x02)
   08 | t7 = And32(t6,0x33333333)
   09 | t8 = And32(t5,0x33333333)
   10 | t9 = Add32(t8,t7)
   11 | t10 = Shr32(t9,0x04)
   12 | t11 = And32(t10,0x0f0f0f0f)
   13 | t12 = And32(t9,0x0f0f0f0f)
   14 | t13 = Add32(t12,t11)
   15 | t14 = Shr32(t13,0x08)
   16 | t15 = And32(t14,0x00ff00ff)
   17 | t16 = And32(t13,0x00ff00ff)
   18 | t17 = Add32(t16,t15)
   19 | t18 = Shr32(t17,0x10)
   20 | t19 = And32(t18,0x0000ffff)
   21 | t20 = And32(t17,0x0000ffff)
   22 | t21 = Add32(t20,t19)
   23 | t22 = 32Uto64(t21)
   24 | PUT(rbx) = t22
   25 | PUT(cc_op) = 0x0000000000000000
   26 | PUT(cc_dep2) = 0x0000000000000000
   27 | PUT(cc_ndep) = 0x0000000000000000
   28 | t23 = 32Uto64(t1)
   29 | t24 = CmpEQ64(t23,0x0000000000000000)
   30 | t25 = 1Uto64(t24)
   31 | t26 = Shl64(t25,0x06)
   32 | PUT(cc_dep1) = t26
   33 | PUT(pc) = 0x0000000000400004
   34 | ------ IMark(0x400004, 1, 0) ------
   35 | t27 = GET:I64(rsp)
   36 | t28 = LDle:I64(t27)
   37 | t29 = Add64(t27,0x0000000000000008)
   38 | PUT(rsp) = t29
   39 | t30 = Sub64(t29,0x0000000000000080)
   40 | ====== AbiHint(0xt30, 128, t28) ======
   NEXT: PUT(rip) = t28; Ijk_Ret
}
WARNING | 2018-04-08 20:49:59,625 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:59,649 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:59,674 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxsb_ymm_ymm_ymm/vpmaxsb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Max8Sx32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:30,488 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:30,532 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:30,569 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubsb_xmm_xmm_xmm/vpsubsb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QSub8Sx16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:09,163 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,271 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,353 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movdqu_xmm_xmm/movdqu_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:06,639 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:06,657 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:06,667 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd132pd_xmm_xmm_xmm/vfnmadd132pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_I64 t18:Ity_F64 t19:Ity_F64 t20:Ity_F64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t0)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | t11 = NegF64(t10)
   13 | PUT(ymm1) = t11
   14 | t12 = V128HIto64(t1)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = NegF64(t13)
   17 | t15 = V128HIto64(t2)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = V128HIto64(t0)
   20 | t18 = ReinterpI64asF64(t17)
   21 | t19 = MAddF64(0x00000000,t18,t16,t14)
   22 | t20 = NegF64(t19)
   23 | PUT(264) = t20
   24 | PUT(272) = 0
   25 | PUT(pc) = 0x0000000000400005
   26 | ------ IMark(0x400005, 1, 0) ------
   27 | t21 = GET:I64(rsp)
   28 | t22 = LDle:I64(t21)
   29 | t23 = Add64(t21,0x0000000000000008)
   30 | PUT(rsp) = t23
   31 | t24 = Sub64(t23,0x0000000000000080)
   32 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:47:38,640 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:38,673 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:38,714 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovzxwq_xmm_xmm/pmovzxwq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = InterleaveLO16x8(0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:50,890 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:50,911 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:50,920 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd132ps_xmm_xmm_xmm/vfmadd132ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_I32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_I32 t21:Ity_F32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I64 t38:Ity_I64 t39:Ity_I64 t40:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | PUT(ymm1) = t15
   18 | t16 = 64HIto32(t5)
   19 | t17 = ReinterpI32asF32(t16)
   20 | t18 = 64HIto32(t4)
   21 | t19 = ReinterpI32asF32(t18)
   22 | t20 = 64HIto32(t3)
   23 | t21 = ReinterpI32asF32(t20)
   24 | t22 = MAddF32(0x00000000,t21,t19,t17)
   25 | PUT(260) = t22
   26 | t23 = 64to32(t8)
   27 | t24 = ReinterpI32asF32(t23)
   28 | t25 = 64to32(t7)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t6)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = MAddF32(0x00000000,t28,t26,t24)
   33 | PUT(264) = t29
   34 | t30 = 64HIto32(t8)
   35 | t31 = ReinterpI32asF32(t30)
   36 | t32 = 64HIto32(t7)
   37 | t33 = ReinterpI32asF32(t32)
   38 | t34 = 64HIto32(t6)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = MAddF32(0x00000000,t35,t33,t31)
   41 | PUT(268) = t36
   42 | PUT(272) = 0
   43 | PUT(pc) = 0x0000000000400005
   44 | ------ IMark(0x400005, 1, 0) ------
   45 | t37 = GET:I64(rsp)
   46 | t38 = LDle:I64(t37)
   47 | t39 = Add64(t37,0x0000000000000008)
   48 | PUT(rsp) = t39
   49 | t40 = Sub64(t39,0x0000000000000080)
   50 | ====== AbiHint(0xt40, 128, t38) ======
   NEXT: PUT(rip) = t38; Ijk_Ret
}
WARNING | 2018-04-08 20:47:16,686 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:16,705 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:16,731 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mull_r32/mull_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rax)
   04 | t3 = 64to32(t2)
   05 | PUT(cc_op) = 0x000000000000002f
   06 | t4 = 32Uto64(t3)
   07 | PUT(cc_dep1) = t4
   08 | t5 = 32Uto64(t1)
   09 | PUT(cc_dep2) = t5
   10 | t6 = MullU32(t3,t1)
   11 | t7 = 64HIto32(t6)
   12 | t8 = 64to32(t6)
   13 | t9 = 32Uto64(t7)
   14 | PUT(rdx) = t9
   15 | t10 = 32Uto64(t8)
   16 | PUT(rax) = t10
   17 | PUT(pc) = 0x0000000000400002
   18 | ------ IMark(0x400002, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:50:04,462 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:04,475 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:04,482 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxuw_ymm_ymm_ymm/vpmaxuw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Max16Ux16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:45,281 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:45,305 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:45,335 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtps2dq_xmm_xmm/vcvtps2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_F32 t11:Ity_F64 t12:Ity_I32 t13:Ity_F32 t14:Ity_F64 t15:Ity_I32 t16:Ity_F32 t17:Ity_F64 t18:Ity_I32 t19:Ity_F32 t20:Ity_F64 t21:Ity_I32 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128HIto64(t0)
   06 | t5 = V128to64(t0)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = F32toF64(t10)
   13 | t12 = F64toI32S(t3,t11)
   14 | PUT(268) = t12
   15 | t13 = ReinterpI32asF32(t8)
   16 | t14 = F32toF64(t13)
   17 | t15 = F64toI32S(t3,t14)
   18 | PUT(264) = t15
   19 | t16 = ReinterpI32asF32(t7)
   20 | t17 = F32toF64(t16)
   21 | t18 = F64toI32S(t3,t17)
   22 | PUT(260) = t18
   23 | t19 = ReinterpI32asF32(t6)
   24 | t20 = F32toF64(t19)
   25 | t21 = F64toI32S(t3,t20)
   26 | PUT(ymm1) = t21
   27 | PUT(272) = 0
   28 | PUT(pc) = 0x0000000000400004
   29 | ------ IMark(0x400004, 1, 0) ------
   30 | t22 = GET:I64(rsp)
   31 | t23 = LDle:I64(t22)
   32 | t24 = Add64(t22,0x0000000000000008)
   33 | PUT(rsp) = t24
   34 | t25 = Sub64(t24,0x0000000000000080)
   35 | ====== AbiHint(0xt25, 128, t23) ======
   NEXT: PUT(rip) = t23; Ijk_Ret
}
WARNING | 2018-04-08 20:49:17,951 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:17,963 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:17,970 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhsubps_ymm_ymm_ymm/vhsubps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_I32 t15:Ity_I32 t16:Ity_I32 t17:Ity_I32 t18:Ity_I64 t19:Ity_I64 t20:Ity_V128 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V128 t25:Ity_I64 t26:Ity_I64 t27:Ity_I32 t28:Ity_I32 t29:Ity_I32 t30:Ity_I32 t31:Ity_I64 t32:Ity_I64 t33:Ity_I32 t34:Ity_I32 t35:Ity_I32 t36:Ity_I32 t37:Ity_I64 t38:Ity_I64 t39:Ity_V128 t40:Ity_I64 t41:Ity_I64 t42:Ity_V128 t43:Ity_V128 t44:Ity_V256 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128HIto64(t5)
   08 | t7 = V128to64(t5)
   09 | t8 = 64to32(t7)
   10 | t9 = 64HIto32(t7)
   11 | t10 = 64to32(t6)
   12 | t11 = 64HIto32(t6)
   13 | t12 = V128HIto64(t3)
   14 | t13 = V128to64(t3)
   15 | t14 = 64to32(t13)
   16 | t15 = 64HIto32(t13)
   17 | t16 = 64to32(t12)
   18 | t17 = 64HIto32(t12)
   19 | t18 = 32HLto64(t16,t14)
   20 | t19 = 32HLto64(t10,t8)
   21 | t20 = 64HLtoV128(t19,t18)
   22 | t21 = 32HLto64(t17,t15)
   23 | t22 = 32HLto64(t11,t9)
   24 | t23 = 64HLtoV128(t22,t21)
   25 | t24 = Sub32Fx4(0x00000000,t20,t23)
   26 | t25 = V128HIto64(t4)
   27 | t26 = V128to64(t4)
   28 | t27 = 64to32(t26)
   29 | t28 = 64HIto32(t26)
   30 | t29 = 64to32(t25)
   31 | t30 = 64HIto32(t25)
   32 | t31 = V128HIto64(t2)
   33 | t32 = V128to64(t2)
   34 | t33 = 64to32(t32)
   35 | t34 = 64HIto32(t32)
   36 | t35 = 64to32(t31)
   37 | t36 = 64HIto32(t31)
   38 | t37 = 32HLto64(t35,t33)
   39 | t38 = 32HLto64(t29,t27)
   40 | t39 = 64HLtoV128(t38,t37)
   41 | t40 = 32HLto64(t36,t34)
   42 | t41 = 32HLto64(t30,t28)
   43 | t42 = 64HLtoV128(t41,t40)
   44 | t43 = Sub32Fx4(0x00000000,t39,t42)
   45 | t44 = V128HLtoV256(t43,t24)
   46 | PUT(ymm1) = t44
   47 | PUT(pc) = 0x0000000000400004
   48 | ------ IMark(0x400004, 1, 0) ------
   49 | t45 = GET:I64(rsp)
   50 | t46 = LDle:I64(t45)
   51 | t47 = Add64(t45,0x0000000000000008)
   52 | PUT(rsp) = t47
   53 | t48 = Sub64(t47,0x0000000000000080)
   54 | ====== AbiHint(0xt48, 128, t46) ======
   NEXT: PUT(rip) = t46; Ijk_Ret
}
WARNING | 2018-04-08 20:47:01,603 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:01,701 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:01,775 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/hsubps_xmm_xmm/hsubps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V128 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64HIto32(t3)
   07 | t6 = 64to32(t2)
   08 | t7 = 64HIto32(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = V128to64(t1)
   11 | t10 = 64to32(t9)
   12 | t11 = 64HIto32(t9)
   13 | t12 = 64to32(t8)
   14 | t13 = 64HIto32(t8)
   15 | t14 = 32HLto64(t12,t10)
   16 | t15 = 32HLto64(t6,t4)
   17 | t16 = 64HLtoV128(t15,t14)
   18 | t17 = 32HLto64(t13,t11)
   19 | t18 = 32HLto64(t7,t5)
   20 | t19 = 64HLtoV128(t18,t17)
   21 | t20 = Sub32Fx4(0x00000000,t16,t19)
   22 | PUT(xmm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:48:45,666 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:45,760 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:45,782 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsd2sil_r32_xmm/vcvtsd2sil_r32_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F64toI32S(t3,t0)
   06 | t5 = 32Uto64(t4)
   07 | PUT(rbx) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:33,651 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:33,665 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:33,672 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vptest_xmm_xmm/vptest_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t0,t1)
   04 | t3 = XorV128(t1,ffffffffffffffffffffffffffffffff)
   05 | t4 = AndV128(t0,t3)
   06 | t5 = InterleaveHI64x2(t2,t2)
   07 | t6 = InterleaveLO64x2(t2,t2)
   08 | t7 = OrV128(t6,t5)
   09 | t8 = V128to64(t7)
   10 | t9 = InterleaveHI64x2(t4,t4)
   11 | t10 = InterleaveLO64x2(t4,t4)
   12 | t11 = OrV128(t10,t9)
   13 | t12 = V128to64(t11)
   14 | t13 = Sub64(0x0000000000000000,t8)
   15 | t14 = Or64(t13,t8)
   16 | t15 = Sar64(t14,0x3f)
   17 | t16 = Not64(t15)
   18 | t17 = Sub64(0x0000000000000000,t12)
   19 | t18 = Or64(t17,t12)
   20 | t19 = Sar64(t18,0x3f)
   21 | t20 = Not64(t19)
   22 | t21 = And64(t20,0x0000000000000001)
   23 | t22 = And64(t16,0x0000000000000040)
   24 | t23 = Or64(t22,t21)
   25 | PUT(cc_dep1) = t23
   26 | PUT(cc_op) = 0x0000000000000000
   27 | PUT(cc_dep2) = 0x0000000000000000
   28 | PUT(cc_ndep) = 0x0000000000000000
   29 | PUT(pc) = 0x0000000000400005
   30 | ------ IMark(0x400005, 1, 0) ------
   31 | t24 = GET:I64(rsp)
   32 | t25 = LDle:I64(t24)
   33 | t26 = Add64(t24,0x0000000000000008)
   34 | PUT(rsp) = t26
   35 | t27 = Sub64(t26,0x0000000000000080)
   36 | ====== AbiHint(0xt27, 128, t25) ======
   NEXT: PUT(rip) = t25; Ijk_Ret
}
WARNING | 2018-04-08 20:49:50,959 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:50,976 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:50,989 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqw_ymm_ymm_ymm/vpcmpeqw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpEQ16x16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:09,730 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:09,752 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:09,759 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxwd_xmm_xmm/vpmovsxwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = ShlN32x4(t1,0x10)
   04 | t3 = SarN32x4(t2,0x10)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:24,990 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:25,014 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:25,086 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orps_xmm_xmm/orps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = OrV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:11,570 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:11,589 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:11,624 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnae_rh/setnae_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000002,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:49,429 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:49,460 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:49,469 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtb_xmm_xmm_xmm/vpcmpgtb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpGT8Sx16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:30,245 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:30,274 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:30,284 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmulpd_xmm_xmm_xmm/vmulpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Mul64Fx2(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:06,774 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:06,795 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:06,823 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd132ps_xmm_xmm_xmm/vfnmadd132ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_F32 t18:Ity_I32 t19:Ity_F32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_I32 t24:Ity_F32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I32 t40:Ity_F32 t41:Ity_I32 t42:Ity_F32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I64 t46:Ity_I64 t47:Ity_I64 t48:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | t17 = NegF32(t16)
   19 | PUT(ymm1) = t17
   20 | t18 = 64HIto32(t5)
   21 | t19 = ReinterpI32asF32(t18)
   22 | t20 = NegF32(t19)
   23 | t21 = 64HIto32(t4)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = 64HIto32(t3)
   26 | t24 = ReinterpI32asF32(t23)
   27 | t25 = MAddF32(0x00000000,t24,t22,t20)
   28 | t26 = NegF32(t25)
   29 | PUT(260) = t26
   30 | t27 = 64to32(t8)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = NegF32(t28)
   33 | t30 = 64to32(t7)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t6)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = MAddF32(0x00000000,t33,t31,t29)
   38 | t35 = NegF32(t34)
   39 | PUT(264) = t35
   40 | t36 = 64HIto32(t8)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = NegF32(t37)
   43 | t39 = 64HIto32(t7)
   44 | t40 = ReinterpI32asF32(t39)
   45 | t41 = 64HIto32(t6)
   46 | t42 = ReinterpI32asF32(t41)
   47 | t43 = MAddF32(0x00000000,t42,t40,t38)
   48 | t44 = NegF32(t43)
   49 | PUT(268) = t44
   50 | PUT(272) = 0
   51 | PUT(pc) = 0x0000000000400005
   52 | ------ IMark(0x400005, 1, 0) ------
   53 | t45 = GET:I64(rsp)
   54 | t46 = LDle:I64(t45)
   55 | t47 = Add64(t45,0x0000000000000008)
   56 | PUT(rsp) = t47
   57 | t48 = Sub64(t47,0x0000000000000080)
   58 | ====== AbiHint(0xt48, 128, t46) ======
   NEXT: PUT(rip) = t46; Ijk_Ret
}
WARNING | 2018-04-08 20:48:18,134 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:18,162 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:18,179 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnl_rh/setnl_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000d,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,915 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:48,035 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:48,157 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovncw_r16_r16/cmovncw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000003,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:46,091 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:46,106 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:46,116 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastq_xmm_xmm/vpbroadcastq_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = 64HLtoV128(t0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:46:38,881 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:39,060 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:39,132 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovlq_r64_r64/cmovlq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000c,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:49,548 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:49,560 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:49,567 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddb_r8_rh/xaddb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(ah) = t0
   10 | PUT(bl) = t2
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:58,102 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:58,125 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:58,140 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaddwd_xmm_xmm_xmm/vpmaddwd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t1)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128HIto64(t0)
   07 | t6 = amd64g_calculate_mmx_pmaddwd(t3,t5):Ity_I64
   08 | t7 = amd64g_calculate_mmx_pmaddwd(t2,t4):Ity_I64
   09 | t8 = 64HLtoV128(t6,t7)
   10 | PUT(xmm1) = t8
   11 | PUT(272) = 0
   12 | PUT(pc) = 0x0000000000400004
   13 | ------ IMark(0x400004, 1, 0) ------
   14 | t9 = GET:I64(rsp)
   15 | t10 = LDle:I64(t9)
   16 | t11 = Add64(t9,0x0000000000000008)
   17 | PUT(rsp) = t11
   18 | t12 = Sub64(t11,0x0000000000000080)
   19 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:46:41,800 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:42,000 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:42,045 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnleq_r64_r64/cmovnleq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000f,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:12,263 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,354 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:12,398 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movsbw_r16_rh/movsbw_r16_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Sto16(t0)
   03 | PUT(bx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:02,925 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:02,994 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:03,049 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imulb_r8/imulb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(al)
   03 | PUT(cc_op) = 0x0000000000000031
   04 | t2 = 8Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = MullS8(t1,t0)
   09 | PUT(ax) = t4
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:54,984 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:54,996 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:55,005 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgq_r64_rax/xchgq_r64_rax.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = GET:I64(rbx)
   03 | PUT(rax) = t1
   04 | PUT(rbx) = t0
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:24,686 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:24,710 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:24,744 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrb_r8_cl/shrb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Uto64(t0)
   05 | t4 = Shr64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shr64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x0000000000000021,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(bl) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:26,335 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:26,363 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:26,381 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrlq_ymm_ymm_xmm/vpsrlq_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_I1 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN64x4(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000040)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:46,149 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:46,164 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:46,174 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vunpcklpd_xmm_xmm_xmm/vunpcklpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_V128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t0)
   04 | t3 = V128to64(t1)
   05 | t4 = 64HLtoV128(t3,t2)
   06 | PUT(xmm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:38,293 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:38,325 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:38,349 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddsubps_ymm_ymm_ymm/vaddsubps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I32 t13:Ity_I32 t14:Ity_V128 t15:Ity_V128 t16:Ity_I64 t17:Ity_I64 t18:Ity_I32 t19:Ity_I32 t20:Ity_I64 t21:Ity_I64 t22:Ity_I32 t23:Ity_I32 t24:Ity_I64 t25:Ity_I64 t26:Ity_V128 t27:Ity_I64 t28:Ity_I64 t29:Ity_V128 t30:Ity_V256 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Add32Fx8(0x00000000,t0,t1)
   04 | t3 = Sub32Fx8(0x00000000,t0,t1)
   05 | t4 = V256toV128_1(t2)
   06 | t5 = V256toV128_0(t2)
   07 | t6 = V128HIto64(t4)
   08 | t7 = V128to64(t4)
   09 | t8 = 64HIto32(t7)
   10 | t9 = 64HIto32(t6)
   11 | t10 = V128HIto64(t5)
   12 | t11 = V128to64(t5)
   13 | t12 = 64HIto32(t11)
   14 | t13 = 64HIto32(t10)
   15 | t14 = V256toV128_1(t3)
   16 | t15 = V256toV128_0(t3)
   17 | t16 = V128HIto64(t14)
   18 | t17 = V128to64(t14)
   19 | t18 = 64to32(t17)
   20 | t19 = 64to32(t16)
   21 | t20 = V128HIto64(t15)
   22 | t21 = V128to64(t15)
   23 | t22 = 64to32(t21)
   24 | t23 = 64to32(t20)
   25 | t24 = 32HLto64(t12,t22)
   26 | t25 = 32HLto64(t13,t23)
   27 | t26 = 64HLtoV128(t25,t24)
   28 | t27 = 32HLto64(t8,t18)
   29 | t28 = 32HLto64(t9,t19)
   30 | t29 = 64HLtoV128(t28,t27)
   31 | t30 = V128HLtoV256(t29,t26)
   32 | PUT(ymm1) = t30
   33 | PUT(pc) = 0x0000000000400004
   34 | ------ IMark(0x400004, 1, 0) ------
   35 | t31 = GET:I64(rsp)
   36 | t32 = LDle:I64(t31)
   37 | t33 = Add64(t31,0x0000000000000008)
   38 | PUT(rsp) = t33
   39 | t34 = Sub64(t33,0x0000000000000080)
   40 | ====== AbiHint(0xt34, 128, t32) ======
   NEXT: PUT(rip) = t32; Ijk_Ret
}
WARNING | 2018-04-08 20:48:01,167 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:01,188 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:01,227 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salb_r8_cl/salb_r8_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Uto64(t0)
   05 | t4 = Shl64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shl64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x000000000000001d,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(bl) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:34,620 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:34,646 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:34,681 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpackssdw_xmm_xmm_xmm/vpackssdw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QNarrowBin32Sto16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:33,107 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:33,130 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:33,140 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subsd_xmm_xmm/subsd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,462 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,558 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,577 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divss_xmm_xmm/divss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Div32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:13,032 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:13,061 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:13,070 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxwd_xmm_xmm/vpmovzxwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:02,653 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:02,668 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:02,678 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminsb_ymm_ymm_ymm/vpminsb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Min8Sx32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:05,490 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:05,546 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:05,562 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/incw_r16/incw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = Add16(t0,0x0001)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | PUT(cc_ndep) = t6
   09 | PUT(cc_op) = 0x0000000000000016
   10 | t7 = 16Uto64(t1)
   11 | PUT(cc_dep1) = t7
   12 | PUT(cc_dep2) = 0x0000000000000000
   13 | PUT(bx) = t1
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,411 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,578 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,641 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovbl_r32_r32/cmovbl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000002,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:48:16,353 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:16,372 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:16,381 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setne_r8/setne_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000005,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:11,684 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:11,696 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:11,705 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxwd_ymm_xmm/vpmovsxwd_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V256 t4:Ity_V256 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = InterleaveHI16x8(0,t0)
   04 | t3 = V128HLtoV256(t2,t1)
   05 | t4 = ShlN32x8(t3,0x10)
   06 | t5 = SarN32x8(t4,0x10)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:48:15,890 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:15,948 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:16,001 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnc_rh/setnc_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000003,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,697 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,807 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,881 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imulw_r16/imulw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I16 t6:Ity_I16 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(ax)
   03 | PUT(cc_op) = 0x0000000000000032
   04 | t2 = 16Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 16Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = MullS16(t1,t0)
   09 | t5 = 32HIto16(t4)
   10 | t6 = 32to16(t4)
   11 | PUT(dx) = t5
   12 | PUT(ax) = t6
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t7 = GET:I64(rsp)
   16 | t8 = LDle:I64(t7)
   17 | t9 = Add64(t7,0x0000000000000008)
   18 | PUT(rsp) = t9
   19 | t10 = Sub64(t9,0x0000000000000080)
   20 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:25,251 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:25,270 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:25,289 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlq_r64_one/shlq_r64_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Shl64(t0,0x01)
   03 | PUT(cc_op) = 0x0000000000000020
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | PUT(rbx) = t1
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t2 = GET:I64(rsp)
   10 | t3 = LDle:I64(t2)
   11 | t4 = Add64(t2,0x0000000000000008)
   12 | PUT(rsp) = t4
   13 | t5 = Sub64(t4,0x0000000000000080)
   14 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:46:47,041 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:47,168 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:47,285 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpl_r32_r32/cmovpl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000a,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:45,507 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:45,531 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:45,541 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastd_ymm_xmm/vpbroadcastd_ymm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32HLto64(t0,t0)
   03 | t2 = 64x4toV256(t1,t1,t1,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:14,836 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:14,858 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:14,867 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmuldq_xmm_xmm_xmm/vpmuldq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64to32(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128to64(t1)
   09 | t8 = 64to32(t7)
   10 | t9 = 64to32(t6)
   11 | t10 = MullS32(t4,t8)
   12 | t11 = MullS32(t5,t9)
   13 | t12 = 64HLtoV128(t11,t10)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:48:28,124 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:28,141 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:28,158 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrl_r32_cl/shrl_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I32 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I8(cl)
   04 | t3 = And8(t2,0x1f)
   05 | t4 = 32Uto64(t1)
   06 | t5 = Shr64(t4,t3)
   07 | t6 = Sub8(t3,0x01)
   08 | t7 = And8(t6,0x1f)
   09 | t8 = Shr64(t4,t7)
   10 | t9 = CmpNE8(t3,0x00)
   11 | t10 = GET:I64(cc_op)
   12 | t11 = ITE(t9,0x0000000000000023,t10)
   13 | PUT(cc_op) = t11
   14 | t12 = GET:I64(cc_dep1)
   15 | t13 = ITE(t9,t5,t12)
   16 | PUT(cc_dep1) = t13
   17 | t14 = GET:I64(cc_dep2)
   18 | t15 = ITE(t9,t8,t14)
   19 | PUT(cc_dep2) = t15
   20 | t16 = 64to32(t5)
   21 | t17 = 32Uto64(t16)
   22 | PUT(rbx) = t17
   23 | PUT(pc) = 0x0000000000400002
   24 | ------ IMark(0x400002, 1, 0) ------
   25 | t18 = GET:I64(rsp)
   26 | t19 = LDle:I64(t18)
   27 | t20 = Add64(t18,0x0000000000000008)
   28 | PUT(rsp) = t20
   29 | t21 = Sub64(t20,0x0000000000000080)
   30 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:49:17,276 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:17,297 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:17,320 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhsubpd_ymm_ymm_ymm/vhsubpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_V128 t11:Ity_V128 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_V128 t18:Ity_V128 t19:Ity_V128 t20:Ity_V256 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = V256toV128_1(t1)
   04 | t3 = V256toV128_0(t1)
   05 | t4 = V256toV128_1(t0)
   06 | t5 = V256toV128_0(t0)
   07 | t6 = V128to64(t5)
   08 | t7 = V128HIto64(t5)
   09 | t8 = V128to64(t3)
   10 | t9 = V128HIto64(t3)
   11 | t10 = 64HLtoV128(t6,t8)
   12 | t11 = 64HLtoV128(t7,t9)
   13 | t12 = Sub64Fx2(0x00000000,t10,t11)
   14 | t13 = V128to64(t4)
   15 | t14 = V128HIto64(t4)
   16 | t15 = V128to64(t2)
   17 | t16 = V128HIto64(t2)
   18 | t17 = 64HLtoV128(t13,t15)
   19 | t18 = 64HLtoV128(t14,t16)
   20 | t19 = Sub64Fx2(0x00000000,t17,t18)
   21 | t20 = V128HLtoV256(t19,t12)
   22 | PUT(ymm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:47:55,741 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:55,760 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:55,799 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rolq_r64_cl/rolq_r64_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x3f)
   04 | t3 = Sub8(0x40,t2)
   05 | t4 = Shr64(t0,t3)
   06 | t5 = Shl64(t0,t2)
   07 | t6 = Or64(t5,t4)
   08 | t7 = GET:I64(cc_op)
   09 | t8 = GET:I64(cc_dep1)
   10 | t9 = GET:I64(cc_dep2)
   11 | t10 = GET:I64(cc_ndep)
   12 | t11 = amd64g_calculate_rflags_all(t7,t8,t9,t10):Ity_I64
   13 | t12 = CmpNE8(t2,0x00)
   14 | t13 = ITE(t12,0x0000000000000028,t7)
   15 | PUT(cc_op) = t13
   16 | t14 = ITE(t12,t6,t8)
   17 | PUT(cc_dep1) = t14
   18 | t15 = ITE(t12,0x0000000000000000,t9)
   19 | PUT(cc_dep2) = t15
   20 | t16 = ITE(t12,t11,t10)
   21 | PUT(cc_ndep) = t16
   22 | PUT(rbx) = t6
   23 | PUT(pc) = 0x0000000000400003
   24 | ------ IMark(0x400003, 1, 0) ------
   25 | t17 = GET:I64(rsp)
   26 | t18 = LDle:I64(t17)
   27 | t19 = Add64(t17,0x0000000000000008)
   28 | PUT(rsp) = t19
   29 | t20 = Sub64(t19,0x0000000000000080)
   30 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:46:44,452 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:44,741 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:44,829 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnpw_r16_r16/cmovnpw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000b,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:43,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:43,402 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:43,423 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vtestpd_ymm_ymm/vtestpd_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_V256 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_V128 t13:Ity_V128 t14:Ity_I64 t15:Ity_V128 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm1)
   03 | t2 = AndV256(t0,t1)
   04 | t3 = NotV256(t1)
   05 | t4 = AndV256(t0,t3)
   06 | t5 = V256toV128_1(t2)
   07 | t6 = V256toV128_0(t2)
   08 | t7 = V256toV128_1(t4)
   09 | t8 = V256toV128_0(t4)
   10 | t9 = OrV128(t5,t6)
   11 | t10 = OrV128(t7,t8)
   12 | t11 = InterleaveHI64x2(t9,t9)
   13 | t12 = InterleaveLO64x2(t9,t9)
   14 | t13 = OrV128(t12,t11)
   15 | t14 = V128to64(t13)
   16 | t15 = InterleaveHI64x2(t10,t10)
   17 | t16 = InterleaveLO64x2(t10,t10)
   18 | t17 = OrV128(t16,t15)
   19 | t18 = V128to64(t17)
   20 | t19 = Sar64(t14,0x3f)
   21 | t20 = Not64(t19)
   22 | t21 = Sar64(t18,0x3f)
   23 | t22 = Not64(t21)
   24 | t23 = And64(t22,0x0000000000000001)
   25 | t24 = And64(t20,0x0000000000000040)
   26 | t25 = Or64(t24,t23)
   27 | PUT(cc_dep1) = t25
   28 | PUT(cc_op) = 0x0000000000000000
   29 | PUT(cc_dep2) = 0x0000000000000000
   30 | PUT(cc_ndep) = 0x0000000000000000
   31 | PUT(pc) = 0x0000000000400005
   32 | ------ IMark(0x400005, 1, 0) ------
   33 | t26 = GET:I64(rsp)
   34 | t27 = LDle:I64(t26)
   35 | t28 = Add64(t26,0x0000000000000008)
   36 | PUT(rsp) = t28
   37 | t29 = Sub64(t28,0x0000000000000080)
   38 | ====== AbiHint(0xt29, 128, t27) ======
   NEXT: PUT(rip) = t27; Ijk_Ret
}
WARNING | 2018-04-08 20:47:36,285 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:36,327 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:36,364 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovsxdq_xmm_xmm/pmovsxdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I32 t5:Ity_I64 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128to64(t0)
   03 | t2 = 64to32(t1)
   04 | t3 = 32Sto64(t2)
   05 | t4 = 64HIto32(t1)
   06 | t5 = 32Sto64(t4)
   07 | t6 = 64HLtoV128(t5,t3)
   08 | PUT(xmm1) = t6
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:32,428 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:32,445 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:32,454 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubusw_xmm_xmm_xmm/vpsubusw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QSub16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:13,150 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:13,205 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,234 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movd_xmm_r32/movd_xmm_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32UtoV128(t1)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:59,733 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,756 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,852 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divq_r64/divq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I128 t4:Ity_I128 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rax)
   03 | t2 = GET:I64(rdx)
   04 | t3 = 64HLto128(t2,t1)
   05 | t4 = DivModU128to64(t3,t0)
   06 | t5 = 128to64(t4)
   07 | PUT(rax) = t5
   08 | t6 = 128HIto64(t4)
   09 | PUT(rdx) = t6
   10 | PUT(pc) = 0x0000000000400003
   11 | ------ IMark(0x400003, 1, 0) ------
   12 | t7 = GET:I64(rsp)
   13 | t8 = LDle:I64(t7)
   14 | t9 = Add64(t7,0x0000000000000008)
   15 | PUT(rsp) = t9
   16 | t10 = Sub64(t9,0x0000000000000080)
   17 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:23,639 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:23,658 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:23,703 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/packusdw_xmm_xmm/packusdw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QNarrowBin32Sto16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:53,162 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:53,185 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:53,200 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcrl_r32_one/rcrl_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_all(t2,t3,t4,t5):Ity_I64
   08 | t7 = 32Uto64(t1)
   09 | t8 = amd64g_calculate_RCR(t7,0x0000000000000001,t6,0x0000000000000004):Ity_I64
   10 | t9 = 32Uto64(t1)
   11 | t10 = amd64g_calculate_RCR(t9,0x0000000000000001,t6,0xfffffffffffffffc):Ity_I64
   12 | t11 = 64to32(t8)
   13 | PUT(cc_op) = 0x0000000000000000
   14 | PUT(cc_dep1) = t10
   15 | PUT(cc_dep2) = 0x0000000000000000
   16 | PUT(cc_ndep) = 0x0000000000000000
   17 | t12 = 32Uto64(t11)
   18 | PUT(rbx) = t12
   19 | PUT(pc) = 0x0000000000400002
   20 | ------ IMark(0x400002, 1, 0) ------
   21 | t13 = GET:I64(rsp)
   22 | t14 = LDle:I64(t13)
   23 | t15 = Add64(t13,0x0000000000000008)
   24 | PUT(rsp) = t15
   25 | t16 = Sub64(t15,0x0000000000000080)
   26 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:09,418 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:09,440 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:09,456 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxdq_ymm_xmm/vpmovsxdq_ymm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_V128 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_V256 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128HIto64(t0)
   03 | t2 = V128to64(t0)
   04 | t3 = 64to32(t2)
   05 | t4 = 64HIto32(t2)
   06 | t5 = 64to32(t1)
   07 | t6 = 64HIto32(t1)
   08 | t7 = 32Sto64(t3)
   09 | t8 = 32Sto64(t4)
   10 | t9 = 64HLtoV128(t8,t7)
   11 | t10 = 32Sto64(t5)
   12 | t11 = 32Sto64(t6)
   13 | t12 = 64HLtoV128(t11,t10)
   14 | t13 = V128HLtoV256(t12,t9)
   15 | PUT(ymm1) = t13
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t14 = GET:I64(rsp)
   19 | t15 = LDle:I64(t14)
   20 | t16 = Add64(t14,0x0000000000000008)
   21 | PUT(rsp) = t16
   22 | t17 = Sub64(t16,0x0000000000000080)
   23 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:49:36,170 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:36,212 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:36,228 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpackusdw_ymm_ymm_ymm/vpackusdw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = QNarrowBin32Sto16Ux8(t5,t3)
   08 | t7 = QNarrowBin32Sto16Ux8(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400005
   12 | ------ IMark(0x400005, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:29,715 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:29,728 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:29,735 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubq_ymm_ymm_ymm/vpsubq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Sub64x4(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:56,726 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:56,752 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:56,792 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphsubsw_ymm_ymm_ymm/vphsubsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_V128 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256to64_0(t0)
   04 | t3 = V256to64_1(t0)
   05 | t4 = V256to64_2(t0)
   06 | t5 = V256to64_3(t0)
   07 | t6 = V256to64_0(t1)
   08 | t7 = V256to64_1(t1)
   09 | t8 = V256to64_2(t1)
   10 | t9 = V256to64_3(t1)
   11 | t10 = CatOddLanes16x4(t3,t2)
   12 | t11 = CatEvenLanes16x4(t3,t2)
   13 | t12 = QSub16Sx4(t11,t10)
   14 | t13 = CatOddLanes16x4(t7,t6)
   15 | t14 = CatEvenLanes16x4(t7,t6)
   16 | t15 = QSub16Sx4(t14,t13)
   17 | t16 = 64HLtoV128(t15,t12)
   18 | t17 = CatOddLanes16x4(t5,t4)
   19 | t18 = CatEvenLanes16x4(t5,t4)
   20 | t19 = QSub16Sx4(t18,t17)
   21 | t20 = CatOddLanes16x4(t9,t8)
   22 | t21 = CatEvenLanes16x4(t9,t8)
   23 | t22 = QSub16Sx4(t21,t20)
   24 | t23 = 64HLtoV128(t22,t19)
   25 | t24 = V128HLtoV256(t23,t16)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:47:25,235 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:25,254 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:25,306 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddsw_xmm_xmm/paddsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QAdd16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:39,356 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:39,379 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:39,388 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmulhw_xmm_xmm/pmulhw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = MulHi16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:07,055 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:07,095 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:07,104 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/minpd_xmm_xmm/minpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min64Fx2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:21,786 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:21,846 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:21,876 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/negl_r32/negl_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Sub32(0x00000000,t1)
   04 | PUT(cc_op) = 0x0000000000000007
   05 | PUT(cc_dep1) = 0x0000000000000000
   06 | t3 = 32Uto64(t1)
   07 | PUT(cc_dep2) = t3
   08 | t4 = 32Uto64(t2)
   09 | PUT(rbx) = t4
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:50,924 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:51,077 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:51,127 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmpxchgb_r8_rh/cmpxchgb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I8 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I1 t14:Ity_I8 t15:Ity_I8 t16:Ity_I8 t17:Ity_I8 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = GET:I8(bh)
   03 | t2 = GET:I8(al)
   04 | PUT(cc_op) = 0x0000000000000005
   05 | t3 = 8Uto64(t2)
   06 | t4 = t3
   07 | PUT(cc_dep1) = t4
   08 | t5 = 8Uto64(t0)
   09 | t6 = t5
   10 | PUT(cc_dep2) = t6
   11 | t7 = 64to8(t6)
   12 | t8 = 64to8(t4)
   13 | t9 = CmpEQ8(t8,t7)
   14 | t10 = 1Uto64(t9)
   15 | t11 = t10
   16 | t12 = 64to1(t11)
   17 | t13 = t12
   18 | t14 = ITE(t13,t1,t0)
   19 | t15 = t14
   20 | t16 = ITE(t13,t2,t0)
   21 | t17 = t16
   22 | PUT(al) = t17
   23 | PUT(cl) = t15
   24 | PUT(pc) = 0x0000000000400003
   25 | ------ IMark(0x400003, 1, 0) ------
   26 | t18 = GET:I64(rsp)
   27 | t19 = LDle:I64(t18)
   28 | t20 = Add64(t18,0x0000000000000008)
   29 | PUT(rsp) = t20
   30 | t21 = Sub64(t20,0x0000000000000080)
   31 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:47:28,452 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,481 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,549 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddw_xmm_xmm/paddw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:26,600 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:26,614 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:26,627 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pand_xmm_xmm/pand_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,147 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,217 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,342 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnaew_r16_r16/cmovnaew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000002,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:25,724 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:25,755 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:25,802 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddusb_xmm_xmm/paddusb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = QAdd8Ux16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:59,819 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:59,884 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:59,930 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub213pd_xmm_xmm_xmm/vfmsub213pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_I64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t2)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = NegF64(t12)
   16 | t14 = V128HIto64(t0)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = V128HIto64(t1)
   19 | t17 = ReinterpI64asF64(t16)
   20 | t18 = MAddF64(0x00000000,t17,t15,t13)
   21 | PUT(264) = t18
   22 | PUT(272) = 0
   23 | PUT(pc) = 0x0000000000400005
   24 | ------ IMark(0x400005, 1, 0) ------
   25 | t19 = GET:I64(rsp)
   26 | t20 = LDle:I64(t19)
   27 | t21 = Add64(t19,0x0000000000000008)
   28 | PUT(rsp) = t21
   29 | t22 = Sub64(t21,0x0000000000000080)
   30 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:50:49,798 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:49,811 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:49,820 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xaddb_rh_rh/xaddb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bh) = t0
   10 | PUT(ah) = t2
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:35,398 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:35,422 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:35,455 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhwd_xmm_xmm_xmm/vpunpckhwd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveHI16x8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:18,005 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:18,035 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:18,057 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulw_r16/mulw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I16 t6:Ity_I16 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(ax)
   03 | PUT(cc_op) = 0x000000000000002e
   04 | t2 = 16Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 16Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = MullU16(t1,t0)
   09 | t5 = 32HIto16(t4)
   10 | t6 = 32to16(t4)
   11 | PUT(dx) = t5
   12 | PUT(ax) = t6
   13 | PUT(pc) = 0x0000000000400003
   14 | ------ IMark(0x400003, 1, 0) ------
   15 | t7 = GET:I64(rsp)
   16 | t8 = LDle:I64(t7)
   17 | t9 = Add64(t7,0x0000000000000008)
   18 | PUT(rsp) = t9
   19 | t10 = Sub64(t9,0x0000000000000080)
   20 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,147 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:33,357 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:33,447 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovew_r16_r16/cmovew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000004,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:49,217 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:49,243 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:49,277 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclb_rh_cl/rclb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I8 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I8 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = GET:I8(cl)
   09 | t8 = 8Uto64(t7)
   10 | t9 = amd64g_calculate_RCL(t6,t8,t5,0x0000000000000001):Ity_I64
   11 | t10 = 8Uto64(t0)
   12 | t11 = 8Uto64(t7)
   13 | t12 = amd64g_calculate_RCL(t10,t11,t5,0xffffffffffffffff):Ity_I64
   14 | t13 = 64to8(t9)
   15 | PUT(cc_op) = 0x0000000000000000
   16 | PUT(cc_dep1) = t12
   17 | PUT(cc_dep2) = 0x0000000000000000
   18 | PUT(cc_ndep) = 0x0000000000000000
   19 | PUT(ah) = t13
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:47:59,936 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:59,954 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:59,989 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorq_r64_cl/rorq_r64_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I8 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I1 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x3f)
   04 | t3 = Sub8(0x40,t2)
   05 | t4 = Shl64(t0,t3)
   06 | t5 = Shr64(t0,t2)
   07 | t6 = Or64(t5,t4)
   08 | t7 = GET:I64(cc_op)
   09 | t8 = GET:I64(cc_dep1)
   10 | t9 = GET:I64(cc_dep2)
   11 | t10 = GET:I64(cc_ndep)
   12 | t11 = amd64g_calculate_rflags_all(t7,t8,t9,t10):Ity_I64
   13 | t12 = CmpNE8(t2,0x00)
   14 | t13 = ITE(t12,0x000000000000002c,t7)
   15 | PUT(cc_op) = t13
   16 | t14 = ITE(t12,t6,t8)
   17 | PUT(cc_dep1) = t14
   18 | t15 = ITE(t12,0x0000000000000000,t9)
   19 | PUT(cc_dep2) = t15
   20 | t16 = ITE(t12,t11,t10)
   21 | PUT(cc_ndep) = t16
   22 | PUT(rbx) = t6
   23 | PUT(pc) = 0x0000000000400003
   24 | ------ IMark(0x400003, 1, 0) ------
   25 | t17 = GET:I64(rsp)
   26 | t18 = LDle:I64(t17)
   27 | t19 = Add64(t17,0x0000000000000008)
   28 | PUT(rsp) = t19
   29 | t20 = Sub64(t19,0x0000000000000080)
   30 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:47:09,490 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,528 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,577 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movlhps_xmm_xmm/movlhps_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | PUT(264) = t0
   03 | PUT(pc) = 0x0000000000400003
   04 | ------ IMark(0x400003, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:47:58,730 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:58,752 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:58,793 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rsqrtps_xmm_xmm/rsqrtps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = RSqrtEst32Fx4(t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400003
   05 | ------ IMark(0x400003, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:47,388 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:47,438 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:47,473 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpckhqdq_xmm_xmm/punpckhqdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveHI64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:51,325 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:51,345 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:51,381 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclb_r8_one/rclb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = amd64g_calculate_RCL(t6,0x0000000000000001,t5,0x0000000000000001):Ity_I64
   09 | t8 = 8Uto64(t0)
   10 | t9 = amd64g_calculate_RCL(t8,0x0000000000000001,t5,0xffffffffffffffff):Ity_I64
   11 | t10 = 64to8(t7)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t9
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(bl) = t10
   17 | PUT(pc) = 0x0000000000400002
   18 | ------ IMark(0x400002, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,120 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,170 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:56,242 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvttpd2dq_xmm_xmm/cvttpd2dq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_F64 t3:Ity_I64 t4:Ity_F64 t5:Ity_I32 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = V128to64(t0)
   03 | t2 = ReinterpI64asF64(t1)
   04 | t3 = V128HIto64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | PUT(268) = 0x00000000
   07 | PUT(264) = 0x00000000
   08 | t5 = F64toI32S(0x00000003,t4)
   09 | PUT(260) = t5
   10 | t6 = F64toI32S(0x00000003,t2)
   11 | PUT(ymm1) = t6
   12 | PUT(pc) = 0x0000000000400004
   13 | ------ IMark(0x400004, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:06,993 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:07,012 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:07,023 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd132sd_xmm_xmm_xmm/vfnmadd132sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = NegF64(t1)
   05 | t4 = MAddF64(0x00000000,t0,t2,t3)
   06 | t5 = NegF64(t4)
   07 | PUT(ymm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:22,098 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:22,115 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:22,165 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orb_rh_r8/orb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = Or8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(ah) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:20,622 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:20,639 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:20,647 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpslld_xmm_xmm_xmm/vpslld_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN32x4(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:49:59,832 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:59,855 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:59,870 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxsd_ymm_ymm_ymm/vpmaxsd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Max32Sx8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:04,192 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:04,244 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:04,275 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarb_rh_one/sarb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Sto64(t0)
   03 | t2 = Sar64(t1,0x01)
   04 | PUT(cc_op) = 0x0000000000000021
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(ah) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:31,090 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:31,321 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:31,423 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blsiq_r64_r64/blsiq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = Sub64(0x0000000000000000,t0)
   03 | t2 = And64(t1,t0)
   04 | PUT(rbx) = t2
   05 | PUT(cc_op) = 0x0000000000000038
   06 | PUT(cc_dep1) = t2
   07 | PUT(cc_dep2) = t0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t3 = GET:I64(rsp)
   11 | t4 = LDle:I64(t3)
   12 | t5 = Add64(t3,0x0000000000000008)
   13 | PUT(rsp) = t5
   14 | t6 = Sub64(t5,0x0000000000000080)
   15 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:24,665 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:24,697 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:24,786 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddd_xmm_xmm/paddd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:51,895 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:51,921 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:51,930 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpermd_ymm_ymm_ymm/vpermd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_V256 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = ShlN32x8(t0,0x1d)
   04 | t3 = ShrN32x8(t2,0x1d)
   05 | t4 = Perm32x8(t1,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:49:31,197 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:31,265 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:31,301 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovups_xmm_xmm/vmovups_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(272) = 0
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:07,379 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:07,399 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:07,433 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd132ss_xmm_xmm_xmm/vfnmadd132ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_F32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = NegF32(t1)
   05 | t4 = MAddF32(0x00000000,t0,t2,t3)
   06 | t5 = NegF32(t4)
   07 | PUT(ymm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:41,963 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:42,051 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:42,189 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnew_r16_r16/cmovnew_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000005,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:12,358 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:12,380 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:12,414 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub132ss_xmm_xmm_xmm/vfnmsub132ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = MAddF32(0x00000000,t0,t2,t1)
   05 | t4 = NegF32(t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:50:02,701 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:02,725 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:02,745 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminsb_xmm_xmm_xmm/vpminsb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min8Sx16(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:09,639 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:09,670 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:09,688 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setg_r8/setg_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000f,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:35,217 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:35,240 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:35,278 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpacksswb_xmm_xmm_xmm/vpacksswb_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QNarrowBin16Sto8Sx16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:30,885 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:30,904 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:30,911 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubsb_ymm_ymm_ymm/vpsubsb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QSub8Sx32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:40,915 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:40,932 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:40,941 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandnps_xmm_xmm_xmm/vandnps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = NotV128(t0)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = AndV128(t1,t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:38,751 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
Traceback (most recent call last):
  File "./instructions/vpvmpgtq_ymm_ymm_ymm/vpvmpgtq_ymm_ymm_ymm.gen.vex.py", line 2, in <module>
    proj = angr.Project('./instructions/vpvmpgtq_ymm_ymm_ymm/vpvmpgtq_ymm_ymm_ymm.o')
  File "/home/sdasgup3/.local/lib/python2.7/site-packages/angr/project.py", line 159, in __init__
    raise Exception("Not a valid binary file: %s" % repr(thing))
Exception: Not a valid binary file: './instructions/vpvmpgtq_ymm_ymm_ymm/vpvmpgtq_ymm_ymm_ymm.o'
WARNING | 2018-04-08 20:47:48,047 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:48,066 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:48,095 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpcklqdq_xmm_xmm/punpcklqdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveLO64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:56,788 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:56,799 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:56,804 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorps_xmm_xmm/xorps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = XorV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:49:24,643 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:24,661 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:24,671 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovmskpd_r32_ymm/vmovmskpd_r32_ymm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(260)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(268)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(276)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(284)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = Or32(t8,t11)
   14 | t13 = Or32(t2,t5)
   15 | t14 = Or32(t13,t12)
   16 | t15 = 32Uto64(t14)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400004
   19 | ------ IMark(0x400004, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:50:41,482 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:41,494 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:41,500 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsqrtss_xmm_xmm_xmm/vsqrtss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I32(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = SetV128lo32(t1,t0)
   04 | t3 = Sqrt32F0x4(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:38,223 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:38,274 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:38,284 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddd_ymm_ymm_ymm/vpaddd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Add32x8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:05,185 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:05,203 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:05,233 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpminud_ymm_ymm_ymm/vpminud_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Min32Ux8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:02,104 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:02,214 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:02,257 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/idivl_r32/idivl_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I64 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rax)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(rdx)
   06 | t5 = 64to32(t4)
   07 | t6 = 32HLto64(t5,t3)
   08 | t7 = DivModS64to32(t6,t1)
   09 | t8 = 64to32(t7)
   10 | t9 = 32Uto64(t8)
   11 | PUT(rax) = t9
   12 | t10 = 64HIto32(t7)
   13 | t11 = 32Uto64(t10)
   14 | PUT(rdx) = t11
   15 | PUT(pc) = 0x0000000000400002
   16 | ------ IMark(0x400002, 1, 0) ------
   17 | t12 = GET:I64(rsp)
   18 | t13 = LDle:I64(t12)
   19 | t14 = Add64(t12,0x0000000000000008)
   20 | PUT(rsp) = t14
   21 | t15 = Sub64(t14,0x0000000000000080)
   22 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:50:38,471 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:38,492 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:38,502 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckldq_ymm_ymm_ymm/vpunpckldq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveLO32x4(t5,t3)
   08 | t7 = InterleaveLO32x4(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:45,890 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:45,943 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:45,987 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/ptest_xmm_xmm/ptest_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = AndV128(t0,t1)
   04 | t3 = XorV128(t1,ffffffffffffffffffffffffffffffff)
   05 | t4 = AndV128(t0,t3)
   06 | t5 = InterleaveHI64x2(t2,t2)
   07 | t6 = InterleaveLO64x2(t2,t2)
   08 | t7 = OrV128(t6,t5)
   09 | t8 = V128to64(t7)
   10 | t9 = InterleaveHI64x2(t4,t4)
   11 | t10 = InterleaveLO64x2(t4,t4)
   12 | t11 = OrV128(t10,t9)
   13 | t12 = V128to64(t11)
   14 | t13 = Sub64(0x0000000000000000,t8)
   15 | t14 = Or64(t13,t8)
   16 | t15 = Sar64(t14,0x3f)
   17 | t16 = Not64(t15)
   18 | t17 = Sub64(0x0000000000000000,t12)
   19 | t18 = Or64(t17,t12)
   20 | t19 = Sar64(t18,0x3f)
   21 | t20 = Not64(t19)
   22 | t21 = And64(t20,0x0000000000000001)
   23 | t22 = And64(t16,0x0000000000000040)
   24 | t23 = Or64(t22,t21)
   25 | PUT(cc_dep1) = t23
   26 | PUT(cc_op) = 0x0000000000000000
   27 | PUT(cc_dep2) = 0x0000000000000000
   28 | PUT(cc_ndep) = 0x0000000000000000
   29 | PUT(pc) = 0x0000000000400005
   30 | ------ IMark(0x400005, 1, 0) ------
   31 | t24 = GET:I64(rsp)
   32 | t25 = LDle:I64(t24)
   33 | t26 = Add64(t24,0x0000000000000008)
   34 | PUT(rsp) = t26
   35 | t27 = Sub64(t26,0x0000000000000080)
   36 | ====== AbiHint(0xt27, 128, t25) ======
   NEXT: PUT(rip) = t25; Ijk_Ret
}
WARNING | 2018-04-08 20:50:44,334 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:44,363 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:44,373 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vucomiss_xmm_xmm/vucomiss_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F64 t3:Ity_F64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = GET:F32(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = F32toF64(t0)
   06 | t3 = F32toF64(t1)
   07 | t4 = CmpF64(t3,t2)
   08 | t5 = 32Uto64(t4)
   09 | t6 = And64(t5,0x0000000000000045)
   10 | PUT(cc_dep1) = t6
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t7 = GET:I64(rsp)
   14 | t8 = LDle:I64(t7)
   15 | t9 = Add64(t7,0x0000000000000008)
   16 | PUT(rsp) = t9
   17 | t10 = Sub64(t9,0x0000000000000080)
   18 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,228 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,337 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,429 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovngw_r16_r16/cmovngw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000e,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:53,482 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:53,523 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:53,562 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd231pd_xmm_xmm_xmm/vfmadd231pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_F64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V128HIto64(t0)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = V128HIto64(t2)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = V128HIto64(t1)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = MAddF64(0x00000000,t15,t13,t11)
   19 | PUT(264) = t16
   20 | PUT(272) = 0
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t17 = GET:I64(rsp)
   24 | t18 = LDle:I64(t17)
   25 | t19 = Add64(t17,0x0000000000000008)
   26 | PUT(rsp) = t19
   27 | t20 = Sub64(t19,0x0000000000000080)
   28 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:48:01,669 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:01,687 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:01,711 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/salb_rh_cl/salb_rh_cl.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I8 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 8Uto64(t0)
   05 | t4 = Shl64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shl64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x000000000000001d,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to8(t4)
   20 | PUT(ah) = t15
   21 | PUT(pc) = 0x0000000000400002
   22 | ------ IMark(0x400002, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:47:30,346 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:30,366 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:30,394 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pcmpeqd_xmm_xmm/pcmpeqd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = CmpEQ32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:31,855 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:32,077 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:32,205 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/bswap_r64/bswap_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Shl64(t0,0x08)
   03 | t2 = And64(t1,0xff00ff00ff00ff00)
   04 | t3 = And64(t0,0xff00ff00ff00ff00)
   05 | t4 = Shr64(t3,0x08)
   06 | t5 = Or64(t4,t2)
   07 | t6 = Shl64(t5,0x10)
   08 | t7 = And64(t6,0xffff0000ffff0000)
   09 | t8 = And64(t5,0xffff0000ffff0000)
   10 | t9 = Shr64(t8,0x10)
   11 | t10 = Or64(t9,t7)
   12 | t11 = Shl64(t10,0x20)
   13 | t12 = And64(t11,0xffffffff00000000)
   14 | t13 = And64(t10,0xffffffff00000000)
   15 | t14 = Shr64(t13,0x20)
   16 | t15 = Or64(t14,t12)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400003
   19 | ------ IMark(0x400003, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:47:15,429 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:15,467 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:15,495 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movsbw_r16_r8/movsbw_r16_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I8(cl)
   02 | t1 = 8Sto16(t0)
   03 | PUT(bx) = t1
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:50:17,600 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:17,616 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:17,637 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulhw_ymm_ymm_ymm/vpmulhw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = MulHi16Sx16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:17,524 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:17,580 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:17,617 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movzbl_r32_rh/movzbl_r32_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = 8Uto32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:32,895 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:33,103 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:33,215 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/bswap_r32/bswap_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = Shr32(t1,0x18)
   04 | t3 = And32(t2,0x000000ff)
   05 | t4 = Shr32(t1,0x08)
   06 | t5 = And32(t4,0x0000ff00)
   07 | t6 = Or32(t5,t3)
   08 | t7 = Shl32(t1,0x08)
   09 | t8 = And32(t7,0x00ff0000)
   10 | t9 = Or32(t8,t6)
   11 | t10 = Shl32(t1,0x18)
   12 | t11 = Or32(t10,t9)
   13 | t12 = 32Uto64(t11)
   14 | PUT(rbx) = t12
   15 | PUT(pc) = 0x0000000000400002
   16 | ------ IMark(0x400002, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:48:58,205 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:58,234 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:58,266 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub213ps_xmm_xmm_xmm/vfmaddsub213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | PUT(260) = t23
   27 | t24 = 64to32(t8)
   28 | t25 = ReinterpI32asF32(t24)
   29 | t26 = NegF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | PUT(264) = t31
   36 | t32 = 64HIto32(t8)
   37 | t33 = ReinterpI32asF32(t32)
   38 | t34 = 64HIto32(t7)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = 64HIto32(t6)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = MAddF32(0x00000000,t37,t35,t33)
   43 | PUT(268) = t38
   44 | PUT(272) = 0
   45 | PUT(pc) = 0x0000000000400005
   46 | ------ IMark(0x400005, 1, 0) ------
   47 | t39 = GET:I64(rsp)
   48 | t40 = LDle:I64(t39)
   49 | t41 = Add64(t39,0x0000000000000008)
   50 | PUT(rsp) = t41
   51 | t42 = Sub64(t41,0x0000000000000080)
   52 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:49:04,456 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:04,486 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:04,497 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd213pd_ymm_ymm_ymm/vfmsubadd213pd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_F64 t13:Ity_I64 t14:Ity_F64 t15:Ity_I64 t16:Ity_F64 t17:Ity_F64 t18:Ity_I64 t19:Ity_F64 t20:Ity_I64 t21:Ity_F64 t22:Ity_I64 t23:Ity_F64 t24:Ity_F64 t25:Ity_I64 t26:Ity_F64 t27:Ity_F64 t28:Ity_I64 t29:Ity_F64 t30:Ity_I64 t31:Ity_F64 t32:Ity_F64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64 t36:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t2)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V256to64_0(t0)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V256to64_0(t1)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V256to64_1(t2)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = NegF64(t11)
   15 | t13 = V256to64_1(t0)
   16 | t14 = ReinterpI64asF64(t13)
   17 | t15 = V256to64_1(t1)
   18 | t16 = ReinterpI64asF64(t15)
   19 | t17 = MAddF64(0x00000000,t16,t14,t12)
   20 | PUT(264) = t17
   21 | t18 = V256to64_2(t2)
   22 | t19 = ReinterpI64asF64(t18)
   23 | t20 = V256to64_2(t0)
   24 | t21 = ReinterpI64asF64(t20)
   25 | t22 = V256to64_2(t1)
   26 | t23 = ReinterpI64asF64(t22)
   27 | t24 = MAddF64(0x00000000,t23,t21,t19)
   28 | PUT(272) = t24
   29 | t25 = V256to64_3(t2)
   30 | t26 = ReinterpI64asF64(t25)
   31 | t27 = NegF64(t26)
   32 | t28 = V256to64_3(t0)
   33 | t29 = ReinterpI64asF64(t28)
   34 | t30 = V256to64_3(t1)
   35 | t31 = ReinterpI64asF64(t30)
   36 | t32 = MAddF64(0x00000000,t31,t29,t27)
   37 | PUT(280) = t32
   38 | PUT(pc) = 0x0000000000400005
   39 | ------ IMark(0x400005, 1, 0) ------
   40 | t33 = GET:I64(rsp)
   41 | t34 = LDle:I64(t33)
   42 | t35 = Add64(t33,0x0000000000000008)
   43 | PUT(rsp) = t35
   44 | t36 = Sub64(t35,0x0000000000000080)
   45 | ====== AbiHint(0xt36, 128, t34) ======
   NEXT: PUT(rip) = t34; Ijk_Ret
}
WARNING | 2018-04-08 20:49:55,552 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:55,572 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:55,583 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphsubd_xmm_xmm_xmm/vphsubd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = InterleaveHI32x2(t2,t3)
   08 | t7 = InterleaveLO32x2(t2,t3)
   09 | t8 = Sub32x2(t7,t6)
   10 | t9 = InterleaveHI32x2(t4,t5)
   11 | t10 = InterleaveLO32x2(t4,t5)
   12 | t11 = Sub32x2(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:18,994 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:19,053 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:19,081 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsadbw_ymm_ymm_ymm/vpsadbw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_V128 t20:Ity_V256 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = V128to64(t5)
   08 | t7 = V128HIto64(t5)
   09 | t8 = V128to64(t3)
   10 | t9 = V128HIto64(t3)
   11 | t10 = amd64g_calculate_mmx_psadbw(t6,t8):Ity_I64
   12 | t11 = amd64g_calculate_mmx_psadbw(t7,t9):Ity_I64
   13 | t12 = 64HLtoV128(t11,t10)
   14 | t13 = V128to64(t4)
   15 | t14 = V128HIto64(t4)
   16 | t15 = V128to64(t2)
   17 | t16 = V128HIto64(t2)
   18 | t17 = amd64g_calculate_mmx_psadbw(t13,t15):Ity_I64
   19 | t18 = amd64g_calculate_mmx_psadbw(t14,t16):Ity_I64
   20 | t19 = 64HLtoV128(t18,t17)
   21 | t20 = V128HLtoV256(t19,t12)
   22 | PUT(ymm1) = t20
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t21 = GET:I64(rsp)
   26 | t22 = LDle:I64(t21)
   27 | t23 = Add64(t21,0x0000000000000008)
   28 | PUT(rsp) = t23
   29 | t24 = Sub64(t23,0x0000000000000080)
   30 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:49:19,220 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:19,232 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:19,262 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vminps_xmm_xmm_xmm/vminps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Min32Fx4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:43,766 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:43,788 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:43,825 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtpd2ps_xmm_xmm/vcvtpd2ps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_F32 t9:Ity_F32 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128to64(t0)
   06 | t5 = ReinterpI64asF64(t4)
   07 | t6 = V128HIto64(t0)
   08 | t7 = ReinterpI64asF64(t6)
   09 | PUT(268) = 0x00000000
   10 | PUT(264) = 0x00000000
   11 | t8 = F64toF32(t3,t7)
   12 | PUT(260) = t8
   13 | t9 = F64toF32(t3,t5)
   14 | PUT(ymm1) = t9
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400004
   17 | ------ IMark(0x400004, 1, 0) ------
   18 | t10 = GET:I64(rsp)
   19 | t11 = LDle:I64(t10)
   20 | t12 = Add64(t10,0x0000000000000008)
   21 | PUT(rsp) = t12
   22 | t13 = Sub64(t12,0x0000000000000080)
   23 | ====== AbiHint(0xt13, 128, t11) ======
   NEXT: PUT(rip) = t11; Ijk_Ret
}
WARNING | 2018-04-08 20:47:42,855 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,881 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,921 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psllq_xmm_xmm/psllq_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN64x2(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000040)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:14,952 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:14,972 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:14,996 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmulhuw_xmm_xmm_xmm/vpmulhuw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = MulHi16Ux8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:57,856 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:57,882 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:57,906 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rorl_r32_cl/rorl_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I8 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I1 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I8(cl)
   04 | t3 = And8(t2,0x1f)
   05 | t4 = And8(t3,0x1f)
   06 | t5 = Sub8(0x20,t4)
   07 | t6 = Shl32(t1,t5)
   08 | t7 = Shr32(t1,t4)
   09 | t8 = Or32(t7,t6)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = GET:I64(cc_dep1)
   12 | t11 = GET:I64(cc_dep2)
   13 | t12 = GET:I64(cc_ndep)
   14 | t13 = amd64g_calculate_rflags_all(t9,t10,t11,t12):Ity_I64
   15 | t14 = CmpNE8(t3,0x00)
   16 | t15 = ITE(t14,0x000000000000002b,t9)
   17 | PUT(cc_op) = t15
   18 | t16 = 32Uto64(t8)
   19 | t17 = ITE(t14,t16,t10)
   20 | PUT(cc_dep1) = t17
   21 | t18 = ITE(t14,0x0000000000000000,t11)
   22 | PUT(cc_dep2) = t18
   23 | t19 = ITE(t14,t13,t12)
   24 | PUT(cc_ndep) = t19
   25 | t20 = 32Uto64(t8)
   26 | PUT(rbx) = t20
   27 | PUT(pc) = 0x0000000000400002
   28 | ------ IMark(0x400002, 1, 0) ------
   29 | t21 = GET:I64(rsp)
   30 | t22 = LDle:I64(t21)
   31 | t23 = Add64(t21,0x0000000000000008)
   32 | PUT(rsp) = t23
   33 | t24 = Sub64(t23,0x0000000000000080)
   34 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:47:12,889 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:12,912 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,000 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movl_r32_r32/movl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Uto64(t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:01,335 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:01,418 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:01,494 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/idivb_r8/idivb_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I16 t5:Ity_I32 t6:Ity_I64 t7:Ity_I32 t8:Ity_I16 t9:Ity_I8 t10:Ity_I32 t11:Ity_I16 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I16(ax)
   03 | t2 = 16Sto32(t1)
   04 | t3 = 32Sto64(t2)
   05 | t4 = 8Sto16(t0)
   06 | t5 = 16Sto32(t4)
   07 | t6 = DivModS64to32(t3,t5)
   08 | t7 = 64to32(t6)
   09 | t8 = 32to16(t7)
   10 | t9 = 16to8(t8)
   11 | PUT(al) = t9
   12 | t10 = 64HIto32(t6)
   13 | t11 = 32to16(t10)
   14 | t12 = 16to8(t11)
   15 | PUT(ah) = t12
   16 | PUT(pc) = 0x0000000000400002
   17 | ------ IMark(0x400002, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:08,443 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:08,463 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:08,511 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovsxbq_ymm_xmm/vpmovsxbq_ymm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I16 t2:Ity_I8 t3:Ity_I64 t4:Ity_I16 t5:Ity_I8 t6:Ity_I64 t7:Ity_V128 t8:Ity_I16 t9:Ity_I8 t10:Ity_I64 t11:Ity_I16 t12:Ity_I8 t13:Ity_I64 t14:Ity_V128 t15:Ity_V256 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to16(t0)
   03 | t2 = 16to8(t1)
   04 | t3 = 8Sto64(t2)
   05 | t4 = 32to16(t0)
   06 | t5 = 16HIto8(t4)
   07 | t6 = 8Sto64(t5)
   08 | t7 = 64HLtoV128(t6,t3)
   09 | t8 = 32HIto16(t0)
   10 | t9 = 16to8(t8)
   11 | t10 = 8Sto64(t9)
   12 | t11 = 32HIto16(t0)
   13 | t12 = 16HIto8(t11)
   14 | t13 = 8Sto64(t12)
   15 | t14 = 64HLtoV128(t13,t10)
   16 | t15 = V128HLtoV256(t14,t7)
   17 | PUT(ymm1) = t15
   18 | PUT(pc) = 0x0000000000400005
   19 | ------ IMark(0x400005, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,974 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,050 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,135 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/decw_r16/decw_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = Sub16(t0,0x0001)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | PUT(cc_ndep) = t6
   09 | PUT(cc_op) = 0x000000000000001a
   10 | t7 = 16Uto64(t1)
   11 | PUT(cc_dep1) = t7
   12 | PUT(cc_dep2) = 0x0000000000000000
   13 | PUT(bx) = t1
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t8 = GET:I64(rsp)
   17 | t9 = LDle:I64(t8)
   18 | t10 = Add64(t8,0x0000000000000008)
   19 | PUT(rsp) = t10
   20 | t11 = Sub64(t10,0x0000000000000080)
   21 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:48:54,572 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:54,612 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:54,649 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd231ps_ymm_ymm_ymm/vfmadd231ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_F32 t43:Ity_I32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_I32 t55:Ity_F32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_I32 t60:Ity_F32 t61:Ity_I32 t62:Ity_F32 t63:Ity_F32 t64:Ity_I32 t65:Ity_F32 t66:Ity_I32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_F32 t71:Ity_I64 t72:Ity_I64 t73:Ity_I64 t74:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t0)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t0)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t0)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t0)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | PUT(ymm1) = t21
   24 | t22 = 64HIto32(t5)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = 64HIto32(t4)
   27 | t25 = ReinterpI32asF32(t24)
   28 | t26 = 64HIto32(t3)
   29 | t27 = ReinterpI32asF32(t26)
   30 | t28 = MAddF32(0x00000000,t27,t25,t23)
   31 | PUT(260) = t28
   32 | t29 = 64to32(t8)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = 64to32(t7)
   35 | t32 = ReinterpI32asF32(t31)
   36 | t33 = 64to32(t6)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = MAddF32(0x00000000,t34,t32,t30)
   39 | PUT(264) = t35
   40 | t36 = 64HIto32(t8)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = 64HIto32(t7)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = 64HIto32(t6)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = MAddF32(0x00000000,t41,t39,t37)
   47 | PUT(268) = t42
   48 | t43 = 64to32(t11)
   49 | t44 = ReinterpI32asF32(t43)
   50 | t45 = 64to32(t10)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = 64to32(t9)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = MAddF32(0x00000000,t48,t46,t44)
   55 | PUT(272) = t49
   56 | t50 = 64HIto32(t11)
   57 | t51 = ReinterpI32asF32(t50)
   58 | t52 = 64HIto32(t10)
   59 | t53 = ReinterpI32asF32(t52)
   60 | t54 = 64HIto32(t9)
   61 | t55 = ReinterpI32asF32(t54)
   62 | t56 = MAddF32(0x00000000,t55,t53,t51)
   63 | PUT(276) = t56
   64 | t57 = 64to32(t14)
   65 | t58 = ReinterpI32asF32(t57)
   66 | t59 = 64to32(t13)
   67 | t60 = ReinterpI32asF32(t59)
   68 | t61 = 64to32(t12)
   69 | t62 = ReinterpI32asF32(t61)
   70 | t63 = MAddF32(0x00000000,t62,t60,t58)
   71 | PUT(280) = t63
   72 | t64 = 64HIto32(t14)
   73 | t65 = ReinterpI32asF32(t64)
   74 | t66 = 64HIto32(t13)
   75 | t67 = ReinterpI32asF32(t66)
   76 | t68 = 64HIto32(t12)
   77 | t69 = ReinterpI32asF32(t68)
   78 | t70 = MAddF32(0x00000000,t69,t67,t65)
   79 | PUT(284) = t70
   80 | PUT(pc) = 0x0000000000400005
   81 | ------ IMark(0x400005, 1, 0) ------
   82 | t71 = GET:I64(rsp)
   83 | t72 = LDle:I64(t71)
   84 | t73 = Add64(t71,0x0000000000000008)
   85 | PUT(rsp) = t73
   86 | t74 = Sub64(t73,0x0000000000000080)
   87 | ====== AbiHint(0xt74, 128, t72) ======
   NEXT: PUT(rip) = t72; Ijk_Ret
}
WARNING | 2018-04-08 20:49:01,515 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:01,542 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:01,556 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub231pd_xmm_xmm_xmm/vfmsub231pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_F64 t8:Ity_I64 t9:Ity_F64 t10:Ity_F64 t11:Ity_I64 t12:Ity_F64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_I64 t17:Ity_F64 t18:Ity_F64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = NegF64(t4)
   07 | t6 = V128to64(t2)
   08 | t7 = ReinterpI64asF64(t6)
   09 | t8 = V128to64(t1)
   10 | t9 = ReinterpI64asF64(t8)
   11 | t10 = MAddF64(0x00000000,t9,t7,t5)
   12 | PUT(ymm1) = t10
   13 | t11 = V128HIto64(t0)
   14 | t12 = ReinterpI64asF64(t11)
   15 | t13 = NegF64(t12)
   16 | t14 = V128HIto64(t2)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = V128HIto64(t1)
   19 | t17 = ReinterpI64asF64(t16)
   20 | t18 = MAddF64(0x00000000,t17,t15,t13)
   21 | PUT(264) = t18
   22 | PUT(272) = 0
   23 | PUT(pc) = 0x0000000000400005
   24 | ------ IMark(0x400005, 1, 0) ------
   25 | t19 = GET:I64(rsp)
   26 | t20 = LDle:I64(t19)
   27 | t21 = Add64(t19,0x0000000000000008)
   28 | PUT(rsp) = t21
   29 | t22 = Sub64(t21,0x0000000000000080)
   30 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:49:41,167 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:41,192 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:41,218 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddw_xmm_xmm_xmm/vpaddw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add16x8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:04,626 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:04,685 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:04,741 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/imulw_r16_r16/imulw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | PUT(cc_op) = 0x0000000000000032
   04 | t2 = 16Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 16Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = Mul16(t1,t0)
   09 | PUT(bx) = t4
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:59,107 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:59,123 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:59,150 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rsqrtss_xmm_xmm/rsqrtss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I32 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:I32(ymm2)
   03 | t2 = SetV128lo32(t0,t1)
   04 | t3 = RSqrtEst32F0x4(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:38,917 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:38,939 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:38,957 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandnpd_xmm_xmm_xmm/vandnpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = NotV128(t0)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = AndV128(t1,t2)
   05 | PUT(xmm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400004
   08 | ------ IMark(0x400004, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:06,355 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:06,376 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:06,387 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovmskb_r64_xmm/vpmovmskb_r64_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GetMSBs8x16(t0)
   03 | t2 = 16Uto32(t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:26,761 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:26,780 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:26,788 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsraw_ymm_ymm_xmm/vpsraw_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_V256 t5:Ity_I1 t6:Ity_V256 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = SarN16x16(t1,0x0f)
   05 | t4 = SarN16x16(t1,t2)
   06 | t5 = CmpLT64U(t0,0x0000000000000010)
   07 | t6 = ITE(t5,t4,t3)
   08 | PUT(ymm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:47:20,770 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:20,840 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:20,873 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/notq_r64/notq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = Not64(t0)
   03 | PUT(rbx) = t1
   04 | PUT(pc) = 0x0000000000400003
   05 | ------ IMark(0x400003, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:19,542 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:19,564 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:19,621 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setns_rh/setns_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000009,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:24,916 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:24,932 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:24,940 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsraw_xmm_xmm_xmm/vpsraw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_V128 t5:Ity_I1 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = 64to8(t0)
   04 | t3 = SarN16x8(t1,0x0f)
   05 | t4 = SarN16x8(t1,t2)
   06 | t5 = CmpLT64U(t0,0x0000000000000010)
   07 | t6 = ITE(t5,t4,t3)
   08 | PUT(xmm1) = t6
   09 | PUT(272) = 0
   10 | PUT(pc) = 0x0000000000400004
   11 | ------ IMark(0x400004, 1, 0) ------
   12 | t7 = GET:I64(rsp)
   13 | t8 = LDle:I64(t7)
   14 | t9 = Add64(t7,0x0000000000000008)
   15 | PUT(rsp) = t9
   16 | t10 = Sub64(t9,0x0000000000000080)
   17 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:40,962 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:41,135 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:41,228 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovngl_r32_r32/cmovngl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000e,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:50:20,283 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:20,295 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:20,302 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsadbw_xmm_xmm_xmm/vpsadbw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t1)
   04 | t3 = V128HIto64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128HIto64(t0)
   07 | t6 = amd64g_calculate_mmx_psadbw(t2,t4):Ity_I64
   08 | t7 = amd64g_calculate_mmx_psadbw(t3,t5):Ity_I64
   09 | t8 = 64HLtoV128(t7,t6)
   10 | PUT(xmm1) = t8
   11 | PUT(272) = 0
   12 | PUT(pc) = 0x0000000000400004
   13 | ------ IMark(0x400004, 1, 0) ------
   14 | t9 = GET:I64(rsp)
   15 | t10 = LDle:I64(t9)
   16 | t11 = Add64(t9,0x0000000000000008)
   17 | PUT(rsp) = t11
   18 | t12 = Sub64(t11,0x0000000000000080)
   19 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:36,632 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:36,672 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:36,717 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pminsw_xmm_xmm/pminsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Min16Sx8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:28,668 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:28,713 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:28,733 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsubd_ymm_ymm_ymm/vpsubd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Sub32x8(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:27,214 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:27,420 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:27,585 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andnpd_xmm_xmm/andnpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = NotV128(t1)
   04 | t3 = AndV128(t2,t0)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:52,846 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:52,956 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:53,054 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtps2pd_xmm_xmm/cvtps2pd_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F64 t3:Ity_F64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = GET:F32(292)
   03 | t2 = F32toF64(t1)
   04 | PUT(264) = t2
   05 | t3 = F32toF64(t0)
   06 | PUT(ymm1) = t3
   07 | PUT(pc) = 0x0000000000400003
   08 | ------ IMark(0x400003, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:19,649 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:19,669 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:19,710 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setpo_r8/setpo_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000b,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:16,210 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:16,260 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:16,301 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub231sd_xmm_xmm_xmm/vfnmsub231sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = MAddF64(0x00000000,t1,t2,t0)
   05 | t4 = NegF64(t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:17,974 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:18,019 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:18,082 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulq_r64/mulq_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = GET:I64(rax)
   03 | PUT(cc_op) = 0x0000000000000030
   04 | PUT(cc_dep1) = t1
   05 | PUT(cc_dep2) = t0
   06 | t2 = MullU64(t1,t0)
   07 | t3 = 128HIto64(t2)
   08 | t4 = 128to64(t2)
   09 | PUT(rdx) = t3
   10 | PUT(rax) = t4
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t5 = GET:I64(rsp)
   14 | t6 = LDle:I64(t5)
   15 | t7 = Add64(t5,0x0000000000000008)
   16 | PUT(rsp) = t7
   17 | t8 = Sub64(t7,0x0000000000000080)
   18 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:07,553 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:07,578 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:07,606 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setbe_r8/setbe_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000006,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,035 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,254 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,436 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovbeq_r64_r64/cmovbeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000006,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:55,061 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:55,077 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:55,130 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/roll_r32_cl/roll_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I8 t3:Ity_I8 t4:Ity_I8 t5:Ity_I8 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I1 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I8(cl)
   04 | t3 = And8(t2,0x1f)
   05 | t4 = And8(t3,0x1f)
   06 | t5 = Sub8(0x20,t4)
   07 | t6 = Shr32(t1,t5)
   08 | t7 = Shl32(t1,t4)
   09 | t8 = Or32(t7,t6)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = GET:I64(cc_dep1)
   12 | t11 = GET:I64(cc_dep2)
   13 | t12 = GET:I64(cc_ndep)
   14 | t13 = amd64g_calculate_rflags_all(t9,t10,t11,t12):Ity_I64
   15 | t14 = CmpNE8(t3,0x00)
   16 | t15 = ITE(t14,0x0000000000000027,t9)
   17 | PUT(cc_op) = t15
   18 | t16 = 32Uto64(t8)
   19 | t17 = ITE(t14,t16,t10)
   20 | PUT(cc_dep1) = t17
   21 | t18 = ITE(t14,0x0000000000000000,t11)
   22 | PUT(cc_dep2) = t18
   23 | t19 = ITE(t14,t13,t12)
   24 | PUT(cc_ndep) = t19
   25 | t20 = 32Uto64(t8)
   26 | PUT(rbx) = t20
   27 | PUT(pc) = 0x0000000000400002
   28 | ------ IMark(0x400002, 1, 0) ------
   29 | t21 = GET:I64(rsp)
   30 | t22 = LDle:I64(t21)
   31 | t23 = Add64(t21,0x0000000000000008)
   32 | PUT(rsp) = t23
   33 | t24 = Sub64(t23,0x0000000000000080)
   34 | ====== AbiHint(0xt24, 128, t22) ======
   NEXT: PUT(rip) = t22; Ijk_Ret
}
WARNING | 2018-04-08 20:49:44,659 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:44,678 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:44,686 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpblendvb_ymm_ymm_ymm_ymm/vpblendvb_ymm_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V256 t8:Ity_V256 t9:Ity_V256 t10:Ity_V256 t11:Ity_V256 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 6, 0) ------
   01 | t0 = GET:V256(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm4)
   04 | t3 = V256toV128_1(t2)
   05 | t4 = V256toV128_0(t2)
   06 | t5 = SarN8x16(t4,0x07)
   07 | t6 = SarN8x16(t3,0x07)
   08 | t7 = V128HLtoV256(t6,t5)
   09 | t8 = NotV256(t7)
   10 | t9 = AndV256(t1,t8)
   11 | t10 = AndV256(t0,t7)
   12 | t11 = OrV256(t10,t9)
   13 | PUT(ymm1) = t11
   14 | PUT(pc) = 0x0000000000400006
   15 | ------ IMark(0x400006, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:46:36,275 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:36,455 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:36,569 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovgel_r32_r32/cmovgel_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x000000000000000d,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:47:28,128 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:28,148 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:28,195 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pavgw_xmm_xmm/pavgw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Avg16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:17,178 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:17,218 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:17,263 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movupd_xmm_xmm/movupd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:59,622 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:59,646 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:59,668 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxsd_xmm_xmm_xmm/vpmaxsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max32Sx4(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:23,167 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:23,521 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:23,646 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addb_r8_rh/addb_r8_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = Add8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000001
   05 | t3 = 8Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 8Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bl) = t2
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:06,561 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:06,581 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:06,592 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sbbb_r8_r8/sbbb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Sub8(t0,t1)
   11 | t10 = Sub8(t9,t8)
   12 | PUT(cc_op) = 0x000000000000000d
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(bl) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,371 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,481 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,578 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovzw_r16_r16/cmovzw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000004,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:23,992 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:24,019 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:24,035 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovdqu_xmm_xmm/vmovdqu_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(272) = 0
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:48:08,220 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:08,239 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:08,275 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setc_rh/setc_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000002,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:42,231 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:42,251 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:42,260 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vandps_ymm_ymm_ymm/vandps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = AndV256(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:22,305 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:22,324 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:22,335 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shlb_r8_one/shlb_r8_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = 8Uto64(t0)
   03 | t2 = Shl64(t1,0x01)
   04 | PUT(cc_op) = 0x000000000000001d
   05 | PUT(cc_dep1) = t2
   06 | PUT(cc_dep2) = t1
   07 | t3 = 64to8(t2)
   08 | PUT(bl) = t3
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:09,659 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:09,723 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:09,779 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/lzcntl_r32_r32/lzcntl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I64 t7:Ity_I32 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I1 t12:Ity_I64 t13:Ity_I1 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Uto64(t1)
   04 | t3 = Shl64(t2,0x20)
   05 | t4 = Clz64(t3)
   06 | t5 = CmpEQ64(t3,0x0000000000000000)
   07 | t6 = ITE(t5,0x0000000000000020,t4)
   08 | t7 = 64to32(t6)
   09 | t8 = 32Uto64(t7)
   10 | PUT(rbx) = t8
   11 | t9 = 32Uto64(t1)
   12 | t10 = 32Uto64(t7)
   13 | t11 = CmpEQ64(t9,0x0000000000000000)
   14 | t12 = 1Uto64(t11)
   15 | t13 = CmpEQ64(t10,0x0000000000000000)
   16 | t14 = 1Uto64(t13)
   17 | t15 = Shl64(t14,0x06)
   18 | t16 = Or64(t15,t12)
   19 | PUT(cc_op) = 0x0000000000000000
   20 | PUT(cc_dep2) = 0x0000000000000000
   21 | PUT(cc_ndep) = 0x0000000000000000
   22 | PUT(cc_dep1) = t16
   23 | PUT(pc) = 0x0000000000400004
   24 | ------ IMark(0x400004, 1, 0) ------
   25 | t17 = GET:I64(rsp)
   26 | t18 = LDle:I64(t17)
   27 | t19 = Add64(t17,0x0000000000000008)
   28 | PUT(rsp) = t19
   29 | t20 = Sub64(t19,0x0000000000000080)
   30 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:47:48,022 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:48,039 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:48,053 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/punpckldq_xmm_xmm/punpckldq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = InterleaveLO32x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:28,558 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:28,606 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:28,636 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrw_r16_cl/shrw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I16 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 16Uto64(t0)
   05 | t4 = Shr64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Shr64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x0000000000000022,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to16(t4)
   20 | PUT(bx) = t15
   21 | PUT(pc) = 0x0000000000400003
   22 | ------ IMark(0x400003, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:49:36,001 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:36,019 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:36,029 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpackusdw_xmm_xmm_xmm/vpackusdw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = QNarrowBin32Sto16Ux8(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:32,516 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:32,532 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:32,568 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testb_rh_r8/testb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(ah)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(pc) = 0x0000000000400002
   09 | ------ IMark(0x400002, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:19,871 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:19,928 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:19,945 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/nop/nop.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | PUT(pc) = 0x0000000000400001
   02 | ------ IMark(0x400001, 1, 0) ------
   03 | t0 = GET:I64(rsp)
   04 | t1 = LDle:I64(t0)
   05 | t2 = Add64(t0,0x0000000000000008)
   06 | PUT(rsp) = t2
   07 | t3 = Sub64(t2,0x0000000000000080)
   08 | ====== AbiHint(0xt3, 128, t1) ======
   NEXT: PUT(rip) = t1; Ijk_Ret
}
WARNING | 2018-04-08 20:49:50,507 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:50,546 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:50,564 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqw_xmm_xmm_xmm/vpcmpeqw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = CmpEQ16x8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:14,299 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:14,318 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:14,364 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnge_r8/setnge_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000c,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:17,348 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:17,369 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:17,379 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vhsubpd_xmm_xmm_xmm/vhsubpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = 64HLtoV128(t2,t4)
   08 | t7 = 64HLtoV128(t3,t5)
   09 | t8 = Sub64Fx2(0x00000000,t6,t7)
   10 | PUT(xmm1) = t8
   11 | PUT(272) = 0
   12 | PUT(pc) = 0x0000000000400004
   13 | ------ IMark(0x400004, 1, 0) ------
   14 | t9 = GET:I64(rsp)
   15 | t10 = LDle:I64(t9)
   16 | t11 = Add64(t9,0x0000000000000008)
   17 | PUT(rsp) = t11
   18 | t12 = Sub64(t11,0x0000000000000080)
   19 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:21,830 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:21,914 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:21,943 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orb_r8_r8/orb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = Or8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bl) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:42,147 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:42,163 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:42,178 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pslld_xmm_xmm/pslld_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_I1 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = ShlN32x4(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:59,427 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,464 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,524 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtsd2siq_r64_xmm/cvtsd2siq_r64_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = F64toI64S(t3,t0)
   06 | PUT(rbx) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:51,255 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:51,274 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:51,294 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd132pd_xmm_xmm_xmm/vfmadd132pd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_F64 t5:Ity_I64 t6:Ity_F64 t7:Ity_I64 t8:Ity_F64 t9:Ity_F64 t10:Ity_I64 t11:Ity_F64 t12:Ity_I64 t13:Ity_F64 t14:Ity_I64 t15:Ity_F64 t16:Ity_F64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = ReinterpI64asF64(t3)
   06 | t5 = V128to64(t2)
   07 | t6 = ReinterpI64asF64(t5)
   08 | t7 = V128to64(t0)
   09 | t8 = ReinterpI64asF64(t7)
   10 | t9 = MAddF64(0x00000000,t8,t6,t4)
   11 | PUT(ymm1) = t9
   12 | t10 = V128HIto64(t1)
   13 | t11 = ReinterpI64asF64(t10)
   14 | t12 = V128HIto64(t2)
   15 | t13 = ReinterpI64asF64(t12)
   16 | t14 = V128HIto64(t0)
   17 | t15 = ReinterpI64asF64(t14)
   18 | t16 = MAddF64(0x00000000,t15,t13,t11)
   19 | PUT(264) = t16
   20 | PUT(272) = 0
   21 | PUT(pc) = 0x0000000000400005
   22 | ------ IMark(0x400005, 1, 0) ------
   23 | t17 = GET:I64(rsp)
   24 | t18 = LDle:I64(t17)
   25 | t19 = Add64(t17,0x0000000000000008)
   26 | PUT(rsp) = t19
   27 | t20 = Sub64(t19,0x0000000000000080)
   28 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:48:33,887 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:33,919 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:33,949 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/testw_r16_r16/testw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = And16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000012
   05 | t3 = 16Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(pc) = 0x0000000000400003
   09 | ------ IMark(0x400003, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:50:35,451 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:35,468 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:35,489 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhqdq_xmm_xmm_xmm/vpunpckhqdq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = InterleaveHI64x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:42,115 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:42,126 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:42,133 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vsubps_xmm_xmm_xmm/vsubps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Sub32Fx4(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:17,608 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:17,632 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:17,647 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmuludq_xmm_xmm_xmm/vpmuludq_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t1)
   04 | t3 = V128to64(t1)
   05 | t4 = 64to32(t3)
   06 | t5 = 64to32(t2)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128to64(t0)
   09 | t8 = 64to32(t7)
   10 | t9 = 64to32(t6)
   11 | t10 = MullU32(t4,t8)
   12 | t11 = MullU32(t5,t9)
   13 | t12 = 64HLtoV128(t11,t10)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400004
   17 | ------ IMark(0x400004, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:46:33,883 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,007 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,094 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmc/cmc.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 1, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_rflags_all(t0,t1,t2,t3):Ity_I64
   06 | t5 = Xor64(t4,0x0000000000000001)
   07 | PUT(cc_op) = 0x0000000000000000
   08 | PUT(cc_dep2) = 0x0000000000000000
   09 | PUT(cc_dep1) = t5
   10 | PUT(cc_ndep) = 0x0000000000000000
   11 | PUT(pc) = 0x0000000000400001
   12 | ------ IMark(0x400001, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:50,821 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:50,972 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:51,057 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvtdq2ps_xmm_xmm/cvtdq2ps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_F64 t11:Ity_F32 t12:Ity_F64 t13:Ity_F32 t14:Ity_F64 t15:Ity_F32 t16:Ity_F64 t17:Ity_F32 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:I64(sseround)
   03 | t2 = And64(t1,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = V128HIto64(t0)
   06 | t5 = V128to64(t0)
   07 | t6 = 64to32(t5)
   08 | t7 = 64HIto32(t5)
   09 | t8 = 64to32(t4)
   10 | t9 = 64HIto32(t4)
   11 | t10 = I32StoF64(t9)
   12 | t11 = F64toF32(t3,t10)
   13 | PUT(268) = t11
   14 | t12 = I32StoF64(t8)
   15 | t13 = F64toF32(t3,t12)
   16 | PUT(264) = t13
   17 | t14 = I32StoF64(t7)
   18 | t15 = F64toF32(t3,t14)
   19 | PUT(260) = t15
   20 | t16 = I32StoF64(t6)
   21 | t17 = F64toF32(t3,t16)
   22 | PUT(ymm1) = t17
   23 | PUT(pc) = 0x0000000000400003
   24 | ------ IMark(0x400003, 1, 0) ------
   25 | t18 = GET:I64(rsp)
   26 | t19 = LDle:I64(t18)
   27 | t20 = Add64(t18,0x0000000000000008)
   28 | PUT(rsp) = t20
   29 | t21 = Sub64(t20,0x0000000000000080)
   30 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:50:25,776 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:25,800 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:25,821 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsrld_ymm_ymm_xmm/vpsrld_ymm_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I8 t3:Ity_V256 t4:Ity_I1 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm3)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = 64to8(t0)
   04 | t3 = ShrN32x8(t1,t2)
   05 | t4 = CmpLT64U(t0,0x0000000000000020)
   06 | t5 = ITE(t4,t3,0)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:56,863 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:56,979 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:57,050 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cvttss2siq_r64_xmm/cvttss2siq_r64_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = F32toF64(t0)
   03 | t2 = F64toI64S(0x00000003,t1)
   04 | PUT(rbx) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:36,463 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:36,477 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:36,486 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhdq_ymm_ymm_ymm/vpunpckhdq_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveHI32x4(t5,t3)
   08 | t7 = InterleaveHI32x4(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:24,864 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:24,930 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:24,959 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orb_rh_rh/orb_rh_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bh)
   03 | t2 = Or8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(ah) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:24,398 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:24,554 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:24,640 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andb_r8_r8/andb_r8_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bl)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bl) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:47:49,365 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:49,385 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:49,407 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rclb_rh_one/rclb_rh_one.o
IRSB {
   t0:Ity_I8 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I8 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I64(cc_op)
   03 | t2 = GET:I64(cc_dep1)
   04 | t3 = GET:I64(cc_dep2)
   05 | t4 = GET:I64(cc_ndep)
   06 | t5 = amd64g_calculate_rflags_all(t1,t2,t3,t4):Ity_I64
   07 | t6 = 8Uto64(t0)
   08 | t7 = amd64g_calculate_RCL(t6,0x0000000000000001,t5,0x0000000000000001):Ity_I64
   09 | t8 = 8Uto64(t0)
   10 | t9 = amd64g_calculate_RCL(t8,0x0000000000000001,t5,0xffffffffffffffff):Ity_I64
   11 | t10 = 64to8(t7)
   12 | PUT(cc_op) = 0x0000000000000000
   13 | PUT(cc_dep1) = t9
   14 | PUT(cc_dep2) = 0x0000000000000000
   15 | PUT(cc_ndep) = 0x0000000000000000
   16 | PUT(ah) = t10
   17 | PUT(pc) = 0x0000000000400002
   18 | ------ IMark(0x400002, 1, 0) ------
   19 | t11 = GET:I64(rsp)
   20 | t12 = LDle:I64(t11)
   21 | t13 = Add64(t11,0x0000000000000008)
   22 | PUT(rsp) = t13
   23 | t14 = Sub64(t13,0x0000000000000080)
   24 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:49:57,622 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:57,648 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:57,669 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaddubsw_ymm_ymm_ymm/vpmaddubsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_V128 t13:Ity_V128 t14:Ity_V128 t15:Ity_V128 t16:Ity_V128 t17:Ity_V128 t18:Ity_V128 t19:Ity_V128 t20:Ity_V128 t21:Ity_V128 t22:Ity_V128 t23:Ity_V128 t24:Ity_V256 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = SarN16x8(t5,0x08)
   08 | t7 = ShlN16x8(t5,0x08)
   09 | t8 = SarN16x8(t7,0x08)
   10 | t9 = ShrN16x8(t3,0x08)
   11 | t10 = ShlN16x8(t3,0x08)
   12 | t11 = ShrN16x8(t10,0x08)
   13 | t12 = Mul16x8(t8,t11)
   14 | t13 = Mul16x8(t6,t9)
   15 | t14 = QAdd16Sx8(t13,t12)
   16 | t15 = SarN16x8(t4,0x08)
   17 | t16 = ShlN16x8(t4,0x08)
   18 | t17 = SarN16x8(t16,0x08)
   19 | t18 = ShrN16x8(t2,0x08)
   20 | t19 = ShlN16x8(t2,0x08)
   21 | t20 = ShrN16x8(t19,0x08)
   22 | t21 = Mul16x8(t17,t20)
   23 | t22 = Mul16x8(t15,t18)
   24 | t23 = QAdd16Sx8(t22,t21)
   25 | t24 = V128HLtoV256(t23,t14)
   26 | PUT(ymm1) = t24
   27 | PUT(pc) = 0x0000000000400005
   28 | ------ IMark(0x400005, 1, 0) ------
   29 | t25 = GET:I64(rsp)
   30 | t26 = LDle:I64(t25)
   31 | t27 = Add64(t25,0x0000000000000008)
   32 | PUT(rsp) = t27
   33 | t28 = Sub64(t27,0x0000000000000080)
   34 | ====== AbiHint(0xt28, 128, t26) ======
   NEXT: PUT(rip) = t26; Ijk_Ret
}
WARNING | 2018-04-08 20:48:42,416 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:42,440 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:42,461 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vbroadcastsd_ymm_xmm/vbroadcastsd_ymm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V256 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = 64x4toV256(t0,t0,t0,t0)
   03 | PUT(ymm1) = t1
   04 | PUT(pc) = 0x0000000000400005
   05 | ------ IMark(0x400005, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:32,136 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:32,172 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:32,197 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaddubsw_xmm_xmm/pmaddubsw_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = SarN16x8(t1,0x08)
   04 | t3 = ShlN16x8(t1,0x08)
   05 | t4 = SarN16x8(t3,0x08)
   06 | t5 = ShrN16x8(t0,0x08)
   07 | t6 = ShlN16x8(t0,0x08)
   08 | t7 = ShrN16x8(t6,0x08)
   09 | t8 = Mul16x8(t4,t7)
   10 | t9 = Mul16x8(t2,t5)
   11 | t10 = QAdd16Sx8(t9,t8)
   12 | PUT(xmm1) = t10
   13 | PUT(pc) = 0x0000000000400005
   14 | ------ IMark(0x400005, 1, 0) ------
   15 | t11 = GET:I64(rsp)
   16 | t12 = LDle:I64(t11)
   17 | t13 = Add64(t11,0x0000000000000008)
   18 | PUT(rsp) = t13
   19 | t14 = Sub64(t13,0x0000000000000080)
   20 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:49:11,611 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:11,632 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:11,648 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub132ps_xmm_xmm_xmm/vfnmsub132ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t0)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t1)
   07 | t6 = V128HIto64(t0)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t1)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | t16 = NegF32(t15)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | t24 = NegF32(t23)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | t32 = NegF32(t31)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = 64HIto32(t7)
   40 | t36 = ReinterpI32asF32(t35)
   41 | t37 = 64HIto32(t6)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = MAddF32(0x00000000,t38,t36,t34)
   44 | t40 = NegF32(t39)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,101 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,296 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,422 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/btrq_r64_r64/btrq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I8 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rsp)
   03 | t2 = Sub64(t1,0x0000000000000120)
   04 | PUT(rsp) = t2
   05 | t3 = GET:I64(rbx)
   06 | STle(t2) = t3
   07 | t4 = And64(t0,0x000000000000003f)
   08 | t5 = Sar64(t4,0x03)
   09 | t6 = Add64(t2,t5)
   10 | t7 = And64(t4,0x0000000000000007)
   11 | t8 = 64to8(t7)
   12 | t9 = Shl8(0x01,t8)
   13 | t10 = LDle:I8(t6)
   14 | t11 = Not8(t9)
   15 | t12 = And8(t10,t11)
   16 | STle(t6) = t12
   17 | PUT(cc_op) = 0x0000000000000000
   18 | PUT(cc_dep2) = 0x0000000000000000
   19 | t13 = 8Uto64(t10)
   20 | t14 = Shr64(t13,t8)
   21 | t15 = And64(t14,0x0000000000000001)
   22 | PUT(cc_dep1) = t15
   23 | PUT(cc_ndep) = 0x0000000000000000
   24 | t16 = LDle:I64(t2)
   25 | PUT(rbx) = t16
   26 | t17 = Add64(t2,0x0000000000000120)
   27 | PUT(rsp) = t17
   28 | PUT(pc) = 0x0000000000400004
   29 | ------ IMark(0x400004, 1, 0) ------
   30 | t18 = LDle:I64(t17)
   31 | t19 = Add64(t17,0x0000000000000008)
   32 | PUT(rsp) = t19
   33 | t20 = Sub64(t19,0x0000000000000080)
   34 | ====== AbiHint(0xt20, 128, t18) ======
   NEXT: PUT(rip) = t18; Ijk_Ret
}
WARNING | 2018-04-08 20:47:43,242 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:43,261 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:43,306 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psrad_xmm_xmm/psrad_xmm_xmm.o
IRSB {
   t0:Ity_I64 t1:Ity_V128 t2:Ity_I8 t3:Ity_V128 t4:Ity_V128 t5:Ity_I1 t6:Ity_V128 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(ymm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = 64to8(t0)
   04 | t3 = SarN32x4(t1,0x1f)
   05 | t4 = SarN32x4(t1,t2)
   06 | t5 = CmpLT64U(t0,0x0000000000000020)
   07 | t6 = ITE(t5,t4,t3)
   08 | PUT(xmm1) = t6
   09 | PUT(pc) = 0x0000000000400004
   10 | ------ IMark(0x400004, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:34,301 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:34,372 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:34,397 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpunpckhbw_ymm_ymm_ymm/vpunpckhbw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V256 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = V256toV128_1(t0)
   04 | t3 = V256toV128_0(t0)
   05 | t4 = V256toV128_1(t1)
   06 | t5 = V256toV128_0(t1)
   07 | t6 = InterleaveHI8x16(t5,t3)
   08 | t7 = InterleaveHI8x16(t4,t2)
   09 | t8 = V128HLtoV256(t7,t6)
   10 | PUT(ymm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:36,977 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:37,001 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:37,065 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddsd_xmm_xmm_xmm/vaddsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Add64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:29,355 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:29,654 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:29,789 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blendvpd_xmm_xmm_xmm0/blendvpd_xmm_xmm_xmm0.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = GET:V128(xmm0)
   04 | t3 = SarN64x2(t2,0x3f)
   05 | t4 = NotV128(t3)
   06 | t5 = AndV128(t1,t4)
   07 | t6 = AndV128(t0,t3)
   08 | t7 = OrV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:49:08,588 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:08,605 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:08,647 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmadd213sd_xmm_xmm_xmm/vfnmadd213sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_F64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = NegF64(t2)
   05 | t4 = MAddF64(0x00000000,t1,t0,t3)
   06 | t5 = NegF64(t4)
   07 | PUT(ymm1) = t5
   08 | PUT(272) = 0
   09 | PUT(pc) = 0x0000000000400005
   10 | ------ IMark(0x400005, 1, 0) ------
   11 | t6 = GET:I64(rsp)
   12 | t7 = LDle:I64(t6)
   13 | t8 = Add64(t6,0x0000000000000008)
   14 | PUT(rsp) = t8
   15 | t9 = Sub64(t8,0x0000000000000080)
   16 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:41,072 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:41,141 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:41,233 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovngq_r64_r64/cmovngq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000e,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:47:27,582 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:27,616 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:27,665 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pblendvb_xmm_xmm_xmm0/pblendvb_xmm_xmm_xmm0.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = GET:V128(xmm0)
   04 | t3 = SarN8x16(t2,0x07)
   05 | t4 = NotV128(t3)
   06 | t5 = AndV128(t1,t4)
   07 | t6 = AndV128(t0,t3)
   08 | t7 = OrV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:50:56,424 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:56,437 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:56,444 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xorpd_xmm_xmm/xorpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = XorV128(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:36,966 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:36,983 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:37,042 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddpd_xmm_xmm_xmm/vaddpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Add64Fx2(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:52,724 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:52,736 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:52,743 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd132sd_xmm_xmm_xmm/vfmadd132sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = MAddF64(0x00000000,t0,t2,t1)
   05 | PUT(ymm1) = t3
   06 | PUT(272) = 0
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t4 = GET:I64(rsp)
   10 | t5 = LDle:I64(t4)
   11 | t6 = Add64(t4,0x0000000000000008)
   12 | PUT(rsp) = t6
   13 | t7 = Sub64(t6,0x0000000000000080)
   14 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:46,462 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:46,489 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:46,513 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsi2sdl_xmm_xmm_r32/vcvtsi2sdl_xmm_xmm_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_F64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = I32StoF64(t1)
   04 | PUT(ymm1) = t2
   05 | t3 = GET:I64(296)
   06 | PUT(264) = t3
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400004
   09 | ------ IMark(0x400004, 1, 0) ------
   10 | t4 = GET:I64(rsp)
   11 | t5 = LDle:I64(t4)
   12 | t6 = Add64(t4,0x0000000000000008)
   13 | PUT(rsp) = t6
   14 | t7 = Sub64(t6,0x0000000000000080)
   15 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:30,785 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:30,997 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:31,092 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/blendvps_xmm_xmm_xmm0/blendvps_xmm_xmm_xmm0.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_V128 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = GET:V128(xmm0)
   04 | t3 = SarN32x4(t2,0x1f)
   05 | t4 = NotV128(t3)
   06 | t5 = AndV128(t1,t4)
   07 | t6 = AndV128(t0,t3)
   08 | t7 = OrV128(t6,t5)
   09 | PUT(xmm1) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:47:23,407 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:23,461 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:23,501 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orw_r16_r16/orw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = Or16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000012
   05 | t3 = 16Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(bx) = t2
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:06,081 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:06,116 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:06,128 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsubadd231ps_ymm_ymm_ymm/vfmsubadd231ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_F32 t30:Ity_I32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_I32 t43:Ity_F32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_I32 t50:Ity_F32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_F32 t55:Ity_I32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_F32 t60:Ity_I32 t61:Ity_F32 t62:Ity_I32 t63:Ity_F32 t64:Ity_I32 t65:Ity_F32 t66:Ity_F32 t67:Ity_I32 t68:Ity_F32 t69:Ity_F32 t70:Ity_I32 t71:Ity_F32 t72:Ity_I32 t73:Ity_F32 t74:Ity_F32 t75:Ity_I64 t76:Ity_I64 t77:Ity_I64 t78:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t2)
   06 | t5 = V256to64_0(t0)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t2)
   09 | t8 = V256to64_1(t0)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t2)
   12 | t11 = V256to64_2(t0)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t2)
   15 | t14 = V256to64_3(t0)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | PUT(ymm1) = t21
   24 | t22 = 64HIto32(t5)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = NegF32(t23)
   27 | t25 = 64HIto32(t4)
   28 | t26 = ReinterpI32asF32(t25)
   29 | t27 = 64HIto32(t3)
   30 | t28 = ReinterpI32asF32(t27)
   31 | t29 = MAddF32(0x00000000,t28,t26,t24)
   32 | PUT(260) = t29
   33 | t30 = 64to32(t8)
   34 | t31 = ReinterpI32asF32(t30)
   35 | t32 = 64to32(t7)
   36 | t33 = ReinterpI32asF32(t32)
   37 | t34 = 64to32(t6)
   38 | t35 = ReinterpI32asF32(t34)
   39 | t36 = MAddF32(0x00000000,t35,t33,t31)
   40 | PUT(264) = t36
   41 | t37 = 64HIto32(t8)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = NegF32(t38)
   44 | t40 = 64HIto32(t7)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = 64HIto32(t6)
   47 | t43 = ReinterpI32asF32(t42)
   48 | t44 = MAddF32(0x00000000,t43,t41,t39)
   49 | PUT(268) = t44
   50 | t45 = 64to32(t11)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = 64to32(t10)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = 64to32(t9)
   55 | t50 = ReinterpI32asF32(t49)
   56 | t51 = MAddF32(0x00000000,t50,t48,t46)
   57 | PUT(272) = t51
   58 | t52 = 64HIto32(t11)
   59 | t53 = ReinterpI32asF32(t52)
   60 | t54 = NegF32(t53)
   61 | t55 = 64HIto32(t10)
   62 | t56 = ReinterpI32asF32(t55)
   63 | t57 = 64HIto32(t9)
   64 | t58 = ReinterpI32asF32(t57)
   65 | t59 = MAddF32(0x00000000,t58,t56,t54)
   66 | PUT(276) = t59
   67 | t60 = 64to32(t14)
   68 | t61 = ReinterpI32asF32(t60)
   69 | t62 = 64to32(t13)
   70 | t63 = ReinterpI32asF32(t62)
   71 | t64 = 64to32(t12)
   72 | t65 = ReinterpI32asF32(t64)
   73 | t66 = MAddF32(0x00000000,t65,t63,t61)
   74 | PUT(280) = t66
   75 | t67 = 64HIto32(t14)
   76 | t68 = ReinterpI32asF32(t67)
   77 | t69 = NegF32(t68)
   78 | t70 = 64HIto32(t13)
   79 | t71 = ReinterpI32asF32(t70)
   80 | t72 = 64HIto32(t12)
   81 | t73 = ReinterpI32asF32(t72)
   82 | t74 = MAddF32(0x00000000,t73,t71,t69)
   83 | PUT(284) = t74
   84 | PUT(pc) = 0x0000000000400005
   85 | ------ IMark(0x400005, 1, 0) ------
   86 | t75 = GET:I64(rsp)
   87 | t76 = LDle:I64(t75)
   88 | t77 = Add64(t75,0x0000000000000008)
   89 | PUT(rsp) = t77
   90 | t78 = Sub64(t77,0x0000000000000080)
   91 | ====== AbiHint(0xt78, 128, t76) ======
   NEXT: PUT(rip) = t76; Ijk_Ret
}
WARNING | 2018-04-08 20:49:02,571 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:02,583 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:02,594 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub231sd_xmm_xmm_xmm/vfmsub231sd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F64 t1:Ity_F64 t2:Ity_F64 t3:Ity_F64 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F64(ymm1)
   02 | t1 = GET:F64(ymm2)
   03 | t2 = GET:F64(ymm3)
   04 | t3 = NegF64(t0)
   05 | t4 = MAddF64(0x00000000,t1,t2,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:51,763 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:51,791 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:51,817 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcll_r32_one/rcll_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I32 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_all(t2,t3,t4,t5):Ity_I64
   08 | t7 = 32Uto64(t1)
   09 | t8 = amd64g_calculate_RCL(t7,0x0000000000000001,t6,0x0000000000000004):Ity_I64
   10 | t9 = 32Uto64(t1)
   11 | t10 = amd64g_calculate_RCL(t9,0x0000000000000001,t6,0xfffffffffffffffc):Ity_I64
   12 | t11 = 64to32(t8)
   13 | PUT(cc_op) = 0x0000000000000000
   14 | PUT(cc_dep1) = t10
   15 | PUT(cc_dep2) = 0x0000000000000000
   16 | PUT(cc_ndep) = 0x0000000000000000
   17 | t12 = 32Uto64(t11)
   18 | PUT(rbx) = t12
   19 | PUT(pc) = 0x0000000000400002
   20 | ------ IMark(0x400002, 1, 0) ------
   21 | t13 = GET:I64(rsp)
   22 | t14 = LDle:I64(t13)
   23 | t15 = Add64(t13,0x0000000000000008)
   24 | PUT(rsp) = t15
   25 | t16 = Sub64(t15,0x0000000000000080)
   26 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:49:04,539 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:04,582 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:04,621 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmsub231ss_xmm_xmm_xmm/vfmsub231ss_xmm_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F32 t3:Ity_F32 t4:Ity_F32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = GET:F32(ymm2)
   03 | t2 = GET:F32(ymm3)
   04 | t3 = NegF32(t0)
   05 | t4 = MAddF32(0x00000000,t1,t2,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(272) = 0
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t5 = GET:I64(rsp)
   11 | t6 = LDle:I64(t5)
   12 | t7 = Add64(t5,0x0000000000000008)
   13 | PUT(rsp) = t7
   14 | t8 = Sub64(t7,0x0000000000000080)
   15 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:16,895 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:16,927 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:16,964 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setno_r8/setno_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000001,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:57,091 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:57,112 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:57,121 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vphsubw_xmm_xmm_xmm/vphsubw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = V128HIto64(t1)
   06 | t5 = V128to64(t1)
   07 | t6 = CatOddLanes16x4(t2,t3)
   08 | t7 = CatEvenLanes16x4(t2,t3)
   09 | t8 = Sub16x4(t7,t6)
   10 | t9 = CatOddLanes16x4(t4,t5)
   11 | t10 = CatEvenLanes16x4(t4,t5)
   12 | t11 = Sub16x4(t10,t9)
   13 | t12 = 64HLtoV128(t11,t8)
   14 | PUT(xmm1) = t12
   15 | PUT(272) = 0
   16 | PUT(pc) = 0x0000000000400005
   17 | ------ IMark(0x400005, 1, 0) ------
   18 | t13 = GET:I64(rsp)
   19 | t14 = LDle:I64(t13)
   20 | t15 = Add64(t13,0x0000000000000008)
   21 | PUT(rsp) = t15
   22 | t16 = Sub64(t15,0x0000000000000080)
   23 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:48:42,759 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:42,781 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:42,791 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vbroadcastss_ymm_xmm/vbroadcastss_ymm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I64 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32HLto64(t0,t0)
   03 | t2 = 64x4toV256(t1,t1,t1,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:29,559 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:29,714 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:29,795 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cbtw/cbtw.o
IRSB {
   t0:Ity_I8 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(al)
   02 | t1 = 8Sto16(t0)
   03 | PUT(ax) = t1
   04 | PUT(pc) = 0x0000000000400002
   05 | ------ IMark(0x400002, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:46:25,392 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:25,448 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:25,678 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addss_xmm_xmm/addss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add32F0x4(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:50,490 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:50,618 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:50,677 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovnsl_r32_r32/cmovnsl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I1 t10:Ity_I32 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rbx)
   04 | t3 = 64to32(t2)
   05 | t4 = GET:I64(cc_op)
   06 | t5 = GET:I64(cc_dep1)
   07 | t6 = GET:I64(cc_dep2)
   08 | t7 = GET:I64(cc_ndep)
   09 | t8 = amd64g_calculate_condition(0x0000000000000009,t4,t5,t6,t7):Ity_I64
   10 | t9 = 64to1(t8)
   11 | t10 = ITE(t9,t1,t3)
   12 | t11 = 32Uto64(t10)
   13 | PUT(rbx) = t11
   14 | PUT(pc) = 0x0000000000400003
   15 | ------ IMark(0x400003, 1, 0) ------
   16 | t12 = GET:I64(rsp)
   17 | t13 = LDle:I64(t12)
   18 | t14 = Add64(t12,0x0000000000000008)
   19 | PUT(rsp) = t14
   20 | t15 = Sub64(t14,0x0000000000000080)
   21 | ====== AbiHint(0xt15, 128, t13) ======
   NEXT: PUT(rip) = t13; Ijk_Ret
}
WARNING | 2018-04-08 20:49:51,479 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:51,497 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:51,512 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpgtw_ymm_ymm_ymm/vpcmpgtw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpGT16Sx16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:50:52,557 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:52,570 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:52,577 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/xchgb_rh_r8/xchgb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | PUT(bl) = t0
   04 | PUT(ah) = t1
   05 | PUT(pc) = 0x0000000000400002
   06 | ------ IMark(0x400002, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:49:28,847 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:28,868 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:28,876 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovupd_xmm_xmm/vmovupd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | PUT(xmm1) = t0
   03 | PUT(272) = 0
   04 | PUT(pc) = 0x0000000000400004
   05 | ------ IMark(0x400004, 1, 0) ------
   06 | t1 = GET:I64(rsp)
   07 | t2 = LDle:I64(t1)
   08 | t3 = Add64(t1,0x0000000000000008)
   09 | PUT(rsp) = t3
   10 | t4 = Sub64(t3,0x0000000000000080)
   11 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:48:00,926 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:00,944 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:00,990 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sall_r32_one/sall_r32_one.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = 32Uto64(t1)
   04 | t3 = Shl64(t2,0x01)
   05 | PUT(cc_op) = 0x000000000000001f
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = t2
   08 | t4 = 64to32(t3)
   09 | t5 = 32Uto64(t4)
   10 | PUT(rbx) = t5
   11 | PUT(pc) = 0x0000000000400002
   12 | ------ IMark(0x400002, 1, 0) ------
   13 | t6 = GET:I64(rsp)
   14 | t7 = LDle:I64(t6)
   15 | t8 = Add64(t6,0x0000000000000008)
   16 | PUT(rsp) = t8
   17 | t9 = Sub64(t8,0x0000000000000080)
   18 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:24,957 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:24,978 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:25,030 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/paddb_xmm_xmm/paddb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:46,769 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:46,789 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:46,816 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvtsi2sdq_xmm_xmm_r64/vcvtsi2sdq_xmm_xmm_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I32 t4:Ity_F64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(sseround)
   02 | t1 = GET:I64(rbx)
   03 | t2 = And64(t0,0x0000000000000003)
   04 | t3 = 64to32(t2)
   05 | t4 = I64StoF64(t3,t1)
   06 | PUT(ymm1) = t4
   07 | t5 = GET:I64(296)
   08 | PUT(264) = t5
   09 | PUT(272) = 0
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t6 = GET:I64(rsp)
   13 | t7 = LDle:I64(t6)
   14 | t8 = Add64(t6,0x0000000000000008)
   15 | PUT(rsp) = t8
   16 | t9 = Sub64(t8,0x0000000000000080)
   17 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:46:59,185 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:59,313 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:59,368 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/divpd_xmm_xmm/divpd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Div64Fx2(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:34,577 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:34,770 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:34,927 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovbw_r16_r16/cmovbw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000002,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:49,496 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:49,516 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:49,536 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vdivpd_xmm_xmm_xmm/vdivpd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Div64Fx2(0x00000000,t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:48,478 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:48,563 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:48,669 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovsw_r16_r16/cmovsw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I16 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I16(cx)
   02 | t1 = GET:I16(bx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000008,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(bx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:45,113 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:45,136 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:45,163 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastb_ymm_xmm/vpbroadcastb_ymm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I8 t2:Ity_I16 t3:Ity_I32 t4:Ity_I64 t5:Ity_V256 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to8(t0)
   03 | t2 = 8HLto16(t1,t1)
   04 | t3 = 16HLto32(t2,t2)
   05 | t4 = 32HLto64(t3,t3)
   06 | t5 = 64x4toV256(t4,t4,t4,t4)
   07 | PUT(ymm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:47:22,431 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:22,451 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:22,470 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/orl_r32_r32/orl_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = Or32(t1,t3)
   06 | PUT(cc_op) = 0x0000000000000013
   07 | t5 = 32Uto64(t4)
   08 | PUT(cc_dep1) = t5
   09 | PUT(cc_dep2) = 0x0000000000000000
   10 | t6 = 32Uto64(t4)
   11 | PUT(rbx) = t6
   12 | PUT(pc) = 0x0000000000400002
   13 | ------ IMark(0x400002, 1, 0) ------
   14 | t7 = GET:I64(rsp)
   15 | t8 = LDle:I64(t7)
   16 | t9 = Add64(t7,0x0000000000000008)
   17 | PUT(rsp) = t9
   18 | t10 = Sub64(t9,0x0000000000000080)
   19 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:00,682 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:00,707 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:00,716 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxsw_ymm_ymm_ymm/vpmaxsw_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Max16Sx16(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:32,202 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:32,248 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:32,268 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmaddwd_xmm_xmm/pmaddwd_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_V128 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = amd64g_calculate_mmx_pmaddwd(t3,t5):Ity_I64
   08 | t7 = amd64g_calculate_mmx_pmaddwd(t2,t4):Ity_I64
   09 | t8 = 64HLtoV128(t6,t7)
   10 | PUT(xmm1) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:49:47,253 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:47,264 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:47,270 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpbroadcastw_ymm_xmm/vpbroadcastw_ymm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I16 t2:Ity_I32 t3:Ity_I64 t4:Ity_V256 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to16(t0)
   03 | t2 = 16HLto32(t1,t1)
   04 | t3 = 32HLto64(t2,t2)
   05 | t4 = 64x4toV256(t3,t3,t3,t3)
   06 | PUT(ymm1) = t4
   07 | PUT(pc) = 0x0000000000400005
   08 | ------ IMark(0x400005, 1, 0) ------
   09 | t5 = GET:I64(rsp)
   10 | t6 = LDle:I64(t5)
   11 | t7 = Add64(t5,0x0000000000000008)
   12 | PUT(rsp) = t7
   13 | t8 = Sub64(t7,0x0000000000000080)
   14 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:46:51,410 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:51,502 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:51,551 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/comiss_xmm_xmm/comiss_xmm_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F32 t2:Ity_F64 t3:Ity_F64 t4:Ity_I32 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:F32(ymm2)
   02 | t1 = GET:F32(ymm1)
   03 | PUT(cc_op) = 0x0000000000000000
   04 | PUT(cc_dep2) = 0x0000000000000000
   05 | t2 = F32toF64(t0)
   06 | t3 = F32toF64(t1)
   07 | t4 = CmpF64(t3,t2)
   08 | t5 = 32Uto64(t4)
   09 | t6 = And64(t5,0x0000000000000045)
   10 | PUT(cc_dep1) = t6
   11 | PUT(pc) = 0x0000000000400003
   12 | ------ IMark(0x400003, 1, 0) ------
   13 | t7 = GET:I64(rsp)
   14 | t8 = LDle:I64(t7)
   15 | t9 = Add64(t7,0x0000000000000008)
   16 | PUT(rsp) = t9
   17 | t10 = Sub64(t9,0x0000000000000080)
   18 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:48:22,921 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:22,940 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:22,993 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shll_r32_cl/shll_r32_cl.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I8 t3:Ity_I8 t4:Ity_I64 t5:Ity_I64 t6:Ity_I8 t7:Ity_I8 t8:Ity_I64 t9:Ity_I1 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I32 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rbx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I8(cl)
   04 | t3 = And8(t2,0x1f)
   05 | t4 = 32Uto64(t1)
   06 | t5 = Shl64(t4,t3)
   07 | t6 = Sub8(t3,0x01)
   08 | t7 = And8(t6,0x1f)
   09 | t8 = Shl64(t4,t7)
   10 | t9 = CmpNE8(t3,0x00)
   11 | t10 = GET:I64(cc_op)
   12 | t11 = ITE(t9,0x000000000000001f,t10)
   13 | PUT(cc_op) = t11
   14 | t12 = GET:I64(cc_dep1)
   15 | t13 = ITE(t9,t5,t12)
   16 | PUT(cc_dep1) = t13
   17 | t14 = GET:I64(cc_dep2)
   18 | t15 = ITE(t9,t8,t14)
   19 | PUT(cc_dep2) = t15
   20 | t16 = 64to32(t5)
   21 | t17 = 32Uto64(t16)
   22 | PUT(rbx) = t17
   23 | PUT(pc) = 0x0000000000400002
   24 | ------ IMark(0x400002, 1, 0) ------
   25 | t18 = GET:I64(rsp)
   26 | t19 = LDle:I64(t18)
   27 | t20 = Add64(t18,0x0000000000000008)
   28 | PUT(rsp) = t20
   29 | t21 = Sub64(t20,0x0000000000000080)
   30 | ====== AbiHint(0xt21, 128, t19) ======
   NEXT: PUT(rip) = t19; Ijk_Ret
}
WARNING | 2018-04-08 20:46:51,016 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:51,138 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:51,222 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovpeq_r64_r64/cmovpeq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x000000000000000a,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:27,789 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:27,807 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:27,840 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/shrxl_r32_r32_r32/shrxl_r32_r32_r32.o
IRSB {
   t0:Ity_I64 t1:Ity_I32 t2:Ity_I64 t3:Ity_I32 t4:Ity_I32 t5:Ity_I8 t6:Ity_I32 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I64(rdx)
   02 | t1 = 64to32(t0)
   03 | t2 = GET:I64(rcx)
   04 | t3 = 64to32(t2)
   05 | t4 = And32(t1,0x0000001f)
   06 | t5 = 32to8(t4)
   07 | t6 = Shr32(t3,t5)
   08 | t7 = 32Uto64(t6)
   09 | PUT(rbx) = t7
   10 | PUT(pc) = 0x0000000000400005
   11 | ------ IMark(0x400005, 1, 0) ------
   12 | t8 = GET:I64(rsp)
   13 | t9 = LDle:I64(t8)
   14 | t10 = Add64(t8,0x0000000000000008)
   15 | PUT(rsp) = t10
   16 | t11 = Sub64(t10,0x0000000000000080)
   17 | ====== AbiHint(0xt11, 128, t9) ======
   NEXT: PUT(rip) = t9; Ijk_Ret
}
WARNING | 2018-04-08 20:46:49,421 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:49,494 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:49,583 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovzq_r64_r64/cmovzq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000004,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:50:12,468 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:12,484 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:12,493 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxdq_xmm_xmm/vpmovzxdq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO32x4(0,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(272) = 0
   05 | PUT(pc) = 0x0000000000400005
   06 | ------ IMark(0x400005, 1, 0) ------
   07 | t2 = GET:I64(rsp)
   08 | t3 = LDle:I64(t2)
   09 | t4 = Add64(t2,0x0000000000000008)
   10 | PUT(rsp) = t4
   11 | t5 = Sub64(t4,0x0000000000000080)
   12 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:47:46,226 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:46,243 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:46,288 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/psubb_xmm_xmm/psubb_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Sub8x16(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:28,028 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:28,046 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:28,087 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sqrtps_xmm_xmm/sqrtps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = Sqrt32Fx4(0x00000000,t0)
   03 | PUT(xmm1) = t1
   04 | PUT(pc) = 0x0000000000400003
   05 | ------ IMark(0x400003, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:49,475 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:49,495 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:49,506 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vcvttss2sil_r32_xmm/vcvttss2sil_r32_xmm.o
IRSB {
   t0:Ity_F32 t1:Ity_F64 t2:Ity_I32 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:F32(ymm1)
   02 | t1 = F32toF64(t0)
   03 | t2 = F64toI32S(0x00000003,t1)
   04 | t3 = 32Uto64(t2)
   05 | PUT(rbx) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:59,802 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:59,832 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:59,841 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmaddsub231ps_xmm_xmm_xmm/vfmaddsub231ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_F32 t12:Ity_I32 t13:Ity_F32 t14:Ity_I32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_I32 t33:Ity_F32 t34:Ity_I32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_F32 t39:Ity_I64 t40:Ity_I64 t41:Ity_I64 t42:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t2)
   06 | t5 = V128to64(t0)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t2)
   09 | t8 = V128HIto64(t0)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = NegF32(t10)
   13 | t12 = 64to32(t4)
   14 | t13 = ReinterpI32asF32(t12)
   15 | t14 = 64to32(t3)
   16 | t15 = ReinterpI32asF32(t14)
   17 | t16 = MAddF32(0x00000000,t15,t13,t11)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | PUT(260) = t23
   27 | t24 = 64to32(t8)
   28 | t25 = ReinterpI32asF32(t24)
   29 | t26 = NegF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | PUT(264) = t31
   36 | t32 = 64HIto32(t8)
   37 | t33 = ReinterpI32asF32(t32)
   38 | t34 = 64HIto32(t7)
   39 | t35 = ReinterpI32asF32(t34)
   40 | t36 = 64HIto32(t6)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = MAddF32(0x00000000,t37,t35,t33)
   43 | PUT(268) = t38
   44 | PUT(272) = 0
   45 | PUT(pc) = 0x0000000000400005
   46 | ------ IMark(0x400005, 1, 0) ------
   47 | t39 = GET:I64(rsp)
   48 | t40 = LDle:I64(t39)
   49 | t41 = Add64(t39,0x0000000000000008)
   50 | PUT(rsp) = t41
   51 | t42 = Sub64(t41,0x0000000000000080)
   52 | ====== AbiHint(0xt42, 128, t40) ======
   NEXT: PUT(rip) = t40; Ijk_Ret
}
WARNING | 2018-04-08 20:46:42,444 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:42,528 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:42,613 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cmovoq_r64_r64/cmovoq_r64_r64.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I1 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:I64(rcx)
   02 | t1 = GET:I64(rbx)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_condition(0x0000000000000000,t2,t3,t4,t5):Ity_I64
   08 | t7 = 64to1(t6)
   09 | t8 = ITE(t7,t0,t1)
   10 | PUT(rbx) = t8
   11 | PUT(pc) = 0x0000000000400004
   12 | ------ IMark(0x400004, 1, 0) ------
   13 | t9 = GET:I64(rsp)
   14 | t10 = LDle:I64(t9)
   15 | t11 = Add64(t9,0x0000000000000008)
   16 | PUT(rsp) = t11
   17 | t12 = Sub64(t11,0x0000000000000080)
   18 | ====== AbiHint(0xt12, 128, t10) ======
   NEXT: PUT(rip) = t10; Ijk_Ret
}
WARNING | 2018-04-08 20:48:06,174 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:06,192 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:06,257 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setae_r8/setae_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000003,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:13,751 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:13,770 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:13,780 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmovzxwq_xmm_xmm/vpmovzxwq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = InterleaveLO16x8(0,t0)
   03 | t2 = InterleaveLO16x8(0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400005
   07 | ------ IMark(0x400005, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:58,196 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:58,279 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:58,329 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/cqto/cqto.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I64(rax)
   02 | t1 = Sar64(t0,0x3f)
   03 | PUT(rdx) = t1
   04 | PUT(pc) = 0x0000000000400002
   05 | ------ IMark(0x400002, 1, 0) ------
   06 | t2 = GET:I64(rsp)
   07 | t3 = LDle:I64(t2)
   08 | t4 = Add64(t2,0x0000000000000008)
   09 | PUT(rsp) = t4
   10 | t5 = Sub64(t4,0x0000000000000080)
   11 | ====== AbiHint(0xt5, 128, t3) ======
   NEXT: PUT(rip) = t3; Ijk_Ret
}
WARNING | 2018-04-08 20:48:54,373 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:54,388 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:54,402 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfmadd213ps_ymm_ymm_ymm/vfmadd213ps_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_F32 t22:Ity_I32 t23:Ity_F32 t24:Ity_I32 t25:Ity_F32 t26:Ity_I32 t27:Ity_F32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_I32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_F32 t36:Ity_I32 t37:Ity_F32 t38:Ity_I32 t39:Ity_F32 t40:Ity_I32 t41:Ity_F32 t42:Ity_F32 t43:Ity_I32 t44:Ity_F32 t45:Ity_I32 t46:Ity_F32 t47:Ity_I32 t48:Ity_F32 t49:Ity_F32 t50:Ity_I32 t51:Ity_F32 t52:Ity_I32 t53:Ity_F32 t54:Ity_I32 t55:Ity_F32 t56:Ity_F32 t57:Ity_I32 t58:Ity_F32 t59:Ity_I32 t60:Ity_F32 t61:Ity_I32 t62:Ity_F32 t63:Ity_F32 t64:Ity_I32 t65:Ity_F32 t66:Ity_I32 t67:Ity_F32 t68:Ity_I32 t69:Ity_F32 t70:Ity_F32 t71:Ity_I64 t72:Ity_I64 t73:Ity_I64 t74:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm1)
   02 | t1 = GET:V256(ymm2)
   03 | t2 = GET:V256(ymm3)
   04 | t3 = V256to64_0(t1)
   05 | t4 = V256to64_0(t0)
   06 | t5 = V256to64_0(t2)
   07 | t6 = V256to64_1(t1)
   08 | t7 = V256to64_1(t0)
   09 | t8 = V256to64_1(t2)
   10 | t9 = V256to64_2(t1)
   11 | t10 = V256to64_2(t0)
   12 | t11 = V256to64_2(t2)
   13 | t12 = V256to64_3(t1)
   14 | t13 = V256to64_3(t0)
   15 | t14 = V256to64_3(t2)
   16 | t15 = 64to32(t5)
   17 | t16 = ReinterpI32asF32(t15)
   18 | t17 = 64to32(t4)
   19 | t18 = ReinterpI32asF32(t17)
   20 | t19 = 64to32(t3)
   21 | t20 = ReinterpI32asF32(t19)
   22 | t21 = MAddF32(0x00000000,t20,t18,t16)
   23 | PUT(ymm1) = t21
   24 | t22 = 64HIto32(t5)
   25 | t23 = ReinterpI32asF32(t22)
   26 | t24 = 64HIto32(t4)
   27 | t25 = ReinterpI32asF32(t24)
   28 | t26 = 64HIto32(t3)
   29 | t27 = ReinterpI32asF32(t26)
   30 | t28 = MAddF32(0x00000000,t27,t25,t23)
   31 | PUT(260) = t28
   32 | t29 = 64to32(t8)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = 64to32(t7)
   35 | t32 = ReinterpI32asF32(t31)
   36 | t33 = 64to32(t6)
   37 | t34 = ReinterpI32asF32(t33)
   38 | t35 = MAddF32(0x00000000,t34,t32,t30)
   39 | PUT(264) = t35
   40 | t36 = 64HIto32(t8)
   41 | t37 = ReinterpI32asF32(t36)
   42 | t38 = 64HIto32(t7)
   43 | t39 = ReinterpI32asF32(t38)
   44 | t40 = 64HIto32(t6)
   45 | t41 = ReinterpI32asF32(t40)
   46 | t42 = MAddF32(0x00000000,t41,t39,t37)
   47 | PUT(268) = t42
   48 | t43 = 64to32(t11)
   49 | t44 = ReinterpI32asF32(t43)
   50 | t45 = 64to32(t10)
   51 | t46 = ReinterpI32asF32(t45)
   52 | t47 = 64to32(t9)
   53 | t48 = ReinterpI32asF32(t47)
   54 | t49 = MAddF32(0x00000000,t48,t46,t44)
   55 | PUT(272) = t49
   56 | t50 = 64HIto32(t11)
   57 | t51 = ReinterpI32asF32(t50)
   58 | t52 = 64HIto32(t10)
   59 | t53 = ReinterpI32asF32(t52)
   60 | t54 = 64HIto32(t9)
   61 | t55 = ReinterpI32asF32(t54)
   62 | t56 = MAddF32(0x00000000,t55,t53,t51)
   63 | PUT(276) = t56
   64 | t57 = 64to32(t14)
   65 | t58 = ReinterpI32asF32(t57)
   66 | t59 = 64to32(t13)
   67 | t60 = ReinterpI32asF32(t59)
   68 | t61 = 64to32(t12)
   69 | t62 = ReinterpI32asF32(t61)
   70 | t63 = MAddF32(0x00000000,t62,t60,t58)
   71 | PUT(280) = t63
   72 | t64 = 64HIto32(t14)
   73 | t65 = ReinterpI32asF32(t64)
   74 | t66 = 64HIto32(t13)
   75 | t67 = ReinterpI32asF32(t66)
   76 | t68 = 64HIto32(t12)
   77 | t69 = ReinterpI32asF32(t68)
   78 | t70 = MAddF32(0x00000000,t69,t67,t65)
   79 | PUT(284) = t70
   80 | PUT(pc) = 0x0000000000400005
   81 | ------ IMark(0x400005, 1, 0) ------
   82 | t71 = GET:I64(rsp)
   83 | t72 = LDle:I64(t71)
   84 | t73 = Add64(t71,0x0000000000000008)
   85 | PUT(rsp) = t73
   86 | t74 = Sub64(t73,0x0000000000000080)
   87 | ====== AbiHint(0xt74, 128, t72) ======
   NEXT: PUT(rip) = t72; Ijk_Ret
}
WARNING | 2018-04-08 20:47:13,315 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:13,383 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:13,426 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/movmskps_r32_xmm/movmskps_r32_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I32 t2:Ity_I32 t3:Ity_I32 t4:Ity_I32 t5:Ity_I32 t6:Ity_I32 t7:Ity_I32 t8:Ity_I32 t9:Ity_I32 t10:Ity_I32 t11:Ity_I32 t12:Ity_I32 t13:Ity_I32 t14:Ity_I32 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I32(ymm1)
   02 | t1 = Shr32(t0,0x1f)
   03 | t2 = And32(t1,0x00000001)
   04 | t3 = GET:I32(260)
   05 | t4 = Shr32(t3,0x1e)
   06 | t5 = And32(t4,0x00000002)
   07 | t6 = GET:I32(264)
   08 | t7 = Shr32(t6,0x1d)
   09 | t8 = And32(t7,0x00000004)
   10 | t9 = GET:I32(268)
   11 | t10 = Shr32(t9,0x1c)
   12 | t11 = And32(t10,0x00000008)
   13 | t12 = Or32(t8,t11)
   14 | t13 = Or32(t2,t5)
   15 | t14 = Or32(t13,t12)
   16 | t15 = 32Uto64(t14)
   17 | PUT(rbx) = t15
   18 | PUT(pc) = 0x0000000000400003
   19 | ------ IMark(0x400003, 1, 0) ------
   20 | t16 = GET:I64(rsp)
   21 | t17 = LDle:I64(t16)
   22 | t18 = Add64(t16,0x0000000000000008)
   23 | PUT(rsp) = t18
   24 | t19 = Sub64(t18,0x0000000000000080)
   25 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:46:28,271 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:28,766 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:28,881 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/andb_rh_r8/andb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = And8(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000011
   05 | t3 = 8Uto64(t2)
   06 | PUT(cc_dep1) = t3
   07 | PUT(cc_dep2) = 0x0000000000000000
   08 | PUT(ah) = t2
   09 | PUT(pc) = 0x0000000000400002
   10 | ------ IMark(0x400002, 1, 0) ------
   11 | t4 = GET:I64(rsp)
   12 | t5 = LDle:I64(t4)
   13 | t6 = Add64(t4,0x0000000000000008)
   14 | PUT(rsp) = t6
   15 | t7 = Sub64(t6,0x0000000000000080)
   16 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:49:39,391 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:39,407 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:39,416 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpaddsb_ymm_ymm_ymm/vpaddsb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = QAdd8Sx32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:16,678 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:16,715 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:16,764 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/mulb_rh/mulb_rh.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I16 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(bh)
   02 | t1 = GET:I8(al)
   03 | PUT(cc_op) = 0x000000000000002d
   04 | t2 = 8Uto64(t1)
   05 | PUT(cc_dep1) = t2
   06 | t3 = 8Uto64(t0)
   07 | PUT(cc_dep2) = t3
   08 | t4 = MullU8(t1,t0)
   09 | PUT(ax) = t4
   10 | PUT(pc) = 0x0000000000400002
   11 | ------ IMark(0x400002, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:47:41,710 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:41,754 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:41,786 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmuldq_xmm_xmm/pmuldq_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I32 t5:Ity_I32 t6:Ity_I64 t7:Ity_I64 t8:Ity_I32 t9:Ity_I32 t10:Ity_I64 t11:Ity_I64 t12:Ity_V128 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = V128HIto64(t0)
   04 | t3 = V128to64(t0)
   05 | t4 = 64to32(t3)
   06 | t5 = 64to32(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128to64(t1)
   09 | t8 = 64to32(t7)
   10 | t9 = 64to32(t6)
   11 | t10 = MullS32(t4,t8)
   12 | t11 = MullS32(t5,t9)
   13 | t12 = 64HLtoV128(t11,t10)
   14 | PUT(xmm1) = t12
   15 | PUT(pc) = 0x0000000000400005
   16 | ------ IMark(0x400005, 1, 0) ------
   17 | t13 = GET:I64(rsp)
   18 | t14 = LDle:I64(t13)
   19 | t15 = Add64(t13,0x0000000000000008)
   20 | PUT(rsp) = t15
   21 | t16 = Sub64(t15,0x0000000000000080)
   22 | ====== AbiHint(0xt16, 128, t14) ======
   NEXT: PUT(rip) = t14; Ijk_Ret
}
WARNING | 2018-04-08 20:50:21,754 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:21,793 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:21,820 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpsignw_xmm_xmm_xmm/vpsignw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64 t18:Ity_V128 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = V128to64(t0)
   04 | t3 = V128HIto64(t0)
   05 | t4 = V128to64(t1)
   06 | t5 = V128HIto64(t1)
   07 | t6 = Sub16x4(0x0000000000000000,t2)
   08 | t7 = CmpGT16Sx4(0x0000000000000000,t4)
   09 | t8 = CmpGT16Sx4(t4,0x0000000000000000)
   10 | t9 = Sub16x4(0x0000000000000000,t3)
   11 | t10 = CmpGT16Sx4(0x0000000000000000,t5)
   12 | t11 = CmpGT16Sx4(t5,0x0000000000000000)
   13 | t12 = And64(t6,t7)
   14 | t13 = And64(t2,t8)
   15 | t14 = Or64(t13,t12)
   16 | t15 = And64(t9,t10)
   17 | t16 = And64(t3,t11)
   18 | t17 = Or64(t16,t15)
   19 | t18 = 64HLtoV128(t17,t14)
   20 | PUT(xmm1) = t18
   21 | PUT(272) = 0
   22 | PUT(pc) = 0x0000000000400005
   23 | ------ IMark(0x400005, 1, 0) ------
   24 | t19 = GET:I64(rsp)
   25 | t20 = LDle:I64(t19)
   26 | t21 = Add64(t19,0x0000000000000008)
   27 | PUT(rsp) = t21
   28 | t22 = Sub64(t21,0x0000000000000080)
   29 | ====== AbiHint(0xt22, 128, t20) ======
   NEXT: PUT(rip) = t20; Ijk_Ret
}
WARNING | 2018-04-08 20:48:09,732 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:09,751 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:09,783 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setge_rh/setge_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x000000000000000d,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:13,086 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:13,127 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:13,175 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vfnmsub213ps_xmm_xmm_xmm/vfnmsub213ps_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I32 t10:Ity_F32 t11:Ity_I32 t12:Ity_F32 t13:Ity_I32 t14:Ity_F32 t15:Ity_F32 t16:Ity_F32 t17:Ity_I32 t18:Ity_F32 t19:Ity_I32 t20:Ity_F32 t21:Ity_I32 t22:Ity_F32 t23:Ity_F32 t24:Ity_F32 t25:Ity_I32 t26:Ity_F32 t27:Ity_I32 t28:Ity_F32 t29:Ity_I32 t30:Ity_F32 t31:Ity_F32 t32:Ity_F32 t33:Ity_I32 t34:Ity_F32 t35:Ity_I32 t36:Ity_F32 t37:Ity_I32 t38:Ity_F32 t39:Ity_F32 t40:Ity_F32 t41:Ity_I64 t42:Ity_I64 t43:Ity_I64 t44:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = GET:V128(xmm3)
   04 | t3 = V128to64(t1)
   05 | t4 = V128to64(t0)
   06 | t5 = V128to64(t2)
   07 | t6 = V128HIto64(t1)
   08 | t7 = V128HIto64(t0)
   09 | t8 = V128HIto64(t2)
   10 | t9 = 64to32(t5)
   11 | t10 = ReinterpI32asF32(t9)
   12 | t11 = 64to32(t4)
   13 | t12 = ReinterpI32asF32(t11)
   14 | t13 = 64to32(t3)
   15 | t14 = ReinterpI32asF32(t13)
   16 | t15 = MAddF32(0x00000000,t14,t12,t10)
   17 | t16 = NegF32(t15)
   18 | PUT(ymm1) = t16
   19 | t17 = 64HIto32(t5)
   20 | t18 = ReinterpI32asF32(t17)
   21 | t19 = 64HIto32(t4)
   22 | t20 = ReinterpI32asF32(t19)
   23 | t21 = 64HIto32(t3)
   24 | t22 = ReinterpI32asF32(t21)
   25 | t23 = MAddF32(0x00000000,t22,t20,t18)
   26 | t24 = NegF32(t23)
   27 | PUT(260) = t24
   28 | t25 = 64to32(t8)
   29 | t26 = ReinterpI32asF32(t25)
   30 | t27 = 64to32(t7)
   31 | t28 = ReinterpI32asF32(t27)
   32 | t29 = 64to32(t6)
   33 | t30 = ReinterpI32asF32(t29)
   34 | t31 = MAddF32(0x00000000,t30,t28,t26)
   35 | t32 = NegF32(t31)
   36 | PUT(264) = t32
   37 | t33 = 64HIto32(t8)
   38 | t34 = ReinterpI32asF32(t33)
   39 | t35 = 64HIto32(t7)
   40 | t36 = ReinterpI32asF32(t35)
   41 | t37 = 64HIto32(t6)
   42 | t38 = ReinterpI32asF32(t37)
   43 | t39 = MAddF32(0x00000000,t38,t36,t34)
   44 | t40 = NegF32(t39)
   45 | PUT(268) = t40
   46 | PUT(272) = 0
   47 | PUT(pc) = 0x0000000000400005
   48 | ------ IMark(0x400005, 1, 0) ------
   49 | t41 = GET:I64(rsp)
   50 | t42 = LDle:I64(t41)
   51 | t43 = Add64(t41,0x0000000000000008)
   52 | PUT(rsp) = t43
   53 | t44 = Sub64(t43,0x0000000000000080)
   54 | ====== AbiHint(0xt44, 128, t42) ======
   NEXT: PUT(rip) = t42; Ijk_Ret
}
WARNING | 2018-04-08 20:48:05,497 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:05,521 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:05,529 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/sarw_r16_cl/sarw_r16_cl.o
IRSB {
   t0:Ity_I16 t1:Ity_I8 t2:Ity_I8 t3:Ity_I64 t4:Ity_I64 t5:Ity_I8 t6:Ity_I8 t7:Ity_I64 t8:Ity_I1 t9:Ity_I64 t10:Ity_I64 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64 t15:Ity_I16 t16:Ity_I64 t17:Ity_I64 t18:Ity_I64 t19:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I8(cl)
   03 | t2 = And8(t1,0x1f)
   04 | t3 = 16Sto64(t0)
   05 | t4 = Sar64(t3,t2)
   06 | t5 = Sub8(t2,0x01)
   07 | t6 = And8(t5,0x1f)
   08 | t7 = Sar64(t3,t6)
   09 | t8 = CmpNE8(t2,0x00)
   10 | t9 = GET:I64(cc_op)
   11 | t10 = ITE(t8,0x0000000000000022,t9)
   12 | PUT(cc_op) = t10
   13 | t11 = GET:I64(cc_dep1)
   14 | t12 = ITE(t8,t4,t11)
   15 | PUT(cc_dep1) = t12
   16 | t13 = GET:I64(cc_dep2)
   17 | t14 = ITE(t8,t7,t13)
   18 | PUT(cc_dep2) = t14
   19 | t15 = 64to16(t4)
   20 | PUT(bx) = t15
   21 | PUT(pc) = 0x0000000000400003
   22 | ------ IMark(0x400003, 1, 0) ------
   23 | t16 = GET:I64(rsp)
   24 | t17 = LDle:I64(t16)
   25 | t18 = Add64(t16,0x0000000000000008)
   26 | PUT(rsp) = t18
   27 | t19 = Sub64(t18,0x0000000000000080)
   28 | ====== AbiHint(0xt19, 128, t17) ======
   NEXT: PUT(rip) = t17; Ijk_Ret
}
WARNING | 2018-04-08 20:48:18,268 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:18,317 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:18,334 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setnz_r8/setnz_r8.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000005,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(bl) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:50:01,493 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:01,516 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:01,526 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxsw_xmm_xmm_xmm/vpmaxsw_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm3)
   03 | t2 = Max16Sx8(t0,t1)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:46:24,511 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:24,797 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:24,889 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/adcb_rh_r8/adcb_rh_r8.o
IRSB {
   t0:Ity_I8 t1:Ity_I8 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I8 t9:Ity_I8 t10:Ity_I8 t11:Ity_I64 t12:Ity_I8 t13:Ity_I64 t14:Ity_I64 t15:Ity_I64 t16:Ity_I64 t17:Ity_I64

   00 | ------ IMark(0x400000, 2, 0) ------
   01 | t0 = GET:I8(ah)
   02 | t1 = GET:I8(bl)
   03 | t2 = GET:I64(cc_op)
   04 | t3 = GET:I64(cc_dep1)
   05 | t4 = GET:I64(cc_dep2)
   06 | t5 = GET:I64(cc_ndep)
   07 | t6 = amd64g_calculate_rflags_c(t2,t3,t4,t5):Ity_I64
   08 | t7 = And64(t6,0x0000000000000001)
   09 | t8 = 64to8(t7)
   10 | t9 = Add8(t0,t1)
   11 | t10 = Add8(t9,t8)
   12 | PUT(cc_op) = 0x0000000000000009
   13 | t11 = 8Uto64(t0)
   14 | PUT(cc_dep1) = t11
   15 | t12 = Xor8(t1,t8)
   16 | t13 = 8Uto64(t12)
   17 | PUT(cc_dep2) = t13
   18 | PUT(cc_ndep) = t7
   19 | PUT(ah) = t10
   20 | PUT(pc) = 0x0000000000400002
   21 | ------ IMark(0x400002, 1, 0) ------
   22 | t14 = GET:I64(rsp)
   23 | t15 = LDle:I64(t14)
   24 | t16 = Add64(t14,0x0000000000000008)
   25 | PUT(rsp) = t16
   26 | t17 = Sub64(t16,0x0000000000000080)
   27 | ====== AbiHint(0xt17, 128, t15) ======
   NEXT: PUT(rip) = t15; Ijk_Ret
}
WARNING | 2018-04-08 20:47:51,080 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:51,129 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:51,146 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/rcpss_xmm_xmm/rcpss_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_I32 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm1)
   02 | t1 = GET:I32(ymm2)
   03 | t2 = SetV128lo32(t0,t1)
   04 | t3 = RecipEst32F0x4(t2)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:48:37,657 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:37,707 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:37,743 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vaddsubpd_ymm_ymm_ymm/vaddsubpd_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_V128 t9:Ity_V128 t10:Ity_V256 t11:Ity_I64 t12:Ity_I64 t13:Ity_I64 t14:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Add64Fx4(0x00000000,t0,t1)
   04 | t3 = Sub64Fx4(0x00000000,t0,t1)
   05 | t4 = V256to64_1(t2)
   06 | t5 = V256to64_3(t2)
   07 | t6 = V256to64_0(t3)
   08 | t7 = V256to64_2(t3)
   09 | t8 = 64HLtoV128(t4,t6)
   10 | t9 = 64HLtoV128(t5,t7)
   11 | t10 = V128HLtoV256(t9,t8)
   12 | PUT(ymm1) = t10
   13 | PUT(pc) = 0x0000000000400004
   14 | ------ IMark(0x400004, 1, 0) ------
   15 | t11 = GET:I64(rsp)
   16 | t12 = LDle:I64(t11)
   17 | t13 = Add64(t11,0x0000000000000008)
   18 | PUT(rsp) = t13
   19 | t14 = Sub64(t13,0x0000000000000080)
   20 | ====== AbiHint(0xt14, 128, t12) ======
   NEXT: PUT(rip) = t12; Ijk_Ret
}
WARNING | 2018-04-08 20:50:43,888 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:43,906 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:43,915 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vtestps_ymm_ymm/vtestps_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_V256 t4:Ity_V256 t5:Ity_V128 t6:Ity_V128 t7:Ity_V128 t8:Ity_V128 t9:Ity_V128 t10:Ity_V128 t11:Ity_V128 t12:Ity_V128 t13:Ity_V128 t14:Ity_I64 t15:Ity_V128 t16:Ity_V128 t17:Ity_V128 t18:Ity_I64 t19:Ity_I64 t20:Ity_I64 t21:Ity_I64 t22:Ity_I64 t23:Ity_I64 t24:Ity_I64 t25:Ity_I64 t26:Ity_I64 t27:Ity_I64 t28:Ity_I64 t29:Ity_I64 t30:Ity_I64 t31:Ity_I64 t32:Ity_I64 t33:Ity_I64 t34:Ity_I64 t35:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm1)
   03 | t2 = AndV256(t0,t1)
   04 | t3 = NotV256(t1)
   05 | t4 = AndV256(t0,t3)
   06 | t5 = V256toV128_1(t2)
   07 | t6 = V256toV128_0(t2)
   08 | t7 = V256toV128_1(t4)
   09 | t8 = V256toV128_0(t4)
   10 | t9 = OrV128(t5,t6)
   11 | t10 = OrV128(t7,t8)
   12 | t11 = InterleaveHI64x2(t9,t9)
   13 | t12 = InterleaveLO64x2(t9,t9)
   14 | t13 = OrV128(t12,t11)
   15 | t14 = V128to64(t13)
   16 | t15 = InterleaveHI64x2(t10,t10)
   17 | t16 = InterleaveLO64x2(t10,t10)
   18 | t17 = OrV128(t16,t15)
   19 | t18 = V128to64(t17)
   20 | t19 = And64(t14,0x8000000080000000)
   21 | t20 = And64(t18,0x8000000080000000)
   22 | t21 = Sub64(0x0000000000000000,t19)
   23 | t22 = Or64(t21,t19)
   24 | t23 = Sar64(t22,0x3f)
   25 | t24 = Not64(t23)
   26 | t25 = Sub64(0x0000000000000000,t20)
   27 | t26 = Or64(t25,t20)
   28 | t27 = Sar64(t26,0x3f)
   29 | t28 = Not64(t27)
   30 | t29 = And64(t28,0x0000000000000001)
   31 | t30 = And64(t24,0x0000000000000040)
   32 | t31 = Or64(t30,t29)
   33 | PUT(cc_dep1) = t31
   34 | PUT(cc_op) = 0x0000000000000000
   35 | PUT(cc_dep2) = 0x0000000000000000
   36 | PUT(cc_ndep) = 0x0000000000000000
   37 | PUT(pc) = 0x0000000000400005
   38 | ------ IMark(0x400005, 1, 0) ------
   39 | t32 = GET:I64(rsp)
   40 | t33 = LDle:I64(t32)
   41 | t34 = Add64(t32,0x0000000000000008)
   42 | PUT(rsp) = t34
   43 | t35 = Sub64(t34,0x0000000000000080)
   44 | ====== AbiHint(0xt35, 128, t33) ======
   NEXT: PUT(rip) = t33; Ijk_Ret
}
WARNING | 2018-04-08 20:48:17,054 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:17,085 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:17,131 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/setno_rh/setno_rh.o
IRSB {
   t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64 t5:Ity_I1 t6:Ity_I8 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64 t10:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I64(cc_op)
   02 | t1 = GET:I64(cc_dep1)
   03 | t2 = GET:I64(cc_dep2)
   04 | t3 = GET:I64(cc_ndep)
   05 | t4 = amd64g_calculate_condition(0x0000000000000001,t0,t1,t2,t3):Ity_I64
   06 | t5 = 64to1(t4)
   07 | t6 = 1Uto8(t5)
   08 | PUT(ah) = t6
   09 | PUT(pc) = 0x0000000000400003
   10 | ------ IMark(0x400003, 1, 0) ------
   11 | t7 = GET:I64(rsp)
   12 | t8 = LDle:I64(t7)
   13 | t9 = Add64(t7,0x0000000000000008)
   14 | PUT(rsp) = t9
   15 | t10 = Sub64(t9,0x0000000000000080)
   16 | ====== AbiHint(0xt10, 128, t8) ======
   NEXT: PUT(rip) = t8; Ijk_Ret
}
WARNING | 2018-04-08 20:49:31,622 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:31,641 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:31,648 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vmovups_ymm_ymm/vmovups_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64 t4:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | PUT(ymm1) = t0
   03 | PUT(pc) = 0x0000000000400004
   04 | ------ IMark(0x400004, 1, 0) ------
   05 | t1 = GET:I64(rsp)
   06 | t2 = LDle:I64(t1)
   07 | t3 = Add64(t1,0x0000000000000008)
   08 | PUT(rsp) = t3
   09 | t4 = Sub64(t3,0x0000000000000080)
   10 | ====== AbiHint(0xt4, 128, t2) ======
   NEXT: PUT(rip) = t2; Ijk_Ret
}
WARNING | 2018-04-08 20:49:47,449 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:49:47,467 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:49:47,480 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpcmpeqb_ymm_ymm_ymm/vpcmpeqb_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = CmpEQ8x32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:48:31,915 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:31,938 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:31,951 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/subw_r16_r16/subw_r16_r16.o
IRSB {
   t0:Ity_I16 t1:Ity_I16 t2:Ity_I16 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:I16(bx)
   02 | t1 = GET:I16(cx)
   03 | t2 = Sub16(t0,t1)
   04 | PUT(cc_op) = 0x0000000000000006
   05 | t3 = 16Uto64(t0)
   06 | PUT(cc_dep1) = t3
   07 | t4 = 16Uto64(t1)
   08 | PUT(cc_dep2) = t4
   09 | PUT(bx) = t2
   10 | PUT(pc) = 0x0000000000400003
   11 | ------ IMark(0x400003, 1, 0) ------
   12 | t5 = GET:I64(rsp)
   13 | t6 = LDle:I64(t5)
   14 | t7 = Add64(t5,0x0000000000000008)
   15 | PUT(rsp) = t7
   16 | t8 = Sub64(t7,0x0000000000000080)
   17 | ====== AbiHint(0xt8, 128, t6) ======
   NEXT: PUT(rip) = t6; Ijk_Ret
}
WARNING | 2018-04-08 20:48:50,375 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:48:50,407 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:48:50,429 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vdivsd_xmm_xmm_xmm/vdivsd_xmm_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm3)
   02 | t1 = GET:V128(xmm2)
   03 | t2 = Div64F0x2(t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(272) = 0
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t3 = GET:I64(rsp)
   09 | t4 = LDle:I64(t3)
   10 | t5 = Add64(t3,0x0000000000000008)
   11 | PUT(rsp) = t5
   12 | t6 = Sub64(t5,0x0000000000000080)
   13 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:37,042 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:37,100 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:37,132 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pmovsxwq_xmm_xmm/pmovsxwq_xmm_xmm.o
IRSB {
   t0:Ity_I32 t1:Ity_I16 t2:Ity_I64 t3:Ity_I16 t4:Ity_I64 t5:Ity_V128 t6:Ity_I64 t7:Ity_I64 t8:Ity_I64 t9:Ity_I64

   00 | ------ IMark(0x400000, 5, 0) ------
   01 | t0 = GET:I32(ymm2)
   02 | t1 = 32to16(t0)
   03 | t2 = 16Sto64(t1)
   04 | t3 = 32HIto16(t0)
   05 | t4 = 16Sto64(t3)
   06 | t5 = 64HLtoV128(t4,t2)
   07 | PUT(xmm1) = t5
   08 | PUT(pc) = 0x0000000000400005
   09 | ------ IMark(0x400005, 1, 0) ------
   10 | t6 = GET:I64(rsp)
   11 | t7 = LDle:I64(t6)
   12 | t8 = Add64(t6,0x0000000000000008)
   13 | PUT(rsp) = t8
   14 | t9 = Sub64(t8,0x0000000000000080)
   15 | ====== AbiHint(0xt9, 128, t7) ======
   NEXT: PUT(rip) = t7; Ijk_Ret
}
WARNING | 2018-04-08 20:50:01,011 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:50:01,029 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:50:01,040 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/vpmaxub_ymm_ymm_ymm/vpmaxub_ymm_ymm_ymm.o
IRSB {
   t0:Ity_V256 t1:Ity_V256 t2:Ity_V256 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V256(ymm2)
   02 | t1 = GET:V256(ymm3)
   03 | t2 = Max8Ux32(t0,t1)
   04 | PUT(ymm1) = t2
   05 | PUT(pc) = 0x0000000000400004
   06 | ------ IMark(0x400004, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
WARNING | 2018-04-08 20:47:29,120 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:47:29,141 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:47:29,172 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/pandn_xmm_xmm/pandn_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_V128 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64 t7:Ity_I64

   00 | ------ IMark(0x400000, 4, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = NotV128(t1)
   04 | t3 = AndV128(t2,t0)
   05 | PUT(xmm1) = t3
   06 | PUT(pc) = 0x0000000000400004
   07 | ------ IMark(0x400004, 1, 0) ------
   08 | t4 = GET:I64(rsp)
   09 | t5 = LDle:I64(t4)
   10 | t6 = Add64(t4,0x0000000000000008)
   11 | PUT(rsp) = t6
   12 | t7 = Sub64(t6,0x0000000000000080)
   13 | ====== AbiHint(0xt7, 128, t5) ======
   NEXT: PUT(rip) = t5; Ijk_Ret
}
WARNING | 2018-04-08 20:46:22,607 | [34mangr.analyses.disassembly_utils[0m | [34mYour verison of capstone does not support MIPS instruction groups.[0m
WARNING | 2018-04-08 20:46:22,652 | [37mcle.elf[0m | [37mno segments identified in PT_LOAD[0m
WARNING | 2018-04-08 20:46:22,794 | [33mcle.loader[0m | [33mThe main binary is a position-independent executable. It is being loaded with a base address of 0x400000.[0m
<Arch AMD64 (LE)>
4194304
./instructions/addps_xmm_xmm/addps_xmm_xmm.o
IRSB {
   t0:Ity_V128 t1:Ity_V128 t2:Ity_V128 t3:Ity_I64 t4:Ity_I64 t5:Ity_I64 t6:Ity_I64

   00 | ------ IMark(0x400000, 3, 0) ------
   01 | t0 = GET:V128(xmm2)
   02 | t1 = GET:V128(xmm1)
   03 | t2 = Add32Fx4(0x00000000,t1,t0)
   04 | PUT(xmm1) = t2
   05 | PUT(pc) = 0x0000000000400003
   06 | ------ IMark(0x400003, 1, 0) ------
   07 | t3 = GET:I64(rsp)
   08 | t4 = LDle:I64(t3)
   09 | t5 = Add64(t3,0x0000000000000008)
   10 | PUT(rsp) = t5
   11 | t6 = Sub64(t5,0x0000000000000080)
   12 | ====== AbiHint(0xt6, 128, t4) ======
   NEXT: PUT(rip) = t4; Ijk_Ret
}
