<?xml version="1.0" encoding="UTF-8"?>
<x86:instruction summary="Perform a Final Calculation for the Next Four SHA1 Message Dwords" xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:x86="http://www.felixcloutier.com/x86">
<x86:mnemonic name="SHA1MSG2"/>
<table>
<tr>
<th>Opcode/Instruction</th>
<th>Op/En</th>
<th>64/32 bit Mode Support</th>
<th>CPUID Feature Flag</th>
<th>Description</th></tr>
<tr>
<td>NP 0F 38 CA /r SHA1MSG2 xmm1, xmm2/m128</td>
<td>RM</td>
<td>V/V</td>
<td>SHA</td>
<td>Performs the final calculation for the next four SHA1 message dwords using intermediate results from xmm1 and the previous message dwords from xmm2/m128, storing the result in xmm1.</td></tr></table>
<h2>Instruction Operand Encoding</h2>
<table>
<tr>
<td>Op/En</td>
<td>Operand 1</td>
<td>Operand 2</td>
<td>Operand 3</td></tr>
<tr>
<td>RM</td>
<td>ModRM:reg (r, w)</td>
<td>ModRM:r/m (r)</td>
<td>NA</td></tr></table>
<h3>Description</h3>
<p>The SHA1MSG2 instruction is one of two SHA1 message scheduling instructions. The instruction performs the final calculation to derive the next four SHA1 message dwords.</p>
<h3>Operation</h3>
<h4>SHA1MSG2</h4>
<pre>W13←SRC2[95:64] ;
W14←SRC2[63: 32] ;
W15←SRC2[31: 0] ;
W16←(SRC1[127:96] XOR W13 ) ROL 1;
W17←(SRC1[95:64] XOR W14) ROL 1;
W18←(SRC1[63: 32] XOR W15) ROL 1;
W19←(SRC1[31: 0] XOR W16) ROL 1;
DEST[127:96] ← W16;
DEST[95:64] ← W17;
DEST[63:32] ← W18;
DEST[31:0] ← W19;
</pre>
<h3>Intel C/C++ Compiler Intrinsic Equivalent</h3>
<pre>SHA1MSG2: __m128i _mm_sha1msg2_epu32(__m128i, __m128i);
</pre>
<h3>Flags Affected</h3>
<p>None</p>
<h3>SIMD Floating-Point Exceptions</h3>
<p>None</p>
<h3>Other Exceptions</h3>
<p>See Exceptions Type 4.</p></x86:instruction>