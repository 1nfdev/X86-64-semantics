<?xml version="1.0" encoding="UTF-8"?>
<x86:instruction summary="Approximation to the Exponential 2^x of Packed Double-Precision Floating-Point Values with Less Than 2^-23 Relative Error" xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:x86="http://www.felixcloutier.com/x86">
<x86:mnemonic name="VEXP2PD"/>
<table>
<tr>
<th>Opcode/Instruction</th>
<th>Op/En</th>
<th>64/32 bit Mode Support</th>
<th>CPUID Feature Flag</th>
<th>Description</th></tr>
<tr>
<td>EVEX.512.66.0F38.W1 C8 /r VEXP2PD zmm1 {k1}{z}, zmm2/m512/m64bcst {sae}</td>
<td>A</td>
<td>V/V</td>
<td>AVX512ER</td>
<td>Computes approximations to the exponential 2^x (with less than 2^-23 of maximum relative error) of the packed double-precision floating-point values from zmm2/m512/m64bcst and stores the floating-point result in zmm1with writemask k1.</td></tr></table>
<h2>Instruction Operand Encoding</h2>
<table>
<tr>
<td>Op/En</td>
<td>Tuple Type</td>
<td>Operand 1</td>
<td>Operand 2</td>
<td>Operand 3</td>
<td>Operand 4</td></tr>
<tr>
<td>A</td>
<td>Full</td>
<td>ModRM:reg (r, w)</td>
<td>ModRM:r/m (r)</td>
<td>NA</td>
<td>NA</td></tr></table>
<h3>Description</h3>
<p>Computes the approximate base-2 exponential evaluation of the double-precision floating-point values in the source operand (the second operand) and stores the results to the destination operand (the first operand) using the writemask k1. The approximate base-2 exponential is evaluated with less than 2^-23 of relative error.</p>
<p>Denormal input values are treated as zeros and do not signal #DE, irrespective of MXCSR.DAZ. Denormal results are flushed to zeros and do not signal #UE, irrespective of MXCSR.FTZ.</p>
<p>The source operand is a ZMM register, a 512-bit memory location or a 512-bit vector broadcasted from a 64-bit memory location. The destination operand is a ZMM register, conditionally updated using writemask k1.</p>
<p>EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD.</p>
<h3>A numerically exact implementation of VEXP2xx can be found at https://software.intel.com/en-us/articles/refer-</h3>
<h3>ence-implementations-for-IA-approximation-instructions-vrcp14-vrsqrt14-vrcp28-vrsqrt28-vexp2.</h3>
<h3>Operation</h3>
<h4>VEXP2PD</h4>
<pre>(KL, VL) = (8, 512)
FOR j←0 TO KL-1
    i←j * 64
    IF k1[j] OR *no writemask* THEN
            IF (EVEX.b = 1) AND (SRC *is memory*)
                THEN DEST[i+63:i]←EXP2_23_DP(SRC[63:0])
                ELSE DEST[i+63:i]←EXP2_23_DP(SRC[i+63:i])
            FI;
    ELSE
        IF *merging-masking* ; merging-masking
            THEN *DEST[i+63:i] remains unchanged*
            ELSE ; zeroing-masking
                DEST[i+63:i] ← 0
        FI;
    FI;
ENDFOR;
</pre>
<figure id="tbl-6-33">
<table>
<tr>
<th>Source Input</th>
<th>Result</th>
<th>Comments</th></tr>
<tr>
<td>NaN</td>
<td>QNaN(src)</td>
<td>If (SRC = SNaN) then #I</td></tr>
<tr>
<td>+∞</td>
<td>+∞</td>
<td/></tr>
<tr>
<td>+/-0</td>
<td>1.0f</td>
<td><em>Exact result</em></td></tr>
<tr>
<td>-∞</td>
<td>+0.0f</td>
<td/></tr>
<tr>
<td>Integral value N</td>
<td>2^ (N)</td>
<td><em>Exact result</em></td></tr></table>
<figcaption><x86:tblref>Table 6-33</x86:tblref>. Special Values Behavior</figcaption></figure>
<h3>Intel C/C++ Compiler Intrinsic Equivalent</h3>
<pre>VEXP2PD __m512d _mm512_exp2a23_round_pd (__m512d a, int sae);
</pre>
<pre>VEXP2PD __m512d _mm512_mask_exp2a23_round_pd (__m512d a, __mmask8 m, __m512d b, int sae);
</pre>
<pre>VEXP2PD __m512d _mm512_maskz_exp2a23_round_pd ( __mmask8 m, __m512d b, int sae);
</pre>
<h3>SIMD Floating-Point Exceptions</h3>
<p>Invalid (if SNaN input), Overflow</p>
<h3>Other Exceptions</h3>
<p>See Exceptions Type E2.</p></x86:instruction>