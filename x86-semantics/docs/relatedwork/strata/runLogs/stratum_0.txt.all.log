[4m[1m[34mCheck if supported: addq_r64_r64[0m
[4m[1m[34mcreatespec addq_r64_r64: kproveSpecs//x86-semantics_addq_r64_r64_spec.k[0m
[4m[1m[34maddq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: orq %rbx, %rbx
%af -> 1
%pf -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%of -> 1
%rbx -> 1

Circuit: adcq %rcx, %rbx
%sf -> 1
%rbx -> 1
%af -> 1
%rcx -> 1
%pf -> 1
%zf -> 1
%cf -> 1
%of -> 1

Total Circuit
RBX -> 1
CF -> 1
PF -> 1
AF -> 1
ZF -> 1
RCX -> 1
OF -> 1
SF -> 1

Target
AF -> 1
ZF -> 1
RBX -> 1
CF -> 1
PF -> 1
SF -> 1
RCX -> 1
OF -> 1

[4m[1m[34mkprove addq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_addq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_addq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput addq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_addq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput addq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34maddq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn addq_r64_r64: derivedInstructions//x86-addq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "addq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andnq_r64_r64_r64[0m
[4m[1m[34mcreatespec andnq_r64_r64_r64: kproveSpecs//x86-semantics_andnq_r64_r64_r64_spec.k[0m
[4m[1m[34mandnq_r64_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andnq_r64_r64_r64[0m
Undef Set
af -> 1
pf -> 1

Circuit: orq %rcx, %rdx
%rdx -> 1
%of -> 1
%zf -> 1
%rcx -> 1
%af -> 1
%pf -> 1
%cf -> 1
%sf -> 1

Circuit: xorq %rcx, %rdx
%cf -> 1
%zf -> 1
%rcx -> 1
%pf -> 1
%af -> 1
%sf -> 1
%rdx -> 1
%of -> 1

Circuit: movq %rdx, %rbx
%rbx -> 1
%rdx -> 1

Total Circuit
CF -> 1
RBX -> 1
PF -> 1
AF -> 1
ZF -> 1
RDX -> 1
OF -> 1
RCX -> 1
SF -> 1

Target
RDX -> 1
RCX -> 1
OF -> 1
SF -> 1
RBX -> 1
CF -> 1
PF -> 1
 -> 1
AF -> 1
ZF -> 1

[4m[1m[34mkprove andnq_r64_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_andnq_r64_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andnq_r64_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andnq_r64_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andnq_r64_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andnq_r64_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandnq_r64_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andnq_r64_r64_r64: derivedInstructions//x86-andnq_r64_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andnq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cbtw[0m
[4m[1m[34mcreatespec cbtw: kproveSpecs//x86-semantics_cbtw_spec.k[0m
[4m[1m[34mcbtw: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movsbq %al, %r8
%al -> 1
%r8 -> 1

Circuit: movq $0x10, %r9
\$0x10 -> 1
%r9 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Circuit: callq .move_128_032_xmm1_eax_edx_r8d_r9d
%xmm1 -> 1
%r9d -> 1
%r8d -> 1
%edx -> 1
%eax -> 1

Total Circuit
RDX -> 1
RAX -> 1
 -> 1
R8 -> 1
YMM1 -> 1
R9 -> 1

Target
RAX -> 1

[4m[1m[34mkprove cbtw[0m
time krun --prove kproveSpecs//x86-semantics_cbtw_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cbtw_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cbtw[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cbtw_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cbtw[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcbtw: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cbtw: derivedInstructions//x86-cbtw.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cbtw" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: clc[0m
[4m[1m[34mcreatespec clc: kproveSpecs//x86-semantics_clc_spec.k[0m
[4m[1m[34mclc: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorq %rax, %rax
%rax -> 1
%of -> 1
%cf -> 1
%pf -> 1
%af -> 1
%zf -> 1
%sf -> 1

Circuit: adcb %al, %al
%of -> 1
%al -> 1
%cf -> 1
%zf -> 1
%af -> 1
%pf -> 1
%sf -> 1

Total Circuit
OF -> 1
SF -> 1
PF -> 1
CF -> 1
RAX -> 1
ZF -> 1
AF -> 1

Target
CF -> 1

[4m[1m[34mkprove clc[0m
time krun --prove kproveSpecs//x86-semantics_clc_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_clc_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput clc[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_clc_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput clc[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mclc: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn clc: derivedInstructions//x86-clc.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "clc" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cltq[0m
[4m[1m[34mcreatespec cltq: kproveSpecs//x86-semantics_cltq_spec.k[0m
[4m[1m[34mcltq: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorq %rsi, %rsi
%of -> 1
%rsi -> 1
%sf -> 1
%af -> 1
%pf -> 1
%zf -> 1
%cf -> 1

Circuit: movslq %esi, %r9
%esi -> 1
%r9 -> 1

Circuit: adcl %r9d, %eax
%of -> 1
%rax -> 1
%eax -> 1
%r9d -> 1
%sf -> 1
%cf -> 1
%zf -> 1
%af -> 1
%pf -> 1

Circuit: movslq %eax, %rax
%rax -> 1
%eax -> 1

Total Circuit
RSI -> 1
OF -> 1
SF -> 1
R9 -> 1
CF -> 1
PF -> 1
AF -> 1
RAX -> 1
ZF -> 1

Target
RAX -> 1

[4m[1m[34mkprove cltq[0m
time krun --prove kproveSpecs//x86-semantics_cltq_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cltq_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cltq[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cltq_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cltq[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcltq: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cltq: derivedInstructions//x86-cltq.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cltq" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovzq_r64_r64[0m
[4m[1m[34mcreatespec cmovzq_r64_r64: kproveSpecs//x86-semantics_cmovzq_r64_r64_spec.k[0m
[4m[1m[34mcmovzq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovzq_r64_r64[0m
Circuit: cmoveq %rcx, %rbx
%rbx -> 1
%rcx -> 1
cmov -> 1
%zf -> 1

Total Circuit
 -> 1
ZF -> 1
RBX -> 1
RCX -> 1

Target
RCX -> 1
RBX -> 1
ZF -> 1
 -> 1

[4m[1m[34mkprove cmovzq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovzq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovzq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovzq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovzq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovzq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovzq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovzq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovzq_r64_r64: derivedInstructions//x86-cmovzq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovzq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovzw_r16_r16[0m
[4m[1m[34mcreatespec cmovzw_r16_r16: kproveSpecs//x86-semantics_cmovzw_r16_r16_spec.k[0m
[4m[1m[34mcmovzw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovzw_r16_r16[0m
Circuit: movswq %cx, %r13
%cx -> 1
%r13 -> 1

Circuit: movslq %r13d, %r13
%r13d -> 1
%r13 -> 1

Circuit: cmoveq %r13, %rbx
%r13 -> 1
%zf -> 1
cmov -> 1
%rbx -> 1

Total Circuit
RCX -> 1
R13 -> 1
RBX -> 1
 -> 1
ZF -> 1

Target
 -> 1
ZF -> 1
RBX -> 1
RCX -> 1

[4m[1m[34mkprove cmovzw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovzw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovzw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovzw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovzw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovzw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovzw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovzw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovzw_r16_r16: derivedInstructions//x86-cmovzw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovzw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cvtss2sd_xmm_xmm[0m
[4m[1m[34mcreatespec cvtss2sd_xmm_xmm: kproveSpecs//x86-semantics_cvtss2sd_xmm_xmm_spec.k[0m
[4m[1m[34mcvtss2sd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm1_xmm12_xmm13
%xmm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Circuit: vcvtps2pd %xmm2, %ymm12
%mxcsr::rc[0] -> 1
%xmm2 -> 1
%ymm12 -> 1
avx -> 1

Circuit: callq .move_64_128_xmm12_xmm13_xmm1
%xmm13 -> 1
%xmm12 -> 1
%xmm1 -> 1

Total Circuit
 -> 1
YMM1 -> 1
YMM13 -> 1
YMM2 -> 1
YMM12 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove cvtss2sd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_cvtss2sd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cvtss2sd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cvtss2sd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cvtss2sd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cvtss2sd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcvtss2sd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cvtss2sd_xmm_xmm: derivedInstructions//x86-cvtss2sd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cvtss2sd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: decb_r8[0m
[4m[1m[34mcreatespec decb_r8: kproveSpecs//x86-semantics_decb_r8_spec.k[0m
[4m[1m[34mdecb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0xffffffffffffffff, %r9
\$0xffffffffffffffff -> 1
%r9 -> 1

Circuit: xorq %rcx, %rcx
%sf -> 1
%cf -> 1
%pf -> 1
%rcx -> 1
%af -> 1
%zf -> 1
%of -> 1

Circuit: adcb %r9b, %bl
%of -> 1
%sf -> 1
%r9b -> 1
%zf -> 1
%af -> 1
%pf -> 1
%bl -> 1
%cf -> 1

Total Circuit
OF -> 1
RCX -> 1
SF -> 1
PF -> 1
CF -> 1
R9 -> 1
RBX -> 1
ZF -> 1
 -> 1
AF -> 1

Target
SF -> 1
OF -> 1
AF -> 1
ZF -> 1
RBX -> 1
PF -> 1

[4m[1m[34mkprove decb_r8[0m
time krun --prove kproveSpecs//x86-semantics_decb_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_decb_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput decb_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_decb_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput decb_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mdecb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn decb_r8: derivedInstructions//x86-decb_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "decb %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: incl_r32[0m
[4m[1m[34mcreatespec incl_r32: kproveSpecs//x86-semantics_incl_r32_spec.k[0m
[4m[1m[34mincl_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .clear_cf
%cf -> 1

Circuit: callq .set_pf
%pf -> 1

Circuit: callq .read_pf_into_rcx
%rcx -> 1
%pf -> 1

Circuit: adcl %ecx, %ebx
%rbx -> 1
%sf -> 1
%cf -> 1
%pf -> 1
%af -> 1
%zf -> 1
%ebx -> 1
%of -> 1
%ecx -> 1

Circuit: callq .set_szp_for_ebx
%ebx -> 1
%pf -> 1
%zf -> 1
%sf -> 1

Total Circuit
PF -> 1
RBX -> 1
CF -> 1
ZF -> 1
AF -> 1
RCX -> 1
OF -> 1
SF -> 1

Target
SF -> 1
OF -> 1
AF -> 1
ZF -> 1
RBX -> 1
PF -> 1

[4m[1m[34mkprove incl_r32[0m
time krun --prove kproveSpecs//x86-semantics_incl_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_incl_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput incl_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_incl_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput incl_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mincl_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn incl_r32: derivedInstructions//x86-incl_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "incl %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: incw_r16[0m
[4m[1m[34mcreatespec incw_r16: kproveSpecs//x86-semantics_incw_r16_spec.k[0m
[4m[1m[34mincw_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorq %rax, %rax
%rax -> 1
%of -> 1
%cf -> 1
%af -> 1
%pf -> 1
%zf -> 1
%sf -> 1

Circuit: callq .set_cf
%cf -> 1

Circuit: adcw %ax, %bx
%cf -> 1
%bx -> 1
%zf -> 1
%af -> 1
%pf -> 1
%ax -> 1
%sf -> 1
%of -> 1

Circuit: callq .set_szp_for_bx
%sf -> 1
%zf -> 1
%bx -> 1
%pf -> 1

Total Circuit
AF -> 1
RAX -> 1
ZF -> 1
CF -> 1
RBX -> 1
PF -> 1
SF -> 1
OF -> 1

Target
SF -> 1
OF -> 1
AF -> 1
ZF -> 1
RBX -> 1
PF -> 1

[4m[1m[34mkprove incw_r16[0m
time krun --prove kproveSpecs//x86-semantics_incw_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_incw_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput incw_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_incw_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput incw_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mincw_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn incw_r16: derivedInstructions//x86-incw_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "incw %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movapd_xmm_xmm[0m
[4m[1m[34mcreatespec movapd_xmm_xmm: kproveSpecs//x86-semantics_movapd_xmm_xmm_spec.k[0m
[4m[1m[34mmovapd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%xmm2 -> 1
%r13 -> 1
%r12 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%xmm1 -> 1
%r12 -> 1
%r13 -> 1

Total Circuit
YMM1 -> 1
R13 -> 1
R12 -> 1
YMM2 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove movapd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movapd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movapd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movapd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movapd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movapd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovapd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movapd_xmm_xmm: derivedInstructions//x86-movapd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movapd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movaps_xmm_xmm[0m
[4m[1m[34mcreatespec movaps_xmm_xmm: kproveSpecs//x86-semantics_movaps_xmm_xmm_spec.k[0m
[4m[1m[34mmovaps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7
%xmm7 -> 1
%xmm6 -> 1
%xmm5 -> 1
%xmm2 -> 1
%xmm4 -> 1

Circuit: callq .move_032_128_xmm4_xmm5_xmm6_xmm7_xmm1
%xmm7 -> 1
%xmm6 -> 1
%xmm1 -> 1
%xmm5 -> 1
%xmm4 -> 1

Total Circuit
YMM6 -> 1
YMM1 -> 1
YMM7 -> 1
YMM2 -> 1
YMM4 -> 1
YMM5 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove movaps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movaps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movaps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movaps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movaps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movaps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovaps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movaps_xmm_xmm: derivedInstructions//x86-movaps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movaps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movd_r32_xmm[0m
[4m[1m[34mcreatespec movd_r32_xmm: kproveSpecs//x86-semantics_movd_r32_xmm_spec.k[0m
[4m[1m[34mmovd_r32_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
%xmm9 -> 1
%xmm1 -> 1
%xmm10 -> 1
%xmm11 -> 1
%xmm8 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%xmm8 -> 1
%ymm1 -> 1
%xmm9 -> 1

Circuit: callq .move_128_064_xmm1_r10_r11
%r11 -> 1
%r10 -> 1
%xmm1 -> 1

Circuit: callq .move_032_064_r10d_r11d_rbx
%r11d -> 1
%rbx -> 1
%r10d -> 1

Total Circuit
YMM1 -> 1
RBX -> 1
YMM8 -> 1
YMM11 -> 1
YMM9 -> 1
YMM10 -> 1
R10 -> 1
R11 -> 1

Target
 -> 1
YMM1 -> 1
RBX -> 1

[4m[1m[34mkprove movd_r32_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movd_r32_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movd_r32_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movd_r32_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movd_r32_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movd_r32_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovd_r32_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movd_r32_xmm: derivedInstructions//x86-movd_r32_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movd %xmm1, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movddup_xmm_xmm[0m
[4m[1m[34mcreatespec movddup_xmm_xmm: kproveSpecs//x86-semantics_movddup_xmm_xmm_spec.k[0m
[4m[1m[34mmovddup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%xmm2 -> 1
%r13 -> 1

Circuit: movq %r12, %r13
%r12 -> 1
%r13 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r13 -> 1
%xmm1 -> 1
%r12 -> 1

Total Circuit
R13 -> 1
YMM1 -> 1
R12 -> 1
YMM2 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove movddup_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movddup_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movddup_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movddup_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movddup_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movddup_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovddup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movddup_xmm_xmm: derivedInstructions//x86-movddup_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movddup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movdqa_xmm_xmm[0m
[4m[1m[34mcreatespec movdqa_xmm_xmm: kproveSpecs//x86-semantics_movdqa_xmm_xmm_spec.k[0m
[4m[1m[34mmovdqa_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r8 -> 1
%xmm1 -> 1
%r9 -> 1

Total Circuit
R8 -> 1
YMM1 -> 1
R9 -> 1
YMM2 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove movdqa_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movdqa_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movdqa_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movdqa_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movdqa_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movdqa_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovdqa_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movdqa_xmm_xmm: derivedInstructions//x86-movdqa_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movdqa %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movdqu_xmm_xmm[0m
[4m[1m[34mcreatespec movdqu_xmm_xmm: kproveSpecs//x86-semantics_movdqu_xmm_xmm_spec.k[0m
[4m[1m[34mmovdqu_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm2_xmm10_xmm11
%xmm2 -> 1
%xmm11 -> 1
%xmm10 -> 1

Circuit: callq .move_64_128_xmm10_xmm11_xmm1
%xmm1 -> 1
%xmm10 -> 1
%xmm11 -> 1

Total Circuit
YMM1 -> 1
YMM10 -> 1
YMM2 -> 1
YMM11 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove movdqu_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movdqu_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movdqu_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movdqu_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movdqu_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movdqu_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovdqu_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movdqu_xmm_xmm: derivedInstructions//x86-movdqu_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movdqu %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movsbl_r32_r8[0m
[4m[1m[34mcreatespec movsbl_r32_r8: kproveSpecs//x86-semantics_movsbl_r32_r8_spec.k[0m
[4m[1m[34mmovsbl_r32_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .set_of
%of -> 1

Circuit: callq .read_of_into_rbx
%of -> 1
%rbx -> 1

Circuit: callq .move_064_032_rbx_r10d_r11d
%rbx -> 1
%r10d -> 1
%r11d -> 1

Circuit: movsbq %cl, %r10
%cl -> 1
%r10 -> 1

Circuit: callq .move_032_064_r10d_r11d_rbx
%r11d -> 1
%rbx -> 1
%r10d -> 1

Total Circuit
RCX -> 1
OF -> 1
R10 -> 1
R11 -> 1
RBX -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove movsbl_r32_r8[0m
time krun --prove kproveSpecs//x86-semantics_movsbl_r32_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movsbl_r32_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movsbl_r32_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movsbl_r32_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movsbl_r32_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovsbl_r32_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movsbl_r32_r8: derivedInstructions//x86-movsbl_r32_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movsbl %cl, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movups_xmm_xmm[0m
[4m[1m[34mcreatespec movups_xmm_xmm: kproveSpecs//x86-semantics_movups_xmm_xmm_spec.k[0m
[4m[1m[34mmovups_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7
%xmm5 -> 1
%xmm6 -> 1
%xmm7 -> 1
%xmm4 -> 1
%xmm2 -> 1

Circuit: callq .move_032_128_xmm4_xmm5_xmm6_xmm7_xmm1
%xmm4 -> 1
%xmm1 -> 1
%xmm6 -> 1
%xmm7 -> 1
%xmm5 -> 1

Total Circuit
YMM1 -> 1
YMM6 -> 1
YMM5 -> 1
YMM4 -> 1
YMM7 -> 1
YMM2 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove movups_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movups_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movups_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movups_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movups_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movups_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovups_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movups_xmm_xmm: derivedInstructions//x86-movups_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movups %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movw_r16_r16[0m
[4m[1m[34mcreatespec movw_r16_r16: kproveSpecs//x86-semantics_movw_r16_r16_spec.k[0m
[4m[1m[34mmovw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movswq %cx, %rbx
%rbx -> 1
%cx -> 1

Total Circuit
RBX -> 1
RCX -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove movw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_movw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movw_r16_r16: derivedInstructions//x86-movw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movzbl_r32_rh[0m
[4m[1m[34mcreatespec movzbl_r32_rh: kproveSpecs//x86-semantics_movzbl_r32_rh_spec.k[0m
[4m[1m[34mmovzbl_r32_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x40, %rbx
%rbx -> 1
\$0x40 -> 1

Circuit: movb %ah, %bl
%ah -> 1
%bl -> 1

Total Circuit
RAX -> 1
 -> 1
RBX -> 1

Target
RBX -> 1
RAX -> 1

[4m[1m[34mkprove movzbl_r32_rh[0m
time krun --prove kproveSpecs//x86-semantics_movzbl_r32_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movzbl_r32_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movzbl_r32_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movzbl_r32_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movzbl_r32_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovzbl_r32_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movzbl_r32_rh: derivedInstructions//x86-movzbl_r32_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movzbl %ah, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movzbw_r16_r8[0m
[4m[1m[34mcreatespec movzbw_r16_r8: kproveSpecs//x86-semantics_movzbw_r16_r8_spec.k[0m
[4m[1m[34mmovzbw_r16_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x5, %rbx
\$0x5 -> 1
%rbx -> 1

Circuit: callq .move_064_032_rbx_r12d_r13d
%r13d -> 1
%r12d -> 1
%rbx -> 1

Circuit: movsbq %cl, %r12
%cl -> 1
%r12 -> 1

Circuit: callq .move_008_016_r12b_r13b_bx
%r13b -> 1
%bx -> 1
%r12b -> 1

Total Circuit
R12 -> 1
 -> 1
RBX -> 1
R13 -> 1
RCX -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove movzbw_r16_r8[0m
time krun --prove kproveSpecs//x86-semantics_movzbw_r16_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movzbw_r16_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movzbw_r16_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movzbw_r16_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movzbw_r16_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovzbw_r16_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movzbw_r16_r8: derivedInstructions//x86-movzbw_r16_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movzbw %cl, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movzbw_r16_rh[0m
[4m[1m[34mcreatespec movzbw_r16_rh: kproveSpecs//x86-semantics_movzbw_r16_rh_spec.k[0m
[4m[1m[34mmovzbw_r16_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorq %rcx, %rcx
%sf -> 1
%cf -> 1
%zf -> 1
%af -> 1
%rcx -> 1
%pf -> 1
%of -> 1

Circuit: callq .read_sf_into_rbx
%rbx -> 1
%sf -> 1

Circuit: movb %ah, %bl
%bl -> 1
%ah -> 1

Total Circuit
RAX -> 1
ZF -> 1
AF -> 1
PF -> 1
CF -> 1
RBX -> 1
SF -> 1
OF -> 1
RCX -> 1

Target
RAX -> 1
RBX -> 1

[4m[1m[34mkprove movzbw_r16_rh[0m
time krun --prove kproveSpecs//x86-semantics_movzbw_r16_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movzbw_r16_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movzbw_r16_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movzbw_r16_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movzbw_r16_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovzbw_r16_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movzbw_r16_rh: derivedInstructions//x86-movzbw_r16_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movzbw %ah, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movzwl_r32_r16[0m
[4m[1m[34mcreatespec movzwl_r32_r16: kproveSpecs//x86-semantics_movzwl_r32_r16_spec.k[0m
[4m[1m[34mmovzwl_r32_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x20, %rbx
%rbx -> 1
\$0x20 -> 1

Circuit: callq .move_016_008_cx_r12b_r13b
%cx -> 1
%r12b -> 1
%r13b -> 1

Circuit: callq .move_008_016_r12b_r13b_bx
%r13b -> 1
%bx -> 1
%r12b -> 1

Total Circuit
RCX -> 1
R13 -> 1
RBX -> 1
 -> 1
R12 -> 1

Target
RCX -> 1
RBX -> 1

[4m[1m[34mkprove movzwl_r32_r16[0m
time krun --prove kproveSpecs//x86-semantics_movzwl_r32_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movzwl_r32_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movzwl_r32_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movzwl_r32_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movzwl_r32_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovzwl_r32_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movzwl_r32_r16: derivedInstructions//x86-movzwl_r32_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movzwl %cx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: nopl_r32[0m
[4m[1m[34mcreatespec nopl_r32: kproveSpecs//x86-semantics_nopl_r32_spec.k[0m
[4m[1m[34mnopl_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Total Circuit

Target
 -> 1
RBX -> 1

[4m[1m[34mkprove nopl_r32[0m
time krun --prove kproveSpecs//x86-semantics_nopl_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_nopl_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput nopl_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_nopl_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput nopl_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnopl_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn nopl_r32: derivedInstructions//x86-nopl_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "nopl %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: nopw_r16[0m
[4m[1m[34mcreatespec nopw_r16: kproveSpecs//x86-semantics_nopw_r16_spec.k[0m
[4m[1m[34mnopw_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Total Circuit

Target
RBX -> 1
 -> 1

[4m[1m[34mkprove nopw_r16[0m
time krun --prove kproveSpecs//x86-semantics_nopw_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_nopw_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput nopw_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_nopw_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput nopw_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnopw_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn nopw_r16: derivedInstructions//x86-nopw_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "nopw %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rcll_r32_one[0m
[4m[1m[34mcreatespec rcll_r32_one: kproveSpecs//x86-semantics_rcll_r32_one_spec.k[0m
[4m[1m[34mrcll_r32_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movslq %ebx, %rbx
%ebx -> 1
%rbx -> 1

Circuit: adcl %ebx, %ebx
%of -> 1
%ebx -> 1
%sf -> 1
%rbx -> 1
%zf -> 1
%af -> 1
%pf -> 1
%cf -> 1

Total Circuit
ZF -> 1
AF -> 1
PF -> 1
RBX -> 1
CF -> 1
SF -> 1
OF -> 1

Target
CF -> 1
RBX -> 1
 -> 1
OF -> 1

[4m[1m[34mkprove rcll_r32_one[0m
time krun --prove kproveSpecs//x86-semantics_rcll_r32_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rcll_r32_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rcll_r32_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rcll_r32_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rcll_r32_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrcll_r32_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rcll_r32_one: derivedInstructions//x86-rcll_r32_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rcll \$0x1, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rclq_r64_one[0m
[4m[1m[34mcreatespec rclq_r64_one: kproveSpecs//x86-semantics_rclq_r64_one_spec.k[0m
[4m[1m[34mrclq_r64_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: adcq %rbx, %rbx
%of -> 1
%sf -> 1
%rbx -> 1
%zf -> 1
%pf -> 1
%af -> 1
%cf -> 1

Total Circuit
ZF -> 1
AF -> 1
PF -> 1
RBX -> 1
CF -> 1
SF -> 1
OF -> 1

Target
OF -> 1
 -> 1
RBX -> 1
CF -> 1

[4m[1m[34mkprove rclq_r64_one[0m
time krun --prove kproveSpecs//x86-semantics_rclq_r64_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rclq_r64_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rclq_r64_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rclq_r64_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rclq_r64_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrclq_r64_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rclq_r64_one: derivedInstructions//x86-rclq_r64_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rclq \$0x1, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rclw_r16_one[0m
[4m[1m[34mcreatespec rclw_r16_one: kproveSpecs//x86-semantics_rclw_r16_one_spec.k[0m
[4m[1m[34mrclw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: adcw %bx, %bx
%pf -> 1
%af -> 1
%zf -> 1
%bx -> 1
%cf -> 1
%sf -> 1
%of -> 1

Total Circuit
AF -> 1
ZF -> 1
RBX -> 1
CF -> 1
PF -> 1
SF -> 1
OF -> 1

Target
OF -> 1
 -> 1
RBX -> 1
CF -> 1

[4m[1m[34mkprove rclw_r16_one[0m
time krun --prove kproveSpecs//x86-semantics_rclw_r16_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rclw_r16_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rclw_r16_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rclw_r16_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rclw_r16_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrclw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rclw_r16_one: derivedInstructions//x86-rclw_r16_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rclw \$0x1, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sarxq_r64_r64_r64[0m
[4m[1m[34mcreatespec sarxq_r64_r64_r64: kproveSpecs//x86-semantics_sarxq_r64_r64_r64_spec.k[0m
[4m[1m[34msarxq_r64_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_064_032_rdx_r10d_r11d
%r10d -> 1
%r11d -> 1
%rdx -> 1

Circuit: callq .move_064_032_rcx_r8d_r9d
%r9d -> 1
%r8d -> 1
%rcx -> 1

Circuit: callq .move_008_016_r10b_r11b_cx
%r10b -> 1
%cx -> 1
%r11b -> 1

Circuit: callq .move_032_064_r8d_r9d_rbx
%rbx -> 1
%r8d -> 1
%r9d -> 1

Circuit: sarq %cl, %rbx
%af -> 1
%pf -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%rbx -> 1
%cl -> 1
%of -> 1

Total Circuit
RDX -> 1
OF -> 1
RCX -> 1
R11 -> 1
R10 -> 1
SF -> 1
CF -> 1
RBX -> 1
R9 -> 1
PF -> 1
R8 -> 1
AF -> 1
ZF -> 1

Target
RDX -> 1
RCX -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove sarxq_r64_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_sarxq_r64_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sarxq_r64_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sarxq_r64_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sarxq_r64_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sarxq_r64_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msarxq_r64_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sarxq_r64_r64_r64: derivedInstructions//x86-sarxq_r64_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sarxq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setae_r8[0m
[4m[1m[34mcreatespec setae_r8: kproveSpecs//x86-semantics_setae_r8_spec.k[0m
[4m[1m[34msetae_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_cf_into_rbx
%rbx -> 1
%cf -> 1

Circuit: callq .set_szp_for_bl
%bl -> 1
%zf -> 1
%pf -> 1
%sf -> 1

Circuit: callq .read_zf_into_rbx
%zf -> 1
%rbx -> 1

Total Circuit
PF -> 1
CF -> 1
RBX -> 1
ZF -> 1
SF -> 1

Target
CF -> 1
RBX -> 1

[4m[1m[34mkprove setae_r8[0m
time krun --prove kproveSpecs//x86-semantics_setae_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setae_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setae_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setae_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setae_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetae_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setae_r8: derivedInstructions//x86-setae_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setae %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setb_r8[0m
[4m[1m[34mcreatespec setb_r8: kproveSpecs//x86-semantics_setb_r8_spec.k[0m
[4m[1m[34msetb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_cf_into_rcx
%cf -> 1
%rcx -> 1

Circuit: movsbq %cl, %rbx
%cl -> 1
%rbx -> 1

Circuit: orq %rcx, %rbx
%zf -> 1
%pf -> 1
%af -> 1
%rcx -> 1
%cf -> 1
%sf -> 1
%rbx -> 1
%of -> 1

Total Circuit
CF -> 1
RBX -> 1
PF -> 1
AF -> 1
ZF -> 1
OF -> 1
RCX -> 1
SF -> 1

Target
RBX -> 1
CF -> 1

[4m[1m[34mkprove setb_r8[0m
time krun --prove kproveSpecs//x86-semantics_setb_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setb_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setb_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setb_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setb_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setb_r8: derivedInstructions//x86-setb_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setb %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setbe_r8[0m
[4m[1m[34mcreatespec setbe_r8: kproveSpecs//x86-semantics_setbe_r8_spec.k[0m
[4m[1m[34msetbe_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rcx
%zf -> 1
%rcx -> 1

Circuit: callq .read_cf_into_rbx
%rbx -> 1
%cf -> 1

Circuit: cmoveq %rcx, %rbx
%zf -> 1
cmov -> 1
%rcx -> 1
%rbx -> 1

Circuit: callq .move_032_016_ecx_r8w_r9w
%r9w -> 1
%ecx -> 1
%r8w -> 1

Circuit: callq .move_r8b_to_byte_7_of_rbx
%r8b -> 1
%rbx -> 1

Total Circuit
ZF -> 1
R8 -> 1
 -> 1
RBX -> 1
R9 -> 1
CF -> 1
RCX -> 1

Target
CF -> 1
RBX -> 1
ZF -> 1

[4m[1m[34mkprove setbe_r8[0m
time krun --prove kproveSpecs//x86-semantics_setbe_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setbe_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setbe_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setbe_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setbe_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetbe_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setbe_r8: derivedInstructions//x86-setbe_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setbe %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setc_rh[0m
[4m[1m[34mcreatespec setc_rh: kproveSpecs//x86-semantics_setc_rh_spec.k[0m
[4m[1m[34msetc_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_cf_into_rcx
%cf -> 1
%rcx -> 1

Circuit: movb %cl, %ah
%cl -> 1
%ah -> 1

Total Circuit
CF -> 1
RAX -> 1
RCX -> 1

Target
RAX -> 1
CF -> 1

[4m[1m[34mkprove setc_rh[0m
time krun --prove kproveSpecs//x86-semantics_setc_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setc_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setc_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setc_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setc_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetc_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setc_rh: derivedInstructions//x86-setc_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setc %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sete_r8[0m
[4m[1m[34mcreatespec sete_r8: kproveSpecs//x86-semantics_sete_r8_spec.k[0m
[4m[1m[34msete_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rbx
%rbx -> 1
%zf -> 1

Total Circuit
ZF -> 1
RBX -> 1

Target
RBX -> 1
ZF -> 1

[4m[1m[34mkprove sete_r8[0m
time krun --prove kproveSpecs//x86-semantics_sete_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sete_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sete_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sete_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sete_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msete_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sete_r8: derivedInstructions//x86-sete_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sete %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnae_rh[0m
[4m[1m[34mcreatespec setnae_rh: kproveSpecs//x86-semantics_setnae_rh_spec.k[0m
[4m[1m[34msetnae_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_cf_into_rbx
%rbx -> 1
%cf -> 1

Circuit: movb %bl, %ah
%bl -> 1
%ah -> 1

Total Circuit
RAX -> 1
RBX -> 1
CF -> 1

Target
RAX -> 1
CF -> 1

[4m[1m[34mkprove setnae_rh[0m
time krun --prove kproveSpecs//x86-semantics_setnae_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnae_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnae_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnae_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnae_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnae_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnae_rh: derivedInstructions//x86-setnae_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnae %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setno_rh[0m
[4m[1m[34mcreatespec setno_rh: kproveSpecs//x86-semantics_setno_rh_spec.k[0m
[4m[1m[34msetno_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_of_into_rbx
%rbx -> 1
%of -> 1

Circuit: callq .set_szp_for_ebx
%ebx -> 1
%sf -> 1
%pf -> 1
%zf -> 1

Circuit: callq .read_zf_into_rcx
%zf -> 1
%rcx -> 1

Circuit: movb %cl, %ah
%cl -> 1
%ah -> 1

Total Circuit
RCX -> 1
OF -> 1
SF -> 1
RBX -> 1
PF -> 1
ZF -> 1
RAX -> 1

Target
OF -> 1
RAX -> 1

[4m[1m[34mkprove setno_rh[0m
time krun --prove kproveSpecs//x86-semantics_setno_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setno_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setno_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setno_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setno_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetno_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setno_rh: derivedInstructions//x86-setno_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setno %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnp_r8[0m
[4m[1m[34mcreatespec setnp_r8: kproveSpecs//x86-semantics_setnp_r8_spec.k[0m
[4m[1m[34msetnp_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_pf_into_rbx
%pf -> 1
%rbx -> 1

Circuit: callq .set_szp_for_bx
%sf -> 1
%pf -> 1
%bx -> 1
%zf -> 1

Circuit: callq .read_zf_into_rbx
%zf -> 1
%rbx -> 1

Total Circuit
SF -> 1
RBX -> 1
PF -> 1
ZF -> 1

Target
RBX -> 1
PF -> 1

[4m[1m[34mkprove setnp_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnp_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnp_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnp_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnp_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnp_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnp_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnp_r8: derivedInstructions//x86-setnp_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnp %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnp_rh[0m
[4m[1m[34mcreatespec setnp_rh: kproveSpecs//x86-semantics_setnp_rh_spec.k[0m
[4m[1m[34msetnp_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_pf_into_rbx
%pf -> 1
%rbx -> 1

Circuit: callq .move_032_016_ebx_r8w_r9w
%r9w -> 1
%r8w -> 1
%ebx -> 1

Circuit: callq .move_r8b_to_byte_2_of_rbx
%r8b -> 1
%rbx -> 1

Circuit: callq .set_szp_for_bx
%sf -> 1
%pf -> 1
%zf -> 1
%bx -> 1

Circuit: callq .read_zf_into_rbx
%zf -> 1
%rbx -> 1

Circuit: movb %bl, %ah
%bl -> 1
%ah -> 1

Total Circuit
R8 -> 1
RAX -> 1
ZF -> 1
RBX -> 1
R9 -> 1
PF -> 1
SF -> 1

Target
PF -> 1
RAX -> 1

[4m[1m[34mkprove setnp_rh[0m
time krun --prove kproveSpecs//x86-semantics_setnp_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnp_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnp_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnp_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnp_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnp_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnp_rh: derivedInstructions//x86-setnp_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnp %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: seto_r8[0m
[4m[1m[34mcreatespec seto_r8: kproveSpecs//x86-semantics_seto_r8_spec.k[0m
[4m[1m[34mseto_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_of_into_rbx
%of -> 1
%rbx -> 1

Circuit: callq .move_byte_6_of_rbx_to_r9b
%r9b -> 1
%rbx -> 1

Circuit: callq .move_r9b_to_byte_6_of_rbx
%r9b -> 1
%rbx -> 1

Total Circuit
OF -> 1
R9 -> 1
RBX -> 1

Target
OF -> 1
RBX -> 1

[4m[1m[34mkprove seto_r8[0m
time krun --prove kproveSpecs//x86-semantics_seto_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_seto_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput seto_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_seto_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput seto_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mseto_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn seto_r8: derivedInstructions//x86-seto_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "seto %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setp_r8[0m
[4m[1m[34mcreatespec setp_r8: kproveSpecs//x86-semantics_setp_r8_spec.k[0m
[4m[1m[34msetp_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_pf_into_rbx
%rbx -> 1
%pf -> 1

Total Circuit
RBX -> 1
PF -> 1

Target
RBX -> 1
PF -> 1

[4m[1m[34mkprove setp_r8[0m
time krun --prove kproveSpecs//x86-semantics_setp_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setp_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setp_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setp_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setp_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetp_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setp_r8: derivedInstructions//x86-setp_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setp %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sets_r8[0m
[4m[1m[34mcreatespec sets_r8: kproveSpecs//x86-semantics_sets_r8_spec.k[0m
[4m[1m[34msets_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_sf_into_rbx
%rbx -> 1
%sf -> 1

Total Circuit
SF -> 1
RBX -> 1

Target
RBX -> 1
SF -> 1

[4m[1m[34mkprove sets_r8[0m
time krun --prove kproveSpecs//x86-semantics_sets_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sets_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sets_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sets_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sets_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msets_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sets_r8: derivedInstructions//x86-sets_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sets %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setz_r8[0m
[4m[1m[34mcreatespec setz_r8: kproveSpecs//x86-semantics_setz_r8_spec.k[0m
[4m[1m[34msetz_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_zf_into_rbx
%rbx -> 1
%zf -> 1

Total Circuit
ZF -> 1
RBX -> 1

Target
ZF -> 1
RBX -> 1

[4m[1m[34mkprove setz_r8[0m
time krun --prove kproveSpecs//x86-semantics_setz_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setz_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setz_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setz_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setz_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetz_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setz_r8: derivedInstructions//x86-setz_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setz %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: shlq_r64_cl[0m
[4m[1m[34mcreatespec shlq_r64_cl: kproveSpecs//x86-semantics_shlq_r64_cl_spec.k[0m
[4m[1m[34mshlq_r64_cl: Check if May == Must[0m
Warn: [4m[1m[35mMay Write pf does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write sf does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write of does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write zf does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write cf does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Undef cf does not belong to Must Undef: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Undef af does not belong to Must Undef: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Undef of does not belong to Must Undef: shlq_r64_cl[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: shlq_r64_cl[0m
Undef Set
of -> 1
af -> 1
cf -> 1

Circuit: salq %cl, %rbx
%af -> 1
%pf -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%rbx -> 1
%cl -> 1
%of -> 1

Total Circuit
ZF -> 1
AF -> 1
PF -> 1
RBX -> 1
CF -> 1
SF -> 1
RCX -> 1
OF -> 1

Target
PF -> 1
CF -> 1
RBX -> 1
ZF -> 1
AF -> 1
OF -> 1
RCX -> 1
SF -> 1

[4m[1m[34mkprove shlq_r64_cl[0m
time krun --prove kproveSpecs//x86-semantics_shlq_r64_cl_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_shlq_r64_cl_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput shlq_r64_cl[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_shlq_r64_cl_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput shlq_r64_cl[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mshlq_r64_cl: Check if May == Must[0m
Warn: [4m[1m[35mMay Write SF does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write ZF does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write CF does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write PF does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Write OF does not belong to Must Write: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Undef OF does not belong to Must Undef: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Undef CF does not belong to Must Undef: shlq_r64_cl[0m
Warn: [4m[1m[35mMay Undef AF does not belong to Must Undef: shlq_r64_cl[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn shlq_r64_cl: derivedInstructions//x86-shlq_r64_cl.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "shlq %cl, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: shlxq_r64_r64_r64[0m
[4m[1m[34mcreatespec shlxq_r64_r64_r64: kproveSpecs//x86-semantics_shlxq_r64_r64_r64_spec.k[0m
[4m[1m[34mshlxq_r64_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_064_032_rcx_r10d_r11d
%rcx -> 1
%r10d -> 1
%r11d -> 1

Circuit: callq .move_064_032_rdx_r8d_r9d
%r8d -> 1
%r9d -> 1
%rdx -> 1

Circuit: callq .move_032_064_r10d_r11d_rbx
%r11d -> 1
%r10d -> 1
%rbx -> 1

Circuit: callq .move_032_064_r8d_r9d_rcx
%r8d -> 1
%r9d -> 1
%rcx -> 1

Circuit: salq %cl, %rbx
%cf -> 1
%zf -> 1
%pf -> 1
%af -> 1
%rbx -> 1
%sf -> 1
%cl -> 1
%of -> 1

Total Circuit
SF -> 1
R11 -> 1
R10 -> 1
OF -> 1
RCX -> 1
RDX -> 1
ZF -> 1
AF -> 1
R8 -> 1
PF -> 1
CF -> 1
R9 -> 1
RBX -> 1

Target
RBX -> 1
 -> 1
RDX -> 1
RCX -> 1

[4m[1m[34mkprove shlxq_r64_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_shlxq_r64_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_shlxq_r64_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput shlxq_r64_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_shlxq_r64_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput shlxq_r64_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mshlxq_r64_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn shlxq_r64_r64_r64: derivedInstructions//x86-shlxq_r64_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "shlxq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: stc[0m
[4m[1m[34mcreatespec stc: kproveSpecs//x86-semantics_stc_spec.k[0m
[4m[1m[34mstc: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .set_cf
%cf -> 1

Total Circuit
CF -> 1

Target
CF -> 1

[4m[1m[34mkprove stc[0m
time krun --prove kproveSpecs//x86-semantics_stc_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_stc_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput stc[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_stc_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput stc[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mstc: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn stc: derivedInstructions//x86-stc.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "stc" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vaddpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vaddpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vaddpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvaddpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r10_r11
%r10 -> 1
%r11 -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm3_r8_r9
%r8 -> 1
%xmm3 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm14 -> 1
%ymm6 -> 1
%ymm1 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm3 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Circuit: callq .move_064_128_r8_r9_xmm3
%r8 -> 1
%xmm3 -> 1
%r9 -> 1

Circuit: vaddpd %ymm3, %ymm1, %ymm1
%ymm3 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM10 -> 1
R10 -> 1
YMM0 -> 1
YMM12 -> 1
YMM5 -> 1
YMM9 -> 1
YMM4 -> 1
YMM11 -> 1
YMM14 -> 1
R8 -> 1
 -> 1
YMM6 -> 1
YMM3 -> 1
YMM15 -> 1
R11 -> 1
YMM13 -> 1
YMM7 -> 1
R9 -> 1
YMM8 -> 1
YMM1 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vaddpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vaddpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vaddpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vaddpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vaddpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vaddpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvaddpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vaddpd_xmm_xmm_xmm: derivedInstructions//x86-vaddpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vaddpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvtdq2ps_xmm_xmm[0m
[4m[1m[34mcreatespec vcvtdq2ps_xmm_xmm: kproveSpecs//x86-semantics_vcvtdq2ps_xmm_xmm_spec.k[0m
[4m[1m[34mvcvtdq2ps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm2
%r9 -> 1
%r8 -> 1
%xmm2 -> 1

Circuit: vcvtdq2ps %ymm2, %ymm12
%ymm2 -> 1
avx -> 1
%ymm12 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Total Circuit
YMM15 -> 1
YMM3 -> 1
YMM6 -> 1
R8 -> 1
 -> 1
YMM14 -> 1
YMM11 -> 1
YMM4 -> 1
YMM5 -> 1
YMM9 -> 1
YMM12 -> 1
YMM0 -> 1
YMM10 -> 1
YMM2 -> 1
YMM1 -> 1
YMM8 -> 1
R9 -> 1
YMM7 -> 1
YMM13 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vcvtdq2ps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vcvtdq2ps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vcvtdq2ps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vcvtdq2ps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vcvtdq2ps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vcvtdq2ps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvcvtdq2ps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vcvtdq2ps_xmm_xmm: derivedInstructions//x86-vcvtdq2ps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vcvtdq2ps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvtpd2ps_xmm_xmm[0m
vcvtpd2ps_xmm_xmm 0 derivedInstructions//x86-vcvtpd2ps_xmm_ymm.k
Warn: [4m[1m[35mvcvtpd2ps_xmm_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vcvtps2dq_xmm_xmm[0m
vcvtps2dq_xmm_xmm 0 derivedInstructions//x86-vcvtps2dq_ymm_ymm.k
Warn: [4m[1m[35mvcvtps2dq_xmm_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vcvtps2pd_xmm_xmm[0m
[4m[1m[34mcreatespec vcvtps2pd_xmm_xmm: kproveSpecs//x86-semantics_vcvtps2pd_xmm_xmm_spec.k[0m
[4m[1m[34mvcvtps2pd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm1 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1
%ymm3 -> 1
%ymm9 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Circuit: vcvtps2pd %xmm1, %ymm10
%xmm1 -> 1
%mxcsr::rc[0] -> 1
avx -> 1
%ymm10 -> 1

Circuit: callq .move_128_256_xmm10_xmm11_ymm1
%xmm11 -> 1
%xmm10 -> 1
%ymm1 -> 1

Total Circuit
YMM3 -> 1
YMM15 -> 1
YMM6 -> 1
R8 -> 1
 -> 1
YMM4 -> 1
YMM12 -> 1
YMM9 -> 1
YMM5 -> 1
YMM14 -> 1
YMM11 -> 1
YMM0 -> 1
YMM2 -> 1
YMM10 -> 1
YMM8 -> 1
R9 -> 1
YMM1 -> 1
YMM7 -> 1
YMM13 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vcvtps2pd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vcvtps2pd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vcvtps2pd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vcvtps2pd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vcvtps2pd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vcvtps2pd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvcvtps2pd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vcvtps2pd_xmm_xmm: derivedInstructions//x86-vcvtps2pd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vcvtps2pd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd213pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmadd213pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmadd213pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmadd213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd132pd %ymm1, %ymm3, %ymm2
%ymm1 -> 1
fma -> 1
%ymm2 -> 1
%ymm3 -> 1

Circuit: vminpd %ymm2, %ymm2, %ymm1
avx -> 1
%ymm1 -> 1
%ymm2 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmadd213pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd213pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd213pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd213pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd213pd_ymm_ymm_ymm: derivedInstructions//x86-vfmadd213pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd213ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmadd213ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmadd213ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmadd213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd132ps %ymm1, %ymm3, %ymm2
fma -> 1
%ymm2 -> 1
%ymm3 -> 1
%ymm1 -> 1

Circuit: vmaxpd %ymm2, %ymm2, %ymm1
%ymm2 -> 1
%ymm1 -> 1
avx -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

Target
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmadd213ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd213ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd213ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd213ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd213ps_ymm_ymm_ymm: derivedInstructions//x86-vfmadd213ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd231ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmadd231ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmadd231ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmadd231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd132ps %ymm3, %ymm1, %ymm2
%ymm3 -> 1
fma -> 1
%ymm2 -> 1
%ymm1 -> 1

Circuit: vminps %ymm2, %ymm2, %ymm10
avx -> 1
%ymm2 -> 1
%ymm10 -> 1

Circuit: vmaxpd %ymm10, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1
%ymm10 -> 1

Total Circuit
YMM1 -> 1
YMM10 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vfmadd231ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd231ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd231ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd231ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd231ps_ymm_ymm_ymm: derivedInstructions//x86-vfmadd231ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub213pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmsub213pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmsub213pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmsub213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub132pd %ymm1, %ymm3, %ymm2
%ymm3 -> 1
fma -> 1
%ymm2 -> 1
%ymm1 -> 1

Circuit: vminpd %ymm2, %ymm2, %ymm1
avx -> 1
%ymm1 -> 1
%ymm2 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

Target
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfmsub213pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub213pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub213pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub213pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub213pd_ymm_ymm_ymm: derivedInstructions//x86-vfmsub213pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub213ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmsub213ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmsub213ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmsub213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub132ps %ymm1, %ymm3, %ymm2
%ymm1 -> 1
fma -> 1
%ymm2 -> 1
%ymm3 -> 1

Circuit: vmaxpd %ymm2, %ymm2, %ymm1
avx -> 1
%ymm1 -> 1
%ymm2 -> 1

Total Circuit
YMM2 -> 1
 -> 1
YMM3 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmsub213ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub213ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub213ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub213ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub213ps_ymm_ymm_ymm: derivedInstructions//x86-vfmsub213ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub231pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmsub231pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmsub231pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmsub231pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub132pd %ymm3, %ymm1, %ymm2
%ymm3 -> 1
fma -> 1
%ymm2 -> 1
%ymm1 -> 1

Circuit: callq .move_128_064_xmm2_r10_r11
%r10 -> 1
%xmm2 -> 1
%r11 -> 1

Circuit: vminpd %ymm2, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r11 -> 1
%xmm1 -> 1
%r10 -> 1

Total Circuit
YMM1 -> 1
R11 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1
R10 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfmsub231pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub231pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub231pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub231pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub231pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub231pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub231pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub231pd_ymm_ymm_ymm: derivedInstructions//x86-vfmsub231pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub231ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfmsub231ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfmsub231ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfmsub231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vminps %ymm1, %ymm1, %ymm9
%ymm9 -> 1
avx -> 1
%ymm1 -> 1

Circuit: vfmsub132ps %ymm3, %ymm9, %ymm2
%ymm3 -> 1
%ymm9 -> 1
%ymm2 -> 1
fma -> 1

Circuit: vminps %ymm2, %ymm2, %ymm1
%ymm2 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM9 -> 1
 -> 1
YMM3 -> 1
YMM1 -> 1

Target
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfmsub231ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub231ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub231ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub231ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub231ps_ymm_ymm_ymm: derivedInstructions//x86-vfmsub231ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd213pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmadd213pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmadd213pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmadd213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd132pd %ymm1, %ymm3, %ymm2
%ymm1 -> 1
fma -> 1
%ymm2 -> 1
%ymm3 -> 1

Circuit: vmaxpd %ymm2, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmadd213pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd213pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd213pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd213pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd213pd_ymm_ymm_ymm: derivedInstructions//x86-vfnmadd213pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd213ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmadd213ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmadd213ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmadd213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd132ps %ymm1, %ymm3, %ymm2
fma -> 1
%ymm2 -> 1
%ymm3 -> 1
%ymm1 -> 1

Circuit: vmaxpd %ymm2, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM2 -> 1
 -> 1
YMM3 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfnmadd213ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd213ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd213ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd213ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd213ps_ymm_ymm_ymm: derivedInstructions//x86-vfnmadd213ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd231pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmadd231pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmadd231pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmadd231pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd132pd %ymm3, %ymm1, %ymm2
%ymm3 -> 1
%ymm2 -> 1
fma -> 1
%ymm1 -> 1

Circuit: callq .move_256_128_ymm2_xmm10_xmm11
%xmm10 -> 1
%xmm11 -> 1
%ymm2 -> 1

Circuit: callq .move_128_256_xmm10_xmm11_ymm1
%ymm1 -> 1
%xmm10 -> 1
%xmm11 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
YMM10 -> 1
YMM11 -> 1
 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfnmadd231pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd231pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd231pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd231pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd231pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd231pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd231pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd231pd_ymm_ymm_ymm: derivedInstructions//x86-vfnmadd231pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd231ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmadd231ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmadd231ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmadd231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd132ps %ymm3, %ymm1, %ymm2
%ymm1 -> 1
%ymm3 -> 1
%ymm2 -> 1
fma -> 1

Circuit: callq .move_256_128_ymm2_xmm12_xmm13
%ymm2 -> 1
%xmm13 -> 1
%xmm12 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM12 -> 1
YMM2 -> 1
YMM1 -> 1
YMM13 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmadd231ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd231ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd231ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd231ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd231ps_ymm_ymm_ymm: derivedInstructions//x86-vfnmadd231ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub213pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmsub213pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmsub213pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmsub213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmsub132pd %ymm1, %ymm3, %ymm2
%ymm2 -> 1
fma -> 1
%ymm3 -> 1
%ymm1 -> 1

Circuit: vmaxpd %ymm2, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmsub213pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub213pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub213pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub213pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub213pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub213pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub213pd_ymm_ymm_ymm: derivedInstructions//x86-vfnmsub213pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub213ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmsub213ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmsub213ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmsub213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmsub132ps %ymm1, %ymm3, %ymm2
%ymm3 -> 1
%ymm2 -> 1
fma -> 1
%ymm1 -> 1

Circuit: vmaxps %ymm2, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmsub213ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub213ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub213ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub213ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub213ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub213ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub213ps_ymm_ymm_ymm: derivedInstructions//x86-vfnmsub213ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub231pd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmsub231pd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmsub231pd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmsub231pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmsub132pd %ymm3, %ymm1, %ymm2
%ymm1 -> 1
%ymm2 -> 1
fma -> 1
%ymm3 -> 1

Circuit: vmaxpd %ymm2, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

Target
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmsub231pd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub231pd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub231pd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub231pd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub231pd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub231pd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub231pd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub231pd_ymm_ymm_ymm: derivedInstructions//x86-vfnmsub231pd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub231ps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vfnmsub231ps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vfnmsub231ps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvfnmsub231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmsub132ps %ymm3, %ymm1, %ymm2
%ymm1 -> 1
%ymm2 -> 1
fma -> 1
%ymm3 -> 1

Circuit: callq .move_256_128_ymm2_xmm12_xmm13
%xmm12 -> 1
%xmm13 -> 1
%ymm2 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Total Circuit
YMM2 -> 1
YMM12 -> 1
 -> 1
YMM3 -> 1
YMM13 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmsub231ps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub231ps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub231ps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub231ps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub231ps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub231ps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub231ps_ymm_ymm_ymm: derivedInstructions//x86-vfnmsub231ps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovapd_xmm_xmm[0m
[4m[1m[34mcreatespec vmovapd_xmm_xmm: kproveSpecs//x86-semantics_vmovapd_xmm_xmm_spec.k[0m
[4m[1m[34mvmovapd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%r8 -> 1
%r9 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%xmm1 -> 1
%r8 -> 1
%r9 -> 1

Total Circuit
YMM0 -> 1
YMM10 -> 1
YMM2 -> 1
YMM4 -> 1
YMM12 -> 1
YMM5 -> 1
YMM9 -> 1
YMM14 -> 1
YMM11 -> 1
YMM6 -> 1
 -> 1
R8 -> 1
YMM3 -> 1
YMM15 -> 1
YMM7 -> 1
YMM13 -> 1
YMM8 -> 1
R9 -> 1
YMM1 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vmovapd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovapd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovapd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovapd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovapd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovapd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovapd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovapd_xmm_xmm: derivedInstructions//x86-vmovapd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovapd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovaps_xmm_xmm[0m
[4m[1m[34mcreatespec vmovaps_xmm_xmm: kproveSpecs//x86-semantics_vmovaps_xmm_xmm_spec.k[0m
[4m[1m[34mvmovaps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%xmm2 -> 1
%r13 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1
avx -> 1
%ymm12 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm0 -> 1
%ymm11 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r13 -> 1
%r12 -> 1
%xmm1 -> 1

Total Circuit
YMM8 -> 1
YMM1 -> 1
YMM13 -> 1
YMM7 -> 1
 -> 1
YMM6 -> 1
R12 -> 1
R13 -> 1
YMM3 -> 1
YMM15 -> 1
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
YMM9 -> 1
YMM5 -> 1
YMM12 -> 1
YMM4 -> 1
YMM11 -> 1
YMM14 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vmovaps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovaps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovaps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovaps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovaps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovaps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovaps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovaps_xmm_xmm: derivedInstructions//x86-vmovaps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovaps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovdqa_xmm_xmm[0m
[4m[1m[34mcreatespec vmovdqa_xmm_xmm: kproveSpecs//x86-semantics_vmovdqa_xmm_xmm_spec.k[0m
[4m[1m[34mvmovdqa_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%r13 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm11 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm10 -> 1
%ymm4 -> 1
%ymm13 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1
avx -> 1
%ymm12 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm0 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r12 -> 1
%xmm1 -> 1
%r13 -> 1

Total Circuit
YMM9 -> 1
YMM12 -> 1
YMM5 -> 1
YMM4 -> 1
YMM11 -> 1
YMM14 -> 1
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
YMM3 -> 1
R13 -> 1
YMM15 -> 1
 -> 1
YMM6 -> 1
R12 -> 1
YMM13 -> 1
YMM7 -> 1
YMM8 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vmovdqa_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovdqa_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovdqa_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovdqa_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovdqa_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovdqa_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovdqa_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovdqa_xmm_xmm: derivedInstructions//x86-vmovdqa_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovdqa %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovdqa_ymm_ymm[0m
[4m[1m[34mcreatespec vmovdqa_ymm_ymm: kproveSpecs//x86-semantics_vmovdqa_ymm_ymm_spec.k[0m
[4m[1m[34mvmovdqa_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vminpd %ymm2, %ymm2, %ymm1
avx -> 1
%ymm1 -> 1
%ymm2 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM2 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vmovdqa_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vmovdqa_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovdqa_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovdqa_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovdqa_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovdqa_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovdqa_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovdqa_ymm_ymm: derivedInstructions//x86-vmovdqa_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovdqa %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovdqu_xmm_xmm[0m
[4m[1m[34mcreatespec vmovdqu_xmm_xmm: kproveSpecs//x86-semantics_vmovdqu_xmm_xmm_spec.k[0m
[4m[1m[34mvmovdqu_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r10_r11
%r11 -> 1
%xmm2 -> 1
%r10 -> 1

Circuit: vzeroall
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm10 -> 1
%ymm4 -> 1
%ymm13 -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1

Circuit: callq .move_064_128_r10_r11_xmm3
%r10 -> 1
%xmm3 -> 1
%r11 -> 1

Circuit: callq .move_256_128_ymm3_xmm12_xmm13
%xmm12 -> 1
%ymm3 -> 1
%xmm13 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Total Circuit
YMM10 -> 1
YMM2 -> 1
R10 -> 1
YMM0 -> 1
YMM12 -> 1
YMM9 -> 1
YMM5 -> 1
YMM4 -> 1
YMM11 -> 1
YMM14 -> 1
 -> 1
YMM6 -> 1
YMM3 -> 1
YMM15 -> 1
R11 -> 1
YMM13 -> 1
YMM7 -> 1
YMM8 -> 1
YMM1 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vmovdqu_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovdqu_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovdqu_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovdqu_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovdqu_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovdqu_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovdqu_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovdqu_xmm_xmm: derivedInstructions//x86-vmovdqu_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovdqu %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovdqu_ymm_ymm[0m
[4m[1m[34mcreatespec vmovdqu_ymm_ymm: kproveSpecs//x86-semantics_vmovdqu_ymm_ymm_spec.k[0m
[4m[1m[34mvmovdqu_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxps %ymm2, %ymm2, %ymm10
%ymm10 -> 1
%ymm2 -> 1
avx -> 1

Circuit: vmaxpd %ymm10, %ymm2, %ymm1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1
%ymm10 -> 1

Total Circuit
YMM1 -> 1
YMM10 -> 1
YMM2 -> 1
 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vmovdqu_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vmovdqu_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovdqu_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovdqu_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovdqu_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovdqu_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovdqu_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovdqu_ymm_ymm: derivedInstructions//x86-vmovdqu_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovdqu %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovhlps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vmovhlps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vmovhlps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvmovhlps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm3_r10_r11
%r10 -> 1
%xmm3 -> 1
%r11 -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%r13 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm10 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1

Circuit: movq %r11, %r12
%r11 -> 1
%r12 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r13 -> 1
%r12 -> 1
%xmm1 -> 1

Total Circuit
YMM8 -> 1
YMM1 -> 1
R11 -> 1
YMM7 -> 1
YMM13 -> 1
YMM6 -> 1
 -> 1
R12 -> 1
YMM3 -> 1
R13 -> 1
YMM15 -> 1
YMM0 -> 1
R10 -> 1
YMM2 -> 1
YMM10 -> 1
YMM4 -> 1
YMM12 -> 1
YMM5 -> 1
YMM9 -> 1
YMM14 -> 1
YMM11 -> 1

Target
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vmovhlps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovhlps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovhlps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovhlps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovhlps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovhlps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovhlps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovhlps_xmm_xmm_xmm: derivedInstructions//x86-vmovhlps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovhlps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovq_r64_xmm[0m
[4m[1m[34mcreatespec vmovq_r64_xmm: kproveSpecs//x86-semantics_vmovq_r64_xmm_spec.k[0m
[4m[1m[34mvmovq_r64_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm1_r10d_r11d_r12d_r13d
%xmm1 -> 1
%r13d -> 1
%r12d -> 1
%r10d -> 1
%r11d -> 1

Circuit: callq .move_032_064_r10d_r11d_rbx
%rbx -> 1
%r10d -> 1
%r11d -> 1

Total Circuit
R10 -> 1
RBX -> 1
R13 -> 1
R12 -> 1
R11 -> 1
YMM1 -> 1

Target
YMM1 -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove vmovq_r64_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovq_r64_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovq_r64_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovq_r64_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovq_r64_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovq_r64_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovq_r64_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovq_r64_xmm: derivedInstructions//x86-vmovq_r64_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovq_xmm_r64[0m
[4m[1m[34mcreatespec vmovq_xmm_r64: kproveSpecs//x86-semantics_vmovq_xmm_r64_spec.k[0m
[4m[1m[34mvmovq_xmm_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vzeroall
%ymm11 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm1 -> 1
avx -> 1
%ymm12 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm5 -> 1
%ymm0 -> 1

Circuit: callq .move_128_064_xmm1_r8_r9
%r9 -> 1
%r8 -> 1
%xmm1 -> 1

Circuit: xorq %rbx, %r8
%rbx -> 1
%sf -> 1
%r8 -> 1
%af -> 1
%pf -> 1
%zf -> 1
%cf -> 1
%of -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Total Circuit
AF -> 1
YMM1 -> 1
R9 -> 1
YMM8 -> 1
YMM13 -> 1
YMM7 -> 1
OF -> 1
ZF -> 1
R8 -> 1
 -> 1
YMM6 -> 1
YMM15 -> 1
PF -> 1
RBX -> 1
YMM3 -> 1
CF -> 1
SF -> 1
YMM10 -> 1
YMM2 -> 1
YMM0 -> 1
YMM11 -> 1
YMM14 -> 1
YMM5 -> 1
YMM12 -> 1
YMM9 -> 1
YMM4 -> 1

Target
YMM1 -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove vmovq_xmm_r64[0m
time krun --prove kproveSpecs//x86-semantics_vmovq_xmm_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovq_xmm_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovq_xmm_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovq_xmm_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovq_xmm_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovq_xmm_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovq_xmm_r64: derivedInstructions//x86-vmovq_xmm_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovq %rbx, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovupd_xmm_xmm[0m
[4m[1m[34mcreatespec vmovupd_xmm_xmm: kproveSpecs//x86-semantics_vmovupd_xmm_xmm_spec.k[0m
[4m[1m[34mvmovupd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%r8 -> 1
%xmm1 -> 1

Total Circuit
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
YMM11 -> 1
YMM14 -> 1
YMM5 -> 1
YMM12 -> 1
YMM9 -> 1
YMM4 -> 1
 -> 1
R8 -> 1
YMM6 -> 1
YMM15 -> 1
YMM3 -> 1
YMM13 -> 1
YMM7 -> 1
YMM1 -> 1
R9 -> 1
YMM8 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vmovupd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovupd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovupd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovupd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovupd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovupd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovupd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovupd_xmm_xmm: derivedInstructions//x86-vmovupd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovupd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovupd_ymm_ymm[0m
[4m[1m[34mcreatespec vmovupd_ymm_ymm: kproveSpecs//x86-semantics_vmovupd_ymm_ymm_spec.k[0m
[4m[1m[34mvmovupd_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%xmm2 -> 1
%r13 -> 1

Circuit: vminps %ymm2, %ymm2, %ymm1
%ymm2 -> 1
avx -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r13 -> 1
%r12 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
R13 -> 1
R12 -> 1
 -> 1
YMM2 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vmovupd_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vmovupd_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovupd_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovupd_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovupd_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovupd_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovupd_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovupd_ymm_ymm: derivedInstructions//x86-vmovupd_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovupd %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovups_xmm_xmm[0m
[4m[1m[34mcreatespec vmovups_xmm_xmm: kproveSpecs//x86-semantics_vmovups_xmm_xmm_spec.k[0m
[4m[1m[34mvmovups_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%r8 -> 1
%xmm1 -> 1

Total Circuit
YMM6 -> 1
R8 -> 1
 -> 1
YMM3 -> 1
YMM15 -> 1
YMM0 -> 1
YMM2 -> 1
YMM10 -> 1
YMM4 -> 1
YMM12 -> 1
YMM5 -> 1
YMM9 -> 1
YMM14 -> 1
YMM11 -> 1
YMM8 -> 1
R9 -> 1
YMM1 -> 1
YMM7 -> 1
YMM13 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vmovups_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmovups_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovups_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovups_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovups_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovups_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovups_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovups_xmm_xmm: derivedInstructions//x86-vmovups_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovups %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmulps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vmulps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vmulps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvmulps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm3_r10_r11
%r11 -> 1
%xmm3 -> 1
%r10 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm13 -> 1
%ymm10 -> 1
%ymm4 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm0 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm12 -> 1
avx -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%r11 -> 1
%xmm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm2
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vmulps %ymm1, %ymm2, %ymm1
%ymm2 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
YMM13 -> 1
YMM7 -> 1
R11 -> 1
YMM1 -> 1
R9 -> 1
YMM8 -> 1
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
R10 -> 1
YMM11 -> 1
YMM14 -> 1
YMM5 -> 1
YMM12 -> 1
YMM9 -> 1
YMM4 -> 1
R8 -> 1
 -> 1
YMM6 -> 1
YMM15 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vmulps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vmulps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmulps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmulps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmulps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmulps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmulps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmulps_xmm_xmm_xmm: derivedInstructions//x86-vmulps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmulps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vorpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vorpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vorpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvorpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm3_r10_r11
%r10 -> 1
%xmm3 -> 1
%r11 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm3 -> 1

Circuit: orq %r9, %r11
%cf -> 1
%of -> 1
%sf -> 1
%af -> 1
%pf -> 1
%zf -> 1
%r9 -> 1
%r11 -> 1

Circuit: orq %r8, %r10
%of -> 1
%r10 -> 1
%cf -> 1
%sf -> 1
%r8 -> 1
%pf -> 1
%af -> 1
%zf -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r11 -> 1
%xmm1 -> 1
%r10 -> 1

Total Circuit
ZF -> 1
 -> 1
R8 -> 1
YMM6 -> 1
YMM15 -> 1
PF -> 1
YMM3 -> 1
CF -> 1
SF -> 1
YMM2 -> 1
YMM10 -> 1
R10 -> 1
YMM0 -> 1
YMM11 -> 1
YMM14 -> 1
YMM12 -> 1
YMM9 -> 1
YMM5 -> 1
YMM4 -> 1
AF -> 1
YMM1 -> 1
R9 -> 1
YMM8 -> 1
YMM13 -> 1
YMM7 -> 1
R11 -> 1
OF -> 1

Target
YMM2 -> 1
 -> 1
YMM3 -> 1
YMM1 -> 1

[4m[1m[34mkprove vorpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vorpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vorpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vorpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vorpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vorpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvorpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vorpd_xmm_xmm_xmm: derivedInstructions//x86-vorpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vorpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpbroadcastq_xmm_xmm[0m
[4m[1m[34mcreatespec vpbroadcastq_xmm_xmm: kproveSpecs//x86-semantics_vpbroadcastq_xmm_xmm_spec.k[0m
[4m[1m[34mvpbroadcastq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r10_r11
%r10 -> 1
%xmm2 -> 1
%r11 -> 1

Circuit: vzeroall
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm3 -> 1

Circuit: movq %r10, %r11
%r11 -> 1
%r10 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%r11 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
YMM8 -> 1
YMM7 -> 1
YMM13 -> 1
R11 -> 1
YMM6 -> 1
 -> 1
YMM15 -> 1
YMM3 -> 1
YMM0 -> 1
R10 -> 1
YMM2 -> 1
YMM10 -> 1
YMM14 -> 1
YMM11 -> 1
YMM4 -> 1
YMM5 -> 1
YMM12 -> 1
YMM9 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpbroadcastq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpbroadcastq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpbroadcastq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpbroadcastq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpbroadcastq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpbroadcastq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpbroadcastq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpbroadcastq_xmm_xmm: derivedInstructions//x86-vpbroadcastq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpbroadcastq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovsxdq_xmm_xmm[0m
[4m[1m[34mcreatespec vpmovsxdq_xmm_xmm: kproveSpecs//x86-semantics_vpmovsxdq_xmm_xmm_spec.k[0m
[4m[1m[34mvpmovsxdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_eax_edx_r8d_r9d
%r8d -> 1
%eax -> 1
%r9d -> 1
%edx -> 1
%xmm2 -> 1

Circuit: movslq %edx, %r11
%edx -> 1
%r11 -> 1

Circuit: vzeroall
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm0 -> 1
avx -> 1
%ymm12 -> 1
%ymm1 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm2 -> 1
%ymm11 -> 1
%ymm7 -> 1

Circuit: movslq %eax, %r10
%r10 -> 1
%eax -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Total Circuit
YMM3 -> 1
YMM15 -> 1
R8 -> 1
 -> 1
YMM6 -> 1
RAX -> 1
YMM5 -> 1
YMM12 -> 1
YMM9 -> 1
YMM4 -> 1
YMM11 -> 1
YMM14 -> 1
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
R10 -> 1
R9 -> 1
YMM8 -> 1
YMM1 -> 1
RDX -> 1
R11 -> 1
YMM13 -> 1
YMM7 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vpmovsxdq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovsxdq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovsxdq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovsxdq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovsxdq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovsxdq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovsxdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovsxdq_xmm_xmm: derivedInstructions//x86-vpmovsxdq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovsxdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovzxdq_xmm_xmm[0m
[4m[1m[34mcreatespec vpmovzxdq_xmm_xmm: kproveSpecs//x86-semantics_vpmovzxdq_xmm_xmm_spec.k[0m
[4m[1m[34mvpmovzxdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%r8 -> 1
%r9 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1

Circuit: callq .move_byte_5_of_ymm1_to_r9b
%r9b -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r8_r9_xmm2
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm11 -> 1
%xmm2 -> 1
%xmm9 -> 1
%xmm10 -> 1
%xmm8 -> 1

Circuit: callq .move_64_128_xmm8_xmm9_xmm1
%xmm9 -> 1
%xmm1 -> 1
%xmm8 -> 1

Total Circuit
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
YMM11 -> 1
YMM14 -> 1
YMM9 -> 1
YMM5 -> 1
YMM12 -> 1
YMM4 -> 1
R8 -> 1
 -> 1
YMM6 -> 1
YMM15 -> 1
YMM3 -> 1
YMM13 -> 1
YMM7 -> 1
YMM1 -> 1
R9 -> 1
YMM8 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpmovzxdq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovzxdq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovzxdq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovzxdq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovzxdq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovzxdq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovzxdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovzxdq_xmm_xmm: derivedInstructions//x86-vpmovzxdq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovzxdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovzxwq_xmm_xmm[0m
[4m[1m[34mcreatespec vpmovzxwq_xmm_xmm: kproveSpecs//x86-semantics_vpmovzxwq_xmm_xmm_spec.k[0m
[4m[1m[34mvpmovzxwq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%xmm2 -> 1
%r13 -> 1

Circuit: vzeroall
%ymm14 -> 1
%ymm6 -> 1
%ymm1 -> 1
%ymm12 -> 1
avx -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm5 -> 1
%ymm7 -> 1
%ymm11 -> 1
%ymm2 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm9 -> 1
%ymm3 -> 1

Circuit: callq .move_128_064_xmm2_r10_r11
%r11 -> 1
%xmm2 -> 1
%r10 -> 1

Circuit: callq .move_032_064_r12d_r13d_rdx
%rdx -> 1
%r13d -> 1
%r12d -> 1

Circuit: callq .move_032_016_edx_r10w_r11w
%edx -> 1
%r10w -> 1
%r11w -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Total Circuit
YMM9 -> 1
YMM12 -> 1
YMM5 -> 1
YMM4 -> 1
YMM11 -> 1
YMM14 -> 1
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
R10 -> 1
YMM3 -> 1
R13 -> 1
YMM15 -> 1
 -> 1
YMM6 -> 1
R12 -> 1
RDX -> 1
R11 -> 1
YMM13 -> 1
YMM7 -> 1
YMM8 -> 1
YMM1 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpmovzxwq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovzxwq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovzxwq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovzxwq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovzxwq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovzxwq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovzxwq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovzxwq_xmm_xmm: derivedInstructions//x86-vpmovzxwq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovzxwq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpckhqdq_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpunpckhqdq_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpunpckhqdq_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpunpckhqdq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm3_r10_r11
%r10 -> 1
%r11 -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%r9 -> 1
%r8 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm11 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1
avx -> 1
%ymm12 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm0 -> 1

Circuit: movq %r9, %r10
%r9 -> 1
%r10 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Total Circuit
YMM15 -> 1
YMM3 -> 1
YMM6 -> 1
 -> 1
R8 -> 1
YMM14 -> 1
YMM11 -> 1
YMM4 -> 1
YMM12 -> 1
YMM9 -> 1
YMM5 -> 1
R10 -> 1
YMM0 -> 1
YMM2 -> 1
YMM10 -> 1
YMM1 -> 1
YMM8 -> 1
R9 -> 1
YMM7 -> 1
YMM13 -> 1
R11 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpunpckhqdq_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpckhqdq_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpckhqdq_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpckhqdq_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpckhqdq_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpckhqdq_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpckhqdq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpckhqdq_xmm_xmm_xmm: derivedInstructions//x86-vpunpckhqdq_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpckhqdq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpcklqdq_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpunpcklqdq_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpunpcklqdq_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpunpcklqdq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm3_r8_r9
%r9 -> 1
%xmm3 -> 1
%r8 -> 1

Circuit: callq .move_128_064_xmm2_r10_r11
%xmm2 -> 1
%r10 -> 1
%r11 -> 1

Circuit: vzeroall
%ymm11 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm1 -> 1
avx -> 1
%ymm12 -> 1
%ymm15 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm0 -> 1

Circuit: movq %r8, %r11
%r11 -> 1
%r8 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%r11 -> 1
%xmm1 -> 1

Total Circuit
YMM7 -> 1
YMM13 -> 1
R11 -> 1
YMM1 -> 1
YMM8 -> 1
R9 -> 1
YMM14 -> 1
YMM11 -> 1
YMM4 -> 1
YMM9 -> 1
YMM12 -> 1
YMM5 -> 1
R10 -> 1
YMM0 -> 1
YMM2 -> 1
YMM10 -> 1
YMM15 -> 1
YMM3 -> 1
YMM6 -> 1
R8 -> 1
 -> 1

Target
YMM3 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpunpcklqdq_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpcklqdq_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpcklqdq_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpcklqdq_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpcklqdq_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpcklqdq_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpcklqdq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpcklqdq_xmm_xmm_xmm: derivedInstructions//x86-vpunpcklqdq_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpcklqdq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vrcpps_xmm_xmm[0m
[4m[1m[34mcreatespec vrcpps_xmm_xmm: kproveSpecs//x86-semantics_vrcpps_xmm_xmm_spec.k[0m
[4m[1m[34mvrcpps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r12 -> 1
%r13 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm0 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm5 -> 1
%ymm12 -> 1
avx -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm10 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%xmm1 -> 1
%r12 -> 1
%r13 -> 1

Circuit: vrcpps %ymm1, %ymm10
%ymm10 -> 1
avx -> 1
%ymm1 -> 1

Circuit: callq .move_128_256_xmm10_xmm11_ymm1
%xmm11 -> 1
%xmm10 -> 1
%ymm1 -> 1

Total Circuit
R12 -> 1
 -> 1
YMM6 -> 1
YMM15 -> 1
YMM3 -> 1
R13 -> 1
YMM10 -> 1
YMM2 -> 1
YMM0 -> 1
YMM11 -> 1
YMM14 -> 1
YMM5 -> 1
YMM9 -> 1
YMM12 -> 1
YMM4 -> 1
YMM1 -> 1
YMM8 -> 1
YMM13 -> 1
YMM7 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vrcpps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vrcpps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vrcpps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vrcpps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vrcpps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vrcpps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvrcpps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vrcpps_xmm_xmm: derivedInstructions//x86-vrcpps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vrcpps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vrsqrtps_xmm_xmm[0m
[4m[1m[34mcreatespec vrsqrtps_xmm_xmm: kproveSpecs//x86-semantics_vrsqrtps_xmm_xmm_spec.k[0m
[4m[1m[34mvrsqrtps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm13 -> 1
%ymm4 -> 1
%ymm10 -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1

Circuit: callq .move_064_128_r8_r9_xmm3
%r9 -> 1
%r8 -> 1
%xmm3 -> 1

Circuit: vrsqrtps %ymm3, %ymm12
%ymm12 -> 1
avx -> 1
%ymm3 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Total Circuit
YMM1 -> 1
YMM8 -> 1
R9 -> 1
YMM7 -> 1
YMM13 -> 1
YMM15 -> 1
YMM3 -> 1
YMM6 -> 1
 -> 1
R8 -> 1
YMM14 -> 1
YMM11 -> 1
YMM4 -> 1
YMM5 -> 1
YMM9 -> 1
YMM12 -> 1
YMM0 -> 1
YMM2 -> 1
YMM10 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vrsqrtps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vrsqrtps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vrsqrtps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vrsqrtps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vrsqrtps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vrsqrtps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvrsqrtps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vrsqrtps_xmm_xmm: derivedInstructions//x86-vrsqrtps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vrsqrtps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vsqrtps_xmm_xmm[0m
[4m[1m[34mcreatespec vsqrtps_xmm_xmm: kproveSpecs//x86-semantics_vsqrtps_xmm_xmm_spec.k[0m
[4m[1m[34mvsqrtps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%r8 -> 1
%r9 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm0 -> 1
%ymm8 -> 1
%ymm5 -> 1
%ymm15 -> 1
%ymm12 -> 1
avx -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm3 -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm11 -> 1

Circuit: callq .move_064_128_r8_r9_xmm2
%r8 -> 1
%r9 -> 1
%xmm2 -> 1

Circuit: vsqrtps %ymm2, %ymm10
%ymm2 -> 1
%ymm10 -> 1
avx -> 1

Circuit: callq .move_128_256_xmm10_xmm11_ymm1
%xmm11 -> 1
%xmm10 -> 1
%ymm1 -> 1

Total Circuit
YMM13 -> 1
YMM7 -> 1
YMM1 -> 1
R9 -> 1
YMM8 -> 1
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
YMM11 -> 1
YMM14 -> 1
YMM9 -> 1
YMM12 -> 1
YMM5 -> 1
YMM4 -> 1
R8 -> 1
 -> 1
YMM6 -> 1
YMM15 -> 1
YMM3 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vsqrtps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vsqrtps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vsqrtps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vsqrtps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vsqrtps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vsqrtps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvsqrtps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vsqrtps_xmm_xmm: derivedInstructions//x86-vsqrtps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vsqrtps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vxorps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vxorps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vxorps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvxorps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm3_r12_r13
%xmm3 -> 1
%r12 -> 1
%r13 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm1 -> 1
%ymm6 -> 1
%ymm14 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm15 -> 1
%ymm0 -> 1
avx -> 1
%ymm12 -> 1
%ymm2 -> 1
%ymm11 -> 1
%ymm7 -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm4 -> 1
%ymm13 -> 1
%ymm10 -> 1

Circuit: xorq %r13, %r9
%r9 -> 1
%zf -> 1
%af -> 1
%pf -> 1
%sf -> 1
%of -> 1
%r13 -> 1
%cf -> 1

Circuit: xorq %r12, %r8
%sf -> 1
%r8 -> 1
%pf -> 1
%af -> 1
%zf -> 1
%r12 -> 1
%of -> 1
%cf -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%xmm1 -> 1
%r8 -> 1
%r9 -> 1

Total Circuit
YMM7 -> 1
YMM13 -> 1
OF -> 1
AF -> 1
YMM1 -> 1
YMM8 -> 1
R9 -> 1
SF -> 1
YMM0 -> 1
YMM2 -> 1
YMM10 -> 1
YMM14 -> 1
YMM11 -> 1
YMM4 -> 1
YMM12 -> 1
YMM9 -> 1
YMM5 -> 1
R12 -> 1
ZF -> 1
YMM6 -> 1
R8 -> 1
 -> 1
PF -> 1
YMM15 -> 1
YMM3 -> 1
R13 -> 1
CF -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vxorps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vxorps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vxorps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vxorps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vxorps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vxorps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvxorps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vxorps_xmm_xmm_xmm: derivedInstructions//x86-vxorps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vxorps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xchgl_r32_r32[0m
[4m[1m[34mcreatespec xchgl_r32_r32: kproveSpecs//x86-semantics_xchgl_r32_r32_spec.k[0m
[4m[1m[34mxchgl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movswq %bx, %r10
%r10 -> 1
%bx -> 1

Circuit: movslq %ebx, %rbx
%rbx -> 1
%ebx -> 1

Circuit: callq .move_032_016_ecx_r8w_r9w
%r8w -> 1
%ecx -> 1
%r9w -> 1

Circuit: callq .move_064_032_rbx_r10d_r11d
%r11d -> 1
%r10d -> 1
%rbx -> 1

Circuit: movq %r10, %rcx
%rcx -> 1
%r10 -> 1

Circuit: callq .move_016_032_r8w_r9w_ebx
%r9w -> 1
%r8w -> 1
%ebx -> 1

Total Circuit
R11 -> 1
RCX -> 1
R9 -> 1
R10 -> 1
R8 -> 1
RBX -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove xchgl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_xchgl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xchgl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xchgl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xchgl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xchgl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxchgl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35mxchgl_r32_r32: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xchgl_r32_r32: derivedInstructions//x86-xchgl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xchgl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xchgq_r64_r64[0m
[4m[1m[34mcreatespec xchgq_r64_r64: kproveSpecs//x86-semantics_xchgq_r64_r64_spec.k[0m
[4m[1m[34mxchgq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_064_032_rbx_r8d_r9d
%r9d -> 1
%r8d -> 1
%rbx -> 1

Circuit: movq %rcx, %rbx
%rbx -> 1
%rcx -> 1

Circuit: callq .move_016_032_r8w_r9w_edx
%r8w -> 1
%edx -> 1
%r9w -> 1

Circuit: callq .move_032_016_edx_r8w_r9w
%r8w -> 1
%r9w -> 1
%edx -> 1

Circuit: callq .move_032_064_r8d_r9d_rcx
%rcx -> 1
%r9d -> 1
%r8d -> 1

Total Circuit
RDX -> 1
RCX -> 1
R9 -> 1
RBX -> 1
R8 -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove xchgq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_xchgq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xchgq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xchgq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xchgq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xchgq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxchgq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35mxchgq_r64_r64: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xchgq_r64_r64: derivedInstructions//x86-xchgq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xchgq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xchgw_r16_r16[0m
[4m[1m[34mcreatespec xchgw_r16_r16: kproveSpecs//x86-semantics_xchgw_r16_r16_spec.k[0m
[4m[1m[34mxchgw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_016_008_bx_r10b_r11b
%bx -> 1
%r11b -> 1
%r10b -> 1

Circuit: callq .move_016_008_cx_r8b_r9b
%r9b -> 1
%cx -> 1
%r8b -> 1

Circuit: callq .move_008_016_r10b_r11b_cx
%r10b -> 1
%cx -> 1
%r11b -> 1

Circuit: callq .move_008_016_r8b_r9b_bx
%r9b -> 1
%r8b -> 1
%bx -> 1

Total Circuit
RBX -> 1
R8 -> 1
R10 -> 1
R9 -> 1
RCX -> 1
R11 -> 1

Target
RCX -> 1
RBX -> 1

[4m[1m[34mkprove xchgw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_xchgw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xchgw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xchgw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xchgw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xchgw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxchgw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35mxchgw_r16_r16: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xchgw_r16_r16: derivedInstructions//x86-xchgw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xchgw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xorw_r16_r16[0m
[4m[1m[34mcreatespec xorw_r16_r16: kproveSpecs//x86-semantics_xorw_r16_r16_spec.k[0m
[4m[1m[34mxorw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: xorw_r16_r16[0m
Undef Set
af -> 1

Circuit: callq .move_016_008_cx_r8b_r9b
%r8b -> 1
%r9b -> 1
%cx -> 1

Circuit: movswq %bx, %r12
%r12 -> 1
%bx -> 1

Circuit: callq .move_008_016_r8b_r9b_bx
%r9b -> 1
%r8b -> 1
%bx -> 1

Circuit: callq .set_szp_for_bx
%pf -> 1
%zf -> 1
%bx -> 1
%sf -> 1

Circuit: callq .read_sf_into_rbx
%rbx -> 1
%sf -> 1

Circuit: callq .move_008_016_r8b_r9b_bx
%r8b -> 1
%bx -> 1
%r9b -> 1

Circuit: xorq %rbx, %r12
%of -> 1
%cf -> 1
%af -> 1
%pf -> 1
%r12 -> 1
%zf -> 1
%sf -> 1
%rbx -> 1

Circuit: movswq %r12w, %rbx
%r12w -> 1
%rbx -> 1

Circuit: callq .set_szp_for_bx
%sf -> 1
%bx -> 1
%zf -> 1
%pf -> 1

Total Circuit
OF -> 1
RCX -> 1
R9 -> 1
AF -> 1
SF -> 1
PF -> 1
CF -> 1
RBX -> 1
R12 -> 1
ZF -> 1
R8 -> 1

Target
RCX -> 1
OF -> 1
AF -> 1
SF -> 1
ZF -> 1
RBX -> 1
CF -> 1
PF -> 1

[4m[1m[34mkprove xorw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_xorw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xorw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xorw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xorw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xorw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxorw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xorw_r16_r16: derivedInstructions//x86-xorw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xorw %cx, %bx" 1>/tmp/yyy 2>&1 

