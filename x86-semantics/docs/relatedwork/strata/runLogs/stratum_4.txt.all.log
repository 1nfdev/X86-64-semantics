[4m[1m[34mCheck if supported: addb_rh_rh[0m
[4m[1m[34mcreatespec addb_rh_rh: kproveSpecs//x86-semantics_addb_rh_rh_spec.k[0m
[4m[1m[34maddb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %bh, %edx
%bh -> 1
%rdx -> 1
%edx -> 1

Circuit: addb %dl, %ah
%af -> 1
%of -> 1
%pf -> 1
%sf -> 1
%cf -> 1
%ah -> 1
%zf -> 1
%dl -> 1

Total Circuit
CF -> 1
ZF -> 1
RAX -> 1
RBX -> 1
RDX -> 1
OF -> 1
PF -> 1
SF -> 1
AF -> 1

Target
CF -> 1
RAX -> 1
RBX -> 1
ZF -> 1
OF -> 1
PF -> 1
AF -> 1
SF -> 1

[4m[1m[34mkprove addb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_addb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_addb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput addb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_addb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput addb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34maddb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn addb_rh_rh: derivedInstructions//x86-addb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "addb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: addsubpd_xmm_xmm[0m
[4m[1m[34mcreatespec addsubpd_xmm_xmm: kproveSpecs//x86-semantics_addsubpd_xmm_xmm_spec.k[0m
[4m[1m[34maddsubpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_byte_6_of_ymm1_to_r8b
%r8b -> 1
%ymm1 -> 1

Circuit: vsubsd %xmm2, %xmm1, %xmm3
%ymm3 -> 1
%xmm3 -> 1
%xmm2 -> 1
avx -> 1
%xmm1 -> 1

Circuit: callq .move_r8b_to_byte_4_of_ymm1
%r8b -> 1
%ymm1 -> 1

Circuit: vsqrtss %xmm1, %xmm2, %xmm13
%xmm1 -> 1
avx -> 1
%xmm13 -> 1
%xmm2 -> 1
%ymm13 -> 1

Circuit: addpd %xmm13, %xmm1
%xmm1 -> 1
%xmm13 -> 1
sse2 -> 1

Circuit: movsd %xmm3, %xmm1
%xmm3 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
YMM13 -> 1
YMM1 -> 1
YMM2 -> 1
R8 -> 1
YMM3 -> 1
 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove addsubpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_addsubpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_addsubpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput addsubpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_addsubpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput addsubpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34maddsubpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn addsubpd_xmm_xmm: derivedInstructions//x86-addsubpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "addsubpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: addsubps_xmm_xmm[0m
[4m[1m[34mcreatespec addsubps_xmm_xmm: kproveSpecs//x86-semantics_addsubps_xmm_xmm_spec.k[0m
[4m[1m[34maddsubps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vaddps %xmm2, %xmm1, %xmm3
%xmm1 -> 1
%xmm2 -> 1
avx -> 1
%xmm3 -> 1
%ymm3 -> 1

Circuit: callq .move_128_032_xmm3_xmm4_xmm5_xmm6_xmm7
%xmm5 -> 1
%xmm7 -> 1
%xmm6 -> 1
%xmm4 -> 1
%xmm3 -> 1

Circuit: vsubps %xmm2, %xmm1, %xmm4
%xmm4 -> 1
%ymm4 -> 1
avx -> 1
%xmm2 -> 1
%xmm1 -> 1

Circuit: vunpckhpd %ymm4, %ymm4, %ymm6
%ymm6 -> 1
avx -> 1
%ymm4 -> 1

Circuit: callq .move_128_032_xmm3_xmm8_xmm9_xmm10_xmm11
%xmm3 -> 1
%xmm8 -> 1
%xmm11 -> 1
%xmm10 -> 1
%xmm9 -> 1

Circuit: vmovss %xmm11, %xmm10, %xmm7
%xmm10 -> 1
%xmm11 -> 1
%ymm7 -> 1
avx -> 1
%xmm7 -> 1

Circuit: callq .move_032_128_xmm4_xmm5_xmm6_xmm7_xmm1
%xmm6 -> 1
%xmm4 -> 1
%xmm7 -> 1
%xmm1 -> 1
%xmm5 -> 1

Total Circuit
 -> 1
YMM11 -> 1
YMM5 -> 1
YMM4 -> 1
YMM8 -> 1
YMM10 -> 1
YMM3 -> 1
YMM6 -> 1
YMM2 -> 1
YMM7 -> 1
YMM9 -> 1
YMM1 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove addsubps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_addsubps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_addsubps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput addsubps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_addsubps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput addsubps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34maddsubps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn addsubps_xmm_xmm: derivedInstructions//x86-addsubps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "addsubps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andb_r8_rh[0m
[4m[1m[34mcreatespec andb_r8_rh: kproveSpecs//x86-semantics_andb_r8_rh_spec.k[0m
[4m[1m[34mandb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andb_r8_rh[0m
Undef Set
af -> 1

Circuit: notb %bl
%bl -> 1

Circuit: orb %bl, %ah
%of -> 1
%af -> 1
%pf -> 1
%sf -> 1
%cf -> 1
%zf -> 1
%ah -> 1
%bl -> 1

Circuit: xorb %ah, %bl
%bl -> 1
%zf -> 1
%ah -> 1
%cf -> 1
%sf -> 1
%pf -> 1
%af -> 1
%of -> 1

Total Circuit
ZF -> 1
RAX -> 1
RBX -> 1
CF -> 1
SF -> 1
AF -> 1
PF -> 1
OF -> 1

Target
SF -> 1
AF -> 1
PF -> 1
OF -> 1
RAX -> 1
RBX -> 1
ZF -> 1
CF -> 1

[4m[1m[34mkprove andb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_andb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andb_r8_rh: derivedInstructions//x86-andb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andnl_r32_r32_r32[0m
[4m[1m[34mcreatespec andnl_r32_r32_r32: kproveSpecs//x86-semantics_andnl_r32_r32_r32_spec.k[0m
[4m[1m[34mandnl_r32_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andnl_r32_r32_r32[0m
Undef Set
pf -> 1
af -> 1

Circuit: movslq %edx, %rbx
%edx -> 1
%rbx -> 1

Circuit: orl %ecx, %edx
%rdx -> 1
%pf -> 1
%af -> 1
%of -> 1
%ecx -> 1
%edx -> 1
%cf -> 1
%sf -> 1
%zf -> 1

Circuit: callq .move_032_016_ecx_r12w_r13w
%r12w -> 1
%ecx -> 1
%r13w -> 1

Circuit: callq .move_016_032_r12w_r13w_ecx
%r12w -> 1
%ecx -> 1
%r13w -> 1

Circuit: xorl %edx, %ecx
%zf -> 1
%sf -> 1
%rcx -> 1
%cf -> 1
%edx -> 1
%ecx -> 1
%of -> 1
%af -> 1
%pf -> 1

Circuit: xchgl %ebx, %ecx
%ebx -> 1
%rbx -> 1
%rcx -> 1
%ecx -> 1

Total Circuit
PF -> 1
R13 -> 1
AF -> 1
SF -> 1
OF -> 1
RDX -> 1
ZF -> 1
RBX -> 1
RCX -> 1
R12 -> 1
CF -> 1

Target
OF -> 1
RDX -> 1
PF -> 1
AF -> 1
SF -> 1
CF -> 1
ZF -> 1
 -> 1
RBX -> 1
RCX -> 1

[4m[1m[34mkprove andnl_r32_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_andnl_r32_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andnl_r32_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andnl_r32_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andnl_r32_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andnl_r32_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandnl_r32_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andnl_r32_r32_r32: derivedInstructions//x86-andnl_r32_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andnl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andnps_xmm_xmm[0m
[4m[1m[34mcreatespec andnps_xmm_xmm: kproveSpecs//x86-semantics_andnps_xmm_xmm_spec.k[0m
[4m[1m[34mandnps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movdqa %xmm2, %xmm8
%xmm8 -> 1
%xmm2 -> 1
sse2 -> 1

Circuit: pandn %xmm8, %xmm1
%xmm8 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
YMM8 -> 1
 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove andnps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_andnps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andnps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andnps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andnps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andnps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandnps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andnps_xmm_xmm: derivedInstructions//x86-andnps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andnps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: blsmskl_r32_r32[0m
[4m[1m[34mcreatespec blsmskl_r32_r32: kproveSpecs//x86-semantics_blsmskl_r32_r32_spec.k[0m
[4m[1m[34mblsmskl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: blsmskl_r32_r32[0m
Undef Set
af -> 1
pf -> 1

Circuit: movl %ecx, %ebx
%rbx -> 1
%ebx -> 1
%ecx -> 1

Circuit: decq %rbx
%rbx -> 1
%zf -> 1
%sf -> 1
%pf -> 1
%af -> 1
%of -> 1

Circuit: callq .move_byte_5_of_rbx_to_r9b
%r9b -> 1
%rbx -> 1

Circuit: xorl %ecx, %ebx
%ebx -> 1
%rbx -> 1
%zf -> 1
%ecx -> 1
%cf -> 1
%sf -> 1
%pf -> 1
%af -> 1
%of -> 1

Circuit: rclb $0x1, %r9b
%r9b -> 1
%of -> 1
\$0x1 -> 1
%cf -> 1

Total Circuit
R9 -> 1
CF -> 1
ZF -> 1
 -> 1
RBX -> 1
RCX -> 1
OF -> 1
PF -> 1
SF -> 1
AF -> 1

Target
OF -> 1
SF -> 1
AF -> 1
PF -> 1
CF -> 1
RCX -> 1
RBX -> 1
 -> 1
ZF -> 1

[4m[1m[34mkprove blsmskl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_blsmskl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_blsmskl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput blsmskl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_blsmskl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput blsmskl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mblsmskl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn blsmskl_r32_r32: derivedInstructions//x86-blsmskl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "blsmskl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovew_r16_r16[0m
[4m[1m[34mcreatespec cmovew_r16_r16: kproveSpecs//x86-semantics_cmovew_r16_r16_spec.k[0m
[4m[1m[34mcmovew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovew_r16_r16[0m
Circuit: xchgb %bl, %bl
%bl -> 1

Circuit: cmovzw %cx, %bx
cmov -> 1
%zf -> 1
%cx -> 1
%bx -> 1

Total Circuit
RCX -> 1
RBX -> 1
 -> 1
ZF -> 1

Target
 -> 1
RBX -> 1
ZF -> 1
RCX -> 1

[4m[1m[34mkprove cmovew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovew_r16_r16: derivedInstructions//x86-cmovew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnael_r32_r32[0m
[4m[1m[34mcreatespec cmovnael_r32_r32: kproveSpecs//x86-semantics_cmovnael_r32_r32_spec.k[0m
[4m[1m[34mcmovnael_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnael_r32_r32[0m
Circuit: vxorps %xmm2, %xmm2, %xmm1
%xmm2 -> 1
avx -> 1
%xmm1 -> 1
%ymm1 -> 1

Circuit: callq .move_128_032_xmm1_eax_edx_r8d_r9d
%xmm1 -> 1
%r8d -> 1
%r9d -> 1
%edx -> 1
%eax -> 1

Circuit: setnae %ah
%ah -> 1
%cf -> 1

Circuit: xaddw %ax, %r8w
%af -> 1
%of -> 1
%pf -> 1
%ax -> 1
%sf -> 1
%r8w -> 1
%cf -> 1
%zf -> 1

Circuit: cmovnzl %ecx, %ebx
%zf -> 1
%rbx -> 1
%ebx -> 1
%ecx -> 1
cmov -> 1

Total Circuit
CF -> 1
R9 -> 1
RCX -> 1
ZF -> 1
RAX -> 1
RBX -> 1
 -> 1
OF -> 1
YMM1 -> 1
RDX -> 1
AF -> 1
SF -> 1
YMM2 -> 1
R8 -> 1
PF -> 1

Target
CF -> 1
RBX -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovnael_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnael_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnael_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnael_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnael_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnael_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnael_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnael_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnael_r32_r32: derivedInstructions//x86-cmovnael_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnael %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnaq_r64_r64[0m
[4m[1m[34mcreatespec cmovnaq_r64_r64: kproveSpecs//x86-semantics_cmovnaq_r64_r64_spec.k[0m
[4m[1m[34mcmovnaq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnaq_r64_r64[0m
Circuit: cmovbeq %rcx, %rbx
%rbx -> 1
%zf -> 1
%cf -> 1
%rcx -> 1
cmov -> 1

Total Circuit
CF -> 1
RCX -> 1
ZF -> 1
 -> 1
RBX -> 1

Target
RCX -> 1
ZF -> 1
RBX -> 1
 -> 1
CF -> 1

[4m[1m[34mkprove cmovnaq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovnaq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnaq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnaq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnaq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnaq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnaq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnaq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnaq_r64_r64: derivedInstructions//x86-cmovnaq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnaq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnel_r32_r32[0m
[4m[1m[34mcreatespec cmovnel_r32_r32: kproveSpecs//x86-semantics_cmovnel_r32_r32_spec.k[0m
[4m[1m[34mcmovnel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnel_r32_r32[0m
Circuit: cmovnzl %ecx, %ebx
%zf -> 1
%ebx -> 1
%rbx -> 1
cmov -> 1
%ecx -> 1

Total Circuit
RCX -> 1
 -> 1
RBX -> 1
ZF -> 1

Target
 -> 1
RBX -> 1
ZF -> 1
RCX -> 1

[4m[1m[34mkprove cmovnel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnel_r32_r32: derivedInstructions//x86-cmovnel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovneq_r64_r64[0m
[4m[1m[34mcreatespec cmovneq_r64_r64: kproveSpecs//x86-semantics_cmovneq_r64_r64_spec.k[0m
[4m[1m[34mcmovneq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovneq_r64_r64[0m
Circuit: setz %dh
%zf -> 1
%dh -> 1

Circuit: salb $0x1, %dh
%af -> 1
%of -> 1
%pf -> 1
%sf -> 1
%dh -> 1
\$0x1 -> 1
%cf -> 1
%zf -> 1

Circuit: cmoveq %rcx, %rbx
%rbx -> 1
%zf -> 1
cmov -> 1
%rcx -> 1

Total Circuit
RDX -> 1
OF -> 1
PF -> 1
AF -> 1
SF -> 1
CF -> 1
ZF -> 1
RBX -> 1
 -> 1
RCX -> 1

Target
RCX -> 1
ZF -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove cmovneq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovneq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovneq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovneq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovneq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovneq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovneq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovneq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovneq_r64_r64: derivedInstructions//x86-cmovneq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovneq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnew_r16_r16[0m
[4m[1m[34mcreatespec cmovnew_r16_r16: kproveSpecs//x86-semantics_cmovnew_r16_r16_spec.k[0m
[4m[1m[34mcmovnew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovnew_r16_r16[0m
Circuit: movzwq %cx, %rsi
%rsi -> 1
%cx -> 1

Circuit: cmovnzl %esi, %ebx
%esi -> 1
cmov -> 1
%zf -> 1
%ebx -> 1
%rbx -> 1

Total Circuit
RSI -> 1
RCX -> 1
ZF -> 1
RBX -> 1
 -> 1

Target
 -> 1
RBX -> 1
ZF -> 1
RCX -> 1

[4m[1m[34mkprove cmovnew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovnew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnew_r16_r16: derivedInstructions//x86-cmovnew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnsl_r32_r32[0m
[4m[1m[34mcreatespec cmovnsl_r32_r32: kproveSpecs//x86-semantics_cmovnsl_r32_r32_spec.k[0m
[4m[1m[34mcmovnsl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnsl_r32_r32[0m
Circuit: movl %ecx, %esi
%rsi -> 1
%ecx -> 1
%esi -> 1

Circuit: callq .read_sf_into_rcx
%sf -> 1
%rcx -> 1

Circuit: decl %ecx
%zf -> 1
%sf -> 1
%ecx -> 1
%rcx -> 1
%of -> 1
%af -> 1
%pf -> 1

Circuit: cmovnzl %esi, %ebx
%zf -> 1
%rbx -> 1
%ebx -> 1
%esi -> 1
cmov -> 1

Total Circuit
RCX -> 1
ZF -> 1
RBX -> 1
 -> 1
OF -> 1
RSI -> 1
AF -> 1
SF -> 1
PF -> 1

Target
SF -> 1
RCX -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove cmovnsl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnsl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnsl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnsl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnsl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnsl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnsl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnsl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnsl_r32_r32: derivedInstructions//x86-cmovnsl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnsl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpol_r32_r32[0m
[4m[1m[34mcreatespec cmovpol_r32_r32: kproveSpecs//x86-semantics_cmovpol_r32_r32_spec.k[0m
[4m[1m[34mcmovpol_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovpol_r32_r32[0m
Circuit: callq .move_032_016_ecx_r10w_r11w
%r11w -> 1
%r10w -> 1
%ecx -> 1

Circuit: movl %ebx, %esi
%esi -> 1
%rsi -> 1
%ebx -> 1

Circuit: callq .read_pf_into_rbx
%pf -> 1
%rbx -> 1

Circuit: popcntw %bx, %bx
%pf -> 1
%of -> 1
%af -> 1
%bx -> 1
popcnt -> 1
%zf -> 1
%cf -> 1
%sf -> 1

Circuit: callq .move_016_032_r10w_r11w_ebx
%r11w -> 1
%r10w -> 1
%ebx -> 1

Circuit: cmovnzl %esi, %ebx
%esi -> 1
cmov -> 1
%zf -> 1
%ebx -> 1
%rbx -> 1

Total Circuit
AF -> 1
SF -> 1
RSI -> 1
PF -> 1
R11 -> 1
OF -> 1
RCX -> 1
RBX -> 1
 -> 1
ZF -> 1
R10 -> 1
CF -> 1

Target
PF -> 1
RCX -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove cmovpol_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovpol_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpol_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpol_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpol_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpol_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpol_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpol_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpol_r32_r32: derivedInstructions//x86-cmovpol_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpol %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: minsd_xmm_xmm[0m
[4m[1m[34mcreatespec minsd_xmm_xmm: kproveSpecs//x86-semantics_minsd_xmm_xmm_spec.k[0m
[4m[1m[34mminsd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovsd %xmm2, %xmm1, %xmm0
%xmm0 -> 1
%xmm1 -> 1
avx -> 1
%xmm2 -> 1
%ymm0 -> 1

Circuit: minpd %xmm0, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm0 -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM0 -> 1
YMM1 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove minsd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_minsd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_minsd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput minsd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_minsd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput minsd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mminsd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn minsd_xmm_xmm: derivedInstructions//x86-minsd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "minsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movhlps_xmm_xmm[0m
[4m[1m[34mcreatespec movhlps_xmm_xmm: kproveSpecs//x86-semantics_movhlps_xmm_xmm_spec.k[0m
[4m[1m[34mmovhlps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: punpckhqdq %xmm1, %xmm2
%xmm1 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%r13 -> 1
%xmm2 -> 1
%r12 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r12 -> 1
%xmm1 -> 1
%r13 -> 1

Total Circuit
YMM1 -> 1
R13 -> 1
YMM2 -> 1
R12 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove movhlps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movhlps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movhlps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movhlps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movhlps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movhlps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovhlps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movhlps_xmm_xmm: derivedInstructions//x86-movhlps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movhlps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movsbw_r16_r8[0m
[4m[1m[34mcreatespec movsbw_r16_r8: kproveSpecs//x86-semantics_movsbw_r16_r8_spec.k[0m
[4m[1m[34mmovsbw_r16_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0xfffffffffffffff8, %rbx
\$0xfffffffffffffff8 -> 1
%rbx -> 1

Circuit: xchgb %cl, %bh
%bh -> 1
%cl -> 1

Circuit: movsbl %bh, %eax
%bh -> 1
%eax -> 1
%rax -> 1

Circuit: movw %ax, %bx
%bx -> 1
%ax -> 1

Total Circuit
 -> 1
RBX -> 1
RAX -> 1
RCX -> 1

Target
RBX -> 1
RCX -> 1

[4m[1m[34mkprove movsbw_r16_r8[0m
time krun --prove kproveSpecs//x86-semantics_movsbw_r16_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movsbw_r16_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movsbw_r16_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movsbw_r16_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movsbw_r16_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovsbw_r16_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movsbw_r16_r8: derivedInstructions//x86-movsbw_r16_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movsbw %cl, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movshdup_xmm_xmm[0m
[4m[1m[34mcreatespec movshdup_xmm_xmm: kproveSpecs//x86-semantics_movshdup_xmm_xmm_spec.k[0m
[4m[1m[34mmovshdup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r10_r11
%xmm2 -> 1
%r10 -> 1
%r11 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%xmm1 -> 1
%r10 -> 1
%r11 -> 1

Circuit: vmovshdup %xmm1, %xmm8
%xmm1 -> 1
avx -> 1
%ymm8 -> 1
%xmm8 -> 1

Circuit: movaps %xmm8, %xmm1
%xmm1 -> 1
sse -> 1
%xmm8 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
R11 -> 1
 -> 1
YMM8 -> 1
R10 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove movshdup_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_movshdup_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movshdup_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movshdup_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movshdup_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movshdup_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovshdup_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movshdup_xmm_xmm: derivedInstructions//x86-movshdup_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movshdup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: negb_rh[0m
[4m[1m[34mcreatespec negb_rh: kproveSpecs//x86-semantics_negb_rh_spec.k[0m
[4m[1m[34mnegb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %ah, %eax
%ah -> 1
%eax -> 1
%rax -> 1

Circuit: negb %al
%zf -> 1
%sf -> 1
%cf -> 1
%al -> 1
%of -> 1
%af -> 1
%pf -> 1

Circuit: xchgb %ah, %al
%al -> 1
%ax -> 1
%ah -> 1

Total Circuit
AF -> 1
SF -> 1
PF -> 1
OF -> 1
RAX -> 1
ZF -> 1
CF -> 1

Target
ZF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
AF -> 1
OF -> 1

[4m[1m[34mkprove negb_rh[0m
time krun --prove kproveSpecs//x86-semantics_negb_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_negb_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput negb_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_negb_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput negb_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnegb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn negb_rh: derivedInstructions//x86-negb_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "negb %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: notb_rh[0m
[4m[1m[34mcreatespec notb_rh: kproveSpecs//x86-semantics_notb_rh_spec.k[0m
[4m[1m[34mnotb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0xfffffffffffffffd, %rdx
\$0xfffffffffffffffd -> 1
%rdx -> 1

Circuit: callq .write_dl_to_zf
%dl -> 1
%zf -> 1

Circuit: callq .read_zf_into_rbx
%rbx -> 1
%zf -> 1

Circuit: stc
%cf -> 1

Circuit: adcw %dx, %bx
%bx -> 1
%zf -> 1
%sf -> 1
%cf -> 1
%dx -> 1
%of -> 1
%af -> 1
%pf -> 1

Circuit: xorb %bl, %ah
%cf -> 1
%sf -> 1
%bl -> 1
%ah -> 1
%zf -> 1
%pf -> 1
%af -> 1
%of -> 1

Total Circuit
PF -> 1
AF -> 1
SF -> 1
OF -> 1
RDX -> 1
RBX -> 1
RAX -> 1
 -> 1
ZF -> 1
CF -> 1

Target
RAX -> 1

[4m[1m[34mkprove notb_rh[0m
time krun --prove kproveSpecs//x86-semantics_notb_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_notb_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput notb_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_notb_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput notb_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mnotb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn notb_rh: derivedInstructions//x86-notb_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "notb %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: orb_r8_rh[0m
[4m[1m[34mcreatespec orb_r8_rh: kproveSpecs//x86-semantics_orb_r8_rh_spec.k[0m
[4m[1m[34morb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: orb_r8_rh[0m
Undef Set
af -> 1

Circuit: orb %bl, %ah
%pf -> 1
%of -> 1
%af -> 1
%bl -> 1
%zf -> 1
%ah -> 1
%cf -> 1
%sf -> 1

Circuit: xchgb %bl, %ah
%ah -> 1
%bl -> 1

Total Circuit
SF -> 1
AF -> 1
PF -> 1
OF -> 1
RBX -> 1
RAX -> 1
ZF -> 1
CF -> 1

Target
CF -> 1
RBX -> 1
RAX -> 1
ZF -> 1
OF -> 1
SF -> 1
AF -> 1
PF -> 1

[4m[1m[34mkprove orb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_orb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_orb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput orb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_orb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput orb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34morb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn orb_r8_rh: derivedInstructions//x86-orb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "orb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: orb_rh_rh[0m
[4m[1m[34mcreatespec orb_rh_rh: kproveSpecs//x86-semantics_orb_rh_rh_spec.k[0m
[4m[1m[34morb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: orb_rh_rh[0m
Undef Set
af -> 1

Circuit: movzbw %bh, %bx
%bx -> 1
%bh -> 1

Circuit: orb %bl, %ah
%sf -> 1
%cf -> 1
%ah -> 1
%zf -> 1
%bl -> 1
%of -> 1
%af -> 1
%pf -> 1

Total Circuit
SF -> 1
AF -> 1
PF -> 1
OF -> 1
ZF -> 1
RBX -> 1
RAX -> 1
CF -> 1

Target
CF -> 1
ZF -> 1
RAX -> 1
RBX -> 1
OF -> 1
AF -> 1
SF -> 1
PF -> 1

[4m[1m[34mkprove orb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_orb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_orb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput orb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_orb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput orb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34morb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn orb_rh_rh: derivedInstructions//x86-orb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "orb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: pand_xmm_xmm[0m
[4m[1m[34mcreatespec pand_xmm_xmm: kproveSpecs//x86-semantics_pand_xmm_xmm_spec.k[0m
[4m[1m[34mpand_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpxor %xmm1, %xmm2, %xmm0
%xmm1 -> 1
%xmm2 -> 1
%ymm0 -> 1
avx -> 1
%xmm0 -> 1

Circuit: pandn %xmm2, %xmm0
%xmm0 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: vmovapd %xmm0, %xmm2
%xmm0 -> 1
%ymm2 -> 1
%xmm2 -> 1
avx -> 1

Circuit: movdqa %xmm2, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm2 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
YMM0 -> 1
 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove pand_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_pand_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_pand_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput pand_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_pand_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput pand_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpand_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn pand_xmm_xmm: derivedInstructions//x86-pand_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "pand %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: punpckhdq_xmm_xmm[0m
[4m[1m[34mcreatespec punpckhdq_xmm_xmm: kproveSpecs//x86-semantics_punpckhdq_xmm_xmm_spec.k[0m
[4m[1m[34mpunpckhdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vunpckhps %xmm2, %xmm1, %xmm8
%xmm8 -> 1
%xmm1 -> 1
%xmm2 -> 1
%ymm8 -> 1
avx -> 1

Circuit: movdqu %xmm8, %xmm1
%xmm8 -> 1
sse2 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM8 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove punpckhdq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_punpckhdq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_punpckhdq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput punpckhdq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_punpckhdq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput punpckhdq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpunpckhdq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn punpckhdq_xmm_xmm: derivedInstructions//x86-punpckhdq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "punpckhdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: salw_r16_one[0m
[4m[1m[34mcreatespec salw_r16_one: kproveSpecs//x86-semantics_salw_r16_one_spec.k[0m
[4m[1m[34msalw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: salw_r16_one[0m
Undef Set
af -> 1

Circuit: shlw $0x1, %bx
%bx -> 1
%zf -> 1
%sf -> 1
\$0x1 -> 1
%cf -> 1
%of -> 1
%af -> 1
%pf -> 1

Total Circuit
ZF -> 1
RBX -> 1
 -> 1
CF -> 1
AF -> 1
SF -> 1
PF -> 1
OF -> 1

Target
OF -> 1
PF -> 1
AF -> 1
SF -> 1
CF -> 1
ZF -> 1
 -> 1
RBX -> 1

[4m[1m[34mkprove salw_r16_one[0m
time krun --prove kproveSpecs//x86-semantics_salw_r16_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_salw_r16_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput salw_r16_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_salw_r16_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput salw_r16_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msalw_r16_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn salw_r16_one: derivedInstructions//x86-salw_r16_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "salw \$0x1, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: seta_r8[0m
[4m[1m[34mcreatespec seta_r8: kproveSpecs//x86-semantics_seta_r8_spec.k[0m
[4m[1m[34mseta_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: seta %bh
%zf -> 1
%cf -> 1
%bh -> 1

Circuit: movsbl %bh, %ebx
%bh -> 1
%ebx -> 1
%rbx -> 1

Total Circuit
ZF -> 1
RBX -> 1
CF -> 1

Target
CF -> 1
RBX -> 1
ZF -> 1

[4m[1m[34mkprove seta_r8[0m
time krun --prove kproveSpecs//x86-semantics_seta_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_seta_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput seta_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_seta_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput seta_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mseta_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn seta_r8: derivedInstructions//x86-seta_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "seta %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setna_rh[0m
[4m[1m[34mcreatespec setna_rh: kproveSpecs//x86-semantics_setna_rh_spec.k[0m
[4m[1m[34msetna_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setbe %ah
%zf -> 1
%ah -> 1
%cf -> 1

Total Circuit
RAX -> 1
ZF -> 1
CF -> 1

Target
CF -> 1
ZF -> 1
RAX -> 1

[4m[1m[34mkprove setna_rh[0m
time krun --prove kproveSpecs//x86-semantics_setna_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setna_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setna_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setna_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setna_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetna_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setna_rh: derivedInstructions//x86-setna_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setna %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnc_r8[0m
[4m[1m[34mcreatespec setnc_r8: kproveSpecs//x86-semantics_setnc_r8_spec.k[0m
[4m[1m[34msetnc_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_cf_into_rbx
%rbx -> 1
%cf -> 1

Circuit: orl %ebx, %ebx
%af -> 1
%of -> 1
%pf -> 1
%zf -> 1
%ebx -> 1
%rbx -> 1
%sf -> 1
%cf -> 1

Circuit: setge %r10b
%r10b -> 1
%sf -> 1
%of -> 1

Circuit: xorb %r10b, %bl
%of -> 1
%af -> 1
%pf -> 1
%zf -> 1
%bl -> 1
%r10b -> 1
%sf -> 1
%cf -> 1

Total Circuit
R10 -> 1
CF -> 1
RBX -> 1
ZF -> 1
OF -> 1
PF -> 1
SF -> 1
AF -> 1

Target
RBX -> 1
CF -> 1

[4m[1m[34mkprove setnc_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnc_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnc_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnc_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnc_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnc_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnc_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnc_r8: derivedInstructions//x86-setnc_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnc %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setng_r8[0m
[4m[1m[34mcreatespec setng_r8: kproveSpecs//x86-semantics_setng_r8_spec.k[0m
[4m[1m[34msetng_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_sf_into_rbx
%rbx -> 1
%sf -> 1

Circuit: setle %bh
%zf -> 1
%sf -> 1
%bh -> 1
%of -> 1

Circuit: xchgb %bl, %bh
%bh -> 1
%bl -> 1
%bx -> 1

Total Circuit
RBX -> 1
ZF -> 1
SF -> 1
OF -> 1

Target
RBX -> 1
ZF -> 1
SF -> 1
OF -> 1

[4m[1m[34mkprove setng_r8[0m
time krun --prove kproveSpecs//x86-semantics_setng_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setng_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setng_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setng_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setng_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetng_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setng_r8: derivedInstructions//x86-setng_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setng %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setng_rh[0m
[4m[1m[34mcreatespec setng_rh: kproveSpecs//x86-semantics_setng_rh_spec.k[0m
[4m[1m[34msetng_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setle %ah
%zf -> 1
%ah -> 1
%sf -> 1
%of -> 1

Total Circuit
ZF -> 1
RAX -> 1
SF -> 1
OF -> 1

Target
SF -> 1
OF -> 1
ZF -> 1
RAX -> 1

[4m[1m[34mkprove setng_rh[0m
time krun --prove kproveSpecs//x86-semantics_setng_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setng_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setng_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setng_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setng_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetng_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setng_rh: derivedInstructions//x86-setng_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setng %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnl_rh[0m
[4m[1m[34mcreatespec setnl_rh: kproveSpecs//x86-semantics_setnl_rh_spec.k[0m
[4m[1m[34msetnl_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_of_into_rbx
%rbx -> 1
%of -> 1

Circuit: setge %bh
%bh -> 1
%of -> 1
%sf -> 1

Circuit: movswq %bx, %rax
%bx -> 1
%rax -> 1

Total Circuit
RAX -> 1
RBX -> 1
SF -> 1
OF -> 1

Target
RAX -> 1
SF -> 1
OF -> 1

[4m[1m[34mkprove setnl_rh[0m
time krun --prove kproveSpecs//x86-semantics_setnl_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnl_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnl_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnl_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnl_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnl_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnl_rh: derivedInstructions//x86-setnl_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnl %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setp_rh[0m
[4m[1m[34mcreatespec setp_rh: kproveSpecs//x86-semantics_setp_rh_spec.k[0m
[4m[1m[34msetp_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_pf_into_rbx
%rbx -> 1
%pf -> 1

Circuit: xorl %eax, %eax
%eax -> 1
%zf -> 1
%rax -> 1
%cf -> 1
%sf -> 1
%pf -> 1
%of -> 1
%af -> 1

Circuit: addb %bl, %ah
%af -> 1
%of -> 1
%pf -> 1
%sf -> 1
%cf -> 1
%ah -> 1
%zf -> 1
%bl -> 1

Total Circuit
ZF -> 1
RBX -> 1
RAX -> 1
CF -> 1
AF -> 1
SF -> 1
PF -> 1
OF -> 1

Target
RAX -> 1
PF -> 1

[4m[1m[34mkprove setp_rh[0m
time krun --prove kproveSpecs//x86-semantics_setp_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setp_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setp_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setp_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setp_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetp_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setp_rh: derivedInstructions//x86-setp_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setp %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setpe_rh[0m
[4m[1m[34mcreatespec setpe_rh: kproveSpecs//x86-semantics_setpe_rh_spec.k[0m
[4m[1m[34msetpe_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_pf_into_rbx
%pf -> 1
%rbx -> 1

Circuit: movw %bx, %ax
%ax -> 1
%bx -> 1

Circuit: xchgb %al, %bh
%al -> 1
%bh -> 1

Circuit: xorw %bx, %ax
%cf -> 1
%sf -> 1
%zf -> 1
%bx -> 1
%pf -> 1
%of -> 1
%af -> 1
%ax -> 1

Total Circuit
SF -> 1
AF -> 1
PF -> 1
OF -> 1
ZF -> 1
RBX -> 1
RAX -> 1
CF -> 1

Target
RAX -> 1
PF -> 1

[4m[1m[34mkprove setpe_rh[0m
time krun --prove kproveSpecs//x86-semantics_setpe_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setpe_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setpe_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setpe_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setpe_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetpe_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setpe_rh: derivedInstructions//x86-setpe_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setpe %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sets_rh[0m
[4m[1m[34mcreatespec sets_rh: kproveSpecs//x86-semantics_sets_rh_spec.k[0m
[4m[1m[34msets_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_sf_into_rcx
%sf -> 1
%rcx -> 1

Circuit: xorl %eax, %eax
%sf -> 1
%cf -> 1
%rax -> 1
%zf -> 1
%eax -> 1
%af -> 1
%of -> 1
%pf -> 1

Circuit: addb %cl, %ah
%ah -> 1
%zf -> 1
%cl -> 1
%sf -> 1
%cf -> 1
%af -> 1
%of -> 1
%pf -> 1

Circuit: cltq
%eax -> 1
%rax -> 1

Total Circuit
RCX -> 1
ZF -> 1
RAX -> 1
CF -> 1
SF -> 1
AF -> 1
PF -> 1
OF -> 1

Target
SF -> 1
RAX -> 1

[4m[1m[34mkprove sets_rh[0m
time krun --prove kproveSpecs//x86-semantics_sets_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sets_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sets_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sets_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sets_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msets_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sets_rh: derivedInstructions//x86-sets_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sets %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: unpckhps_xmm_xmm[0m
[4m[1m[34mcreatespec unpckhps_xmm_xmm: kproveSpecs//x86-semantics_unpckhps_xmm_xmm_spec.k[0m
[4m[1m[34munpckhps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm2_xmm12_xmm13
%xmm2 -> 1
%xmm13 -> 1
%xmm12 -> 1

Circuit: callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
%xmm8 -> 1
%xmm9 -> 1
%xmm1 -> 1
%xmm10 -> 1
%xmm11 -> 1

Circuit: vmaxss %xmm13, %xmm13, %xmm0
%xmm0 -> 1
%ymm0 -> 1
avx -> 1
%xmm13 -> 1

Circuit: vmovss %xmm11, %xmm13, %xmm9
%xmm9 -> 1
%xmm13 -> 1
avx -> 1
%ymm9 -> 1
%xmm11 -> 1

Circuit: movsldup %xmm0, %xmm13
%xmm0 -> 1
pni -> 1
%xmm13 -> 1

Circuit: vmovss %xmm10, %xmm13, %xmm8
%xmm10 -> 1
%ymm8 -> 1
avx -> 1
%xmm13 -> 1
%xmm8 -> 1

Circuit: callq .move_64_128_xmm8_xmm9_xmm1
%xmm8 -> 1
%xmm1 -> 1
%xmm9 -> 1

Total Circuit
YMM10 -> 1
YMM12 -> 1
YMM11 -> 1
 -> 1
YMM8 -> 1
YMM9 -> 1
YMM1 -> 1
YMM13 -> 1
YMM0 -> 1
YMM2 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove unpckhps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_unpckhps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_unpckhps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput unpckhps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_unpckhps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput unpckhps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34munpckhps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn unpckhps_xmm_xmm: derivedInstructions//x86-unpckhps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "unpckhps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandnpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vandnpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vandnpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvandnpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm3_xmm12_xmm13
%xmm13 -> 1
%ymm3 -> 1
%xmm12 -> 1

Circuit: pandn %xmm3, %xmm2
%xmm3 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: callq .move_256_128_ymm2_xmm10_xmm11
%ymm2 -> 1
%xmm11 -> 1
%xmm10 -> 1

Circuit: vmovdqa %xmm10, %xmm14
%xmm14 -> 1
%xmm10 -> 1
avx -> 1
%ymm14 -> 1

Circuit: vandnpd %xmm13, %xmm11, %xmm11
%xmm11 -> 1
%xmm13 -> 1
avx -> 1
%ymm11 -> 1

Circuit: callq .move_128_256_xmm10_xmm11_ymm3
%xmm10 -> 1
%xmm11 -> 1
%ymm3 -> 1

Circuit: vorpd %ymm3, %ymm14, %ymm1
%ymm1 -> 1
%ymm3 -> 1
avx -> 1
%ymm14 -> 1

Total Circuit
YMM14 -> 1
YMM3 -> 1
YMM10 -> 1
YMM12 -> 1
YMM11 -> 1
 -> 1
YMM13 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vandnpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vandnpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandnpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandnpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandnpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandnpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandnpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandnpd_ymm_ymm_ymm: derivedInstructions//x86-vandnpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandnpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vdivss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vdivss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vdivss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvdivss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movdqu %xmm3, %xmm3
%xmm3 -> 1
sse2 -> 1

Circuit: divss %xmm3, %xmm2
sse -> 1
%xmm3 -> 1
%xmm2 -> 1

Circuit: vmovaps %xmm2, %xmm1
%xmm1 -> 1
%xmm2 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vdivss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vdivss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vdivss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vdivss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vdivss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vdivss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvdivss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vdivss_xmm_xmm_xmm: derivedInstructions//x86-vdivss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vdivss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd132ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd132ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd132ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd132ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd231ss %xmm3, %xmm1, %xmm2
fma -> 1
%xmm1 -> 1
%xmm2 -> 1
%ymm2 -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm1_r12_r13
%r13 -> 1
%xmm1 -> 1
%r12 -> 1

Circuit: vmovss %xmm2, %xmm2, %xmm1
%xmm1 -> 1
%xmm2 -> 1
avx -> 1
%ymm1 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r12 -> 1
%r13 -> 1
%xmm1 -> 1

Circuit: movss %xmm2, %xmm1
sse -> 1
%xmm2 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
R13 -> 1
R12 -> 1
YMM3 -> 1
 -> 1

Target
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vfmadd132ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd132ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd132ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd132ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd132ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd132ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd132ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd132ss_xmm_xmm_xmm: derivedInstructions//x86-vfmadd132ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub213pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub213pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub213pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub132pd %xmm1, %xmm3, %xmm2
%xmm2 -> 1
%xmm1 -> 1
fma -> 1
%xmm3 -> 1
%ymm2 -> 1

Circuit: vmovdqa %xmm2, %xmm12
avx -> 1
%xmm2 -> 1
%ymm12 -> 1
%xmm12 -> 1

Circuit: vmovups %ymm12, %ymm1
%ymm1 -> 1
%ymm12 -> 1
avx -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1
YMM12 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmsub213pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub213pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub213pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub213pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub213pd_xmm_xmm_xmm: derivedInstructions//x86-vfmsub213pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub231pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub231pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub231pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub132pd %xmm3, %xmm1, %xmm2
%xmm3 -> 1
%ymm2 -> 1
%xmm1 -> 1
fma -> 1
%xmm2 -> 1

Circuit: movaps %xmm2, %xmm1
%xmm2 -> 1
%xmm1 -> 1
sse -> 1

Circuit: vmovsd %xmm2, %xmm1, %xmm1
%ymm1 -> 1
%xmm2 -> 1
avx -> 1
%xmm1 -> 1

Total Circuit
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmsub231pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub231pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub231pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub231pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub231pd_xmm_xmm_xmm: derivedInstructions//x86-vfmsub231pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub231sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub231sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub231sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpbroadcastq %xmm1, %ymm0
%ymm0 -> 1
avx2 -> 1
%xmm1 -> 1

Circuit: vfmsub132pd %xmm3, %xmm0, %xmm2
%xmm3 -> 1
%ymm2 -> 1
%xmm0 -> 1
%xmm2 -> 1
fma -> 1

Circuit: vmovsd %xmm2, %xmm1, %xmm1
%xmm1 -> 1
%xmm2 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM0 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmsub231sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub231sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub231sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub231sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub231sd_xmm_xmm_xmm: derivedInstructions//x86-vfmsub231sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd132ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd132ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd132ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd132ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpandn %xmm2, %xmm2, %xmm11
%xmm2 -> 1
%xmm11 -> 1
avx -> 1
%ymm11 -> 1

Circuit: vfnmsub213ps %xmm2, %xmm11, %xmm2
%ymm2 -> 1
fma -> 1
%xmm11 -> 1
%xmm2 -> 1

Circuit: vfnmsub132ss %xmm3, %xmm2, %xmm1
%xmm2 -> 1
fma -> 1
%xmm1 -> 1
%ymm1 -> 1
%xmm3 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM11 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfnmadd132ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd132ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd132ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd132ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd132ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd132ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd132ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd132ss_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd132ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd213pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd213pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd231pd %xmm1, %xmm2, %xmm3
%ymm3 -> 1
%xmm3 -> 1
%xmm1 -> 1
fma -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm3_r10_r11
%xmm3 -> 1
%r11 -> 1
%r10 -> 1

Circuit: vzeroall
%ymm10 -> 1
%ymm9 -> 1
%ymm4 -> 1
%ymm0 -> 1
%ymm7 -> 1
%ymm15 -> 1
%ymm2 -> 1
%ymm6 -> 1
avx -> 1
%ymm14 -> 1
%ymm8 -> 1
%ymm12 -> 1
%ymm11 -> 1
%ymm5 -> 1
%ymm1 -> 1
%ymm3 -> 1
%ymm13 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%xmm1 -> 1
%r11 -> 1

Total Circuit
R11 -> 1
YMM9 -> 1
YMM6 -> 1
YMM2 -> 1
YMM10 -> 1
YMM8 -> 1
YMM5 -> 1
YMM13 -> 1
YMM15 -> 1
YMM1 -> 1
YMM7 -> 1
YMM0 -> 1
YMM3 -> 1
R10 -> 1
YMM14 -> 1
YMM4 -> 1
 -> 1
YMM12 -> 1
YMM11 -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfnmadd213pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd213pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd213pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd213pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd213pd_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd213pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd231ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd231ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd231ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd231ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmadd132ps %xmm3, %xmm1, %xmm2
%xmm2 -> 1
fma -> 1
%ymm2 -> 1
%xmm3 -> 1
%xmm1 -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%r13 -> 1
%r12 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm2 -> 1
%ymm7 -> 1
%ymm0 -> 1
%ymm4 -> 1
%ymm9 -> 1
%ymm10 -> 1
%ymm15 -> 1
%ymm3 -> 1
%ymm1 -> 1
%ymm5 -> 1
%ymm13 -> 1
%ymm12 -> 1
%ymm8 -> 1
avx -> 1
%ymm14 -> 1
%ymm11 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r12 -> 1
%r13 -> 1
%xmm1 -> 1

Total Circuit
R12 -> 1
YMM10 -> 1
YMM8 -> 1
YMM5 -> 1
YMM9 -> 1
YMM6 -> 1
YMM2 -> 1
YMM3 -> 1
YMM14 -> 1
YMM4 -> 1
 -> 1
YMM11 -> 1
YMM12 -> 1
YMM13 -> 1
YMM1 -> 1
YMM15 -> 1
YMM7 -> 1
R13 -> 1
YMM0 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmadd231ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd231ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd231ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd231ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd231ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd231ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd231ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd231ps_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd231ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vhaddpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vhaddpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vhaddpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvhaddpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm3_xmm12_xmm13
%xmm13 -> 1
%xmm12 -> 1
%ymm3 -> 1

Circuit: vmovdqa %xmm13, %xmm0
%ymm0 -> 1
%xmm13 -> 1
avx -> 1
%xmm0 -> 1

Circuit: callq .move_256_128_ymm2_xmm8_xmm9
%ymm2 -> 1
%xmm9 -> 1
%xmm8 -> 1

Circuit: haddpd %xmm0, %xmm9
%xmm9 -> 1
pni -> 1
%xmm0 -> 1

Circuit: vhaddpd %xmm3, %xmm2, %xmm8
%xmm2 -> 1
%xmm3 -> 1
%ymm8 -> 1
avx -> 1
%xmm8 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%xmm9 -> 1
%ymm1 -> 1
%xmm8 -> 1

Total Circuit
YMM9 -> 1
YMM2 -> 1
YMM8 -> 1
YMM1 -> 1
YMM13 -> 1
YMM0 -> 1
YMM3 -> 1
YMM12 -> 1
 -> 1

Target
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vhaddpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vhaddpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vhaddpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vhaddpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vhaddpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vhaddpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvhaddpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vhaddpd_ymm_ymm_ymm: derivedInstructions//x86-vhaddpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vhaddpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vhsubpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vhsubpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vhsubpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvhsubpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movddup %xmm2, %xmm9
%xmm9 -> 1
pni -> 1
%xmm2 -> 1

Circuit: vunpcklpd %xmm3, %xmm9, %xmm1
%ymm1 -> 1
avx -> 1
%xmm9 -> 1
%xmm1 -> 1
%xmm3 -> 1

Circuit: vmovhlps %xmm2, %xmm3, %xmm8
avx -> 1
%ymm8 -> 1
%xmm8 -> 1
%xmm2 -> 1
%xmm3 -> 1

Circuit: subpd %xmm8, %xmm1
%xmm8 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1
YMM9 -> 1
YMM8 -> 1

Target
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vhsubpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vhsubpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vhsubpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vhsubpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vhsubpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vhsubpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvhsubpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vhsubpd_xmm_xmm_xmm: derivedInstructions//x86-vhsubpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vhsubpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vminss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vminss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vminss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvminss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovdqu %xmm2, %xmm1
avx -> 1
%xmm1 -> 1
%ymm1 -> 1
%xmm2 -> 1

Circuit: minss %xmm3, %xmm1
%xmm1 -> 1
%xmm3 -> 1
sse -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

Target
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1

[4m[1m[34mkprove vminss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vminss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vminss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vminss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vminss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vminss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvminss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vminss_xmm_xmm_xmm: derivedInstructions//x86-vminss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vminss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovd_xmm_r32[0m
[4m[1m[34mcreatespec vmovd_xmm_r32: kproveSpecs//x86-semantics_vmovd_xmm_r32_spec.k[0m
[4m[1m[34mvmovd_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vzeroall
%ymm4 -> 1
%ymm9 -> 1
%ymm10 -> 1
%ymm7 -> 1
%ymm0 -> 1
%ymm15 -> 1
%ymm2 -> 1
%ymm6 -> 1
%ymm14 -> 1
avx -> 1
%ymm12 -> 1
%ymm8 -> 1
%ymm11 -> 1
%ymm5 -> 1
%ymm3 -> 1
%ymm1 -> 1
%ymm13 -> 1

Circuit: callq .move_016_008_bx_r8b_r9b
%r9b -> 1
%bx -> 1
%r8b -> 1

Circuit: callq .move_r8b_to_byte_0_of_ymm1
%ymm1 -> 1
%r8b -> 1

Circuit: callq .move_r9b_to_byte_1_of_ymm1
%ymm1 -> 1
%r9b -> 1

Circuit: xchgb %r8b, %bl
%r8b -> 1
%bl -> 1

Circuit: callq .move_r9b_to_byte_3_of_ymm1
%ymm1 -> 1
%r9b -> 1

Circuit: callq .move_032_016_ebx_r8w_r9w
%r8w -> 1
%r9w -> 1
%ebx -> 1

Circuit: callq .move_byte_3_of_rbx_to_r8b
%r8b -> 1
%rbx -> 1

Circuit: callq .move_r9b_to_byte_2_of_ymm1
%ymm1 -> 1
%r9b -> 1

Circuit: callq .move_r8b_to_byte_3_of_ymm1
%r8b -> 1
%ymm1 -> 1

Total Circuit
YMM14 -> 1
YMM3 -> 1
YMM4 -> 1
YMM11 -> 1
YMM12 -> 1
 -> 1
RBX -> 1
YMM13 -> 1
YMM1 -> 1
YMM15 -> 1
YMM7 -> 1
YMM0 -> 1
R9 -> 1
YMM10 -> 1
YMM8 -> 1
YMM5 -> 1
YMM9 -> 1
YMM6 -> 1
YMM2 -> 1
R8 -> 1

Target
YMM1 -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove vmovd_xmm_r32[0m
time krun --prove kproveSpecs//x86-semantics_vmovd_xmm_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovd_xmm_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovd_xmm_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovd_xmm_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovd_xmm_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovd_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovd_xmm_r32: derivedInstructions//x86-vmovd_xmm_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovd %ebx, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovmskpd_r32_xmm[0m
Warn: [4m[1m[35mvmovmskpd_r32_xmm: Manually Generated[0m
[4m[1m[34mCheck if supported: vmovshdup_ymm_ymm[0m
[4m[1m[34mcreatespec vmovshdup_ymm_ymm: kproveSpecs//x86-semantics_vmovshdup_ymm_ymm_spec.k[0m
[4m[1m[34mvmovshdup_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm2_xmm8_xmm9
%ymm2 -> 1
%xmm8 -> 1
%xmm9 -> 1

Circuit: vmovshdup %xmm8, %xmm3
avx -> 1
%ymm3 -> 1
%xmm8 -> 1
%xmm3 -> 1

Circuit: vmovshdup %xmm9, %xmm9
%ymm9 -> 1
avx -> 1
%xmm9 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%xmm9 -> 1
%xmm8 -> 1
%ymm1 -> 1

Circuit: movsldup %xmm3, %xmm1
%xmm1 -> 1
pni -> 1
%xmm3 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM8 -> 1
YMM9 -> 1
YMM2 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vmovshdup_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vmovshdup_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vmovshdup_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vmovshdup_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vmovshdup_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vmovshdup_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvmovshdup_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vmovshdup_ymm_ymm: derivedInstructions//x86-vmovshdup_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vmovshdup %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vorps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vorps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vorps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvorps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vorpd %ymm3, %ymm2, %ymm1
%ymm1 -> 1
%ymm3 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM1 -> 1
YMM3 -> 1
 -> 1
YMM2 -> 1

Target
 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vorps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vorps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vorps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vorps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vorps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vorps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvorps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vorps_ymm_ymm_ymm: derivedInstructions//x86-vorps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vorps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovzxbq_xmm_xmm[0m
[4m[1m[34mcreatespec vpmovzxbq_xmm_xmm: kproveSpecs//x86-semantics_vpmovzxbq_xmm_xmm_spec.k[0m
[4m[1m[34mvpmovzxbq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm2 -> 1
%ymm0 -> 1
%ymm7 -> 1
%ymm10 -> 1
%ymm4 -> 1
%ymm9 -> 1
%ymm15 -> 1
%ymm1 -> 1
%ymm3 -> 1
%ymm5 -> 1
%ymm13 -> 1
%ymm8 -> 1
%ymm12 -> 1
avx -> 1
%ymm14 -> 1
%ymm11 -> 1

Circuit: callq .move_r8b_to_byte_0_of_ymm1
%ymm1 -> 1
%r8b -> 1

Circuit: notb %r8b
%r8b -> 1

Circuit: callq .move_016_032_r8w_r9w_edx
%r8w -> 1
%r9w -> 1
%edx -> 1

Circuit: callq .move_016_008_dx_r8b_r9b
%r8b -> 1
%dx -> 1
%r9b -> 1

Circuit: callq .move_r9b_to_byte_8_of_ymm1
%r9b -> 1
%ymm1 -> 1

Total Circuit
YMM4 -> 1
 -> 1
YMM12 -> 1
YMM11 -> 1
YMM3 -> 1
YMM14 -> 1
YMM7 -> 1
YMM0 -> 1
YMM13 -> 1
YMM15 -> 1
YMM1 -> 1
YMM8 -> 1
YMM5 -> 1
R9 -> 1
YMM10 -> 1
YMM6 -> 1
YMM2 -> 1
R8 -> 1
RDX -> 1
YMM9 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpmovzxbq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovzxbq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovzxbq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovzxbq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovzxbq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovzxbq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovzxbq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovzxbq_xmm_xmm: derivedInstructions//x86-vpmovzxbq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovzxbq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovzxdq_ymm_xmm[0m
[4m[1m[34mcreatespec vpmovzxdq_ymm_xmm: kproveSpecs//x86-semantics_vpmovzxdq_ymm_xmm_spec.k[0m
[4m[1m[34mvpmovzxdq_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpmovzxdq %xmm2, %xmm10
%xmm10 -> 1
avx -> 1
%xmm2 -> 1
%ymm10 -> 1

Circuit: vunpckhps %xmm10, %xmm2, %xmm12
%xmm12 -> 1
%xmm10 -> 1
%ymm12 -> 1
avx -> 1
%xmm2 -> 1

Circuit: vpunpckhqdq %xmm12, %xmm12, %xmm0
%ymm0 -> 1
avx -> 1
%xmm0 -> 1
%xmm12 -> 1

Circuit: vorps %xmm12, %xmm12, %xmm11
avx -> 1
%xmm11 -> 1
%ymm11 -> 1
%xmm12 -> 1

Circuit: vmovupd %ymm10, %ymm12
%ymm10 -> 1
avx -> 1
%ymm12 -> 1

Circuit: vmovss %xmm11, %xmm0, %xmm13
%xmm13 -> 1
avx -> 1
%xmm11 -> 1
%ymm13 -> 1
%xmm0 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm12 -> 1
%xmm13 -> 1

Total Circuit
YMM2 -> 1
YMM10 -> 1
YMM0 -> 1
YMM1 -> 1
YMM13 -> 1
 -> 1
YMM11 -> 1
YMM12 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpmovzxdq_ymm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovzxdq_ymm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovzxdq_ymm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovzxdq_ymm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovzxdq_ymm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovzxdq_ymm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovzxdq_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovzxdq_ymm_xmm: derivedInstructions//x86-vpmovzxdq_ymm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovzxdq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpor_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpor_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpor_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpor_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vorpd %ymm2, %ymm3, %ymm5
%ymm2 -> 1
%ymm5 -> 1
%ymm3 -> 1
avx -> 1

Circuit: vminpd %ymm5, %ymm5, %ymm1
avx -> 1
%ymm5 -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM5 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vpor_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpor_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpor_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpor_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpor_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpor_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpor_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpor_ymm_ymm_ymm: derivedInstructions//x86-vpor_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpor %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpckhqdq_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpunpckhqdq_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpunpckhqdq_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpunpckhqdq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vunpckhpd %ymm3, %ymm2, %ymm1
%ymm2 -> 1
avx -> 1
%ymm3 -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM3 -> 1
 -> 1
YMM1 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vpunpckhqdq_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpckhqdq_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpckhqdq_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpckhqdq_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpckhqdq_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpckhqdq_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpckhqdq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpckhqdq_ymm_ymm_ymm: derivedInstructions//x86-vpunpckhqdq_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpckhqdq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpcklqdq_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpunpcklqdq_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpunpcklqdq_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpunpcklqdq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovddup %ymm2, %ymm2
%ymm2 -> 1
avx -> 1

Circuit: vmovddup %ymm3, %ymm11
%ymm3 -> 1
%ymm11 -> 1
avx -> 1

Circuit: vunpckhpd %ymm11, %ymm2, %ymm1
%ymm2 -> 1
%ymm11 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM11 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpunpcklqdq_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpcklqdq_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpcklqdq_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpcklqdq_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpcklqdq_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpcklqdq_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpcklqdq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpcklqdq_ymm_ymm_ymm: derivedInstructions//x86-vpunpcklqdq_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpcklqdq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vrsqrtss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vrsqrtss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vrsqrtss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvrsqrtss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: rsqrtss %xmm3, %xmm2
%xmm3 -> 1
sse -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm11 -> 1
%ymm14 -> 1
avx -> 1
%ymm8 -> 1
%ymm12 -> 1
%ymm13 -> 1
%ymm5 -> 1
%ymm3 -> 1
%ymm1 -> 1
%ymm15 -> 1
%ymm10 -> 1
%ymm9 -> 1
%ymm4 -> 1
%ymm0 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm6 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%xmm1 -> 1
%r8 -> 1
%r9 -> 1

Total Circuit
YMM13 -> 1
YMM1 -> 1
YMM15 -> 1
YMM7 -> 1
YMM0 -> 1
YMM14 -> 1
YMM3 -> 1
YMM4 -> 1
YMM11 -> 1
YMM12 -> 1
 -> 1
YMM9 -> 1
YMM6 -> 1
YMM2 -> 1
R8 -> 1
R9 -> 1
YMM10 -> 1
YMM8 -> 1
YMM5 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vrsqrtss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vrsqrtss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vrsqrtss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vrsqrtss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vrsqrtss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vrsqrtss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvrsqrtss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vrsqrtss_xmm_xmm_xmm: derivedInstructions//x86-vrsqrtss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vrsqrtss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xorb_rh_rh[0m
[4m[1m[34mcreatespec xorb_rh_rh: kproveSpecs//x86-semantics_xorb_rh_rh_spec.k[0m
[4m[1m[34mxorb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: xorb_rh_rh[0m
Undef Set
af -> 1

Circuit: xorb %al, %al
%pf -> 1
%af -> 1
%of -> 1
%al -> 1
%cf -> 1
%sf -> 1
%zf -> 1

Circuit: xaddb %al, %bh
%zf -> 1
%sf -> 1
%cf -> 1
%al -> 1
%af -> 1
%of -> 1
%pf -> 1
%bh -> 1

Circuit: xorb %al, %ah
%ax -> 1
%zf -> 1
%al -> 1
%pf -> 1
%af -> 1
%of -> 1
%ah -> 1
%cf -> 1
%sf -> 1

Total Circuit
RAX -> 1
ZF -> 1
CF -> 1
AF -> 1
SF -> 1
PF -> 1
RBX -> 1
OF -> 1

Target
CF -> 1
ZF -> 1
RAX -> 1
AF -> 1
SF -> 1
PF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove xorb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_xorb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xorb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xorb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xorb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xorb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxorb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xorb_rh_rh: derivedInstructions//x86-xorb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xorb %bh, %ah" 1>/tmp/yyy 2>&1 

