[4m[1m[34mCheck if supported: andb_rh_r8[0m
[4m[1m[34mcreatespec andb_rh_r8: kproveSpecs//x86-semantics_andb_rh_r8_spec.k[0m
[4m[1m[34mandb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andb_rh_r8[0m
Undef Set
af -> 1

Circuit: andb %ah, %bl
%af -> 1
%zf -> 1
%pf -> 1
%ah -> 1
%of -> 1
%bl -> 1
%sf -> 1
%cf -> 1

Circuit: xchgb %ah, %bl
%ah -> 1
%bl -> 1

Total Circuit
SF -> 1
AF -> 1
PF -> 1
ZF -> 1
CF -> 1
RAX -> 1
OF -> 1
RBX -> 1

Target
SF -> 1
PF -> 1
AF -> 1
ZF -> 1
OF -> 1
RBX -> 1
CF -> 1
RAX -> 1

[4m[1m[34mkprove andb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_andb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andb_rh_r8: derivedInstructions//x86-andb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andl_r32_r32[0m
[4m[1m[34mcreatespec andl_r32_r32: kproveSpecs//x86-semantics_andl_r32_r32_spec.k[0m
[4m[1m[34mandl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andl_r32_r32[0m
Undef Set
af -> 1

Circuit: andnl %ecx, %ebx, %r13d
%sf -> 1
%cf -> 1
%of -> 1
%r13d -> 1
%pf -> 1
bmi1 -> 1
%ebx -> 1
%zf -> 1
%r13 -> 1
%af -> 1
%ecx -> 1

Circuit: movzbl %bh, %ebx
%rbx -> 1
%ebx -> 1
%bh -> 1

Circuit: xorl %r13d, %ecx
%ecx -> 1
%zf -> 1
%af -> 1
%rcx -> 1
%pf -> 1
%of -> 1
%r13d -> 1
%cf -> 1
%sf -> 1

Circuit: xchgl %ebx, %ecx
%ecx -> 1
%rbx -> 1
%ebx -> 1
%rcx -> 1

Total Circuit
AF -> 1
PF -> 1
ZF -> 1
SF -> 1
RCX -> 1
 -> 1
CF -> 1
R13 -> 1
RBX -> 1
OF -> 1

Target
CF -> 1
RBX -> 1
OF -> 1
RCX -> 1
SF -> 1
PF -> 1
AF -> 1
ZF -> 1

[4m[1m[34mkprove andl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_andl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andl_r32_r32: derivedInstructions//x86-andl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andnpd_xmm_xmm[0m
[4m[1m[34mcreatespec andnpd_xmm_xmm: kproveSpecs//x86-semantics_andnpd_xmm_xmm_spec.k[0m
[4m[1m[34mandnpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: andnps %xmm2, %xmm1
%xmm2 -> 1
sse -> 1
%xmm1 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove andnpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_andnpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andnpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andnpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andnpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andnpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandnpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andnpd_xmm_xmm: derivedInstructions//x86-andnpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andnpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andpd_xmm_xmm[0m
[4m[1m[34mcreatespec andpd_xmm_xmm: kproveSpecs//x86-semantics_andpd_xmm_xmm_spec.k[0m
[4m[1m[34mandpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmaxss %xmm2, %xmm2, %xmm15
%xmm2 -> 1
%ymm15 -> 1
avx -> 1
%xmm15 -> 1

Circuit: pand %xmm15, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm15 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM15 -> 1
YMM2 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove andpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_andpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andpd_xmm_xmm: derivedInstructions//x86-andpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andps_xmm_xmm[0m
[4m[1m[34mcreatespec andps_xmm_xmm: kproveSpecs//x86-semantics_andps_xmm_xmm_spec.k[0m
[4m[1m[34mandps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovdqu %xmm2, %xmm10
%ymm10 -> 1
avx -> 1
%xmm2 -> 1
%xmm10 -> 1

Circuit: vorpd %xmm2, %xmm10, %xmm4
%ymm4 -> 1
%xmm2 -> 1
avx -> 1
%xmm10 -> 1
%xmm4 -> 1

Circuit: pand %xmm4, %xmm1
%xmm4 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
YMM4 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM10 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove andps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_andps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andps_xmm_xmm: derivedInstructions//x86-andps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: bswap_r64[0m
[4m[1m[34mcreatespec bswap_r64: kproveSpecs//x86-semantics_bswap_r64_spec.k[0m
[4m[1m[34mbswap_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_064_032_rbx_r8d_r9d
%r9d -> 1
%r8d -> 1
%rbx -> 1

Circuit: xchgl %r8d, %r9d
%r8 -> 1
%r8d -> 1
%r9 -> 1
%r9d -> 1

Circuit: bswap %r9d
%r9 -> 1
%r9d -> 1

Circuit: xorb %bh, %bh
%pf -> 1
%bh -> 1
%zf -> 1
%af -> 1
%sf -> 1
%cf -> 1
%of -> 1

Circuit: cmovew %r8w, %r8w
%r8w -> 1
%zf -> 1
cmov -> 1

Circuit: bswap %r8d
%r8d -> 1
%r8 -> 1

Circuit: callq .move_032_064_r8d_r9d_rbx
%r9d -> 1
%r8d -> 1
%rbx -> 1

Total Circuit
CF -> 1
R8 -> 1
R9 -> 1
RBX -> 1
OF -> 1
 -> 1
SF -> 1
AF -> 1
PF -> 1
ZF -> 1

Target
RBX -> 1

[4m[1m[34mkprove bswap_r64[0m
time krun --prove kproveSpecs//x86-semantics_bswap_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_bswap_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput bswap_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_bswap_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput bswap_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mbswap_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn bswap_r64: derivedInstructions//x86-bswap_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "bswap %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cltd[0m
[4m[1m[34mcreatespec cltd: kproveSpecs//x86-semantics_cltd_spec.k[0m
[4m[1m[34mcltd: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: cltq
%rax -> 1
%eax -> 1

Circuit: vmovq %rax, %xmm2
%ymm2 -> 1
avx -> 1
%rax -> 1
%xmm2 -> 1

Circuit: callq .move_128_032_xmm2_eax_edx_r8d_r9d
%r9d -> 1
%eax -> 1
%r8d -> 1
%xmm2 -> 1
%edx -> 1

Circuit: andnl %r9d, %r9d, %ecx
bmi1 -> 1
%pf -> 1
%rcx -> 1
%af -> 1
%zf -> 1
%ecx -> 1
%sf -> 1
%cf -> 1
%of -> 1
%r9d -> 1

Circuit: adcl %ecx, %edx
%rdx -> 1
%edx -> 1
%ecx -> 1
%pf -> 1
%af -> 1
%zf -> 1
%cf -> 1
%sf -> 1
%of -> 1

Total Circuit
AF -> 1
PF -> 1
ZF -> 1
RDX -> 1
SF -> 1
RCX -> 1
 -> 1
R9 -> 1
YMM2 -> 1
OF -> 1
CF -> 1
R8 -> 1
RAX -> 1

Target
RAX -> 1
RDX -> 1

[4m[1m[34mkprove cltd[0m
time krun --prove kproveSpecs//x86-semantics_cltd_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cltd_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cltd[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cltd_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cltd[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcltd: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cltd: derivedInstructions//x86-cltd.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cltd" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmc[0m
[4m[1m[34mcreatespec cmc: kproveSpecs//x86-semantics_cmc_spec.k[0m
[4m[1m[34mcmc: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_cf_into_rbx
%cf -> 1
%rbx -> 1

Circuit: callq .move_064_032_rbx_r8d_r9d
%rbx -> 1
%r9d -> 1
%r8d -> 1

Circuit: callq .move_r8b_to_byte_5_of_rbx
%rbx -> 1
%r8b -> 1

Circuit: decw %bx
%bx -> 1
%of -> 1
%sf -> 1
%af -> 1
%zf -> 1
%pf -> 1

Circuit: xorb %bh, %bh
%sf -> 1
%cf -> 1
%of -> 1
%pf -> 1
%bh -> 1
%zf -> 1
%af -> 1

Circuit: adcb %bl, %bl
%zf -> 1
%af -> 1
%pf -> 1
%of -> 1
%cf -> 1
%sf -> 1
%bl -> 1

Total Circuit
R8 -> 1
CF -> 1
R9 -> 1
RBX -> 1
OF -> 1
SF -> 1
PF -> 1
AF -> 1
ZF -> 1

Target
CF -> 1

[4m[1m[34mkprove cmc[0m
time krun --prove kproveSpecs//x86-semantics_cmc_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmc_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmc[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmc_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmc[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmc: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmc: derivedInstructions//x86-cmc.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmc" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmoval_r32_r32[0m
[4m[1m[34mcreatespec cmoval_r32_r32: kproveSpecs//x86-semantics_cmoval_r32_r32_spec.k[0m
[4m[1m[34mcmoval_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmoval_r32_r32[0m
Circuit: cmovnael %ebx, %ecx
%ecx -> 1
cmov -> 1
%rcx -> 1
%ebx -> 1
%cf -> 1

Circuit: cmovnzl %ecx, %ebx
%zf -> 1
%ebx -> 1
%rbx -> 1
%ecx -> 1
cmov -> 1

Total Circuit
ZF -> 1
RCX -> 1
 -> 1
RBX -> 1
CF -> 1

Target
ZF -> 1
RCX -> 1
 -> 1
CF -> 1
RBX -> 1

[4m[1m[34mkprove cmoval_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmoval_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmoval_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmoval_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmoval_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmoval_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmoval_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmoval_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmoval_r32_r32: derivedInstructions//x86-cmoval_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmoval %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovbl_r32_r32[0m
[4m[1m[34mcreatespec cmovbl_r32_r32: kproveSpecs//x86-semantics_cmovbl_r32_r32_spec.k[0m
[4m[1m[34mcmovbl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovbl_r32_r32[0m
Circuit: movb %ch, %ch
%ch -> 1

Circuit: cmovnael %ecx, %ebx
cmov -> 1
%ecx -> 1
%rbx -> 1
%ebx -> 1
%cf -> 1

Total Circuit
RBX -> 1
CF -> 1
 -> 1
RCX -> 1

Target
CF -> 1
RBX -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovbl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovbl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovbl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovbl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovbl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovbl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovbl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovbl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovbl_r32_r32: derivedInstructions//x86-cmovbl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovbl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovbq_r64_r64[0m
[4m[1m[34mcreatespec cmovbq_r64_r64: kproveSpecs//x86-semantics_cmovbq_r64_r64_spec.k[0m
[4m[1m[34mcmovbq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovbq_r64_r64[0m
Circuit: callq .clear_zf
%zf -> 1

Circuit: cmovnaq %rcx, %rbx
cmov -> 1
%rbx -> 1
%zf -> 1
%rcx -> 1
%cf -> 1

Total Circuit
CF -> 1
RBX -> 1
 -> 1
RCX -> 1
ZF -> 1

Target
RCX -> 1
 -> 1
CF -> 1
RBX -> 1

[4m[1m[34mkprove cmovbq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovbq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovbq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovbq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovbq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovbq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovbq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovbq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovbq_r64_r64: derivedInstructions//x86-cmovbq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovbq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovcw_r16_r16[0m
[4m[1m[34mcreatespec cmovcw_r16_r16: kproveSpecs//x86-semantics_cmovcw_r16_r16_spec.k[0m
[4m[1m[34mcmovcw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovcw_r16_r16[0m
Circuit: movzwq %cx, %rax
%rax -> 1
%cx -> 1

Circuit: cmovnael %eax, %ebx
%eax -> 1
%cf -> 1
%ebx -> 1
cmov -> 1
%rbx -> 1

Total Circuit
CF -> 1
RAX -> 1
RBX -> 1
RCX -> 1
 -> 1

Target
 -> 1
RCX -> 1
CF -> 1
RBX -> 1

[4m[1m[34mkprove cmovcw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovcw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovcw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovcw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovcw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovcw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovcw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovcw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovcw_r16_r16: derivedInstructions//x86-cmovcw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovcw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovel_r32_r32[0m
[4m[1m[34mcreatespec cmovel_r32_r32: kproveSpecs//x86-semantics_cmovel_r32_r32_spec.k[0m
[4m[1m[34mcmovel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovel_r32_r32[0m
Circuit: callq .move_064_032_rbx_r12d_r13d
%rbx -> 1
%r12d -> 1
%r13d -> 1

Circuit: xchgl %ebx, %ecx
%ecx -> 1
%rbx -> 1
%ebx -> 1
%rcx -> 1

Circuit: cmovnel %r12d, %ebx
%r12d -> 1
%rbx -> 1
cmov -> 1
%ebx -> 1
%zf -> 1

Total Circuit
ZF -> 1
R13 -> 1
RBX -> 1
RCX -> 1
 -> 1
R12 -> 1

Target
RCX -> 1
 -> 1
RBX -> 1
ZF -> 1

[4m[1m[34mkprove cmovel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovel_r32_r32: derivedInstructions//x86-cmovel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovgew_r16_r16[0m
[4m[1m[34mcreatespec cmovgew_r16_r16: kproveSpecs//x86-semantics_cmovgew_r16_r16_spec.k[0m
[4m[1m[34mcmovgew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovgew_r16_r16[0m
Circuit: setge %bpl
%sf -> 1
%of -> 1
%bpl -> 1

Circuit: movzbl %bpl, %r8d
%bpl -> 1
%r8d -> 1
%r8 -> 1

Circuit: popcntq %r8, %rax
%sf -> 1
%cf -> 1
%r8 -> 1
%of -> 1
%pf -> 1
%rax -> 1
%zf -> 1
%af -> 1
popcnt -> 1

Circuit: cmovnew %cx, %bx
%zf -> 1
cmov -> 1
%bx -> 1
%cx -> 1

Total Circuit
RCX -> 1
 -> 1
OF -> 1
RBX -> 1
CF -> 1
R8 -> 1
RAX -> 1
RBP -> 1
PF -> 1
AF -> 1
ZF -> 1
SF -> 1

Target
SF -> 1
 -> 1
RCX -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove cmovgew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovgew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovgew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovgew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovgew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovgew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovgew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovgew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovgew_r16_r16: derivedInstructions//x86-cmovgew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovgew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnbel_r32_r32[0m
[4m[1m[34mcreatespec cmovnbel_r32_r32: kproveSpecs//x86-semantics_cmovnbel_r32_r32_spec.k[0m
[4m[1m[34mcmovnbel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnbel_r32_r32[0m
Circuit: movslq %ebx, %rsi
%ebx -> 1
%rsi -> 1

Circuit: vmovd %ecx, %xmm1
%ecx -> 1
avx -> 1
%ymm1 -> 1
%xmm1 -> 1

Circuit: callq .move_128_064_xmm1_r8_r9
%r8 -> 1
%r9 -> 1
%xmm1 -> 1

Circuit: cmovnel %r8d, %ebx
%rbx -> 1
cmov -> 1
%ebx -> 1
%zf -> 1
%r8d -> 1

Circuit: adcb %r9b, %r9b
%of -> 1
%cf -> 1
%sf -> 1
%r9b -> 1
%zf -> 1
%af -> 1
%pf -> 1

Circuit: cmovnzl %esi, %ebx
%esi -> 1
%rbx -> 1
cmov -> 1
%ebx -> 1
%zf -> 1

Total Circuit
SF -> 1
AF -> 1
PF -> 1
ZF -> 1
R8 -> 1
CF -> 1
RSI -> 1
R9 -> 1
OF -> 1
RBX -> 1
RCX -> 1
 -> 1
YMM1 -> 1

Target
RBX -> 1
CF -> 1
 -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove cmovnbel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnbel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnbel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnbel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnbel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnbel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnbel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnbel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnbel_r32_r32: derivedInstructions//x86-cmovnbel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnbel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnbeq_r64_r64[0m
[4m[1m[34mcreatespec cmovnbeq_r64_r64: kproveSpecs//x86-semantics_cmovnbeq_r64_r64_spec.k[0m
[4m[1m[34mcmovnbeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnbeq_r64_r64[0m
Circuit: setna %ah
%ah -> 1
%cf -> 1
%zf -> 1

Circuit: salb $0x1, %ah
%zf -> 1
%af -> 1
%pf -> 1
%of -> 1
%cf -> 1
%sf -> 1
\$0x1 -> 1
%ah -> 1

Circuit: cmovzq %rcx, %rbx
%rbx -> 1
cmov -> 1
%rcx -> 1
%zf -> 1

Total Circuit
RCX -> 1
 -> 1
CF -> 1
RAX -> 1
RBX -> 1
OF -> 1
PF -> 1
AF -> 1
ZF -> 1
SF -> 1

Target
ZF -> 1
CF -> 1
RBX -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovnbeq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovnbeq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnbeq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnbeq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnbeq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnbeq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnbeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnbeq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnbeq_r64_r64: derivedInstructions//x86-cmovnbeq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnbeq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovncl_r32_r32[0m
[4m[1m[34mcreatespec cmovncl_r32_r32: kproveSpecs//x86-semantics_cmovncl_r32_r32_spec.k[0m
[4m[1m[34mcmovncl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovncl_r32_r32[0m
Circuit: cmovnael %ebx, %ecx
%ecx -> 1
cmov -> 1
%rcx -> 1
%ebx -> 1
%cf -> 1

Circuit: xaddl %ebx, %ecx
%rbx -> 1
%ecx -> 1
%rcx -> 1
%pf -> 1
%af -> 1
%zf -> 1
%ebx -> 1
%sf -> 1
%cf -> 1
%of -> 1

Total Circuit
CF -> 1
OF -> 1
RBX -> 1
RCX -> 1
 -> 1
SF -> 1
PF -> 1
AF -> 1
ZF -> 1

Target
 -> 1
RCX -> 1
RBX -> 1
CF -> 1

[4m[1m[34mkprove cmovncl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovncl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovncl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovncl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovncl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovncl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovncl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovncl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovncl_r32_r32: derivedInstructions//x86-cmovncl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovncl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnpl_r32_r32[0m
[4m[1m[34mcreatespec cmovnpl_r32_r32: kproveSpecs//x86-semantics_cmovnpl_r32_r32_spec.k[0m
[4m[1m[34mcmovnpl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnpl_r32_r32[0m
Circuit: cmovpol %ecx, %ebx
%pf -> 1
%ebx -> 1
%rbx -> 1
%ecx -> 1
cmov -> 1

Total Circuit
PF -> 1
RCX -> 1
 -> 1
RBX -> 1

Target
PF -> 1
RBX -> 1
RCX -> 1
 -> 1

[4m[1m[34mkprove cmovnpl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnpl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnpl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnpl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnpl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnpl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnpl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnpl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnpl_r32_r32: derivedInstructions//x86-cmovnpl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnpl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnpw_r16_r16[0m
[4m[1m[34mcreatespec cmovnpw_r16_r16: kproveSpecs//x86-semantics_cmovnpw_r16_r16_spec.k[0m
[4m[1m[34mcmovnpw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovnpw_r16_r16[0m
Circuit: movzwl %cx, %esp
%esp -> 1
%rsp -> 1
%cx -> 1

Circuit: cmovpol %esp, %ebx
%pf -> 1
%ebx -> 1
%rbx -> 1
%esp -> 1
cmov -> 1

Total Circuit
RSP -> 1
PF -> 1
RBX -> 1
RCX -> 1
 -> 1

Target
 -> 1
RCX -> 1
RBX -> 1
PF -> 1

[4m[1m[34mkprove cmovnpw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovnpw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnpw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnpw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnpw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnpw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnpw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnpw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnpw_r16_r16: derivedInstructions//x86-cmovnpw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnpw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnzq_r64_r64[0m
[4m[1m[34mcreatespec cmovnzq_r64_r64: kproveSpecs//x86-semantics_cmovnzq_r64_r64_spec.k[0m
[4m[1m[34mcmovnzq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnzq_r64_r64[0m
Circuit: cmovneq %rcx, %rbx
%rbx -> 1
cmov -> 1
%rcx -> 1
%zf -> 1

Total Circuit
ZF -> 1
RBX -> 1
 -> 1
RCX -> 1

Target
 -> 1
RCX -> 1
RBX -> 1
ZF -> 1

[4m[1m[34mkprove cmovnzq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovnzq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnzq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnzq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnzq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnzq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnzq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnzq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnzq_r64_r64: derivedInstructions//x86-cmovnzq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnzq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpel_r32_r32[0m
[4m[1m[34mcreatespec cmovpel_r32_r32: kproveSpecs//x86-semantics_cmovpel_r32_r32_spec.k[0m
[4m[1m[34mcmovpel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovpel_r32_r32[0m
Circuit: callq .move_064_032_rbx_r10d_r11d
%r11d -> 1
%r10d -> 1
%rbx -> 1

Circuit: cmovpol %r10d, %ecx
cmov -> 1
%ecx -> 1
%rcx -> 1
%r10d -> 1
%pf -> 1

Circuit: xchgl %ebx, %ecx
%ebx -> 1
%rcx -> 1
%ecx -> 1
%rbx -> 1

Total Circuit
R11 -> 1
PF -> 1
RBX -> 1
R10 -> 1
 -> 1
RCX -> 1

Target
RBX -> 1
RCX -> 1
 -> 1
PF -> 1

[4m[1m[34mkprove cmovpel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovpel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpel_r32_r32: derivedInstructions//x86-cmovpel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpeq_r64_r64[0m
[4m[1m[34mcreatespec cmovpeq_r64_r64: kproveSpecs//x86-semantics_cmovpeq_r64_r64_spec.k[0m
[4m[1m[34mcmovpeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovpeq_r64_r64[0m
Circuit: setpo %dh
%dh -> 1
%pf -> 1

Circuit: salb $0x1, %dh
%zf -> 1
%af -> 1
%pf -> 1
%of -> 1
%cf -> 1
%sf -> 1
\$0x1 -> 1
%dh -> 1

Circuit: cmovnaq %rcx, %rbx
%cf -> 1
%zf -> 1
%rcx -> 1
cmov -> 1
%rbx -> 1

Total Circuit
RCX -> 1
 -> 1
CF -> 1
OF -> 1
RBX -> 1
AF -> 1
PF -> 1
ZF -> 1
RDX -> 1
SF -> 1

Target
RBX -> 1
 -> 1
RCX -> 1
PF -> 1

[4m[1m[34mkprove cmovpeq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovpeq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpeq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpeq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpeq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpeq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpeq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpeq_r64_r64: derivedInstructions//x86-cmovpeq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpeq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cvtsi2ssl_xmm_r32[0m
[4m[1m[34mcreatespec cvtsi2ssl_xmm_r32: kproveSpecs//x86-semantics_cvtsi2ssl_xmm_r32_spec.k[0m
[4m[1m[34mcvtsi2ssl_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovd %ebx, %xmm13
%xmm13 -> 1
%ebx -> 1
%ymm13 -> 1
avx -> 1

Circuit: vcvtdq2ps %xmm13, %xmm0
%xmm13 -> 1
%xmm0 -> 1
avx -> 1
%ymm0 -> 1

Circuit: movss %xmm0, %xmm1
%xmm0 -> 1
sse -> 1
%xmm1 -> 1

Total Circuit
YMM13 -> 1
YMM1 -> 1
 -> 1
YMM0 -> 1
RBX -> 1

Target
RBX -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove cvtsi2ssl_xmm_r32[0m
time krun --prove kproveSpecs//x86-semantics_cvtsi2ssl_xmm_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cvtsi2ssl_xmm_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cvtsi2ssl_xmm_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cvtsi2ssl_xmm_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cvtsi2ssl_xmm_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcvtsi2ssl_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cvtsi2ssl_xmm_r32: derivedInstructions//x86-cvtsi2ssl_xmm_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cvtsi2ssl %ebx, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: decb_rh[0m
[4m[1m[34mcreatespec decb_rh: kproveSpecs//x86-semantics_decb_rh_spec.k[0m
[4m[1m[34mdecb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorb %al, %al
%al -> 1
%of -> 1
%cf -> 1
%sf -> 1
%zf -> 1
%af -> 1
%pf -> 1

Circuit: callq .read_of_into_rcx
%of -> 1
%rcx -> 1

Circuit: cwtl
%rax -> 1
%ax -> 1

Circuit: movzbl %cl, %ebx
%cl -> 1
%ebx -> 1
%rbx -> 1

Circuit: decw %bx
%sf -> 1
%bx -> 1
%of -> 1
%pf -> 1
%zf -> 1
%af -> 1

Circuit: addb %bh, %ah
%bh -> 1
%af -> 1
%zf -> 1
%pf -> 1
%ah -> 1
%of -> 1
%sf -> 1
%cf -> 1

Total Circuit
RBX -> 1
OF -> 1
CF -> 1
RAX -> 1
RCX -> 1
SF -> 1
PF -> 1
AF -> 1
ZF -> 1

Target
RAX -> 1
OF -> 1
SF -> 1
AF -> 1
PF -> 1
ZF -> 1

[4m[1m[34mkprove decb_rh[0m
time krun --prove kproveSpecs//x86-semantics_decb_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_decb_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput decb_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_decb_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput decb_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mdecb_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn decb_rh: derivedInstructions//x86-decb_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "decb %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: hsubpd_xmm_xmm[0m
[4m[1m[34mcreatespec hsubpd_xmm_xmm: kproveSpecs//x86-semantics_hsubpd_xmm_xmm_spec.k[0m
[4m[1m[34mhsubpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vhsubpd %xmm2, %xmm1, %xmm7
%xmm1 -> 1
%xmm2 -> 1
%xmm7 -> 1
avx -> 1
%ymm7 -> 1

Circuit: movdqu %xmm7, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm7 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM7 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove hsubpd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_hsubpd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_hsubpd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput hsubpd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_hsubpd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput hsubpd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mhsubpd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn hsubpd_xmm_xmm: derivedInstructions//x86-hsubpd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "hsubpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movd_xmm_r32[0m
[4m[1m[34mcreatespec movd_xmm_r32: kproveSpecs//x86-semantics_movd_xmm_r32_spec.k[0m
[4m[1m[34mmovd_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovd %ebx, %xmm2
%ymm2 -> 1
%xmm2 -> 1
avx -> 1
%ebx -> 1

Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm10 -> 1
%xmm11 -> 1
%xmm9 -> 1
%xmm8 -> 1
%xmm2 -> 1

Circuit: callq .move_032_128_xmm8_xmm9_xmm10_xmm11_xmm1
%xmm8 -> 1
%xmm9 -> 1
%xmm1 -> 1
%xmm10 -> 1
%xmm11 -> 1

Total Circuit
YMM8 -> 1
YMM2 -> 1
RBX -> 1
YMM11 -> 1
 -> 1
YMM1 -> 1
YMM9 -> 1
YMM10 -> 1

Target
RBX -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove movd_xmm_r32[0m
time krun --prove kproveSpecs//x86-semantics_movd_xmm_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_movd_xmm_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput movd_xmm_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_movd_xmm_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput movd_xmm_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mmovd_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn movd_xmm_r32: derivedInstructions//x86-movd_xmm_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "movd %ebx, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: movmskpd_r64_xmm[0m
movmskpd_r64_xmm 0 derivedInstructions//x86-vmovmskpd_r32_xmm.k
Warn: [4m[1m[35mmovmskpd_r64_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: orb_r8_r8[0m
[4m[1m[34mcreatespec orb_r8_r8: kproveSpecs//x86-semantics_orb_r8_r8_spec.k[0m
[4m[1m[34morb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: orb_r8_r8[0m
Undef Set
af -> 1

Circuit: xorl %eax, %eax
%pf -> 1
%rax -> 1
%af -> 1
%zf -> 1
%sf -> 1
%cf -> 1
%of -> 1
%eax -> 1

Circuit: setnae %ah
%cf -> 1
%ah -> 1

Circuit: adcb %cl, %ah
%of -> 1
%cf -> 1
%sf -> 1
%ah -> 1
%cl -> 1
%zf -> 1
%af -> 1
%pf -> 1

Circuit: orb %ah, %bl
%af -> 1
%zf -> 1
%pf -> 1
%of -> 1
%bl -> 1
%cf -> 1
%sf -> 1
%ah -> 1

Circuit: callq .set_szp_for_bl
%bl -> 1
%sf -> 1
%zf -> 1
%pf -> 1

Total Circuit
RBX -> 1
OF -> 1
RAX -> 1
CF -> 1
RCX -> 1
SF -> 1
ZF -> 1
PF -> 1
AF -> 1

Target
SF -> 1
PF -> 1
AF -> 1
ZF -> 1
RBX -> 1
OF -> 1
CF -> 1
RCX -> 1

[4m[1m[34mkprove orb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_orb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_orb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput orb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_orb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput orb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34morb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn orb_r8_r8: derivedInstructions//x86-orb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "orb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: phaddd_xmm_xmm[0m
[4m[1m[34mcreatespec phaddd_xmm_xmm: kproveSpecs//x86-semantics_phaddd_xmm_xmm_spec.k[0m
[4m[1m[34mphaddd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movshdup %xmm1, %xmm0
%xmm0 -> 1
%xmm1 -> 1
pni -> 1

Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm2 -> 1
%xmm9 -> 1
%xmm8 -> 1
%xmm11 -> 1
%xmm10 -> 1

Circuit: paddq %xmm0, %xmm1
%xmm1 -> 1
%xmm0 -> 1
sse2 -> 1

Circuit: vpaddq %xmm9, %xmm2, %xmm6
%ymm6 -> 1
%xmm9 -> 1
%xmm6 -> 1
%xmm2 -> 1
avx -> 1

Circuit: vunpcklpd %xmm9, %xmm1, %xmm4
%xmm4 -> 1
%xmm1 -> 1
%xmm9 -> 1
avx -> 1
%ymm4 -> 1

Circuit: vmovhlps %xmm1, %xmm8, %xmm5
avx -> 1
%ymm5 -> 1
%xmm1 -> 1
%xmm8 -> 1
%xmm5 -> 1

Circuit: vpaddq %xmm10, %xmm11, %xmm7
%xmm11 -> 1
%xmm10 -> 1
%xmm7 -> 1
avx -> 1
%ymm7 -> 1

Circuit: callq .move_032_128_xmm4_xmm5_xmm6_xmm7_xmm1
%xmm7 -> 1
%xmm5 -> 1
%xmm1 -> 1
%xmm6 -> 1
%xmm4 -> 1

Total Circuit
YMM10 -> 1
YMM9 -> 1
YMM5 -> 1
YMM7 -> 1
YMM11 -> 1
 -> 1
YMM1 -> 1
YMM6 -> 1
YMM8 -> 1
YMM0 -> 1
YMM4 -> 1
YMM2 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove phaddd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_phaddd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_phaddd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput phaddd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_phaddd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput phaddd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mphaddd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn phaddd_xmm_xmm: derivedInstructions//x86-phaddd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "phaddd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: pmovzxbq_xmm_xmm[0m
[4m[1m[34mcreatespec pmovzxbq_xmm_xmm: kproveSpecs//x86-semantics_pmovzxbq_xmm_xmm_spec.k[0m
[4m[1m[34mpmovzxbq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpmovzxbq %xmm2, %xmm2
%xmm2 -> 1
avx -> 1
%ymm2 -> 1

Circuit: callq .move_128_64_xmm2_xmm8_xmm9
%xmm8 -> 1
%xmm9 -> 1
%xmm2 -> 1

Circuit: movddup %xmm8, %xmm1
pni -> 1
%xmm1 -> 1
%xmm8 -> 1

Circuit: vorpd %ymm2, %ymm2, %ymm15
%ymm15 -> 1
avx -> 1
%ymm2 -> 1

Circuit: unpckhpd %xmm15, %xmm1
%xmm15 -> 1
%xmm1 -> 1
sse2 -> 1

Total Circuit
YMM8 -> 1
YMM15 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM9 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove pmovzxbq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_pmovzxbq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_pmovzxbq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput pmovzxbq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_pmovzxbq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput pmovzxbq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpmovzxbq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn pmovzxbq_xmm_xmm: derivedInstructions//x86-pmovzxbq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "pmovzxbq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rclb_rh_one[0m
[4m[1m[34mcreatespec rclb_rh_one: kproveSpecs//x86-semantics_rclb_rh_one_spec.k[0m
[4m[1m[34mrclb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setnc %al
%al -> 1
%cf -> 1

Circuit: cwtl
%ax -> 1
%rax -> 1

Circuit: cltq
%rax -> 1
%eax -> 1

Circuit: adcb %ah, %ah
%zf -> 1
%af -> 1
%pf -> 1
%ah -> 1
%of -> 1
%sf -> 1
%cf -> 1

Total Circuit
RAX -> 1
CF -> 1
OF -> 1
ZF -> 1
PF -> 1
AF -> 1
SF -> 1

Target
 -> 1
OF -> 1
RAX -> 1
CF -> 1

[4m[1m[34mkprove rclb_rh_one[0m
time krun --prove kproveSpecs//x86-semantics_rclb_rh_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rclb_rh_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rclb_rh_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rclb_rh_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rclb_rh_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrclb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rclb_rh_one: derivedInstructions//x86-rclb_rh_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rclb \$0x1, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sarq_r64_one[0m
[4m[1m[34mcreatespec sarq_r64_one: kproveSpecs//x86-semantics_sarq_r64_one_spec.k[0m
[4m[1m[34msarq_r64_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: sarq_r64_one[0m
Undef Set
af -> 1

Circuit: andnl %ebx, %ebx, %esi
bmi1 -> 1
%pf -> 1
%zf -> 1
%af -> 1
%rsi -> 1
%ebx -> 1
%esi -> 1
%sf -> 1
%cf -> 1
%of -> 1

Circuit: movl %esi, %esi
%esi -> 1
%rsi -> 1

Circuit: setns %cl
%cl -> 1
%sf -> 1

Circuit: sarq %cl, %rbx
%pf -> 1
%zf -> 1
%af -> 1
%rbx -> 1
%sf -> 1
%cf -> 1
%of -> 1
%cl -> 1

Circuit: movzwl %si, %r12d
%si -> 1
%r12d -> 1
%r12 -> 1

Circuit: decl %r12d
%pf -> 1
%zf -> 1
%af -> 1
%r12 -> 1
%r12d -> 1
%sf -> 1
%of -> 1

Circuit: callq .set_szp_for_rbx
%sf -> 1
%pf -> 1
%zf -> 1
%rbx -> 1

Total Circuit
RCX -> 1
 -> 1
R12 -> 1
CF -> 1
RSI -> 1
OF -> 1
RBX -> 1
PF -> 1
AF -> 1
ZF -> 1
SF -> 1

Target
 -> 1
CF -> 1
RBX -> 1
OF -> 1
AF -> 1
PF -> 1
ZF -> 1
SF -> 1

[4m[1m[34mkprove sarq_r64_one[0m
time krun --prove kproveSpecs//x86-semantics_sarq_r64_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sarq_r64_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sarq_r64_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sarq_r64_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sarq_r64_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msarq_r64_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sarq_r64_one: derivedInstructions//x86-sarq_r64_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sarq \$0x1, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setle_r8[0m
[4m[1m[34mcreatespec setle_r8: kproveSpecs//x86-semantics_setle_r8_spec.k[0m
[4m[1m[34msetle_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setng %bl
%bl -> 1
%sf -> 1
%of -> 1
%zf -> 1

Total Circuit
ZF -> 1
SF -> 1
OF -> 1
RBX -> 1

Target
SF -> 1
ZF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove setle_r8[0m
time krun --prove kproveSpecs//x86-semantics_setle_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setle_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setle_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setle_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setle_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetle_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setle_r8: derivedInstructions//x86-setle_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setle %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setna_r8[0m
[4m[1m[34mcreatespec setna_r8: kproveSpecs//x86-semantics_setna_r8_spec.k[0m
[4m[1m[34msetna_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x5, %rbx
%rbx -> 1
\$0x5 -> 1

Circuit: setna %dh
%cf -> 1
%dh -> 1
%zf -> 1

Circuit: xchgb %bl, %dh
%bl -> 1
%dh -> 1

Total Circuit
CF -> 1
RBX -> 1
 -> 1
ZF -> 1
RDX -> 1

Target
ZF -> 1
RBX -> 1
CF -> 1

[4m[1m[34mkprove setna_r8[0m
time krun --prove kproveSpecs//x86-semantics_setna_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setna_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setna_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setna_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setna_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetna_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setna_r8: derivedInstructions//x86-setna_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setna %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnb_r8[0m
[4m[1m[34mcreatespec setnb_r8: kproveSpecs//x86-semantics_setnb_r8_spec.k[0m
[4m[1m[34msetnb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setnc %bl
%cf -> 1
%bl -> 1

Circuit: xorq %rcx, %rcx
%sf -> 1
%cf -> 1
%of -> 1
%rcx -> 1
%pf -> 1
%af -> 1
%zf -> 1

Circuit: xaddb %ch, %bl
%pf -> 1
%ch -> 1
%af -> 1
%zf -> 1
%sf -> 1
%cf -> 1
%bl -> 1
%of -> 1

Total Circuit
RCX -> 1
RBX -> 1
OF -> 1
CF -> 1
ZF -> 1
PF -> 1
AF -> 1
SF -> 1

Target
CF -> 1
RBX -> 1

[4m[1m[34mkprove setnb_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnb_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnb_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnb_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnb_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnb_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnb_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnb_r8: derivedInstructions//x86-setnb_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnb %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnbe_rh[0m
[4m[1m[34mcreatespec setnbe_rh: kproveSpecs//x86-semantics_setnbe_rh_spec.k[0m
[4m[1m[34msetnbe_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: seta %dl
%dl -> 1
%zf -> 1
%cf -> 1

Circuit: movq $0x20, %rax
%rax -> 1
\$0x20 -> 1

Circuit: xaddb %dl, %ah
%pf -> 1
%zf -> 1
%af -> 1
%dl -> 1
%ah -> 1
%cf -> 1
%sf -> 1
%of -> 1

Total Circuit
AF -> 1
PF -> 1
ZF -> 1
RDX -> 1
SF -> 1
 -> 1
CF -> 1
RAX -> 1
OF -> 1

Target
CF -> 1
RAX -> 1
ZF -> 1

[4m[1m[34mkprove setnbe_rh[0m
time krun --prove kproveSpecs//x86-semantics_setnbe_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnbe_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnbe_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnbe_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnbe_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnbe_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnbe_rh: derivedInstructions//x86-setnbe_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnbe %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setnle_r8[0m
[4m[1m[34mcreatespec setnle_r8: kproveSpecs//x86-semantics_setnle_r8_spec.k[0m
[4m[1m[34msetnle_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .read_of_into_rbx
%rbx -> 1
%of -> 1

Circuit: setnl %r9b
%r9b -> 1
%sf -> 1
%of -> 1

Circuit: xchgb %bh, %bl
%bh -> 1
%bx -> 1
%bl -> 1

Circuit: movzbl %r9b, %edi
%edi -> 1
%rdi -> 1
%r9b -> 1

Circuit: cmovnel %edi, %ebx
%zf -> 1
%ebx -> 1
cmov -> 1
%rbx -> 1
%edi -> 1

Total Circuit
ZF -> 1
RDI -> 1
SF -> 1
 -> 1
RBX -> 1
OF -> 1
R9 -> 1

Target
RBX -> 1
OF -> 1
SF -> 1
ZF -> 1

[4m[1m[34mkprove setnle_r8[0m
time krun --prove kproveSpecs//x86-semantics_setnle_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setnle_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setnle_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setnle_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setnle_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetnle_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setnle_r8: derivedInstructions//x86-setnle_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setnle %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setns_rh[0m
[4m[1m[34mcreatespec setns_rh: kproveSpecs//x86-semantics_setns_rh_spec.k[0m
[4m[1m[34msetns_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x2, %rax
\$0x2 -> 1
%rax -> 1

Circuit: roll $0x1, %eax
%rax -> 1
%cf -> 1
\$0x1 -> 1
%of -> 1
%eax -> 1

Circuit: setnl %ah
%ah -> 1
%of -> 1
%sf -> 1

Total Circuit
 -> 1
RAX -> 1
CF -> 1
OF -> 1
SF -> 1

Target
SF -> 1
RAX -> 1

[4m[1m[34mkprove setns_rh[0m
time krun --prove kproveSpecs//x86-semantics_setns_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setns_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setns_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setns_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setns_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetns_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setns_rh: derivedInstructions//x86-setns_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setns %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testl_r32_r32[0m
[4m[1m[34mcreatespec testl_r32_r32: kproveSpecs//x86-semantics_testl_r32_r32_spec.k[0m
[4m[1m[34mtestl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testl_r32_r32[0m
Undef Set
af -> 1

Circuit: andnl %ebx, %ecx, %r8d
%r8 -> 1
%sf -> 1
%cf -> 1
%r8d -> 1
%of -> 1
%ecx -> 1
%pf -> 1
bmi1 -> 1
%af -> 1
%zf -> 1
%ebx -> 1

Circuit: xorl %r8d, %ebx
%cf -> 1
%sf -> 1
%of -> 1
%r8d -> 1
%pf -> 1
%ebx -> 1
%zf -> 1
%af -> 1
%rbx -> 1

Total Circuit
PF -> 1
AF -> 1
ZF -> 1
SF -> 1
RCX -> 1
 -> 1
OF -> 1
RBX -> 1
CF -> 1
R8 -> 1

Target
ZF -> 1
AF -> 1
PF -> 1
SF -> 1
RCX -> 1
CF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove testl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_testl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testl_r32_r32: derivedInstructions//x86-testl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: unpcklps_xmm_xmm[0m
[4m[1m[34mcreatespec unpcklps_xmm_xmm: kproveSpecs//x86-semantics_unpcklps_xmm_xmm_spec.k[0m
[4m[1m[34munpcklps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vbroadcastsd %xmm1, %ymm9
avx2 -> 1
%xmm1 -> 1
%ymm9 -> 1

Circuit: vmovdqa %xmm9, %xmm10
%xmm10 -> 1
%xmm9 -> 1
avx -> 1
%ymm10 -> 1

Circuit: vmovddup %xmm2, %xmm15
%xmm15 -> 1
%ymm15 -> 1
%xmm2 -> 1
avx -> 1

Circuit: unpckhps %xmm15, %xmm10
sse -> 1
%xmm15 -> 1
%xmm10 -> 1

Circuit: movapd %xmm10, %xmm1
sse2 -> 1
%xmm1 -> 1
%xmm10 -> 1

Total Circuit
YMM10 -> 1
YMM9 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM15 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove unpcklps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_unpcklps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_unpcklps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput unpcklps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_unpcklps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput unpcklps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34munpcklps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn unpcklps_xmm_xmm: derivedInstructions//x86-unpcklps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "unpcklps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vaddsubpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vaddsubpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vaddsubpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvaddsubpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovapd %xmm2, %xmm1
%xmm1 -> 1
%ymm1 -> 1
avx -> 1
%xmm2 -> 1

Circuit: addsubpd %xmm3, %xmm1
%xmm3 -> 1
%xmm1 -> 1
pni -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM3 -> 1

Target
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1

[4m[1m[34mkprove vaddsubpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vaddsubpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vaddsubpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vaddsubpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vaddsubpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vaddsubpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvaddsubpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vaddsubpd_xmm_xmm_xmm: derivedInstructions//x86-vaddsubpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vaddsubpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vaddsubps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vaddsubps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vaddsubps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvaddsubps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: addsubps %xmm3, %xmm2
%xmm3 -> 1
%xmm2 -> 1
pni -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%r13 -> 1
%xmm2 -> 1
%r12 -> 1

Circuit: vzeroall
%ymm5 -> 1
%ymm8 -> 1
%ymm4 -> 1
%ymm7 -> 1
%ymm13 -> 1
%ymm6 -> 1
%ymm12 -> 1
%ymm9 -> 1
%ymm15 -> 1
%ymm14 -> 1
%ymm0 -> 1
avx -> 1
%ymm10 -> 1
%ymm1 -> 1
%ymm11 -> 1
%ymm3 -> 1
%ymm2 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r13 -> 1
%xmm1 -> 1
%r12 -> 1

Total Circuit
YMM9 -> 1
YMM10 -> 1
YMM14 -> 1
YMM5 -> 1
 -> 1
R12 -> 1
YMM1 -> 1
YMM11 -> 1
YMM2 -> 1
YMM8 -> 1
YMM15 -> 1
YMM0 -> 1
YMM13 -> 1
YMM7 -> 1
YMM12 -> 1
YMM6 -> 1
R13 -> 1
YMM4 -> 1
YMM3 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vaddsubps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vaddsubps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vaddsubps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vaddsubps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vaddsubps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vaddsubps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvaddsubps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vaddsubps_xmm_xmm_xmm: derivedInstructions//x86-vaddsubps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vaddsubps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandnps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vandnps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vandnps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvandnps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovapd %ymm3, %ymm11
avx -> 1
%ymm11 -> 1
%ymm3 -> 1

Circuit: vandnpd %ymm11, %ymm2, %ymm1
%ymm2 -> 1
%ymm11 -> 1
%ymm1 -> 1
avx -> 1

Total Circuit
YMM11 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM3 -> 1

Target
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vandnps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vandnps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandnps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandnps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandnps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandnps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandnps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandnps_ymm_ymm_ymm: derivedInstructions//x86-vandnps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandnps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vandpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vandpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvandpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: pand %xmm3, %xmm2
sse2 -> 1
%xmm2 -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm2 -> 1
%ymm3 -> 1
%ymm0 -> 1
avx -> 1
%ymm14 -> 1
%ymm11 -> 1
%ymm10 -> 1
%ymm1 -> 1
%ymm15 -> 1
%ymm9 -> 1
%ymm12 -> 1
%ymm6 -> 1
%ymm7 -> 1
%ymm13 -> 1
%ymm5 -> 1
%ymm4 -> 1
%ymm8 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%r9 -> 1
%r8 -> 1
%xmm1 -> 1

Total Circuit
YMM11 -> 1
YMM1 -> 1
 -> 1
R9 -> 1
YMM2 -> 1
YMM8 -> 1
YMM0 -> 1
R8 -> 1
YMM15 -> 1
YMM9 -> 1
YMM14 -> 1
YMM10 -> 1
YMM5 -> 1
YMM6 -> 1
YMM12 -> 1
YMM3 -> 1
YMM4 -> 1
YMM13 -> 1
YMM7 -> 1

Target
YMM3 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vandpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vandpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandpd_xmm_xmm_xmm: derivedInstructions//x86-vandpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vandps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vandps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvandps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovupd %xmm3, %xmm1
%xmm3 -> 1
%ymm1 -> 1
avx -> 1
%xmm1 -> 1

Circuit: pand %xmm1, %xmm2
%xmm1 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: vmovups %xmm2, %xmm1
%xmm1 -> 1
%ymm1 -> 1
avx -> 1
%xmm2 -> 1

Total Circuit
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vandps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vandps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandps_xmm_xmm_xmm: derivedInstructions//x86-vandps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vcvtsi2sdl_xmm_xmm_r32[0m
[4m[1m[34mcreatespec vcvtsi2sdl_xmm_xmm_r32: kproveSpecs//x86-semantics_vcvtsi2sdl_xmm_xmm_r32_spec.k[0m
[4m[1m[34mvcvtsi2sdl_xmm_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovd %ebx, %xmm1
%xmm1 -> 1
%ymm1 -> 1
%ebx -> 1
avx -> 1

Circuit: callq .move_128_064_xmm1_r8_r9
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Circuit: callq .move_r9b_to_byte_25_of_ymm1
%ymm1 -> 1
%r9b -> 1

Circuit: vcvtdq2pd %ymm1, %ymm3
%ymm3 -> 1
%ymm1 -> 1
avx -> 1

Circuit: vmovsd %xmm3, %xmm2, %xmm1
%xmm1 -> 1
avx -> 1
%ymm1 -> 1
%xmm3 -> 1
%xmm2 -> 1

Total Circuit
RBX -> 1
YMM2 -> 1
R9 -> 1
R8 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

Target
YMM2 -> 1
RBX -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vcvtsi2sdl_xmm_xmm_r32[0m
time krun --prove kproveSpecs//x86-semantics_vcvtsi2sdl_xmm_xmm_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vcvtsi2sdl_xmm_xmm_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vcvtsi2sdl_xmm_xmm_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vcvtsi2sdl_xmm_xmm_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vcvtsi2sdl_xmm_xmm_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvcvtsi2sdl_xmm_xmm_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vcvtsi2sdl_xmm_xmm_r32: derivedInstructions//x86-vcvtsi2sdl_xmm_xmm_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vcvtsi2sdl %ebx, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd231pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd231pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd231pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovups %xmm1, %xmm1
avx -> 1
%ymm1 -> 1
%xmm1 -> 1

Circuit: vandnps %xmm1, %xmm1, %xmm9
%xmm1 -> 1
%ymm9 -> 1
avx -> 1
%xmm9 -> 1

Circuit: vfnmsub231pd %ymm9, %ymm9, %ymm1
fma -> 1
%ymm1 -> 1
%ymm9 -> 1

Circuit: vfmsub231pd %xmm3, %xmm2, %xmm1
fma -> 1
%xmm2 -> 1
%xmm3 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM9 -> 1

Target
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vfmadd231pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd231pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd231pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd231pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd231pd_xmm_xmm_xmm: derivedInstructions//x86-vfmadd231pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub132sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub132sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub132sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmsub231sd %xmm3, %xmm1, %xmm2
%ymm2 -> 1
%xmm1 -> 1
fma -> 1
%xmm3 -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm1_r10_r11
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%xmm2 -> 1
%r12 -> 1
%r13 -> 1

Circuit: vzeroall
%ymm12 -> 1
%ymm6 -> 1
%ymm7 -> 1
%ymm13 -> 1
%ymm5 -> 1
%ymm8 -> 1
%ymm4 -> 1
%ymm2 -> 1
%ymm3 -> 1
%ymm14 -> 1
avx -> 1
%ymm0 -> 1
%ymm1 -> 1
%ymm10 -> 1
%ymm11 -> 1
%ymm9 -> 1
%ymm15 -> 1

Circuit: xchgq %r12, %r10
%r10 -> 1
%r12 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Total Circuit
YMM12 -> 1
YMM6 -> 1
YMM4 -> 1
R13 -> 1
YMM3 -> 1
R10 -> 1
YMM13 -> 1
YMM7 -> 1
R11 -> 1
 -> 1
YMM1 -> 1
R12 -> 1
YMM11 -> 1
YMM2 -> 1
YMM0 -> 1
YMM15 -> 1
YMM8 -> 1
YMM14 -> 1
YMM9 -> 1
YMM10 -> 1
YMM5 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmsub132sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub132sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub132sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub132sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub132sd_xmm_xmm_xmm: derivedInstructions//x86-vfmsub132sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsub213sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsub213sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsub213sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsub213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm1_xmm10_xmm11
%xmm10 -> 1
%xmm11 -> 1
%xmm1 -> 1

Circuit: vfmsub213pd %xmm3, %xmm2, %xmm10
%xmm3 -> 1
%xmm2 -> 1
%xmm10 -> 1
fma -> 1
%ymm10 -> 1

Circuit: vmaxsd %xmm2, %xmm11, %xmm1
%xmm11 -> 1
%xmm1 -> 1
avx -> 1
%ymm1 -> 1
%xmm2 -> 1

Circuit: callq .move_64_128_xmm10_xmm11_xmm1
%xmm11 -> 1
%xmm1 -> 1
%xmm10 -> 1

Total Circuit
YMM10 -> 1
 -> 1
YMM1 -> 1
YMM11 -> 1
YMM2 -> 1
YMM3 -> 1

Target
YMM3 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfmsub213sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsub213sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsub213sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsub213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsub213sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsub213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsub213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsub213sd_xmm_xmm_xmm: derivedInstructions//x86-vfmsub213sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsub213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd231ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd231ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd231ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd231ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm2_xmm10_xmm11
%xmm11 -> 1
%xmm10 -> 1
%xmm2 -> 1

Circuit: vfnmadd132ss %xmm3, %xmm1, %xmm2
%xmm1 -> 1
%ymm2 -> 1
%xmm2 -> 1
%xmm3 -> 1
fma -> 1

Circuit: vfnmsub213ss %xmm10, %xmm2, %xmm1
%xmm1 -> 1
%ymm1 -> 1
fma -> 1
%xmm10 -> 1
%xmm2 -> 1

Circuit: movss %xmm2, %xmm1
%xmm1 -> 1
sse -> 1
%xmm2 -> 1

Total Circuit
YMM2 -> 1
YMM11 -> 1
YMM1 -> 1
 -> 1
YMM10 -> 1
YMM3 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmadd231ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd231ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd231ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd231ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd231ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd231ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd231ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd231ss_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd231ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub132pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub132pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovapd %xmm3, %xmm14
%ymm14 -> 1
avx -> 1
%xmm14 -> 1
%xmm3 -> 1

Circuit: vmovdqu %xmm2, %xmm8
%xmm8 -> 1
avx -> 1
%xmm2 -> 1
%ymm8 -> 1

Circuit: vminss %xmm1, %xmm1, %xmm1
%xmm1 -> 1
%ymm1 -> 1
avx -> 1

Circuit: vfnmsub213pd %ymm8, %ymm1, %ymm14
%ymm1 -> 1
%ymm14 -> 1
fma -> 1
%ymm8 -> 1

Circuit: vmaxps %xmm14, %xmm14, %xmm1
%ymm1 -> 1
avx -> 1
%xmm14 -> 1
%xmm1 -> 1

Circuit: por %xmm14, %xmm1
%xmm1 -> 1
%xmm14 -> 1
sse2 -> 1

Total Circuit
YMM14 -> 1
YMM1 -> 1
 -> 1
YMM8 -> 1
YMM2 -> 1
YMM3 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmsub132pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub132pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub132pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub132pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub132pd_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub132pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vhsubpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vhsubpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vhsubpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvhsubpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpunpcklqdq %ymm3, %ymm2, %ymm9
%ymm9 -> 1
%ymm3 -> 1
%ymm2 -> 1
avx2 -> 1

Circuit: vpunpckhqdq %ymm3, %ymm2, %ymm6
%ymm3 -> 1
%ymm2 -> 1
%ymm6 -> 1
avx2 -> 1

Circuit: vmovdqa %ymm9, %ymm2
%ymm2 -> 1
%ymm9 -> 1
avx -> 1

Circuit: vsubpd %ymm6, %ymm2, %ymm1
%ymm6 -> 1
%ymm1 -> 1
avx -> 1
%ymm2 -> 1

Total Circuit
YMM3 -> 1
YMM6 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM9 -> 1

Target
YMM3 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vhsubpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vhsubpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vhsubpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vhsubpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vhsubpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vhsubpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvhsubpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vhsubpd_ymm_ymm_ymm: derivedInstructions//x86-vhsubpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vhsubpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovmskpd_r64_xmm[0m
vmovmskpd_r64_xmm 0 derivedInstructions//x86-vmovmskpd_r32_xmm.k
Warn: [4m[1m[35mvmovmskpd_r64_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vmovmskpd_r64_ymm[0m
vmovmskpd_r64_ymm 0 derivedInstructions//x86-vmovmskpd_r32_xmm.k
Warn: [4m[1m[35mvmovmskpd_r64_ymm: UnSupported[0m
[4m[1m[34mCheck if supported: vpand_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpand_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpand_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpand_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: pand %xmm3, %xmm2
sse2 -> 1
%xmm2 -> 1
%xmm3 -> 1

Circuit: vorps %xmm2, %xmm2, %xmm1
%xmm2 -> 1
avx -> 1
%ymm1 -> 1
%xmm1 -> 1

Total Circuit
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM3 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpand_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpand_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpand_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpand_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpand_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpand_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpand_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpand_xmm_xmm_xmm: derivedInstructions//x86-vpand_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpand %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpandn_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpandn_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpandn_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpandn_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vandnpd %ymm3, %ymm2, %ymm1
%ymm2 -> 1
%ymm3 -> 1
%ymm1 -> 1
avx -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM3 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vpandn_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpandn_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpandn_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpandn_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpandn_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpandn_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpandn_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpandn_ymm_ymm_ymm: derivedInstructions//x86-vpandn_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpandn %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpbroadcastb_xmm_xmm[0m
[4m[1m[34mcreatespec vpbroadcastb_xmm_xmm: kproveSpecs//x86-semantics_vpbroadcastb_xmm_xmm_spec.k[0m
[4m[1m[34mvpbroadcastb_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r12_r13
%r13 -> 1
%r12 -> 1
%xmm2 -> 1

Circuit: movsbw %r12b, %ax
%ax -> 1
%r12b -> 1

Circuit: movw %ax, %r12w
%ax -> 1
%r12w -> 1

Circuit: callq .move_064_128_r12_r13_xmm2
%r12 -> 1
%r13 -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vpbroadcastd %xmm2, %ymm1
%ymm1 -> 1
avx2 -> 1
%xmm2 -> 1

Circuit: callq .move_r8b_to_byte_3_of_ymm1
%r8b -> 1
%ymm1 -> 1

Circuit: callq .move_r8b_to_byte_2_of_ymm1
%ymm1 -> 1
%r8b -> 1

Circuit: callq .move_r8b_to_byte_1_of_ymm1
%r8b -> 1
%ymm1 -> 1

Circuit: vpbroadcastd %xmm1, %xmm1
avx2 -> 1
%ymm1 -> 1
%xmm1 -> 1

Total Circuit
RAX -> 1
R8 -> 1
YMM2 -> 1
R9 -> 1
YMM1 -> 1
R12 -> 1
 -> 1
R13 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpbroadcastb_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpbroadcastb_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpbroadcastb_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpbroadcastb_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpbroadcastb_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpbroadcastb_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpbroadcastb_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpbroadcastb_xmm_xmm: derivedInstructions//x86-vpbroadcastb_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpbroadcastb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpbroadcastw_xmm_xmm[0m
[4m[1m[34mcreatespec vpbroadcastw_xmm_xmm: kproveSpecs//x86-semantics_vpbroadcastw_xmm_xmm_spec.k[0m
[4m[1m[34mvpbroadcastw_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_r10d_r11d_r12d_r13d
%r12d -> 1
%r11d -> 1
%r13d -> 1
%xmm2 -> 1
%r10d -> 1

Circuit: callq .move_016_032_r10w_r11w_ebx
%ebx -> 1
%r11w -> 1
%r10w -> 1

Circuit: callq .move_016_008_bx_r8b_r9b
%r8b -> 1
%bx -> 1
%r9b -> 1

Circuit: callq .move_r9b_to_byte_3_of_rbx
%r9b -> 1
%rbx -> 1

Circuit: vmovd %ebx, %xmm1
%xmm1 -> 1
%ebx -> 1
%ymm1 -> 1
avx -> 1

Circuit: callq .move_r9b_to_byte_19_of_ymm1
%ymm1 -> 1
%r9b -> 1

Circuit: callq .move_r8b_to_byte_2_of_ymm1
%r8b -> 1
%ymm1 -> 1

Circuit: vbroadcastss %xmm1, %xmm1
%xmm1 -> 1
%ymm1 -> 1
avx2 -> 1

Total Circuit
YMM2 -> 1
R9 -> 1
RBX -> 1
R8 -> 1
YMM1 -> 1
 -> 1
R12 -> 1
R11 -> 1
R10 -> 1
R13 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpbroadcastw_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpbroadcastw_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpbroadcastw_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpbroadcastw_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpbroadcastw_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpbroadcastw_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpbroadcastw_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpbroadcastw_xmm_xmm: derivedInstructions//x86-vpbroadcastw_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpbroadcastw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpckhdq_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpunpckhdq_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpunpckhdq_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpunpckhdq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: punpckhdq %xmm3, %xmm2
%xmm2 -> 1
%xmm3 -> 1
sse2 -> 1

Circuit: vmovdqa %xmm2, %xmm1
%xmm1 -> 1
%ymm1 -> 1
avx -> 1
%xmm2 -> 1

Total Circuit
YMM3 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1

[4m[1m[34mkprove vpunpckhdq_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpckhdq_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpckhdq_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpckhdq_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpckhdq_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpckhdq_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpckhdq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpckhdq_xmm_xmm_xmm: derivedInstructions//x86-vpunpckhdq_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpckhdq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpckhpd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vunpckhpd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vunpckhpd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvunpckhpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovupd %xmm2, %xmm0
avx -> 1
%ymm0 -> 1
%xmm0 -> 1
%xmm2 -> 1

Circuit: vmovdqu %xmm3, %xmm1
%xmm1 -> 1
avx -> 1
%ymm1 -> 1
%xmm3 -> 1

Circuit: movhlps %xmm0, %xmm1
%xmm0 -> 1
%xmm1 -> 1
sse -> 1

Total Circuit
YMM3 -> 1
YMM0 -> 1
YMM2 -> 1
YMM1 -> 1
 -> 1

Target
YMM3 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vunpckhpd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vunpckhpd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpckhpd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpckhpd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpckhpd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpckhpd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpckhpd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpckhpd_xmm_xmm_xmm: derivedInstructions//x86-vunpckhpd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpckhpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpckhps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vunpckhps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vunpckhps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvunpckhps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: unpckhps %xmm3, %xmm2
%xmm3 -> 1
%xmm2 -> 1
sse -> 1

Circuit: callq .move_256_128_ymm3_xmm10_xmm11
%ymm3 -> 1
%xmm11 -> 1
%xmm10 -> 1

Circuit: callq .move_256_128_ymm2_xmm12_xmm13
%xmm12 -> 1
%ymm2 -> 1
%xmm13 -> 1

Circuit: punpckhdq %xmm11, %xmm13
sse2 -> 1
%xmm11 -> 1
%xmm13 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%xmm12 -> 1
%ymm1 -> 1
%xmm13 -> 1

Total Circuit
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM11 -> 1
YMM10 -> 1
YMM3 -> 1
YMM12 -> 1
YMM13 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1
YMM3 -> 1

[4m[1m[34mkprove vunpckhps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vunpckhps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpckhps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpckhps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpckhps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpckhps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpckhps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpckhps_ymm_ymm_ymm: derivedInstructions//x86-vunpckhps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpckhps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpcklpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vunpcklpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vunpcklpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvunpcklpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpunpcklqdq %ymm3, %ymm2, %ymm1
%ymm2 -> 1
%ymm3 -> 1
%ymm1 -> 1
avx2 -> 1

Total Circuit
YMM3 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1

Target
YMM3 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vunpcklpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vunpcklpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpcklpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpcklpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpcklpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpcklpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpcklpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpcklpd_ymm_ymm_ymm: derivedInstructions//x86-vunpcklpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpcklpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: xaddb_rh_rh[0m
[4m[1m[34mcreatespec xaddb_rh_rh: kproveSpecs//x86-semantics_xaddb_rh_rh_spec.k[0m
[4m[1m[34mxaddb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %ah, %eax
%ah -> 1
%rax -> 1
%eax -> 1

Circuit: addb %bh, %ah
%cf -> 1
%ah -> 1
%zf -> 1
%pf -> 1
%of -> 1
%sf -> 1
%bh -> 1
%af -> 1

Circuit: xaddb %bh, %al
%zf -> 1
%pf -> 1
%al -> 1
%cf -> 1
%af -> 1
%bh -> 1
%of -> 1
%sf -> 1

Circuit: xchgb %ah, %al
%ax -> 1
%ah -> 1
%al -> 1

Total Circuit
ZF -> 1
PF -> 1
AF -> 1
OF -> 1
SF -> 1
RAX -> 1
CF -> 1
RBX -> 1

Target
RBX -> 1
RAX -> 1
CF -> 1
SF -> 1
OF -> 1
ZF -> 1
AF -> 1
PF -> 1

[4m[1m[34mkprove xaddb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_xaddb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_xaddb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput xaddb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_xaddb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput xaddb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mxaddb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35mxaddb_rh_rh: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn xaddb_rh_rh: derivedInstructions//x86-xaddb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "xaddb %bh, %ah" 1>/tmp/yyy 2>&1 

