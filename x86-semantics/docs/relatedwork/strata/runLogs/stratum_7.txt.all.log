[4m[1m[34mCheck if supported: cmovaeq_r64_r64[0m
[4m[1m[34mcreatespec cmovaeq_r64_r64: kproveSpecs//x86-semantics_cmovaeq_r64_r64_spec.k[0m
[4m[1m[34mcmovaeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovaeq_r64_r64[0m
Circuit: vmovd %ecx, %xmm1
%ymm1 -> 1
%ecx -> 1
avx -> 1
%xmm1 -> 1

Circuit: callq .move_128_032_xmm1_eax_edx_r8d_r9d
%xmm1 -> 1
%r8d -> 1
%edx -> 1
%eax -> 1
%r9d -> 1

Circuit: sbbw %cx, %ax
%cf -> 1
%zf -> 1
%of -> 1
%cx -> 1
%pf -> 1
%ax -> 1
%af -> 1
%sf -> 1

Circuit: cmoveq %rcx, %rbx
%rcx -> 1
%rbx -> 1
cmov -> 1
%zf -> 1

Total Circuit
 -> 1
ZF -> 1
OF -> 1
R8 -> 1
RCX -> 1
RAX -> 1
RBX -> 1
PF -> 1
RDX -> 1
SF -> 1
R9 -> 1
CF -> 1
YMM1 -> 1
AF -> 1

Target
CF -> 1
 -> 1
RCX -> 1
RBX -> 1

[4m[1m[34mkprove cmovaeq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovaeq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovaeq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovaeq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovaeq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovaeq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovaeq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovaeq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovaeq_r64_r64: derivedInstructions//x86-cmovaeq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovaeq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovbel_r32_r32[0m
[4m[1m[34mcreatespec cmovbel_r32_r32: kproveSpecs//x86-semantics_cmovbel_r32_r32_spec.k[0m
[4m[1m[34mcmovbel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovbel_r32_r32[0m
Circuit: cmovnal %ecx, %ebx
%rbx -> 1
%ebx -> 1
%ecx -> 1
%cf -> 1
%zf -> 1
cmov -> 1

Total Circuit
CF -> 1
RBX -> 1
RCX -> 1
ZF -> 1
 -> 1

Target
RBX -> 1
RCX -> 1
 -> 1
ZF -> 1
CF -> 1

[4m[1m[34mkprove cmovbel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovbel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovbel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovbel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovbel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovbel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovbel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovbel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovbel_r32_r32: derivedInstructions//x86-cmovbel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovbel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovcq_r64_r64[0m
[4m[1m[34mcreatespec cmovcq_r64_r64: kproveSpecs//x86-semantics_cmovcq_r64_r64_spec.k[0m
[4m[1m[34mcmovcq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovcq_r64_r64[0m
Circuit: cmovnaeq %rcx, %rbx
%cf -> 1
cmov -> 1
%rbx -> 1
%rcx -> 1

Total Circuit
 -> 1
RCX -> 1
RBX -> 1
CF -> 1

Target
RBX -> 1
 -> 1
RCX -> 1
CF -> 1

[4m[1m[34mkprove cmovcq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovcq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovcq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovcq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovcq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovcq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovcq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovcq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovcq_r64_r64: derivedInstructions//x86-cmovcq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovcq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovleq_r64_r64[0m
[4m[1m[34mcreatespec cmovleq_r64_r64: kproveSpecs//x86-semantics_cmovleq_r64_r64_spec.k[0m
[4m[1m[34mcmovleq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovleq_r64_r64[0m
Circuit: vxorpd %xmm4, %xmm4, %xmm1
%xmm4 -> 1
%ymm1 -> 1
%xmm1 -> 1
avx -> 1

Circuit: callq .move_128_032_xmm1_xmm4_xmm5_xmm6_xmm7
%xmm4 -> 1
%xmm1 -> 1
%xmm6 -> 1
%xmm7 -> 1
%xmm5 -> 1

Circuit: movd %xmm4, %r12d
%r12d -> 1
%r12 -> 1
%xmm4 -> 1
sse2 -> 1

Circuit: setg %spl
%of -> 1
%zf -> 1
%sf -> 1
%spl -> 1

Circuit: xorb %spl, %r12b
%zf -> 1
%cf -> 1
%pf -> 1
%of -> 1
%spl -> 1
%af -> 1
%sf -> 1
%r12b -> 1

Circuit: cmovbeq %rcx, %rbx
%cf -> 1
%zf -> 1
cmov -> 1
%rbx -> 1
%rcx -> 1

Total Circuit
RCX -> 1
YMM7 -> 1
R12 -> 1
ZF -> 1
 -> 1
SF -> 1
PF -> 1
YMM1 -> 1
CF -> 1
YMM5 -> 1
OF -> 1
RSP -> 1
YMM4 -> 1
RBX -> 1
YMM6 -> 1
AF -> 1

Target
SF -> 1
ZF -> 1
 -> 1
RCX -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove cmovleq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovleq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovleq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovleq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovleq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovleq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovleq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovleq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovleq_r64_r64: derivedInstructions//x86-cmovleq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovleq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnbl_r32_r32[0m
[4m[1m[34mcreatespec cmovnbl_r32_r32: kproveSpecs//x86-semantics_cmovnbl_r32_r32_spec.k[0m
[4m[1m[34mcmovnbl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnbl_r32_r32[0m
Circuit: cmovael %ecx, %ebx
%ebx -> 1
%cf -> 1
%ecx -> 1
cmov -> 1
%rbx -> 1

Total Circuit
RCX -> 1
 -> 1
CF -> 1
RBX -> 1

Target
RBX -> 1
CF -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovnbl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnbl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnbl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnbl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnbl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnbl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnbl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnbl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnbl_r32_r32: derivedInstructions//x86-cmovnbl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnbl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovngew_r16_r16[0m
[4m[1m[34mcreatespec cmovngew_r16_r16: kproveSpecs//x86-semantics_cmovngew_r16_r16_spec.k[0m
[4m[1m[34mcmovngew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovngew_r16_r16[0m
Circuit: movswl %cx, %r10d
%r10 -> 1
%r10d -> 1
%cx -> 1

Circuit: cmovngel %r10d, %ebx
cmov -> 1
%of -> 1
%r10d -> 1
%rbx -> 1
%ebx -> 1
%sf -> 1

Total Circuit
 -> 1
RCX -> 1
SF -> 1
R10 -> 1
OF -> 1
RBX -> 1

Target
RBX -> 1
OF -> 1
SF -> 1
RCX -> 1
 -> 1

[4m[1m[34mkprove cmovngew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovngew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovngew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovngew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovngew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovngew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovngew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovngew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovngew_r16_r16: derivedInstructions//x86-cmovngew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovngew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnlel_r32_r32[0m
[4m[1m[34mcreatespec cmovnlel_r32_r32: kproveSpecs//x86-semantics_cmovnlel_r32_r32_spec.k[0m
[4m[1m[34mcmovnlel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnlel_r32_r32[0m
Circuit: cmovngel %ebx, %ecx
%ecx -> 1
%of -> 1
cmov -> 1
%ebx -> 1
%rcx -> 1
%sf -> 1

Circuit: cmovnel %ecx, %ebx
%zf -> 1
%ebx -> 1
%rbx -> 1
cmov -> 1
%ecx -> 1

Total Circuit
RBX -> 1
OF -> 1
SF -> 1
ZF -> 1
 -> 1
RCX -> 1

Target
OF -> 1
RBX -> 1
 -> 1
ZF -> 1
RCX -> 1
SF -> 1

[4m[1m[34mkprove cmovnlel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnlel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnlel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnlel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnlel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnlel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnlel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnlel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnlel_r32_r32: derivedInstructions//x86-cmovnlel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnlel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnleq_r64_r64[0m
[4m[1m[34mcreatespec cmovnleq_r64_r64: kproveSpecs//x86-semantics_cmovnleq_r64_r64_spec.k[0m
[4m[1m[34mcmovnleq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnleq_r64_r64[0m
Circuit: setnle %r14b
%r14b -> 1
%of -> 1
%sf -> 1
%zf -> 1

Circuit: sarb $0x1, %r14b
%zf -> 1
%cf -> 1
%sf -> 1
%af -> 1
%of -> 1
%pf -> 1
%r14b -> 1
\$0x1 -> 1

Circuit: cmovnaeq %rcx, %rbx
cmov -> 1
%rbx -> 1
%cf -> 1
%rcx -> 1

Total Circuit
ZF -> 1
 -> 1
RCX -> 1
PF -> 1
SF -> 1
CF -> 1
OF -> 1
RBX -> 1
R14 -> 1
AF -> 1

Target
OF -> 1
RBX -> 1
 -> 1
ZF -> 1
RCX -> 1
SF -> 1

[4m[1m[34mkprove cmovnleq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovnleq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnleq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnleq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnleq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnleq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnleq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnleq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnleq_r64_r64: derivedInstructions//x86-cmovnleq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnleq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnll_r32_r32[0m
[4m[1m[34mcreatespec cmovnll_r32_r32: kproveSpecs//x86-semantics_cmovnll_r32_r32_spec.k[0m
[4m[1m[34mcmovnll_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnll_r32_r32[0m
Circuit: cmovngel %ebx, %ecx
cmov -> 1
%ecx -> 1
%of -> 1
%rcx -> 1
%sf -> 1
%ebx -> 1

Circuit: movl %ecx, %r10d
%r10d -> 1
%ecx -> 1
%r10 -> 1

Circuit: xchgl %ebx, %r10d
%ebx -> 1
%r10 -> 1
%rbx -> 1
%r10d -> 1

Total Circuit
R10 -> 1
SF -> 1
RCX -> 1
 -> 1
RBX -> 1
OF -> 1

Target
 -> 1
RCX -> 1
SF -> 1
OF -> 1
RBX -> 1

[4m[1m[34mkprove cmovnll_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnll_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnll_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnll_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnll_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnll_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnll_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnll_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnll_r32_r32: derivedInstructions//x86-cmovnll_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnll %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnol_r32_r32[0m
[4m[1m[34mcreatespec cmovnol_r32_r32: kproveSpecs//x86-semantics_cmovnol_r32_r32_spec.k[0m
[4m[1m[34mcmovnol_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovnol_r32_r32[0m
Circuit: callq .set_sf
%sf -> 1

Circuit: cmovngel %ecx, %ebx
%rbx -> 1
cmov -> 1
%of -> 1
%ecx -> 1
%sf -> 1
%ebx -> 1

Total Circuit
 -> 1
RCX -> 1
SF -> 1
OF -> 1
RBX -> 1

Target
RBX -> 1
OF -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovnol_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovnol_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnol_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnol_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnol_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnol_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnol_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnol_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnol_r32_r32: derivedInstructions//x86-cmovnol_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnol %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovol_r32_r32[0m
[4m[1m[34mcreatespec cmovol_r32_r32: kproveSpecs//x86-semantics_cmovol_r32_r32_spec.k[0m
[4m[1m[34mcmovol_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovol_r32_r32[0m
Circuit: seto %r9b
%of -> 1
%r9b -> 1

Circuit: decb %r9b
%of -> 1
%pf -> 1
%r9b -> 1
%zf -> 1
%af -> 1
%sf -> 1

Circuit: cmovzl %ecx, %ebx
%ecx -> 1
cmov -> 1
%rbx -> 1
%ebx -> 1
%zf -> 1

Total Circuit
SF -> 1
PF -> 1
RCX -> 1
ZF -> 1
 -> 1
R9 -> 1
RBX -> 1
OF -> 1
AF -> 1

Target
RBX -> 1
OF -> 1
 -> 1
RCX -> 1

[4m[1m[34mkprove cmovol_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovol_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovol_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovol_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovol_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovol_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovol_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovol_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovol_r32_r32: derivedInstructions//x86-cmovol_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovol %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovpw_r16_r16[0m
[4m[1m[34mcreatespec cmovpw_r16_r16: kproveSpecs//x86-semantics_cmovpw_r16_r16_spec.k[0m
[4m[1m[34mcmovpw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovpw_r16_r16[0m
Circuit: movswl %cx, %r15d
%cx -> 1
%r15 -> 1
%r15d -> 1

Circuit: cmovpl %r15d, %ebx
%ebx -> 1
%rbx -> 1
%r15d -> 1
%pf -> 1
cmov -> 1

Total Circuit
RBX -> 1
PF -> 1
R15 -> 1
RCX -> 1
 -> 1

Target
RBX -> 1
 -> 1
RCX -> 1
PF -> 1

[4m[1m[34mkprove cmovpw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovpw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovpw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovpw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovpw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovpw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovpw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovpw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovpw_r16_r16: derivedInstructions//x86-cmovpw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovpw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovsw_r16_r16[0m
[4m[1m[34mcreatespec cmovsw_r16_r16: kproveSpecs//x86-semantics_cmovsw_r16_r16_spec.k[0m
[4m[1m[34mcmovsw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovsw_r16_r16[0m
Circuit: cmovnsw %bx, %cx
%cx -> 1
%bx -> 1
%sf -> 1
cmov -> 1

Circuit: xchgw %bx, %cx
%cx -> 1
%bx -> 1

Total Circuit
RBX -> 1
 -> 1
RCX -> 1
SF -> 1

Target
SF -> 1
 -> 1
RCX -> 1
RBX -> 1

[4m[1m[34mkprove cmovsw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovsw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovsw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovsw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovsw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovsw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovsw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovsw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovsw_r16_r16: derivedInstructions//x86-cmovsw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovsw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpb_r8_rh[0m
[4m[1m[34mcreatespec cmpb_r8_rh: kproveSpecs//x86-semantics_cmpb_r8_rh_spec.k[0m
[4m[1m[34mcmpb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movq $0x20, %r14
%r14 -> 1
\$0x20 -> 1

Circuit: movq %r14, %rcx
%rcx -> 1
%r14 -> 1

Circuit: xaddb %bl, %ch
%sf -> 1
%af -> 1
%bl -> 1
%ch -> 1
%zf -> 1
%cf -> 1
%of -> 1
%pf -> 1

Circuit: sbbb %ah, %ch
%pf -> 1
%of -> 1
%ah -> 1
%ch -> 1
%cf -> 1
%zf -> 1
%af -> 1
%sf -> 1

Total Circuit
SF -> 1
PF -> 1
RCX -> 1
 -> 1
ZF -> 1
CF -> 1
R14 -> 1
RBX -> 1
RAX -> 1
OF -> 1
AF -> 1

Target
PF -> 1
SF -> 1
ZF -> 1
CF -> 1
RBX -> 1
OF -> 1
RAX -> 1
AF -> 1

[4m[1m[34mkprove cmpb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_cmpb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpb_r8_rh: derivedInstructions//x86-cmpb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpq_r64_r64[0m
[4m[1m[34mcreatespec cmpq_r64_r64: kproveSpecs//x86-semantics_cmpq_r64_r64_spec.k[0m
[4m[1m[34mcmpq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: subq %rcx, %rbx
%of -> 1
%pf -> 1
%rbx -> 1
%cf -> 1
%zf -> 1
%sf -> 1
%af -> 1
%rcx -> 1

Total Circuit
CF -> 1
RCX -> 1
ZF -> 1
SF -> 1
PF -> 1
AF -> 1
OF -> 1
RBX -> 1

Target
AF -> 1
RBX -> 1
OF -> 1
CF -> 1
SF -> 1
PF -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove cmpq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmpq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpq_r64_r64: derivedInstructions//x86-cmpq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cvttps2dq_xmm_xmm[0m
cvttps2dq_xmm_xmm 0 derivedInstructions//x86-vcvttps2dq_xmm_xmm.k
Warn: [4m[1m[35mcvttps2dq_xmm_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: hsubps_xmm_xmm[0m
[4m[1m[34mcreatespec hsubps_xmm_xmm: kproveSpecs//x86-semantics_hsubps_xmm_xmm_spec.k[0m
[4m[1m[34mhsubps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpunpckldq %xmm2, %xmm1, %xmm8
%ymm8 -> 1
%xmm1 -> 1
%xmm2 -> 1
%xmm8 -> 1
avx -> 1

Circuit: vunpckhps %xmm2, %xmm1, %xmm10
%ymm10 -> 1
%xmm10 -> 1
%xmm1 -> 1
%xmm2 -> 1
avx -> 1

Circuit: vpunpckldq %xmm10, %xmm8, %xmm15
%xmm10 -> 1
%xmm15 -> 1
%xmm8 -> 1
avx -> 1
%ymm15 -> 1

Circuit: punpckhdq %xmm10, %xmm8
sse2 -> 1
%xmm10 -> 1
%xmm8 -> 1

Circuit: vsubps %xmm8, %xmm15, %xmm4
avx -> 1
%xmm4 -> 1
%ymm4 -> 1
%xmm8 -> 1
%xmm15 -> 1

Circuit: movdqu %xmm4, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm4 -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM15 -> 1
YMM1 -> 1
YMM8 -> 1
YMM4 -> 1
YMM10 -> 1

Target
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove hsubps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_hsubps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_hsubps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput hsubps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_hsubps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput hsubps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mhsubps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn hsubps_xmm_xmm: derivedInstructions//x86-hsubps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "hsubps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: negq_r64[0m
negq_r64 0 derivedInstructions//x86-vcvttss2sil_r32_xmm.k
Warn: [4m[1m[35mnegq_r64: UnSupported[0m
[4m[1m[34mCheck if supported: rorb_r8_one[0m
[4m[1m[34mcreatespec rorb_r8_one: kproveSpecs//x86-semantics_rorb_r8_one_spec.k[0m
[4m[1m[34mrorb_r8_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movb %bl, %bh
%bh -> 1
%bl -> 1

Circuit: sarw $0x1, %bx
%zf -> 1
%cf -> 1
%bx -> 1
%af -> 1
%sf -> 1
%pf -> 1
%of -> 1
\$0x1 -> 1

Circuit: movsbl %bl, %eax
%eax -> 1
%rax -> 1
%bl -> 1

Circuit: salb $0x1, %al
%of -> 1
%pf -> 1
\$0x1 -> 1
%cf -> 1
%zf -> 1
%al -> 1
%af -> 1
%sf -> 1

Total Circuit
CF -> 1
ZF -> 1
 -> 1
PF -> 1
SF -> 1
AF -> 1
OF -> 1
RAX -> 1
RBX -> 1

Target
CF -> 1
 -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove rorb_r8_one[0m
time krun --prove kproveSpecs//x86-semantics_rorb_r8_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rorb_r8_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rorb_r8_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rorb_r8_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rorb_r8_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrorb_r8_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rorb_r8_one: derivedInstructions//x86-rorb_r8_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rorb \$0x1, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sarb_rh_one[0m
[4m[1m[34mcreatespec sarb_rh_one: kproveSpecs//x86-semantics_sarb_rh_one_spec.k[0m
[4m[1m[34msarb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: sarb_rh_one[0m
Undef Set
af -> 1

Circuit: movsbl %ah, %edx
%edx -> 1
%ah -> 1
%rdx -> 1

Circuit: sarw $0x1, %dx
%sf -> 1
%af -> 1
%cf -> 1
%zf -> 1
\$0x1 -> 1
%of -> 1
%pf -> 1
%dx -> 1

Circuit: xchgb %dl, %ah
%ah -> 1
%dl -> 1

Total Circuit
CF -> 1
SF -> 1
PF -> 1
ZF -> 1
 -> 1
AF -> 1
RDX -> 1
RAX -> 1
OF -> 1

Target
AF -> 1
OF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
 -> 1
ZF -> 1

[4m[1m[34mkprove sarb_rh_one[0m
time krun --prove kproveSpecs//x86-semantics_sarb_rh_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sarb_rh_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sarb_rh_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sarb_rh_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sarb_rh_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msarb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sarb_rh_one: derivedInstructions//x86-sarb_rh_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sarb \$0x1, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbb_r8_r8[0m
[4m[1m[34mcreatespec sbbb_r8_r8: kproveSpecs//x86-semantics_sbbb_r8_r8_spec.k[0m
[4m[1m[34msbbb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movb %bl, %dh
%bl -> 1
%dh -> 1

Circuit: xchgb %dh, %bl
%bl -> 1
%dh -> 1

Circuit: sbbb %cl, %dh
%zf -> 1
%cf -> 1
%af -> 1
%sf -> 1
%cl -> 1
%pf -> 1
%of -> 1
%dh -> 1

Circuit: movzbw %dh, %bx
%bx -> 1
%dh -> 1

Total Circuit
CF -> 1
PF -> 1
SF -> 1
ZF -> 1
RCX -> 1
AF -> 1
RBX -> 1
RDX -> 1
OF -> 1

Target
CF -> 1
ZF -> 1
RCX -> 1
PF -> 1
SF -> 1
AF -> 1
OF -> 1
RBX -> 1

[4m[1m[34mkprove sbbb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_sbbb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbb_r8_r8: derivedInstructions//x86-sbbb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: sbbb_r8_rh[0m
[4m[1m[34mcreatespec sbbb_r8_rh: kproveSpecs//x86-semantics_sbbb_r8_rh_spec.k[0m
[4m[1m[34msbbb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xchgb %bl, %ah
%bl -> 1
%ah -> 1

Circuit: sbbb %bl, %ah
%of -> 1
%pf -> 1
%ah -> 1
%sf -> 1
%af -> 1
%bl -> 1
%cf -> 1
%zf -> 1

Circuit: movsbw %ah, %bx
%ah -> 1
%bx -> 1

Total Circuit
AF -> 1
OF -> 1
RAX -> 1
RBX -> 1
CF -> 1
ZF -> 1
PF -> 1
SF -> 1

Target
CF -> 1
ZF -> 1
SF -> 1
PF -> 1
AF -> 1
RAX -> 1
OF -> 1
RBX -> 1

[4m[1m[34mkprove sbbb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_sbbb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_sbbb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput sbbb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_sbbb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput sbbb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msbbb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn sbbb_r8_rh: derivedInstructions//x86-sbbb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "sbbb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: setg_rh[0m
[4m[1m[34mcreatespec setg_rh: kproveSpecs//x86-semantics_setg_rh_spec.k[0m
[4m[1m[34msetg_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: setnle %ah
%of -> 1
%ah -> 1
%sf -> 1
%zf -> 1

Total Circuit
RAX -> 1
OF -> 1
SF -> 1
ZF -> 1

Target
ZF -> 1
SF -> 1
OF -> 1
RAX -> 1

[4m[1m[34mkprove setg_rh[0m
time krun --prove kproveSpecs//x86-semantics_setg_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_setg_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput setg_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_setg_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput setg_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msetg_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn setg_rh: derivedInstructions//x86-setg_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "setg %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subb_rh_r8[0m
[4m[1m[34mcreatespec subb_rh_r8: kproveSpecs//x86-semantics_subb_rh_r8_spec.k[0m
[4m[1m[34msubb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movzbl %bl, %ecx
%ecx -> 1
%bl -> 1
%rcx -> 1

Circuit: decl %ecx
%pf -> 1
%of -> 1
%ecx -> 1
%sf -> 1
%rcx -> 1
%af -> 1
%zf -> 1

Circuit: andl %ecx, %ecx
%ecx -> 1
%pf -> 1
%of -> 1
%zf -> 1
%cf -> 1
%rcx -> 1
%af -> 1
%sf -> 1

Circuit: sbbb %bl, %ah
%of -> 1
%ah -> 1
%pf -> 1
%af -> 1
%sf -> 1
%cf -> 1
%zf -> 1
%bl -> 1

Total Circuit
CF -> 1
RCX -> 1
ZF -> 1
SF -> 1
PF -> 1
AF -> 1
RAX -> 1
OF -> 1
RBX -> 1

Target
ZF -> 1
PF -> 1
SF -> 1
CF -> 1
OF -> 1
RAX -> 1
RBX -> 1
AF -> 1

[4m[1m[34mkprove subb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_subb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subb_rh_r8: derivedInstructions//x86-subb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subb_rh_rh[0m
[4m[1m[34mcreatespec subb_rh_rh: kproveSpecs//x86-semantics_subb_rh_rh_spec.k[0m
[4m[1m[34msubb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorb %al, %al
%sf -> 1
%af -> 1
%al -> 1
%zf -> 1
%cf -> 1
%pf -> 1
%of -> 1

Circuit: sbbb %bh, %ah
%sf -> 1
%af -> 1
%zf -> 1
%cf -> 1
%bh -> 1
%pf -> 1
%ah -> 1
%of -> 1

Total Circuit
AF -> 1
RAX -> 1
OF -> 1
RBX -> 1
CF -> 1
ZF -> 1
SF -> 1
PF -> 1

Target
CF -> 1
PF -> 1
SF -> 1
ZF -> 1
AF -> 1
RBX -> 1
OF -> 1
RAX -> 1

[4m[1m[34mkprove subb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_subb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subb_rh_rh: derivedInstructions//x86-subb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subl_r32_r32[0m
[4m[1m[34mcreatespec subl_r32_r32: kproveSpecs//x86-semantics_subl_r32_r32_spec.k[0m
[4m[1m[34msubl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorl %eax, %eax
%zf -> 1
%cf -> 1
%sf -> 1
%af -> 1
%rax -> 1
%eax -> 1
%of -> 1
%pf -> 1

Circuit: sbbl %ecx, %ebx
%zf -> 1
%ebx -> 1
%cf -> 1
%sf -> 1
%af -> 1
%pf -> 1
%of -> 1
%ecx -> 1
%rbx -> 1

Total Circuit
RAX -> 1
OF -> 1
RBX -> 1
AF -> 1
RCX -> 1
ZF -> 1
SF -> 1
PF -> 1
CF -> 1

Target
RBX -> 1
OF -> 1
AF -> 1
PF -> 1
SF -> 1
ZF -> 1
RCX -> 1
CF -> 1

[4m[1m[34mkprove subl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_subl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subl_r32_r32: derivedInstructions//x86-subl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subw_r16_r16[0m
[4m[1m[34mcreatespec subw_r16_r16: kproveSpecs//x86-semantics_subw_r16_r16_spec.k[0m
[4m[1m[34msubw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movswl %cx, %esp
%cx -> 1
%esp -> 1
%rsp -> 1

Circuit: xorw %ax, %ax
%zf -> 1
%cf -> 1
%ax -> 1
%af -> 1
%sf -> 1
%pf -> 1
%of -> 1

Circuit: rclb $0x1, %ch
%ch -> 1
%cf -> 1
%of -> 1
\$0x1 -> 1

Circuit: xorb %ah, %ch
%af -> 1
%sf -> 1
%ch -> 1
%zf -> 1
%cf -> 1
%ah -> 1
%of -> 1
%pf -> 1

Circuit: adcb %ah, %bh
%af -> 1
%sf -> 1
%zf -> 1
%cf -> 1
%of -> 1
%pf -> 1
%ah -> 1
%bh -> 1

Circuit: sbbw %sp, %bx
%zf -> 1
%cf -> 1
%bx -> 1
%af -> 1
%sf -> 1
%pf -> 1
%of -> 1
%sp -> 1

Total Circuit
CF -> 1
RCX -> 1
ZF -> 1
 -> 1
SF -> 1
PF -> 1
AF -> 1
RAX -> 1
OF -> 1
RSP -> 1
RBX -> 1

Target
CF -> 1
SF -> 1
PF -> 1
RCX -> 1
ZF -> 1
AF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove subw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_subw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subw_r16_r16: derivedInstructions//x86-subw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testb_r8_rh[0m
[4m[1m[34mcreatespec testb_r8_rh: kproveSpecs//x86-semantics_testb_r8_rh_spec.k[0m
[4m[1m[34mtestb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testb_r8_rh[0m
Undef Set
af -> 1

Circuit: movzbw %ah, %ax
%ax -> 1
%ah -> 1

Circuit: testb %bl, %al
%of -> 1
%pf -> 1
%af -> 1
%sf -> 1
%cf -> 1
%zf -> 1
%al -> 1
%bl -> 1

Total Circuit
RAX -> 1
OF -> 1
RBX -> 1
AF -> 1
ZF -> 1
SF -> 1
PF -> 1
CF -> 1

Target
AF -> 1
RBX -> 1
OF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
ZF -> 1

[4m[1m[34mkprove testb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_testb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testb_r8_rh: derivedInstructions//x86-testb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testq_r64_r64[0m
[4m[1m[34mcreatespec testq_r64_r64: kproveSpecs//x86-semantics_testq_r64_r64_spec.k[0m
[4m[1m[34mtestq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testq_r64_r64[0m
Undef Set
af -> 1

Circuit: andnq %rbx, %rcx, %rdi
%rbx -> 1
%pf -> 1
%of -> 1
bmi1 -> 1
%rdi -> 1
%sf -> 1
%rcx -> 1
%af -> 1
%zf -> 1
%cf -> 1

Circuit: subq %rdi, %rbx
%rbx -> 1
%pf -> 1
%of -> 1
%sf -> 1
%af -> 1
%rdi -> 1
%zf -> 1
%cf -> 1

Total Circuit
ZF -> 1
 -> 1
RCX -> 1
PF -> 1
SF -> 1
CF -> 1
RDI -> 1
OF -> 1
RBX -> 1
AF -> 1

Target
AF -> 1
OF -> 1
RBX -> 1
CF -> 1
ZF -> 1
RCX -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove testq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_testq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testq_r64_r64: derivedInstructions//x86-testq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vandpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vandpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vandpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvandpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vandps %ymm3, %ymm2, %ymm1
%ymm2 -> 1
%ymm1 -> 1
avx -> 1
%ymm3 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vandpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vandpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vandpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vandpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vandpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vandpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvandpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vandpd_ymm_ymm_ymm: derivedInstructions//x86-vandpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vandpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd132ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd132ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd132ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd132ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd213ps %xmm2, %xmm1, %xmm3
%ymm3 -> 1
%xmm2 -> 1
%xmm3 -> 1
fma -> 1
%xmm1 -> 1

Circuit: callq .move_128_064_xmm3_r8_r9
%r9 -> 1
%xmm3 -> 1
%r8 -> 1

Circuit: vzeroall
%ymm13 -> 1
%ymm14 -> 1
%ymm1 -> 1
%ymm4 -> 1
%ymm12 -> 1
%ymm15 -> 1
avx -> 1
%ymm3 -> 1
%ymm5 -> 1
%ymm11 -> 1
%ymm9 -> 1
%ymm8 -> 1
%ymm6 -> 1
%ymm7 -> 1
%ymm2 -> 1
%ymm10 -> 1
%ymm0 -> 1

Circuit: callq .move_064_128_r8_r9_xmm2
%xmm2 -> 1
%r9 -> 1
%r8 -> 1

Circuit: vorps %xmm14, %xmm2, %xmm1
%xmm14 -> 1
%xmm1 -> 1
%xmm2 -> 1
avx -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
 -> 1
YMM7 -> 1
YMM11 -> 1
YMM1 -> 1
YMM13 -> 1
R9 -> 1
YMM15 -> 1
YMM10 -> 1
YMM0 -> 1
YMM4 -> 1
YMM5 -> 1
YMM14 -> 1
YMM3 -> 1
YMM8 -> 1
R8 -> 1
YMM12 -> 1
YMM9 -> 1
YMM6 -> 1

Target
YMM3 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfmadd132ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd132ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd132ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd132ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd132ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd132ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd132ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd132ps_xmm_xmm_xmm: derivedInstructions//x86-vfmadd132ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd213pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd213pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd132pd %xmm1, %xmm3, %xmm2
%xmm2 -> 1
%xmm1 -> 1
fma -> 1
%xmm3 -> 1
%ymm2 -> 1

Circuit: callq .move_128_064_xmm2_r10_r11
%r10 -> 1
%xmm2 -> 1
%r11 -> 1

Circuit: vzeroall
%ymm2 -> 1
%ymm10 -> 1
%ymm0 -> 1
%ymm8 -> 1
%ymm6 -> 1
%ymm7 -> 1
%ymm3 -> 1
%ymm5 -> 1
%ymm11 -> 1
%ymm9 -> 1
%ymm1 -> 1
%ymm13 -> 1
%ymm14 -> 1
%ymm4 -> 1
%ymm12 -> 1
avx -> 1
%ymm15 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%r11 -> 1
%xmm1 -> 1

Total Circuit
YMM0 -> 1
YMM4 -> 1
YMM10 -> 1
YMM8 -> 1
YMM3 -> 1
YMM14 -> 1
R11 -> 1
YMM5 -> 1
YMM12 -> 1
YMM6 -> 1
YMM9 -> 1
YMM11 -> 1
YMM7 -> 1
 -> 1
YMM2 -> 1
YMM13 -> 1
YMM1 -> 1
R10 -> 1
YMM15 -> 1

Target
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vfmadd213pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd213pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd213pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd213pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd213pd_xmm_xmm_xmm: derivedInstructions//x86-vfmadd213pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmadd231sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmadd231sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmadd231sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmadd231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmadd132pd %xmm3, %xmm1, %xmm2
%xmm2 -> 1
%xmm3 -> 1
%ymm2 -> 1
%xmm1 -> 1
fma -> 1

Circuit: callq .move_128_64_xmm2_xmm10_xmm11
%xmm11 -> 1
%xmm10 -> 1
%xmm2 -> 1

Circuit: vmovsd %xmm10, %xmm1, %xmm1
%ymm1 -> 1
avx -> 1
%xmm10 -> 1
%xmm1 -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM11 -> 1
YMM1 -> 1
YMM10 -> 1
YMM3 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmadd231sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmadd231sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmadd231sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmadd231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmadd231sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmadd231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmadd231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmadd231sd_xmm_xmm_xmm: derivedInstructions//x86-vfmadd231sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmadd231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmaddsub213ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmaddsub213ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmaddsub213ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmaddsub213ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpor %xmm3, %xmm3, %xmm10
avx -> 1
%xmm3 -> 1
%ymm10 -> 1
%xmm10 -> 1

Circuit: vxorpd %xmm3, %xmm10, %xmm3
%xmm3 -> 1
%xmm10 -> 1
avx -> 1
%ymm3 -> 1

Circuit: vfnmsub132ps %ymm3, %ymm3, %ymm3
fma -> 1
%ymm3 -> 1

Circuit: addsubps %xmm10, %xmm3
%xmm3 -> 1
%xmm10 -> 1
pni -> 1

Circuit: vfmadd213ps %xmm3, %xmm2, %xmm1
fma -> 1
%xmm1 -> 1
%xmm3 -> 1
%ymm1 -> 1
%xmm2 -> 1

Total Circuit
YMM10 -> 1
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmaddsub213ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmaddsub213ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmaddsub213ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmaddsub213ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmaddsub213ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmaddsub213ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmaddsub213ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmaddsub213ps_xmm_xmm_xmm: derivedInstructions//x86-vfmaddsub213ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmaddsub213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub213sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub213sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub213sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movddup %xmm1, %xmm14
%xmm1 -> 1
%xmm14 -> 1
pni -> 1

Circuit: callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11
%xmm9 -> 1
%xmm2 -> 1
%xmm8 -> 1
%xmm10 -> 1
%xmm11 -> 1

Circuit: vminsd %xmm8, %xmm10, %xmm15
%xmm10 -> 1
%xmm8 -> 1
%ymm15 -> 1
avx -> 1
%xmm15 -> 1

Circuit: movaps %xmm3, %xmm6
%xmm3 -> 1
%xmm6 -> 1
sse -> 1

Circuit: vfnmsub213pd %xmm2, %xmm15, %xmm15
%ymm15 -> 1
%xmm2 -> 1
%xmm15 -> 1
fma -> 1

Circuit: vxorps %xmm8, %xmm1, %xmm10
avx -> 1
%xmm8 -> 1
%xmm1 -> 1
%xmm10 -> 1
%ymm10 -> 1

Circuit: vfmsub213sd %xmm6, %xmm15, %xmm14
%ymm14 -> 1
%xmm15 -> 1
fma -> 1
%xmm6 -> 1
%xmm14 -> 1

Circuit: vmovsd %xmm14, %xmm10, %xmm1
%xmm1 -> 1
%xmm14 -> 1
%xmm10 -> 1
%ymm1 -> 1
avx -> 1

Total Circuit
YMM6 -> 1
YMM9 -> 1
YMM10 -> 1
YMM8 -> 1
YMM3 -> 1
YMM14 -> 1
YMM1 -> 1
YMM15 -> 1
YMM11 -> 1
 -> 1
YMM2 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmsub213sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub213sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub213sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub213sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub213sd_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub213sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub231pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub231pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub231pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vorpd %xmm3, %xmm3, %xmm6
avx -> 1
%ymm6 -> 1
%xmm3 -> 1
%xmm6 -> 1

Circuit: vmovapd %xmm1, %xmm3
avx -> 1
%ymm3 -> 1
%xmm1 -> 1
%xmm3 -> 1

Circuit: movaps %xmm6, %xmm1
%xmm6 -> 1
%xmm1 -> 1
sse -> 1

Circuit: vfnmsub213pd %xmm3, %xmm2, %xmm1
%ymm1 -> 1
%xmm2 -> 1
fma -> 1
%xmm1 -> 1
%xmm3 -> 1

Total Circuit
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM6 -> 1
YMM3 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmsub231pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub231pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub231pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub231pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub231pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub231pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub231pd_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub231pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vhaddps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vhaddps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vhaddps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvhaddps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpbroadcastq %xmm3, %xmm14
%xmm14 -> 1
%xmm3 -> 1
avx2 -> 1
%ymm14 -> 1

Circuit: callq .move_128_64_xmm2_xmm12_xmm13
%xmm12 -> 1
%xmm13 -> 1
%xmm2 -> 1

Circuit: vunpckhps %xmm3, %xmm14, %xmm12
%xmm12 -> 1
avx -> 1
%ymm12 -> 1
%xmm14 -> 1
%xmm3 -> 1

Circuit: vpunpckldq %xmm13, %xmm2, %xmm1
%xmm1 -> 1
%xmm2 -> 1
%xmm13 -> 1
avx -> 1
%ymm1 -> 1

Circuit: vpunpckhqdq %ymm12, %ymm1, %ymm11
avx2 -> 1
%ymm1 -> 1
%ymm12 -> 1
%ymm11 -> 1

Circuit: movlhps %xmm12, %xmm1
sse -> 1
%xmm1 -> 1
%xmm12 -> 1

Circuit: addps %xmm11, %xmm1
%xmm11 -> 1
%xmm1 -> 1
sse -> 1

Total Circuit
YMM13 -> 1
YMM1 -> 1
YMM11 -> 1
 -> 1
YMM2 -> 1
YMM12 -> 1
YMM3 -> 1
YMM14 -> 1

Target
YMM3 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vhaddps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vhaddps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vhaddps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vhaddps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vhaddps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vhaddps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvhaddps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vhaddps_xmm_xmm_xmm: derivedInstructions//x86-vhaddps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vhaddps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vhsubps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vhsubps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vhsubps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvhsubps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovddup %ymm2, %ymm12
%ymm2 -> 1
avx -> 1
%ymm12 -> 1

Circuit: vpunpckhdq %ymm2, %ymm12, %ymm0
%ymm2 -> 1
%ymm0 -> 1
avx2 -> 1
%ymm12 -> 1

Circuit: vunpcklps %ymm3, %ymm0, %ymm6
%ymm6 -> 1
%ymm0 -> 1
avx -> 1
%ymm3 -> 1

Circuit: vpunpckhdq %ymm3, %ymm6, %ymm1
%ymm6 -> 1
%ymm3 -> 1
avx2 -> 1
%ymm1 -> 1

Circuit: vunpcklps %ymm1, %ymm6, %ymm14
avx -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm6 -> 1

Circuit: vpunpckhqdq %ymm1, %ymm0, %ymm5
%ymm0 -> 1
%ymm5 -> 1
%ymm1 -> 1
avx2 -> 1

Circuit: vsubps %ymm5, %ymm14, %ymm1
%ymm5 -> 1
%ymm1 -> 1
%ymm14 -> 1
avx -> 1

Total Circuit
YMM6 -> 1
YMM12 -> 1
YMM3 -> 1
YMM14 -> 1
YMM5 -> 1
YMM0 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

Target
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vhsubps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vhsubps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vhsubps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vhsubps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vhsubps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vhsubps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvhsubps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vhsubps_ymm_ymm_ymm: derivedInstructions//x86-vhsubps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vhsubps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpaddd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpaddd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpaddd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpaddd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: paddd %xmm3, %xmm2
%xmm2 -> 1
sse2 -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm2_r12_r13
%r13 -> 1
%r12 -> 1
%xmm2 -> 1

Circuit: vzeroall
%ymm7 -> 1
%ymm8 -> 1
%ymm6 -> 1
%ymm0 -> 1
%ymm2 -> 1
%ymm10 -> 1
%ymm15 -> 1
avx -> 1
%ymm12 -> 1
%ymm1 -> 1
%ymm13 -> 1
%ymm14 -> 1
%ymm4 -> 1
%ymm5 -> 1
%ymm11 -> 1
%ymm9 -> 1
%ymm3 -> 1

Circuit: callq .move_064_128_r12_r13_xmm1
%r12 -> 1
%r13 -> 1
%xmm1 -> 1

Total Circuit
R12 -> 1
 -> 1
YMM2 -> 1
YMM11 -> 1
YMM7 -> 1
YMM13 -> 1
YMM1 -> 1
YMM15 -> 1
YMM4 -> 1
YMM0 -> 1
YMM10 -> 1
R13 -> 1
YMM14 -> 1
YMM5 -> 1
YMM8 -> 1
YMM3 -> 1
YMM12 -> 1
YMM9 -> 1
YMM6 -> 1

Target
YMM3 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpaddd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpaddd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpaddd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpaddd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpaddd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpaddd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpaddd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpaddd_xmm_xmm_xmm: derivedInstructions//x86-vpaddd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpaddd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpaddd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpaddd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpaddd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpaddd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_256_128_ymm2_xmm12_xmm13
%xmm13 -> 1
%xmm12 -> 1
%ymm2 -> 1

Circuit: callq .move_256_128_ymm3_xmm10_xmm11
%ymm3 -> 1
%xmm11 -> 1
%xmm10 -> 1

Circuit: paddd %xmm3, %xmm12
%xmm12 -> 1
%xmm3 -> 1
sse2 -> 1

Circuit: paddd %xmm11, %xmm13
sse2 -> 1
%xmm11 -> 1
%xmm13 -> 1

Circuit: callq .move_128_256_xmm12_xmm13_ymm1
%ymm1 -> 1
%xmm13 -> 1
%xmm12 -> 1

Total Circuit
YMM12 -> 1
YMM10 -> 1
YMM3 -> 1
YMM13 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1
YMM11 -> 1

Target
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vpaddd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpaddd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpaddd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpaddd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpaddd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpaddd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpaddd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpaddd_ymm_ymm_ymm: derivedInstructions//x86-vpaddd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpaddd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpmovsxdq_ymm_xmm[0m
[4m[1m[34mcreatespec vpmovsxdq_ymm_xmm: kproveSpecs//x86-semantics_vpmovsxdq_ymm_xmm_spec.k[0m
[4m[1m[34mvpmovsxdq_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7
%xmm4 -> 1
%xmm2 -> 1
%xmm5 -> 1
%xmm6 -> 1
%xmm7 -> 1

Circuit: vpunpckldq %xmm7, %xmm6, %xmm3
%xmm3 -> 1
%xmm7 -> 1
%xmm6 -> 1
avx -> 1
%ymm3 -> 1

Circuit: pmovsxdq %xmm3, %xmm9
sse4_1 -> 1
%xmm9 -> 1
%xmm3 -> 1

Circuit: pmovsxdq %xmm2, %xmm8
%xmm8 -> 1
%xmm2 -> 1
sse4_1 -> 1

Circuit: callq .move_128_256_xmm8_xmm9_ymm1
%ymm1 -> 1
%xmm8 -> 1
%xmm9 -> 1

Total Circuit
YMM7 -> 1
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM8 -> 1
YMM3 -> 1
YMM5 -> 1
YMM4 -> 1
YMM9 -> 1
YMM6 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1

[4m[1m[34mkprove vpmovsxdq_ymm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpmovsxdq_ymm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpmovsxdq_ymm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpmovsxdq_ymm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpmovsxdq_ymm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpmovsxdq_ymm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpmovsxdq_ymm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpmovsxdq_ymm_xmm: derivedInstructions//x86-vpmovsxdq_ymm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpmovsxdq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpsubq_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vpsubq_xmm_xmm_xmm: kproveSpecs//x86-semantics_vpsubq_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvpsubq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_064_xmm2_r10_r11
%r11 -> 1
%xmm2 -> 1
%r10 -> 1

Circuit: callq .move_128_064_xmm3_r8_r9
%r9 -> 1
%r8 -> 1
%xmm3 -> 1

Circuit: vzeroall
%ymm11 -> 1
%ymm5 -> 1
%ymm9 -> 1
%ymm3 -> 1
avx -> 1
%ymm15 -> 1
%ymm13 -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm4 -> 1
%ymm12 -> 1
%ymm2 -> 1
%ymm10 -> 1
%ymm0 -> 1
%ymm7 -> 1
%ymm8 -> 1
%ymm6 -> 1

Circuit: subq %r9, %r11
%r11 -> 1
%zf -> 1
%r9 -> 1
%cf -> 1
%af -> 1
%sf -> 1
%pf -> 1
%of -> 1

Circuit: subq %r8, %r10
%of -> 1
%pf -> 1
%r10 -> 1
%r8 -> 1
%zf -> 1
%cf -> 1
%af -> 1
%sf -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%r11 -> 1
%xmm1 -> 1

Total Circuit
YMM6 -> 1
YMM9 -> 1
AF -> 1
YMM12 -> 1
R8 -> 1
YMM8 -> 1
YMM3 -> 1
YMM14 -> 1
YMM5 -> 1
R11 -> 1
OF -> 1
YMM4 -> 1
YMM0 -> 1
YMM10 -> 1
YMM15 -> 1
R10 -> 1
R9 -> 1
YMM13 -> 1
YMM1 -> 1
CF -> 1
YMM11 -> 1
YMM7 -> 1
 -> 1
ZF -> 1
YMM2 -> 1
SF -> 1
PF -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vpsubq_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vpsubq_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpsubq_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpsubq_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpsubq_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpsubq_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpsubq_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpsubq_xmm_xmm_xmm: derivedInstructions//x86-vpsubq_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpsubq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpunpckldq_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpunpckldq_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpunpckldq_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpunpckldq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vunpcklps %ymm3, %ymm2, %ymm11
%ymm2 -> 1
avx -> 1
%ymm11 -> 1
%ymm3 -> 1

Circuit: vmovaps %ymm11, %ymm1
avx -> 1
%ymm1 -> 1
%ymm11 -> 1

Total Circuit
YMM3 -> 1
YMM11 -> 1
YMM2 -> 1
 -> 1
YMM1 -> 1

Target
YMM3 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

[4m[1m[34mkprove vpunpckldq_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpunpckldq_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpunpckldq_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpunpckldq_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpunpckldq_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpunpckldq_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpunpckldq_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpunpckldq_ymm_ymm_ymm: derivedInstructions//x86-vpunpckldq_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpunpckldq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vunpcklps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vunpcklps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vunpcklps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvunpcklps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpunpckldq %xmm3, %xmm2, %xmm2
%xmm2 -> 1
avx -> 1
%ymm2 -> 1
%xmm3 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%xmm2 -> 1
%r8 -> 1
%r9 -> 1

Circuit: vzeroall
%ymm6 -> 1
%ymm8 -> 1
%ymm7 -> 1
%ymm10 -> 1
%ymm2 -> 1
%ymm0 -> 1
%ymm4 -> 1
%ymm1 -> 1
%ymm14 -> 1
%ymm13 -> 1
%ymm12 -> 1
%ymm15 -> 1
avx -> 1
%ymm3 -> 1
%ymm9 -> 1
%ymm11 -> 1
%ymm5 -> 1

Circuit: callq .move_064_128_r8_r9_xmm1
%xmm1 -> 1
%r8 -> 1
%r9 -> 1

Total Circuit
YMM11 -> 1
YMM7 -> 1
 -> 1
YMM2 -> 1
YMM13 -> 1
YMM1 -> 1
YMM15 -> 1
R9 -> 1
YMM0 -> 1
YMM4 -> 1
YMM10 -> 1
R8 -> 1
YMM8 -> 1
YMM3 -> 1
YMM14 -> 1
YMM5 -> 1
YMM12 -> 1
YMM9 -> 1
YMM6 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vunpcklps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vunpcklps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vunpcklps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vunpcklps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vunpcklps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vunpcklps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvunpcklps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vunpcklps_xmm_xmm_xmm: derivedInstructions//x86-vunpcklps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vunpcklps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vxorpd_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vxorpd_ymm_ymm_ymm: kproveSpecs//x86-semantics_vxorpd_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvxorpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vorpd %ymm3, %ymm2, %ymm4
%ymm2 -> 1
avx -> 1
%ymm4 -> 1
%ymm3 -> 1

Circuit: vandps %ymm2, %ymm3, %ymm13
%ymm2 -> 1
avx -> 1
%ymm13 -> 1
%ymm3 -> 1

Circuit: vandnps %ymm4, %ymm13, %ymm1
%ymm13 -> 1
%ymm1 -> 1
%ymm4 -> 1
avx -> 1

Total Circuit
YMM4 -> 1
YMM3 -> 1
YMM13 -> 1
YMM1 -> 1
 -> 1
YMM2 -> 1

Target
YMM1 -> 1
YMM2 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vxorpd_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vxorpd_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vxorpd_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vxorpd_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vxorpd_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vxorpd_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvxorpd_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vxorpd_ymm_ymm_ymm: derivedInstructions//x86-vxorpd_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vxorpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vxorps_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vxorps_ymm_ymm_ymm: kproveSpecs//x86-semantics_vxorps_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvxorps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpor %ymm2, %ymm3, %ymm14
%ymm2 -> 1
%ymm3 -> 1
avx2 -> 1
%ymm14 -> 1

Circuit: vandps %ymm3, %ymm2, %ymm4
%ymm3 -> 1
avx -> 1
%ymm4 -> 1
%ymm2 -> 1

Circuit: vandnpd %ymm14, %ymm4, %ymm1
%ymm4 -> 1
%ymm14 -> 1
%ymm1 -> 1
avx -> 1

Total Circuit
YMM4 -> 1
YMM3 -> 1
YMM14 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vxorps_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vxorps_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vxorps_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vxorps_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vxorps_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vxorps_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvxorps_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vxorps_ymm_ymm_ymm: derivedInstructions//x86-vxorps_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vxorps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

