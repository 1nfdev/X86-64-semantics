[4m[1m[34mCheck if supported: andb_rh_rh[0m
[4m[1m[34mcreatespec andb_rh_rh: kproveSpecs//x86-semantics_andb_rh_rh_spec.k[0m
[4m[1m[34mandb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andb_rh_rh[0m
Undef Set
af -> 1

Circuit: movsbw %ah, %dx
%ah -> 1
%dx -> 1

Circuit: andb %bh, %dl
%of -> 1
%sf -> 1
%bh -> 1
%af -> 1
%pf -> 1
%cf -> 1
%dl -> 1
%zf -> 1

Circuit: xchgb %ah, %dl
%ah -> 1
%dl -> 1

Circuit: testb %bh, %dl
%pf -> 1
%cf -> 1
%dl -> 1
%zf -> 1
%bh -> 1
%sf -> 1
%af -> 1
%of -> 1

Total Circuit
PF -> 1
CF -> 1
SF -> 1
AF -> 1
RAX -> 1
RDX -> 1
RBX -> 1
OF -> 1
ZF -> 1

Target
PF -> 1
CF -> 1
SF -> 1
AF -> 1
RAX -> 1
RBX -> 1
OF -> 1
ZF -> 1

[4m[1m[34mkprove andb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_andb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andb_rh_rh: derivedInstructions//x86-andb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: andq_r64_r64[0m
[4m[1m[34mcreatespec andq_r64_r64: kproveSpecs//x86-semantics_andq_r64_r64_spec.k[0m
[4m[1m[34mandq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: andq_r64_r64[0m
Undef Set
af -> 1

Circuit: vmovq %rbx, %xmm12
%ymm12 -> 1
avx -> 1
%xmm12 -> 1
%rbx -> 1

Circuit: vmovq %xmm12, %xmm2
%xmm12 -> 1
%ymm2 -> 1
%xmm2 -> 1
avx -> 1

Circuit: vmovq %rcx, %xmm4
%xmm4 -> 1
avx -> 1
%ymm4 -> 1
%rcx -> 1

Circuit: xorw %cx, %cx
%zf -> 1
%pf -> 1
%cf -> 1
%of -> 1
%af -> 1
%sf -> 1
%cx -> 1

Circuit: vandpd %ymm2, %ymm4, %ymm1
%ymm2 -> 1
%ymm1 -> 1
avx -> 1
%ymm4 -> 1

Circuit: vmovq %xmm1, %rbx
%xmm1 -> 1
%rbx -> 1
avx -> 1

Circuit: callq .set_szp_for_rbx
%zf -> 1
%rbx -> 1
%pf -> 1
%sf -> 1

Total Circuit
CF -> 1
PF -> 1
YMM2 -> 1
SF -> 1
YMM12 -> 1
YMM4 -> 1
AF -> 1
OF -> 1
RBX -> 1
YMM1 -> 1
 -> 1
RCX -> 1
ZF -> 1

Target
RCX -> 1
ZF -> 1
OF -> 1
RBX -> 1
AF -> 1
CF -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove andq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_andq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_andq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput andq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_andq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput andq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mandq_r64_r64: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn andq_r64_r64: derivedInstructions//x86-andq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "andq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: blsil_r32_r32[0m
Warn: [4m[1m[35mblsil_r32_r32: Manually Generated[0m
[4m[1m[34mCheck if supported: cmovaw_r16_r16[0m
[4m[1m[34mcreatespec cmovaw_r16_r16: kproveSpecs//x86-semantics_cmovaw_r16_r16_spec.k[0m
[4m[1m[34mcmovaw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovaw_r16_r16[0m
Circuit: movzwl %bx, %eax
%eax -> 1
%bx -> 1
%rax -> 1

Circuit: cmovbel %eax, %ecx
%cf -> 1
%rcx -> 1
%zf -> 1
%eax -> 1
cmov -> 1
%ecx -> 1

Circuit: movswq %cx, %rbx
%cx -> 1
%rbx -> 1

Total Circuit
 -> 1
RBX -> 1
RCX -> 1
ZF -> 1
CF -> 1
RAX -> 1

Target
CF -> 1
RBX -> 1
 -> 1
ZF -> 1
RCX -> 1

[4m[1m[34mkprove cmovaw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovaw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovaw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovaw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovaw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovaw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovaw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovaw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovaw_r16_r16: derivedInstructions//x86-cmovaw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovaw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovbew_r16_r16[0m
[4m[1m[34mcreatespec cmovbew_r16_r16: kproveSpecs//x86-semantics_cmovbew_r16_r16_spec.k[0m
[4m[1m[34mcmovbew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovbew_r16_r16[0m
Circuit: movswl %cx, %edx
%edx -> 1
%cx -> 1
%rdx -> 1

Circuit: cmovbel %edx, %ebx
%edx -> 1
%zf -> 1
%cf -> 1
%rbx -> 1
cmov -> 1
%ebx -> 1

Total Circuit
RCX -> 1
ZF -> 1
RBX -> 1
 -> 1
RDX -> 1
CF -> 1

Target
RBX -> 1
 -> 1
RCX -> 1
ZF -> 1
CF -> 1

[4m[1m[34mkprove cmovbew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovbew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovbew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovbew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovbew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovbew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovbew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovbew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovbew_r16_r16: derivedInstructions//x86-cmovbew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovbew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovgel_r32_r32[0m
[4m[1m[34mcreatespec cmovgel_r32_r32: kproveSpecs//x86-semantics_cmovgel_r32_r32_spec.k[0m
[4m[1m[34mcmovgel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovgel_r32_r32[0m
Circuit: cmovnll %ecx, %ebx
%rbx -> 1
%sf -> 1
cmov -> 1
%of -> 1
%ebx -> 1
%ecx -> 1

Total Circuit
RCX -> 1
 -> 1
OF -> 1
RBX -> 1
SF -> 1

Target
SF -> 1
 -> 1
OF -> 1
RBX -> 1
RCX -> 1

[4m[1m[34mkprove cmovgel_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovgel_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovgel_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovgel_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovgel_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovgel_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovgel_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovgel_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovgel_r32_r32: derivedInstructions//x86-cmovgel_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovgel %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovgl_r32_r32[0m
[4m[1m[34mcreatespec cmovgl_r32_r32: kproveSpecs//x86-semantics_cmovgl_r32_r32_spec.k[0m
[4m[1m[34mcmovgl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovgl_r32_r32[0m
Circuit: movl %ecx, %r11d
%r11d -> 1
%ecx -> 1
%r11 -> 1

Circuit: cmovnlel %r11d, %ebx
%rbx -> 1
%zf -> 1
%ebx -> 1
%of -> 1
cmov -> 1
%sf -> 1
%r11d -> 1

Total Circuit
SF -> 1
RCX -> 1
ZF -> 1
R11 -> 1
 -> 1
RBX -> 1
OF -> 1

Target
ZF -> 1
RCX -> 1
 -> 1
OF -> 1
RBX -> 1
SF -> 1

[4m[1m[34mkprove cmovgl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovgl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovgl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovgl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovgl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovgl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovgl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovgl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovgl_r32_r32: derivedInstructions//x86-cmovgl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovgl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovgq_r64_r64[0m
[4m[1m[34mcreatespec cmovgq_r64_r64: kproveSpecs//x86-semantics_cmovgq_r64_r64_spec.k[0m
[4m[1m[34mcmovgq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovgq_r64_r64[0m
Circuit: cmovnleq %rcx, %rbx
%sf -> 1
cmov -> 1
%of -> 1
%zf -> 1
%rcx -> 1
%rbx -> 1

Total Circuit
SF -> 1
ZF -> 1
RCX -> 1
RBX -> 1
OF -> 1
 -> 1

Target
RCX -> 1
ZF -> 1
 -> 1
RBX -> 1
OF -> 1
SF -> 1

[4m[1m[34mkprove cmovgq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovgq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovgq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovgq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovgq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovgq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovgq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovgq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovgq_r64_r64: derivedInstructions//x86-cmovgq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovgq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovlew_r16_r16[0m
[4m[1m[34mcreatespec cmovlew_r16_r16: kproveSpecs//x86-semantics_cmovlew_r16_r16_spec.k[0m
[4m[1m[34mcmovlew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovlew_r16_r16[0m
Circuit: movzwq %cx, %r9
%r9 -> 1
%cx -> 1

Circuit: cmovngew %r9w, %bx
%sf -> 1
cmov -> 1
%of -> 1
%bx -> 1
%r9w -> 1

Circuit: cmovzl %r9d, %ebx
cmov -> 1
%ebx -> 1
%r9d -> 1
%zf -> 1
%rbx -> 1

Total Circuit
SF -> 1
R9 -> 1
OF -> 1
RBX -> 1
 -> 1
RCX -> 1
ZF -> 1

Target
SF -> 1
RCX -> 1
ZF -> 1
 -> 1
OF -> 1
RBX -> 1

[4m[1m[34mkprove cmovlew_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovlew_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovlew_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovlew_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovlew_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovlew_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovlew_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovlew_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovlew_r16_r16: derivedInstructions//x86-cmovlew_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovlew %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovlw_r16_r16[0m
[4m[1m[34mcreatespec cmovlw_r16_r16: kproveSpecs//x86-semantics_cmovlw_r16_r16_spec.k[0m
[4m[1m[34mcmovlw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovlw_r16_r16[0m
Circuit: cmovngew %cx, %bx
%bx -> 1
%of -> 1
cmov -> 1
%cx -> 1
%sf -> 1

Total Circuit
SF -> 1
RCX -> 1
OF -> 1
RBX -> 1
 -> 1

Target
RCX -> 1
RBX -> 1
OF -> 1
 -> 1
SF -> 1

[4m[1m[34mkprove cmovlw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovlw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovlw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovlw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovlw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovlw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovlw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovlw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovlw_r16_r16: derivedInstructions//x86-cmovlw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovlw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnbw_r16_r16[0m
[4m[1m[34mcreatespec cmovnbw_r16_r16: kproveSpecs//x86-semantics_cmovnbw_r16_r16_spec.k[0m
[4m[1m[34mcmovnbw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovnbw_r16_r16[0m
Circuit: movzwq %cx, %r9
%r9 -> 1
%cx -> 1

Circuit: cmovnbl %r9d, %ebx
%ebx -> 1
cmov -> 1
%rbx -> 1
%cf -> 1
%r9d -> 1

Total Circuit
CF -> 1
R9 -> 1
 -> 1
RBX -> 1
RCX -> 1

Target
CF -> 1
RCX -> 1
RBX -> 1
 -> 1

[4m[1m[34mkprove cmovnbw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovnbw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnbw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnbw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnbw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnbw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnbw_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnbw_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnbw_r16_r16: derivedInstructions//x86-cmovnbw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnbw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovncq_r64_r64[0m
[4m[1m[34mcreatespec cmovncq_r64_r64: kproveSpecs//x86-semantics_cmovncq_r64_r64_spec.k[0m
[4m[1m[34mcmovncq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovncq_r64_r64[0m
Circuit: cmovbw %cx, %cx
%cx -> 1
cmov -> 1
%cf -> 1

Circuit: cmovaeq %rcx, %rbx
%rbx -> 1
%cf -> 1
%rcx -> 1
cmov -> 1

Total Circuit
CF -> 1
RBX -> 1
 -> 1
RCX -> 1

Target
RCX -> 1
 -> 1
RBX -> 1
CF -> 1

[4m[1m[34mkprove cmovncq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovncq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovncq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovncq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovncq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovncq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovncq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovncq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovncq_r64_r64: derivedInstructions//x86-cmovncq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovncq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovngl_r32_r32[0m
[4m[1m[34mcreatespec cmovngl_r32_r32: kproveSpecs//x86-semantics_cmovngl_r32_r32_spec.k[0m
[4m[1m[34mcmovngl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovngl_r32_r32[0m
Circuit: xchgl %ecx, %ebx
%rcx -> 1
%rbx -> 1
%ecx -> 1
%ebx -> 1

Circuit: vmovd %ecx, %xmm1
%ymm1 -> 1
%xmm1 -> 1
%ecx -> 1
avx -> 1

Circuit: callq .move_128_064_xmm1_r8_r9
%r9 -> 1
%xmm1 -> 1
%r8 -> 1

Circuit: cmovnlel %r8d, %ebx
%zf -> 1
%r8d -> 1
%rbx -> 1
%sf -> 1
cmov -> 1
%of -> 1
%ebx -> 1

Total Circuit
SF -> 1
R9 -> 1
R8 -> 1
 -> 1
YMM1 -> 1
RBX -> 1
OF -> 1
ZF -> 1
RCX -> 1

Target
SF -> 1
ZF -> 1
RCX -> 1
RBX -> 1
OF -> 1
 -> 1

[4m[1m[34mkprove cmovngl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovngl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovngl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovngl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovngl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovngl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovngl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovngl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovngl_r32_r32: derivedInstructions//x86-cmovngl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovngl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovngq_r64_r64[0m
[4m[1m[34mcreatespec cmovngq_r64_r64: kproveSpecs//x86-semantics_cmovngq_r64_r64_spec.k[0m
[4m[1m[34mcmovngq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovngq_r64_r64[0m
Circuit: cmovleq %rcx, %rbx
%of -> 1
%sf -> 1
cmov -> 1
%zf -> 1
%rcx -> 1
%rbx -> 1

Total Circuit
RCX -> 1
ZF -> 1
 -> 1
OF -> 1
RBX -> 1
SF -> 1

Target
 -> 1
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1
SF -> 1

[4m[1m[34mkprove cmovngq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmovngq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovngq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovngq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovngq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovngq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovngq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovngq_r64_r64[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovngq_r64_r64: derivedInstructions//x86-cmovngq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovngq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovnow_r16_r16[0m
[4m[1m[34mcreatespec cmovnow_r16_r16: kproveSpecs//x86-semantics_cmovnow_r16_r16_spec.k[0m
[4m[1m[34mcmovnow_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovnow_r16_r16[0m
Circuit: callq .set_sf
%sf -> 1

Circuit: cmovngew %cx, %bx
%sf -> 1
cmov -> 1
%cx -> 1
%of -> 1
%bx -> 1

Total Circuit
RCX -> 1
 -> 1
RBX -> 1
OF -> 1
SF -> 1

Target
RCX -> 1
 -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove cmovnow_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovnow_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovnow_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovnow_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovnow_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovnow_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovnow_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovnow_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovnow_r16_r16: derivedInstructions//x86-cmovnow_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovnow %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovow_r16_r16[0m
[4m[1m[34mcreatespec cmovow_r16_r16: kproveSpecs//x86-semantics_cmovow_r16_r16_spec.k[0m
[4m[1m[34mcmovow_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write bx does not belong to Must Write: cmovow_r16_r16[0m
Circuit: movswq %cx, %r12
%r12 -> 1
%cx -> 1

Circuit: cmovol %r12d, %ebx
%of -> 1
%ebx -> 1
cmov -> 1
%rbx -> 1
%r12d -> 1

Total Circuit
OF -> 1
RBX -> 1
 -> 1
R12 -> 1
RCX -> 1

Target
RCX -> 1
RBX -> 1
OF -> 1
 -> 1

[4m[1m[34mkprove cmovow_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmovow_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovow_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovow_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovow_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovow_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovow_r16_r16: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovow_r16_r16[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovow_r16_r16: derivedInstructions//x86-cmovow_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovow %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmovsl_r32_r32[0m
[4m[1m[34mcreatespec cmovsl_r32_r32: kproveSpecs//x86-semantics_cmovsl_r32_r32_spec.k[0m
[4m[1m[34mcmovsl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmovsl_r32_r32[0m
Circuit: callq .set_of
%of -> 1

Circuit: cmovnll %ecx, %ebx
%sf -> 1
cmov -> 1
%of -> 1
%ebx -> 1
%ecx -> 1
%rbx -> 1

Total Circuit
RCX -> 1
OF -> 1
RBX -> 1
 -> 1
SF -> 1

Target
SF -> 1
 -> 1
RBX -> 1
RCX -> 1

[4m[1m[34mkprove cmovsl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmovsl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmovsl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmovsl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmovsl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmovsl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmovsl_r32_r32: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmovsl_r32_r32[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmovsl_r32_r32: derivedInstructions//x86-cmovsl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmovsl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpb_r8_r8[0m
[4m[1m[34mcreatespec cmpb_r8_r8: kproveSpecs//x86-semantics_cmpb_r8_r8_spec.k[0m
[4m[1m[34mcmpb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorq %rax, %rax
%af -> 1
%sf -> 1
%of -> 1
%rax -> 1
%zf -> 1
%cf -> 1
%pf -> 1

Circuit: salw $0x1, %ax
%zf -> 1
%pf -> 1
%cf -> 1
\$0x1 -> 1
%ax -> 1
%of -> 1
%af -> 1
%sf -> 1

Circuit: xchgb %ah, %cl
%cl -> 1
%ah -> 1

Circuit: cmpb %ah, %bl
%zf -> 1
%cf -> 1
%pf -> 1
%bl -> 1
%of -> 1
%af -> 1
%ah -> 1
%sf -> 1

Total Circuit
OF -> 1
RBX -> 1
 -> 1
RCX -> 1
ZF -> 1
CF -> 1
PF -> 1
SF -> 1
AF -> 1
RAX -> 1

Target
SF -> 1
CF -> 1
PF -> 1
AF -> 1
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove cmpb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_cmpb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpb_r8_r8: derivedInstructions//x86-cmpb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpb_rh_r8[0m
[4m[1m[34mcreatespec cmpb_rh_r8: kproveSpecs//x86-semantics_cmpb_rh_r8_spec.k[0m
[4m[1m[34mcmpb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: subb %bl, %ah
%zf -> 1
%cf -> 1
%bl -> 1
%pf -> 1
%of -> 1
%af -> 1
%ah -> 1
%sf -> 1

Total Circuit
AF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
ZF -> 1
RBX -> 1
OF -> 1

Target
AF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
ZF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove cmpb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_cmpb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpb_rh_r8: derivedInstructions//x86-cmpb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpb_rh_rh[0m
[4m[1m[34mcreatespec cmpb_rh_rh: kproveSpecs//x86-semantics_cmpb_rh_rh_spec.k[0m
[4m[1m[34mcmpb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: subb %bh, %ah
%of -> 1
%bh -> 1
%sf -> 1
%ah -> 1
%af -> 1
%pf -> 1
%cf -> 1
%zf -> 1

Total Circuit
SF -> 1
PF -> 1
CF -> 1
RAX -> 1
AF -> 1
OF -> 1
RBX -> 1
ZF -> 1

Target
RBX -> 1
OF -> 1
ZF -> 1
CF -> 1
PF -> 1
SF -> 1
AF -> 1
RAX -> 1

[4m[1m[34mkprove cmpb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_cmpb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpb_rh_rh: derivedInstructions//x86-cmpb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpl_r32_r32[0m
[4m[1m[34mcreatespec cmpl_r32_r32: kproveSpecs//x86-semantics_cmpl_r32_r32_spec.k[0m
[4m[1m[34mcmpl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: subl %ecx, %ebx
%cf -> 1
%rbx -> 1
%pf -> 1
%zf -> 1
%sf -> 1
%af -> 1
%ebx -> 1
%of -> 1
%ecx -> 1

Total Circuit
RCX -> 1
ZF -> 1
OF -> 1
RBX -> 1
AF -> 1
CF -> 1
PF -> 1
SF -> 1

Target
CF -> 1
PF -> 1
SF -> 1
AF -> 1
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove cmpl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_cmpl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpl_r32_r32: derivedInstructions//x86-cmpl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpw_r16_r16[0m
[4m[1m[34mcreatespec cmpw_r16_r16: kproveSpecs//x86-semantics_cmpw_r16_r16_spec.k[0m
[4m[1m[34mcmpw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: subw %cx, %bx
%of -> 1
%af -> 1
%cx -> 1
%sf -> 1
%zf -> 1
%cf -> 1
%pf -> 1
%bx -> 1

Total Circuit
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1
CF -> 1
PF -> 1
SF -> 1
AF -> 1

Target
SF -> 1
CF -> 1
PF -> 1
AF -> 1
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove cmpw_r16_r16[0m
time krun --prove kproveSpecs//x86-semantics_cmpw_r16_r16_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpw_r16_r16_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpw_r16_r16[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpw_r16_r16_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpw_r16_r16[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpw_r16_r16: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpw_r16_r16: derivedInstructions//x86-cmpw_r16_r16.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpw %cx, %bx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpxchgb_rh_rh[0m
[4m[1m[34mcreatespec cmpxchgb_rh_rh: kproveSpecs//x86-semantics_cmpxchgb_rh_rh_spec.k[0m
[4m[1m[34mcmpxchgb_rh_rh: Check if May == Must[0m
Warn: [4m[1m[35mMay Write al does not belong to Must Write: cmpxchgb_rh_rh[0m
Warn: [4m[1m[35mMay Write bh does not belong to Must Write: cmpxchgb_rh_rh[0m
Circuit: cmpb %bh, %al
%zf -> 1
%pf -> 1
%cf -> 1
%of -> 1
%al -> 1
%af -> 1
%bh -> 1
%sf -> 1

Circuit: setnle %cl
%zf -> 1
%sf -> 1
%cl -> 1
%of -> 1

Circuit: movb %bh, %al
%al -> 1
%bh -> 1

Circuit: cmovew %cx, %bx
%cx -> 1
cmov -> 1
%bx -> 1
%zf -> 1

Total Circuit
CF -> 1
PF -> 1
SF -> 1
AF -> 1
RAX -> 1
OF -> 1
RBX -> 1
 -> 1
RCX -> 1
ZF -> 1

Target
RCX -> 1
ZF -> 1
OF -> 1
RBX -> 1
AF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1

[4m[1m[34mkprove cmpxchgb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_cmpxchgb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpxchgb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpxchgb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpxchgb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpxchgb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpxchgb_rh_rh: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmpxchgb_rh_rh[0m
Warn: [4m[1m[35mMay Write RAX does not belong to Must Write: cmpxchgb_rh_rh[0m
Warn: [4m[1m[35mcmpxchgb_rh_rh: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpxchgb_rh_rh: derivedInstructions//x86-cmpxchgb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpxchgb %ch, %bh" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: cmpxchgq_r64_r64[0m
[4m[1m[34mcreatespec cmpxchgq_r64_r64: kproveSpecs//x86-semantics_cmpxchgq_r64_r64_spec.k[0m
[4m[1m[34mcmpxchgq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write rbx does not belong to Must Write: cmpxchgq_r64_r64[0m
Circuit: cmpq %rbx, %rax
%sf -> 1
%af -> 1
%of -> 1
%rax -> 1
%pf -> 1
%rbx -> 1
%cf -> 1
%zf -> 1

Circuit: cmovneq %rbx, %rax
cmov -> 1
%rbx -> 1
%zf -> 1
%rax -> 1

Circuit: cmoveq %rcx, %rbx
%rbx -> 1
%rcx -> 1
%zf -> 1
cmov -> 1

Total Circuit
AF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
RCX -> 1
ZF -> 1
OF -> 1
RBX -> 1
 -> 1

Target
AF -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
RCX -> 1
ZF -> 1
RBX -> 1
OF -> 1

[4m[1m[34mkprove cmpxchgq_r64_r64[0m
time krun --prove kproveSpecs//x86-semantics_cmpxchgq_r64_r64_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_cmpxchgq_r64_r64_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput cmpxchgq_r64_r64[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_cmpxchgq_r64_r64_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput cmpxchgq_r64_r64[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mcmpxchgq_r64_r64: Check if May == Must[0m
Warn: [4m[1m[35mMay Write RBX does not belong to Must Write: cmpxchgq_r64_r64[0m
Warn: [4m[1m[35mcmpxchgq_r64_r64: More that one writes. May Need to schedule.[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn cmpxchgq_r64_r64: derivedInstructions//x86-cmpxchgq_r64_r64.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "cmpxchgq %rcx, %rbx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: haddps_xmm_xmm[0m
[4m[1m[34mcreatespec haddps_xmm_xmm: kproveSpecs//x86-semantics_haddps_xmm_xmm_spec.k[0m
[4m[1m[34mhaddps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vmovupd %xmm1, %xmm5
avx -> 1
%xmm5 -> 1
%xmm1 -> 1
%ymm5 -> 1

Circuit: vhaddps %xmm2, %xmm5, %xmm5
avx -> 1
%xmm2 -> 1
%xmm5 -> 1
%ymm5 -> 1

Circuit: movups %xmm5, %xmm1
sse -> 1
%xmm5 -> 1
%xmm1 -> 1

Total Circuit
YMM1 -> 1
 -> 1
YMM5 -> 1
YMM2 -> 1

Target
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove haddps_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_haddps_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_haddps_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput haddps_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_haddps_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput haddps_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mhaddps_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn haddps_xmm_xmm: derivedInstructions//x86-haddps_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "haddps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: phsubd_xmm_xmm[0m
[4m[1m[34mcreatespec phsubd_xmm_xmm: kproveSpecs//x86-semantics_phsubd_xmm_xmm_spec.k[0m
[4m[1m[34mphsubd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movsldup %xmm2, %xmm0
%xmm0 -> 1
%xmm2 -> 1
pni -> 1

Circuit: vmovsldup %xmm1, %xmm13
avx -> 1
%xmm13 -> 1
%xmm1 -> 1
%ymm13 -> 1

Circuit: movdqu %xmm0, %xmm15
%xmm15 -> 1
sse2 -> 1
%xmm0 -> 1

Circuit: vpsubq %xmm1, %xmm13, %xmm9
%xmm9 -> 1
avx -> 1
%ymm9 -> 1
%xmm13 -> 1
%xmm1 -> 1

Circuit: vpsubq %xmm2, %xmm15, %xmm0
%xmm2 -> 1
avx -> 1
%xmm15 -> 1
%xmm0 -> 1
%ymm0 -> 1

Circuit: movdqu %xmm9, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm9 -> 1

Circuit: phaddd %xmm0, %xmm1
%xmm1 -> 1
ssse3 -> 1
%xmm0 -> 1

Total Circuit
YMM9 -> 1
YMM13 -> 1
 -> 1
YMM0 -> 1
YMM1 -> 1
YMM2 -> 1
YMM15 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1

[4m[1m[34mkprove phsubd_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_phsubd_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_phsubd_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput phsubd_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_phsubd_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput phsubd_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mphsubd_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn phsubd_xmm_xmm: derivedInstructions//x86-phsubd_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "phsubd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: psubq_xmm_xmm[0m
[4m[1m[34mcreatespec psubq_xmm_xmm: kproveSpecs//x86-semantics_psubq_xmm_xmm_spec.k[0m
[4m[1m[34mpsubq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpsubq %xmm2, %xmm1, %xmm12
%xmm1 -> 1
%xmm12 -> 1
avx -> 1
%xmm2 -> 1
%ymm12 -> 1

Circuit: movupd %xmm12, %xmm1
%xmm1 -> 1
%xmm12 -> 1
sse2 -> 1

Total Circuit
YMM2 -> 1
YMM12 -> 1
 -> 1
YMM1 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove psubq_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_psubq_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_psubq_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput psubq_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_psubq_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput psubq_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mpsubq_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn psubq_xmm_xmm: derivedInstructions//x86-psubq_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "psubq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: rorb_rh_one[0m
[4m[1m[34mcreatespec rorb_rh_one: kproveSpecs//x86-semantics_rorb_rh_one_spec.k[0m
[4m[1m[34mrorb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movb %ah, %dh
%ah -> 1
%dh -> 1

Circuit: movb %dh, %al
%al -> 1
%dh -> 1

Circuit: rorb $0x1, %al
%al -> 1
%of -> 1
\$0x1 -> 1
%cf -> 1

Circuit: movswq %ax, %rbx
%ax -> 1
%rbx -> 1

Circuit: xchgb %ah, %bl
%bl -> 1
%ah -> 1

Total Circuit
RAX -> 1
RDX -> 1
CF -> 1
 -> 1
OF -> 1
RBX -> 1

Target
 -> 1
OF -> 1
CF -> 1
RAX -> 1

[4m[1m[34mkprove rorb_rh_one[0m
time krun --prove kproveSpecs//x86-semantics_rorb_rh_one_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_rorb_rh_one_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput rorb_rh_one[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_rorb_rh_one_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput rorb_rh_one[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mrorb_rh_one: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn rorb_rh_one: derivedInstructions//x86-rorb_rh_one.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "rorb \$0x1, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subb_r8_r8[0m
[4m[1m[34mcreatespec subb_r8_r8: kproveSpecs//x86-semantics_subb_r8_r8_spec.k[0m
[4m[1m[34msubb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: movb %bl, %bh
%bl -> 1
%bh -> 1

Circuit: subb %cl, %bh
%af -> 1
%bh -> 1
%sf -> 1
%cl -> 1
%of -> 1
%zf -> 1
%cf -> 1
%pf -> 1

Circuit: movb %bh, %bl
%bh -> 1
%bl -> 1

Total Circuit
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1
SF -> 1
CF -> 1
PF -> 1
AF -> 1

Target
RCX -> 1
ZF -> 1
RBX -> 1
OF -> 1
AF -> 1
SF -> 1
CF -> 1
PF -> 1

[4m[1m[34mkprove subb_r8_r8[0m
time krun --prove kproveSpecs//x86-semantics_subb_r8_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subb_r8_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subb_r8_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subb_r8_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subb_r8_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubb_r8_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subb_r8_r8: derivedInstructions//x86-subb_r8_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subb %cl, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: subb_r8_rh[0m
[4m[1m[34mcreatespec subb_r8_rh: kproveSpecs//x86-semantics_subb_r8_rh_spec.k[0m
[4m[1m[34msubb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: xorb %al, %al
%of -> 1
%al -> 1
%af -> 1
%sf -> 1
%zf -> 1
%cf -> 1
%pf -> 1

Circuit: adcb %bl, %al
%of -> 1
%sf -> 1
%al -> 1
%af -> 1
%pf -> 1
%bl -> 1
%cf -> 1
%zf -> 1

Circuit: sbbb %ah, %bl
%zf -> 1
%cf -> 1
%pf -> 1
%bl -> 1
%ah -> 1
%af -> 1
%sf -> 1
%of -> 1

Total Circuit
RAX -> 1
AF -> 1
SF -> 1
CF -> 1
PF -> 1
ZF -> 1
OF -> 1
RBX -> 1

Target
RBX -> 1
OF -> 1
ZF -> 1
PF -> 1
CF -> 1
SF -> 1
AF -> 1
RAX -> 1

[4m[1m[34mkprove subb_r8_rh[0m
time krun --prove kproveSpecs//x86-semantics_subb_r8_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_subb_r8_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput subb_r8_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_subb_r8_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput subb_r8_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34msubb_r8_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn subb_r8_rh: derivedInstructions//x86-subb_r8_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "subb %ah, %bl" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testb_rh_r8[0m
[4m[1m[34mcreatespec testb_rh_r8: kproveSpecs//x86-semantics_testb_rh_r8_spec.k[0m
[4m[1m[34mtestb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testb_rh_r8[0m
Undef Set
af -> 1

Circuit: xorl %edx, %edx
%edx -> 1
%pf -> 1
%cf -> 1
%zf -> 1
%sf -> 1
%af -> 1
%of -> 1
%rdx -> 1

Circuit: callq .clear_cf
%cf -> 1

Circuit: setg %bh
%of -> 1
%sf -> 1
%bh -> 1
%zf -> 1

Circuit: adcw %bx, %dx
%af -> 1
%sf -> 1
%of -> 1
%bx -> 1
%zf -> 1
%dx -> 1
%cf -> 1
%pf -> 1

Circuit: testb %ah, %dl
%zf -> 1
%dl -> 1
%cf -> 1
%pf -> 1
%of -> 1
%af -> 1
%ah -> 1
%sf -> 1

Total Circuit
AF -> 1
RDX -> 1
RAX -> 1
CF -> 1
PF -> 1
SF -> 1
ZF -> 1
RBX -> 1
OF -> 1

Target
RBX -> 1
OF -> 1
ZF -> 1
CF -> 1
PF -> 1
SF -> 1
AF -> 1
RAX -> 1

[4m[1m[34mkprove testb_rh_r8[0m
time krun --prove kproveSpecs//x86-semantics_testb_rh_r8_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testb_rh_r8_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testb_rh_r8[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testb_rh_r8_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testb_rh_r8[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestb_rh_r8: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testb_rh_r8: derivedInstructions//x86-testb_rh_r8.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testb %bl, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: testb_rh_rh[0m
[4m[1m[34mcreatespec testb_rh_rh: kproveSpecs//x86-semantics_testb_rh_rh_spec.k[0m
[4m[1m[34mtestb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: testb_rh_rh[0m
Undef Set
af -> 1

Circuit: movzbl %ah, %eax
%ah -> 1
%eax -> 1
%rax -> 1

Circuit: testb %bh, %al
%al -> 1
%af -> 1
%bh -> 1
%sf -> 1
%of -> 1
%zf -> 1
%cf -> 1
%pf -> 1

Total Circuit
PF -> 1
CF -> 1
SF -> 1
AF -> 1
RAX -> 1
OF -> 1
RBX -> 1
ZF -> 1

Target
ZF -> 1
OF -> 1
RBX -> 1
RAX -> 1
AF -> 1
SF -> 1
CF -> 1
PF -> 1

[4m[1m[34mkprove testb_rh_rh[0m
time krun --prove kproveSpecs//x86-semantics_testb_rh_rh_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_testb_rh_rh_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput testb_rh_rh[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_testb_rh_rh_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput testb_rh_rh[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtestb_rh_rh: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn testb_rh_rh: derivedInstructions//x86-testb_rh_rh.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "testb %bh, %ah" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: tzcntl_r32_r32[0m
[4m[1m[34mcreatespec tzcntl_r32_r32: kproveSpecs//x86-semantics_tzcntl_r32_r32_spec.k[0m
[4m[1m[34mtzcntl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Warn: [4m[1m[35m[getSpecCode] Undef Present: tzcntl_r32_r32[0m
Undef Set
pf -> 1
sf -> 1
af -> 1
of -> 1

Circuit: blsmskl %ecx, %ecx
%sf -> 1
%af -> 1
%of -> 1
bmi1 -> 1
%ecx -> 1
%cf -> 1
%pf -> 1
%zf -> 1
%rcx -> 1

Circuit: rclq $0x1, %rcx
%of -> 1
%rcx -> 1
%cf -> 1
\$0x1 -> 1

Circuit: popcntq %rcx, %rbx
%zf -> 1
%rcx -> 1
%rbx -> 1
%pf -> 1
%cf -> 1
popcnt -> 1
%of -> 1
%af -> 1
%sf -> 1

Circuit: decl %ebx
%ebx -> 1
%of -> 1
%sf -> 1
%af -> 1
%pf -> 1
%rbx -> 1
%zf -> 1

Circuit: rorb $0x1, %cl
\$0x1 -> 1
%cf -> 1
%cl -> 1
%of -> 1

Total Circuit
SF -> 1
CF -> 1
PF -> 1
AF -> 1
 -> 1
RBX -> 1
OF -> 1
RCX -> 1
ZF -> 1

Target
SF -> 1
CF -> 1
PF -> 1
AF -> 1
 -> 1
OF -> 1
RBX -> 1
RCX -> 1
ZF -> 1

[4m[1m[34mkprove tzcntl_r32_r32[0m
time krun --prove kproveSpecs//x86-semantics_tzcntl_r32_r32_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_tzcntl_r32_r32_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput tzcntl_r32_r32[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_tzcntl_r32_r32_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput tzcntl_r32_r32[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mtzcntl_r32_r32: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn tzcntl_r32_r32: derivedInstructions//x86-tzcntl_r32_r32.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "tzcntl %ecx, %ebx" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmaddsub132ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmaddsub132ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmaddsub132ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmaddsub132ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpandn %xmm1, %xmm1, %xmm10
%xmm1 -> 1
avx -> 1
%ymm10 -> 1
%xmm10 -> 1

Circuit: vfnmsub231ps %ymm10, %ymm10, %ymm10
%ymm10 -> 1
fma -> 1

Circuit: movdqa %xmm2, %xmm7
sse2 -> 1
%xmm2 -> 1
%xmm7 -> 1

Circuit: vaddsubps %xmm7, %xmm10, %xmm2
%ymm2 -> 1
%xmm2 -> 1
%xmm7 -> 1
%xmm10 -> 1
avx -> 1

Circuit: vfmadd132ps %xmm3, %xmm2, %xmm1
fma -> 1
%xmm2 -> 1
%xmm3 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM7 -> 1
YMM3 -> 1
YMM10 -> 1
 -> 1
YMM1 -> 1

Target
YMM2 -> 1
YMM3 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vfmaddsub132ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmaddsub132ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmaddsub132ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmaddsub132ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmaddsub132ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmaddsub132ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmaddsub132ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmaddsub132ps_xmm_xmm_xmm: derivedInstructions//x86-vfmaddsub132ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmaddsub132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmaddsub231ps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmaddsub231ps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmaddsub231ps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmaddsub231ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfmaddsub213ps %xmm1, %xmm2, %xmm3
%xmm1 -> 1
%xmm2 -> 1
%xmm3 -> 1
fma -> 1
%ymm3 -> 1

Circuit: vpor %xmm3, %xmm3, %xmm1
%ymm1 -> 1
%xmm1 -> 1
avx -> 1
%xmm3 -> 1

Total Circuit
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmaddsub231ps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmaddsub231ps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmaddsub231ps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmaddsub231ps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmaddsub231ps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmaddsub231ps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmaddsub231ps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmaddsub231ps_xmm_xmm_xmm: derivedInstructions//x86-vfmaddsub231ps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmaddsub231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfmsubadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfmsubadd213pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfmsubadd213pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfmsubadd213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm3_xmm8_xmm9_xmm10_xmm11
%xmm3 -> 1
%xmm10 -> 1
%xmm8 -> 1
%xmm11 -> 1
%xmm9 -> 1

Circuit: vfnmsub213sd %xmm3, %xmm11, %xmm3
%xmm11 -> 1
%ymm3 -> 1
fma -> 1
%xmm3 -> 1

Circuit: callq .move_256_128_ymm3_xmm10_xmm11
%xmm10 -> 1
%xmm11 -> 1
%ymm3 -> 1

Circuit: vfmsub213pd %xmm10, %xmm2, %xmm1
%xmm10 -> 1
fma -> 1
%xmm2 -> 1
%ymm1 -> 1
%xmm1 -> 1

Total Circuit
YMM8 -> 1
YMM2 -> 1
YMM3 -> 1
YMM9 -> 1
YMM10 -> 1
YMM1 -> 1
YMM11 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfmsubadd213pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfmsubadd213pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfmsubadd213pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfmsubadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfmsubadd213pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfmsubadd213pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfmsubadd213pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfmsubadd213pd_xmm_xmm_xmm: derivedInstructions//x86-vfmsubadd213pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfmsubadd213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd132pd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd132pd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd132pd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_032_xmm1_xmm8_xmm9_xmm10_xmm11
%xmm1 -> 1
%xmm9 -> 1
%xmm11 -> 1
%xmm10 -> 1
%xmm8 -> 1

Circuit: vpxor %xmm12, %xmm12, %xmm9
avx -> 1
%xmm9 -> 1
%ymm9 -> 1
%xmm12 -> 1

Circuit: vfnmsub231pd %xmm10, %xmm9, %xmm2
%ymm2 -> 1
fma -> 1
%xmm10 -> 1
%xmm2 -> 1
%xmm9 -> 1

Circuit: vfnmsub132pd %xmm3, %xmm2, %xmm1
fma -> 1
%xmm2 -> 1
%xmm3 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM8 -> 1
YMM12 -> 1
YMM11 -> 1
 -> 1
YMM1 -> 1
YMM10 -> 1
YMM3 -> 1
YMM9 -> 1

Target
YMM3 -> 1
 -> 1
YMM1 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfnmadd132pd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd132pd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd132pd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd132pd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd132pd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd132pd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd132pd_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd132pd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd213sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd213sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd213sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpandn %xmm3, %xmm3, %xmm10
%xmm10 -> 1
%xmm3 -> 1
avx -> 1
%ymm10 -> 1

Circuit: vfnmsub213sd %xmm3, %xmm10, %xmm10
%ymm10 -> 1
%xmm3 -> 1
fma -> 1
%xmm10 -> 1

Circuit: vfnmsub213sd %xmm10, %xmm2, %xmm1
%ymm1 -> 1
%xmm1 -> 1
%xmm10 -> 1
fma -> 1
%xmm2 -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM10 -> 1

Target
YMM1 -> 1
 -> 1
YMM3 -> 1
YMM2 -> 1

[4m[1m[34mkprove vfnmadd213sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd213sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd213sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd213sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd213sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd213sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd213sd_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd213sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmadd231sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmadd231sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmadd231sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmadd231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpandn %xmm2, %xmm2, %xmm14
%ymm14 -> 1
%xmm2 -> 1
%xmm14 -> 1
avx -> 1

Circuit: vfnmsub213pd %xmm2, %xmm14, %xmm14
%xmm2 -> 1
%ymm14 -> 1
%xmm14 -> 1
fma -> 1

Circuit: vfmadd231sd %xmm3, %xmm14, %xmm1
fma -> 1
%xmm14 -> 1
%xmm3 -> 1
%xmm1 -> 1
%ymm1 -> 1

Total Circuit
YMM2 -> 1
YMM14 -> 1
YMM3 -> 1
YMM1 -> 1
 -> 1

Target
YMM2 -> 1
 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmadd231sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmadd231sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmadd231sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmadd231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmadd231sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmadd231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmadd231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmadd231sd_xmm_xmm_xmm: derivedInstructions//x86-vfnmadd231sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmadd231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub132sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub132sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub132sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vfnmsub231pd %xmm3, %xmm1, %xmm2
fma -> 1
%xmm3 -> 1
%xmm2 -> 1
%ymm2 -> 1
%xmm1 -> 1

Circuit: movsd %xmm2, %xmm1
%xmm1 -> 1
sse2 -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm1_r10_r11
%xmm1 -> 1
%r11 -> 1
%r10 -> 1

Circuit: vzeroall
%ymm5 -> 1
%ymm13 -> 1
%ymm11 -> 1
%ymm6 -> 1
%ymm2 -> 1
%ymm1 -> 1
%ymm15 -> 1
%ymm4 -> 1
%ymm8 -> 1
%ymm0 -> 1
%ymm7 -> 1
%ymm14 -> 1
%ymm9 -> 1
%ymm12 -> 1
%ymm10 -> 1
%ymm3 -> 1
avx -> 1

Circuit: vfmadd231ss %xmm14, %xmm12, %xmm1
%xmm14 -> 1
%ymm1 -> 1
%xmm12 -> 1
fma -> 1
%xmm1 -> 1

Circuit: callq .move_064_128_r10_r11_xmm1
%r10 -> 1
%xmm1 -> 1
%r11 -> 1

Total Circuit
YMM12 -> 1
YMM5 -> 1
YMM14 -> 1
R11 -> 1
YMM9 -> 1
YMM7 -> 1
YMM13 -> 1
YMM10 -> 1
YMM0 -> 1
 -> 1
YMM4 -> 1
R10 -> 1
YMM8 -> 1
YMM6 -> 1
YMM2 -> 1
YMM15 -> 1
YMM3 -> 1
YMM1 -> 1
YMM11 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vfnmsub132sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub132sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub132sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub132sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub132sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub132sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub132sd_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub132sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub231sd_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub231sd_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub231sd_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: callq .move_128_64_xmm3_xmm12_xmm13
%xmm12 -> 1
%xmm13 -> 1
%xmm3 -> 1

Circuit: vfnmsub213sd %xmm1, %xmm2, %xmm12
%xmm2 -> 1
%ymm12 -> 1
fma -> 1
%xmm1 -> 1
%xmm12 -> 1

Circuit: vmovsd %xmm12, %xmm1, %xmm10
%xmm10 -> 1
%xmm12 -> 1
avx -> 1
%ymm10 -> 1
%xmm1 -> 1

Circuit: vmovdqa %xmm10, %xmm1
%ymm1 -> 1
%xmm10 -> 1
%xmm1 -> 1
avx -> 1

Total Circuit
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
YMM12 -> 1
 -> 1
YMM13 -> 1
YMM10 -> 1

Target
 -> 1
YMM2 -> 1
YMM3 -> 1
YMM1 -> 1

[4m[1m[34mkprove vfnmsub231sd_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub231sd_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub231sd_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub231sd_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub231sd_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub231sd_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub231sd_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub231sd_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vfnmsub231ss_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vfnmsub231ss_xmm_xmm_xmm: kproveSpecs//x86-semantics_vfnmsub231ss_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvfnmsub231ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpunpcklqdq %xmm1, %xmm1, %xmm13
%xmm13 -> 1
%ymm13 -> 1
avx -> 1
%xmm1 -> 1

Circuit: movss %xmm3, %xmm1
sse -> 1
%xmm1 -> 1
%xmm3 -> 1

Circuit: vpunpckldq %ymm13, %ymm13, %ymm13
avx2 -> 1
%ymm13 -> 1

Circuit: vfnmsub213ss %xmm13, %xmm2, %xmm1
fma -> 1
%xmm2 -> 1
%xmm1 -> 1
%xmm13 -> 1
%ymm1 -> 1

Total Circuit
YMM1 -> 1
YMM3 -> 1
YMM2 -> 1
 -> 1
YMM13 -> 1

Target
YMM2 -> 1
YMM3 -> 1
YMM1 -> 1
 -> 1

[4m[1m[34mkprove vfnmsub231ss_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vfnmsub231ss_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vfnmsub231ss_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vfnmsub231ss_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vfnmsub231ss_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vfnmsub231ss_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvfnmsub231ss_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vfnmsub231ss_xmm_xmm_xmm: derivedInstructions//x86-vfnmsub231ss_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vfnmsub231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vhsubps_xmm_xmm_xmm[0m
[4m[1m[34mcreatespec vhsubps_xmm_xmm_xmm: kproveSpecs//x86-semantics_vhsubps_xmm_xmm_xmm_spec.k[0m
[4m[1m[34mvhsubps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: hsubps %xmm3, %xmm2
pni -> 1
%xmm3 -> 1
%xmm2 -> 1

Circuit: callq .move_128_064_xmm2_r8_r9
%r9 -> 1
%xmm2 -> 1
%r8 -> 1

Circuit: callq .move_064_128_r8_r9_xmm2
%r8 -> 1
%xmm2 -> 1
%r9 -> 1

Circuit: vmovdqu %xmm2, %xmm1
%ymm1 -> 1
%xmm1 -> 1
avx -> 1
%xmm2 -> 1

Total Circuit
YMM2 -> 1
R9 -> 1
YMM1 -> 1
YMM3 -> 1
R8 -> 1
 -> 1

Target
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1
 -> 1

[4m[1m[34mkprove vhsubps_xmm_xmm_xmm[0m
time krun --prove kproveSpecs//x86-semantics_vhsubps_xmm_xmm_xmm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vhsubps_xmm_xmm_xmm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vhsubps_xmm_xmm_xmm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vhsubps_xmm_xmm_xmm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vhsubps_xmm_xmm_xmm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvhsubps_xmm_xmm_xmm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vhsubps_xmm_xmm_xmm: derivedInstructions//x86-vhsubps_xmm_xmm_xmm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vhsubps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vmovmskps_r32_xmm[0m
vmovmskps_r32_xmm 0 derivedInstructions//x86-vmovmskpd_r64_ymm.k
Warn: [4m[1m[35mvmovmskps_r32_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vmovmskps_r64_xmm[0m
vmovmskps_r64_xmm 0 derivedInstructions//x86-vmovmskpd_r64_ymm.k
Warn: [4m[1m[35mvmovmskps_r64_xmm: UnSupported[0m
[4m[1m[34mCheck if supported: vpand_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpand_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpand_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpand_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vandpd %ymm3, %ymm2, %ymm1
%ymm3 -> 1
avx -> 1
%ymm2 -> 1
%ymm1 -> 1

Total Circuit
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

Target
 -> 1
YMM2 -> 1
YMM1 -> 1
YMM3 -> 1

[4m[1m[34mkprove vpand_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpand_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpand_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpand_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpand_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpand_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpand_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpand_ymm_ymm_ymm: derivedInstructions//x86-vpand_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpand %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

[4m[1m[34mCheck if supported: vpxor_ymm_ymm_ymm[0m
[4m[1m[34mcreatespec vpxor_ymm_ymm_ymm: kproveSpecs//x86-semantics_vpxor_ymm_ymm_ymm_spec.k[0m
[4m[1m[34mvpxor_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
Circuit: vpor %ymm3, %ymm2, %ymm8
%ymm2 -> 1
%ymm8 -> 1
%ymm3 -> 1
avx2 -> 1

Circuit: vandpd %ymm2, %ymm3, %ymm4
%ymm4 -> 1
%ymm2 -> 1
%ymm3 -> 1
avx -> 1

Circuit: vandnpd %ymm8, %ymm4, %ymm1
%ymm8 -> 1
%ymm4 -> 1
%ymm1 -> 1
avx -> 1

Total Circuit
 -> 1
YMM2 -> 1
YMM8 -> 1
YMM4 -> 1
YMM1 -> 1
YMM3 -> 1

Target
YMM3 -> 1
YMM1 -> 1
YMM2 -> 1
 -> 1

[4m[1m[34mkprove vpxor_ymm_ymm_ymm[0m
time krun --prove kproveSpecs//x86-semantics_vpxor_ymm_ymm_ymm_spec.k ~/Junk/dummy.k  --smt_prelude /home/sdasgup3/Github/k/k-distribution/include/z3/basic.smt2 1>kproveOutput//x86-semantics_vpxor_ymm_ymm_ymm_spec.output 2>&1 
[4m[1m[34mprocessSpecOutput vpxor_ymm_ymm_ymm[0m
[4m[1m[34mIn processSpecOutput[0m
Using kproveOutput//x86-semantics_vpxor_ymm_ymm_ymm_spec.output
[4m[1m[34mOut processSpecOutput[0m
[4m[1m[34msanitizeSpecOutput vpxor_ymm_ymm_ymm[0m
[4m[1m[34mIn sanitizeSpecOutput[0m
[4m[1m[34mvpxor_ymm_ymm_ymm: Check if May == Must[0m
Passed:[4m[1m[92mequal[0m
[4m[1m[34mOut sanitizeSpecOutput[0m
[4m[1m[34mwriteKDefn vpxor_ymm_ymm_ymm: derivedInstructions//x86-vpxor_ymm_ymm_ymm.k[0m
/home/sdasgup3/Install/strata/stoke/bin/stoke_debug_circuit  --strata_path /home/sdasgup3/Github/strata-data/circuits/ --code "vpxor %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

