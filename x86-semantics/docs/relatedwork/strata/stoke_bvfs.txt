

1> adcb_r8_rh (adcb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "adcb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

adcb %ah, %bl

  maybe read:      { %ah %bl %cf }
  must read:       { %ah %bl %cf }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁
%pf    : !(((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (%rax[15:15] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(%rax[15:15] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ %rax[15:8] + 0x1₉ : 0x0₁ ∘ %rax[15:8]) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


2> adcb_rh_r8 (adcb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "adcb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

adcb %bl, %ah

  maybe read:      { %ah %bl %cf }
  must read:       { %ah %bl %cf }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁
%pf    : !(((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[3:0] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (%rbx[7:7] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(%rbx[7:7] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ %rbx[7:0] + 0x1₉ : 0x0₁ ∘ %rbx[7:0]) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


3> adcb_rh_rh (adcb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "adcb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

adcb %bh, %ah

  maybe read:      { %ah %bh %cf }
  must read:       { %ah %bh %cf }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁
%pf    : !(((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[11:8] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (%rbx[15:15] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(%rbx[15:15] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ %rbx[15:8] + 0x1₉ : 0x0₁ ∘ %rbx[15:8]) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


4> addb_r8_r8 (addb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (%rcx[7:7] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(%rcx[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


5> addb_r8_rh (addb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (%rax[15:15] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(%rax[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


6> addb_rh_r8 (addb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[3:0] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (%rbx[7:7] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(%rbx[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


7> addb_rh_rh (addb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[11:8] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (%rbx[15:15] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(%rbx[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


8> addl_r32_r32 (addl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:0]

%cf    : (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[32:32] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:0] = 0x0₃₂
%sf    : (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁
%of    : (%rcx[31:31] = 0x1₁ ↔ %rbx[31:31] = 0x1₁) ∧ !(%rcx[31:31] = 0x1₁ ↔ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


9> addpd_xmm_xmm (addpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (add_double(%ymm1[127:64], %ymm2[127:64]) ∘ add_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


10> addps_xmm_xmm (addps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (add_single(%ymm1[127:96], %ymm2[127:96]) ∘ add_single(%ymm1[95:64], %ymm2[95:64]) ∘ add_single(%ymm1[63:32], %ymm2[63:32]) ∘ add_single(%ymm1[31:0], %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


11> addq_r64_r64 (addq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:0]

%cf    : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[64:64] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:0] = 0x0₆₄
%sf    : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:63] = 0x1₁
%of    : (%rcx[63:63] = 0x1₁ ↔ %rbx[63:63] = 0x1₁) ∧ !(%rcx[63:63] = 0x1₁ ↔ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:63] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


12> addsd_xmm_xmm (addsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ add_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


13> addss_xmm_xmm (addss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ add_single(%ymm1[31:0], %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


14> addsubpd_xmm_xmm (addsubpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addsubpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addsubpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (add_double(%ymm1[127:64], %ymm2[127:64]) ∘ sub_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


15> addsubps_xmm_xmm (addsubps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addsubps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addsubps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (add_single(%ymm1[127:96], %ymm2[127:96]) ∘ sub_single(%ymm1[95:64], %ymm2[95:64]) ∘ add_single(%ymm1[63:32], %ymm2[63:32]) ∘ sub_single(%ymm1[31:0], %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


16> addw_r16_r16 (addw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "addw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

addw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf %pf %af %zf %sf %of }
  must write:      { %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:0]

%cf    : (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[16:16] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:0] = 0x0₁₆
%sf    : (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁
%of    : (%rcx[15:15] = 0x1₁ ↔ %rbx[15:15] = 0x1₁) ∧ !(%rcx[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


17> andb_r8_r8 (andb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] & %rcx[7:0])

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] & %rcx[7:0]) = 0x0₈
%sf    : (%rbx[7:7] & %rcx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


18> andb_r8_rh (andb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] & %rax[15:8])

%cf    : false
%pf    : !((%rbx[0:0] & %rax[8:8]) = 0x1₁ ⊕ (%rbx[1:1] & %rax[9:9]) = 0x1₁ ⊕ (%rbx[2:2] & %rax[10:10]) = 0x1₁ ⊕ (%rbx[3:3] & %rax[11:11]) = 0x1₁ ⊕ (%rbx[4:4] & %rax[12:12]) = 0x1₁ ⊕ (%rbx[5:5] & %rax[13:13]) = 0x1₁ ⊕ (%rbx[6:6] & %rax[14:14]) = 0x1₁ ⊕ (%rbx[7:7] & %rax[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] & %rax[15:8]) = 0x0₈
%sf    : (%rbx[7:7] & %rax[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


19> andb_rh_r8 (andb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] & %rbx[7:0]) ∘ %rax[7:0]

%cf    : false
%pf    : !((%rax[8:8] & %rbx[0:0]) = 0x1₁ ⊕ (%rax[9:9] & %rbx[1:1]) = 0x1₁ ⊕ (%rax[10:10] & %rbx[2:2]) = 0x1₁ ⊕ (%rax[11:11] & %rbx[3:3]) = 0x1₁ ⊕ (%rax[12:12] & %rbx[4:4]) = 0x1₁ ⊕ (%rax[13:13] & %rbx[5:5]) = 0x1₁ ⊕ (%rax[14:14] & %rbx[6:6]) = 0x1₁ ⊕ (%rax[15:15] & %rbx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] & %rbx[7:0]) = 0x0₈
%sf    : (%rax[15:15] & %rbx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


20> andb_rh_rh (andb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] & %rbx[15:8]) ∘ %rax[7:0]

%cf    : false
%pf    : !((%rax[8:8] & %rbx[8:8]) = 0x1₁ ⊕ (%rax[9:9] & %rbx[9:9]) = 0x1₁ ⊕ (%rax[10:10] & %rbx[10:10]) = 0x1₁ ⊕ (%rax[11:11] & %rbx[11:11]) = 0x1₁ ⊕ (%rax[12:12] & %rbx[12:12]) = 0x1₁ ⊕ (%rax[13:13] & %rbx[13:13]) = 0x1₁ ⊕ (%rax[14:14] & %rbx[14:14]) = 0x1₁ ⊕ (%rax[15:15] & %rbx[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] & %rbx[15:8]) = 0x0₈
%sf    : (%rax[15:15] & %rbx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


21> andl_r32_r32 (andl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] & %rcx[31:0])

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[31:0] & %rcx[31:0]) = 0x0₃₂
%sf    : (%rbx[31:31] & %rcx[31:31]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


22> andnl_r32_r32_r32 (andnl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andnl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andnl %edx, %ecx, %ebx

  maybe read:      { %ecx %edx }
  must read:       { %ecx %edx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : 0x0₃₂ ∘ (!%rcx[31:0] & %rdx[31:0])

%cf    : false
%pf    : TMP_BOOL_1
%af    : TMP_BOOL_0
%zf    : (!%rcx[31:0] & %rdx[31:0]) = 0x0₃₂
%sf    : (!%rcx[31:31] & %rdx[31:31]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


23> andnpd_xmm_xmm (andnpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andnpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andnpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (!%ymm1[127:0] & %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


24> andnps_xmm_xmm (andnps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andnps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andnps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (!%ymm1[127:0] & %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


25> andnq_r64_r64_r64 (andnq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andnq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andnq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : !%rcx & %rdx

%cf    : false
%pf    : TMP_BOOL_1
%af    : TMP_BOOL_0
%zf    : (!%rcx & %rdx) = 0x0₆₄
%sf    : (!%rcx[63:63] & %rdx[63:63]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


26> andpd_xmm_xmm (andpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] & %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


27> andps_xmm_xmm (andps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] & %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


28> andq_r64_r64 (andq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx & %rcx

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx & %rcx) = 0x0₆₄
%sf    : (%rbx[63:63] & %rcx[63:63]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


29> andw_r16_r16 (andw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "andw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

andw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] & %rcx[15:0])

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[15:0] & %rcx[15:0]) = 0x0₁₆
%sf    : (%rbx[15:15] & %rcx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


30> bextrl_r32_r32_r32 (bextrl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "bextrl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

bextrl %edx, %ecx, %ebx

  maybe read:      { %ecx %edx }
  must read:       { %ecx %edx }
  maybe write:     { %rbx %cf %zf %of }
  must write:      { %rbx %cf %zf %of }
  maybe undef:     { %pf %af %sf }
  must undef:      { %pf %af %sf }
  required flags:  { bmi1 }

Formula:

%rbx   : 0x0₃₂ ∘ ((0x0₄₈₀ ∘ %rcx[31:0] >> 0x0₅₀₄ ∘ %rdx[7:0])[31:0] & !(0xffffffffffffffff₅₁₂ >> 0x0₅₀₄ ∘ %rdx[15:8] << 0x0₅₀₄ ∘ %rdx[15:8])[31:0])

%cf    : false
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_0
%zf    : ((0x0₄₈₀ ∘ %rcx[31:0] >> 0x0₅₀₄ ∘ %rdx[7:0])[31:0] & !(0xffffffffffffffff₅₁₂ >> 0x0₅₀₄ ∘ %rdx[15:8] << 0x0₅₀₄ ∘ %rdx[15:8])[31:0]) = 0x0₃₂
%sf    : TMP_BOOL_1
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


31> bextrq_r64_r64_r64 (bextrq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "bextrq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

bextrq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx %cf %zf %of }
  must write:      { %rbx %cf %zf %of }
  maybe undef:     { %pf %af %sf }
  must undef:      { %pf %af %sf }
  required flags:  { bmi1 }

Formula:

%rbx   : (0x0₄₄₈ ∘ %rcx >> 0x0₅₀₄ ∘ %rdx[7:0])[63:0] & !(0xffffffffffffffff₅₁₂ >> 0x0₅₀₄ ∘ %rdx[15:8] << 0x0₅₀₄ ∘ %rdx[15:8])[63:0]

%cf    : false
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_0
%zf    : ((0x0₄₄₈ ∘ %rcx >> 0x0₅₀₄ ∘ %rdx[7:0])[63:0] & !(0xffffffffffffffff₅₁₂ >> 0x0₅₀₄ ∘ %rdx[15:8] << 0x0₅₀₄ ∘ %rdx[15:8])[63:0]) = 0x0₆₄
%sf    : TMP_BOOL_1
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


32> blendvpd_xmm_xmm_xmm0 (blendvpd %xmm0, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blendvpd %xmm0, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:blendvpd_xmm_xmm_xmm0:blendvpd %xmm0, %xmm2, %xmm1

33> blendvps_xmm_xmm_xmm0 (blendvps %xmm0, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blendvps %xmm0, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:blendvps_xmm_xmm_xmm0:blendvps %xmm0, %xmm2, %xmm1

34> blsil_r32_r32 (blsil %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blsil %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

blsil %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : 0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])

%cf    : (0x0₁ ∘ (sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[8:8] = 0x1₁
%pf    : TMP_BOOL_38
%af    : TMP_BOOL_39
%zf    : (%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂
%sf    : (%rcx[31:31] ⊕ ((%rcx[31:31] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:31]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:31] ⊕ %rcx[31:31])) = 0x1₁
%of    : ((sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁ ↔ (sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁) ∧ !((sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁ ↔ (0x0₁ ∘ (sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64((((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈) ∘ (((((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉) + (((%rcx[31:0] ⊕ ((%rcx[31:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0] ⊕ %rcx[31:0])) = 0x0₃₂ ? 0x1₃₂ : 0x0₃₂) = 0x0₃₂ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rcx[7:0] ⊕ ((%rcx[7:0] | (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0]) ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[7:0] ⊕ %rcx[7:0]) : 0xf9₈)) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


35> blsiq_r64_r64 (blsiq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blsiq %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:blsiq_r64_r64:blsiq %rcx, %rbx

36> blsmskl_r32_r32 (blsmskl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blsmskl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

blsmskl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : 0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]

%cf    : (0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁
%pf    : TMP_BOOL_4
%af    : TMP_BOOL_5
%zf    : (%rcx[31:0] ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) = 0x0₃₂
%sf    : (%rcx[31:31] ⊕ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:31]) = 0x1₁
%of    : ((0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:47] = 0x1₁ ↔ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:47] = 0x1₁) ∧ !((0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:47] = 0x1₁ ↔ (0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


37> blsmskq_r64_r64 (blsmskq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blsmskq %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:blsmskq_r64_r64:blsmskq %rcx, %rbx

38> blsrl_r32_r32 (blsrl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blsrl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

blsrl %ecx, %ebx

  maybe read:      { %ecx }
  must read:       { %ecx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : 0x0₃₂ ∘ (%rcx[31:0] - 0x1₃₂ & %rcx[31:0])

%cf    : %rcx[31:0] = 0x0₃₂
%pf    : TMP_BOOL_1
%af    : TMP_BOOL_0
%zf    : (%rcx[31:0] - 0x1₃₂ & %rcx[31:0]) = 0x0₃₂
%sf    : ((%rcx[31:0] - 0x1₃₂)[31:31] & %rcx[31:31]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


39> blsrq_r64_r64 (blsrq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "blsrq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

blsrq %rcx, %rbx

  maybe read:      { %rcx }
  must read:       { %rcx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : %rcx - 0x1₆₄ & %rcx

%cf    : %rcx = 0x0₆₄
%pf    : TMP_BOOL_1
%af    : TMP_BOOL_0
%zf    : (%rcx - 0x1₆₄ & %rcx) = 0x0₆₄
%sf    : ((%rcx - 0x1₆₄)[63:63] & %rcx[63:63]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


40> bswap_r32 (bswap %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "bswap %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

bswap %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ %rbx[7:0] ∘ %rbx[15:8] ∘ (%rbx[23:16] ∘ %rbx[31:24])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


41> bswap_r64 (bswap %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "bswap %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

bswap %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[7:0] ∘ %rbx[15:8] ∘ (%rbx[23:16] ∘ %rbx[31:24]) ∘ (%rbx[39:32] ∘ %rbx[47:40] ∘ (%rbx[55:48] ∘ %rbx[63:56]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


42> btcl_r32_r32 (btcl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btcl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btcl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] ⊕ 0x1₃₂ << sign-extend-32(%rcx[31:0] & 0x1f₃₂))

%cf    : (%rbx[31:0] >> sign-extend-32(%rcx[31:0] & 0x1f₃₂))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


43> btcq_r64_r64 (btcq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btcq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btcq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : %rbx ⊕ 0x1₆₄ << sign-extend-64(%rcx & 0x3f₆₄)

%cf    : (%rbx >> sign-extend-64(%rcx & 0x3f₆₄))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


44> btcw_r16_r16 (btcw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btcw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btcw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf }
  must write:      { %bx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] ⊕ 0x1₁₆ << sign-extend-16(%rcx[15:0] & 0xf₁₆))

%cf    : (%rbx[15:0] >> sign-extend-16(%rcx[15:0] & 0xf₁₆))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


45> btl_r32_r32 (btl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%cf    : (%rbx[31:0] >> sign-extend-32(%rcx[31:0] & 0x1f₃₂))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


46> btq_r64_r64 (btq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%cf    : (%rbx >> sign-extend-64(%rcx & 0x3f₆₄))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


47> btrl_r32_r32 (btrl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btrl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btrl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] & !(0x1₃₂ << sign-extend-32(%rcx[31:0] & 0x1f₃₂)))

%cf    : (%rbx[31:0] >> sign-extend-32(%rcx[31:0] & 0x1f₃₂))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


48> btrq_r64_r64 (btrq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btrq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btrq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : %rbx & !(0x1₆₄ << sign-extend-64(%rcx & 0x3f₆₄))

%cf    : (%rbx >> sign-extend-64(%rcx & 0x3f₆₄))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


49> btrw_r16_r16 (btrw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btrw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btrw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf }
  must write:      { %bx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] & !(0x1₁₆ << sign-extend-16(%rcx[15:0] & 0xf₁₆)))

%cf    : (%rbx[15:0] >> sign-extend-16(%rcx[15:0] & 0xf₁₆))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


50> btsl_r32_r32 (btsl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btsl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btsl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] | 0x1₃₂ << sign-extend-32(%rcx[31:0] & 0x1f₃₂))

%cf    : (%rbx[31:0] >> sign-extend-32(%rcx[31:0] & 0x1f₃₂))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


51> btsq_r64_r64 (btsq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btsq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btsq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf }
  must write:      { %rbx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : %rbx | 0x1₆₄ << sign-extend-64(%rcx & 0x3f₆₄)

%cf    : (%rbx >> sign-extend-64(%rcx & 0x3f₆₄))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


52> btsw_r16_r16 (btsw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btsw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btsw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf }
  must write:      { %bx %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] | 0x1₁₆ << sign-extend-16(%rcx[15:0] & 0xf₁₆))

%cf    : (%rbx[15:0] >> sign-extend-16(%rcx[15:0] & 0xf₁₆))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


53> btw_r16_r16 (btw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "btw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

btw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { }

Formula:

%cf    : (%rbx[15:0] >> sign-extend-16(%rcx[15:0] & 0xf₁₆))[0:0] = 0x1₁
%pf    : TMP_BOOL_3
%af    : TMP_BOOL_2
%sf    : TMP_BOOL_1
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


54> bzhil_r32_r32_r32 (bzhil %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "bzhil %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:bzhil_r32_r32_r32:bzhil %edx, %ecx, %ebx

55> bzhiq_r64_r64_r64 (bzhiq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "bzhiq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:bzhiq_r64_r64_r64:bzhiq %rdx, %rcx, %rbx

56> cbtw (cbtw)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cbtw" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cbtw

  maybe read:      { %al }
  must read:       { %al }
  maybe write:     { %ax }
  must write:      { %ax }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ sign-extend-16(%rax[7:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


57> clc (clc)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "clc" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

clc

  maybe read:      { }
  must read:       { }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


58> cltd (cltd)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cltd" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cltd

  maybe read:      { %eax }
  must read:       { %eax }
  maybe write:     { %rdx }
  must write:      { %rdx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rdx   : 0x0₃₂ ∘ sign-extend-64(%rax[31:0])[63:32]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


59> cltq (cltq)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cltq" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cltq

  maybe read:      { %eax }
  must read:       { %eax }
  maybe write:     { %rax }
  must write:      { %rax }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : sign-extend-64(%rax[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


60> cmc (cmc)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmc" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmc

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : ((%cf ? 0x0₉ : 0xff₉) + (%cf ? 0x0₉ : 0xff₉))[8:8] = 0x1₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


61> cmovael_r32_r32 (cmovael %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovael %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovael %ecx, %ebx

  maybe read:      { %ecx %cf }
  must read:       { %ecx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%cf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


62> cmovaeq_r64_r64 (cmovaeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovaeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovaeq %rcx, %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%cf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


63> cmovaew_r16_r16 (cmovaew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovaew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovaew %cx, %bx

  maybe read:      { %cx %cf }
  must read:       { %cx %cf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%cf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


64> cmoval_r32_r32 (cmoval %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmoval %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmoval %ecx, %ebx

  maybe read:      { %ecx %cf %zf }
  must read:       { %ecx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%cf ∧ !%zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


65> cmovaq_r64_r64 (cmovaq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovaq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovaq %rcx, %rbx

  maybe read:      { %rcx %cf %zf }
  must read:       { %rcx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%cf ∧ !%zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


66> cmovaw_r16_r16 (cmovaw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovaw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovaw %cx, %bx

  maybe read:      { %cx %cf %zf }
  must read:       { %cx %cf %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%cf ∧ !%zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


67> cmovbel_r32_r32 (cmovbel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovbel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovbel %ecx, %ebx

  maybe read:      { %ecx %cf %zf }
  must read:       { %ecx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%cf ∨ %zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


68> cmovbeq_r64_r64 (cmovbeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovbeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovbeq %rcx, %rbx

  maybe read:      { %rcx %cf %zf }
  must read:       { %rcx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %cf ∨ %zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


69> cmovbew_r16_r16 (cmovbew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovbew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovbew %cx, %bx

  maybe read:      { %cx %cf %zf }
  must read:       { %cx %cf %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%cf ∨ %zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


70> cmovbl_r32_r32 (cmovbl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovbl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovbl %ecx, %ebx

  maybe read:      { %ecx %cf }
  must read:       { %ecx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%cf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


71> cmovbq_r64_r64 (cmovbq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovbq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovbq %rcx, %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %cf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


72> cmovbw_r16_r16 (cmovbw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovbw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovbw %cx, %bx

  maybe read:      { %cx %cf }
  must read:       { %cx %cf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%cf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


73> cmovcl_r32_r32 (cmovcl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovcl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovcl %ecx, %ebx

  maybe read:      { %ecx %cf }
  must read:       { %ecx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%cf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


74> cmovcq_r64_r64 (cmovcq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovcq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovcq %rcx, %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %cf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


75> cmovcw_r16_r16 (cmovcw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovcw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovcw %cx, %bx

  maybe read:      { %cx %cf }
  must read:       { %cx %cf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%cf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


76> cmovel_r32_r32 (cmovel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovel %ecx, %ebx

  maybe read:      { %ecx %zf }
  must read:       { %ecx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


77> cmovew_r16_r16 (cmovew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovew %cx, %bx

  maybe read:      { %cx %zf }
  must read:       { %cx %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


78> cmovgel_r32_r32 (cmovgel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovgel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovgel %ecx, %ebx

  maybe read:      { %ecx %sf %of }
  must read:       { %ecx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%sf ↔ %of ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


79> cmovgeq_r64_r64 (cmovgeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovgeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovgeq %rcx, %rbx

  maybe read:      { %rcx %sf %of }
  must read:       { %rcx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %sf ↔ %of ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


80> cmovgew_r16_r16 (cmovgew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovgew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovgew %cx, %bx

  maybe read:      { %cx %sf %of }
  must read:       { %cx %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%sf ↔ %of ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


81> cmovgl_r32_r32 (cmovgl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovgl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovgl %ecx, %ebx

  maybe read:      { %ecx %zf %sf %of }
  must read:       { %ecx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%zf ∧ (%sf ↔ %of) ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


82> cmovgq_r64_r64 (cmovgq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovgq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovgq %rcx, %rbx

  maybe read:      { %rcx %zf %sf %of }
  must read:       { %rcx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%zf ∧ (%sf ↔ %of) ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


83> cmovgw_r16_r16 (cmovgw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovgw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovgw %cx, %bx

  maybe read:      { %cx %zf %sf %of }
  must read:       { %cx %zf %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%zf ∧ (%sf ↔ %of) ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


84> cmovlel_r32_r32 (cmovlel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovlel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovlel %ecx, %ebx

  maybe read:      { %ecx %zf %sf %of }
  must read:       { %ecx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%zf ∨ !(%sf ↔ %of) ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


85> cmovleq_r64_r64 (cmovleq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovleq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovleq %rcx, %rbx

  maybe read:      { %rcx %zf %sf %of }
  must read:       { %rcx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %zf ∨ !(%sf ↔ %of) ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


86> cmovlew_r16_r16 (cmovlew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovlew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovlew %cx, %bx

  maybe read:      { %cx %zf %sf %of }
  must read:       { %cx %zf %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%zf ∨ !(%sf ↔ %of) ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


87> cmovll_r32_r32 (cmovll %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovll %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovll %ecx, %ebx

  maybe read:      { %ecx %sf %of }
  must read:       { %ecx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!(%sf ↔ %of) ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


88> cmovlq_r64_r64 (cmovlq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovlq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovlq %rcx, %rbx

  maybe read:      { %rcx %sf %of }
  must read:       { %rcx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !(%sf ↔ %of) ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


89> cmovlw_r16_r16 (cmovlw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovlw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovlw %cx, %bx

  maybe read:      { %cx %sf %of }
  must read:       { %cx %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!(%sf ↔ %of) ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


90> cmovnael_r32_r32 (cmovnael %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnael %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnael %ecx, %ebx

  maybe read:      { %ecx %cf }
  must read:       { %ecx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%cf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


91> cmovnaeq_r64_r64 (cmovnaeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnaeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnaeq %rcx, %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %cf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


92> cmovnaew_r16_r16 (cmovnaew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnaew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnaew %cx, %bx

  maybe read:      { %cx %cf }
  must read:       { %cx %cf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%cf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


93> cmovnal_r32_r32 (cmovnal %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnal %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnal %ecx, %ebx

  maybe read:      { %ecx %cf %zf }
  must read:       { %ecx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%cf ∨ %zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


94> cmovnaq_r64_r64 (cmovnaq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnaq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnaq %rcx, %rbx

  maybe read:      { %rcx %cf %zf }
  must read:       { %rcx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %cf ∨ %zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


95> cmovnaw_r16_r16 (cmovnaw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnaw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnaw %cx, %bx

  maybe read:      { %cx %cf %zf }
  must read:       { %cx %cf %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%cf ∨ %zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


96> cmovnbel_r32_r32 (cmovnbel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnbel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnbel %ecx, %ebx

  maybe read:      { %ecx %cf %zf }
  must read:       { %ecx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%cf ∧ !%zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


97> cmovnbeq_r64_r64 (cmovnbeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnbeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnbeq %rcx, %rbx

  maybe read:      { %rcx %cf %zf }
  must read:       { %rcx %cf %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%cf ∧ !%zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


98> cmovnbew_r16_r16 (cmovnbew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnbew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnbew %cx, %bx

  maybe read:      { %cx %cf %zf }
  must read:       { %cx %cf %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%cf ∧ !%zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


99> cmovnbl_r32_r32 (cmovnbl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnbl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnbl %ecx, %ebx

  maybe read:      { %ecx %cf }
  must read:       { %ecx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%cf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


100> cmovnbq_r64_r64 (cmovnbq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnbq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnbq %rcx, %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%cf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


101> cmovnbw_r16_r16 (cmovnbw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnbw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnbw %cx, %bx

  maybe read:      { %cx %cf }
  must read:       { %cx %cf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%cf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


102> cmovncl_r32_r32 (cmovncl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovncl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovncl %ecx, %ebx

  maybe read:      { %ecx %cf }
  must read:       { %ecx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%cf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


103> cmovncq_r64_r64 (cmovncq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovncq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovncq %rcx, %rbx

  maybe read:      { %rcx %cf }
  must read:       { %rcx %cf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%cf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


104> cmovncw_r16_r16 (cmovncw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovncw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovncw %cx, %bx

  maybe read:      { %cx %cf }
  must read:       { %cx %cf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%cf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


105> cmovnel_r32_r32 (cmovnel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnel %ecx, %ebx

  maybe read:      { %ecx %zf }
  must read:       { %ecx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


106> cmovneq_r64_r64 (cmovneq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovneq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovneq %rcx, %rbx

  maybe read:      { %rcx %zf }
  must read:       { %rcx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


107> cmovnew_r16_r16 (cmovnew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnew %cx, %bx

  maybe read:      { %cx %zf }
  must read:       { %cx %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


108> cmovngel_r32_r32 (cmovngel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovngel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovngel %ecx, %ebx

  maybe read:      { %ecx %sf %of }
  must read:       { %ecx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!(%sf ↔ %of) ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


109> cmovngeq_r64_r64 (cmovngeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovngeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovngeq %rcx, %rbx

  maybe read:      { %rcx %sf %of }
  must read:       { %rcx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !(%sf ↔ %of) ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


110> cmovngew_r16_r16 (cmovngew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovngew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovngew %cx, %bx

  maybe read:      { %cx %sf %of }
  must read:       { %cx %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!(%sf ↔ %of) ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


111> cmovngl_r32_r32 (cmovngl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovngl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovngl %ecx, %ebx

  maybe read:      { %ecx %zf %sf %of }
  must read:       { %ecx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%zf ∨ !(%sf ↔ %of) ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


112> cmovngq_r64_r64 (cmovngq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovngq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovngq %rcx, %rbx

  maybe read:      { %rcx %zf %sf %of }
  must read:       { %rcx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %zf ∨ !(%sf ↔ %of) ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


113> cmovngw_r16_r16 (cmovngw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovngw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovngw %cx, %bx

  maybe read:      { %cx %zf %sf %of }
  must read:       { %cx %zf %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%zf ∨ !(%sf ↔ %of) ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


114> cmovnlel_r32_r32 (cmovnlel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnlel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnlel %ecx, %ebx

  maybe read:      { %ecx %zf %sf %of }
  must read:       { %ecx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%zf ∧ (%sf ↔ %of) ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


115> cmovnleq_r64_r64 (cmovnleq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnleq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnleq %rcx, %rbx

  maybe read:      { %rcx %zf %sf %of }
  must read:       { %rcx %zf %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%zf ∧ (%sf ↔ %of) ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


116> cmovnlew_r16_r16 (cmovnlew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnlew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnlew %cx, %bx

  maybe read:      { %cx %zf %sf %of }
  must read:       { %cx %zf %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%zf ∧ (%sf ↔ %of) ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


117> cmovnll_r32_r32 (cmovnll %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnll %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnll %ecx, %ebx

  maybe read:      { %ecx %sf %of }
  must read:       { %ecx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%sf ↔ %of ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


118> cmovnlq_r64_r64 (cmovnlq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnlq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnlq %rcx, %rbx

  maybe read:      { %rcx %sf %of }
  must read:       { %rcx %sf %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %sf ↔ %of ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


119> cmovnlw_r16_r16 (cmovnlw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnlw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnlw %cx, %bx

  maybe read:      { %cx %sf %of }
  must read:       { %cx %sf %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%sf ↔ %of ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


120> cmovnol_r32_r32 (cmovnol %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnol %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnol %ecx, %ebx

  maybe read:      { %ecx %of }
  must read:       { %ecx %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%of ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


121> cmovnoq_r64_r64 (cmovnoq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnoq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnoq %rcx, %rbx

  maybe read:      { %rcx %of }
  must read:       { %rcx %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%of ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


122> cmovnow_r16_r16 (cmovnow %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnow %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnow %cx, %bx

  maybe read:      { %cx %of }
  must read:       { %cx %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%of ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


123> cmovnpl_r32_r32 (cmovnpl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnpl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnpl %ecx, %ebx

  maybe read:      { %ecx %pf }
  must read:       { %ecx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%pf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


124> cmovnpq_r64_r64 (cmovnpq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnpq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnpq %rcx, %rbx

  maybe read:      { %rcx %pf }
  must read:       { %rcx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%pf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


125> cmovnpw_r16_r16 (cmovnpw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnpw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnpw %cx, %bx

  maybe read:      { %cx %pf }
  must read:       { %cx %pf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%pf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


126> cmovnsl_r32_r32 (cmovnsl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnsl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnsl %ecx, %ebx

  maybe read:      { %ecx %sf }
  must read:       { %ecx %sf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%sf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


127> cmovnsq_r64_r64 (cmovnsq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnsq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnsq %rcx, %rbx

  maybe read:      { %rcx %sf }
  must read:       { %rcx %sf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%sf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


128> cmovnsw_r16_r16 (cmovnsw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnsw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnsw %cx, %bx

  maybe read:      { %cx %sf }
  must read:       { %cx %sf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%sf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


129> cmovnzl_r32_r32 (cmovnzl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnzl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnzl %ecx, %ebx

  maybe read:      { %ecx %zf }
  must read:       { %ecx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


130> cmovnzq_r64_r64 (cmovnzq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnzq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnzq %rcx, %rbx

  maybe read:      { %rcx %zf }
  must read:       { %rcx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


131> cmovnzw_r16_r16 (cmovnzw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovnzw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovnzw %cx, %bx

  maybe read:      { %cx %zf }
  must read:       { %cx %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


132> cmovol_r32_r32 (cmovol %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovol %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovol %ecx, %ebx

  maybe read:      { %ecx %of }
  must read:       { %ecx %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%of ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


133> cmovoq_r64_r64 (cmovoq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovoq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovoq %rcx, %rbx

  maybe read:      { %rcx %of }
  must read:       { %rcx %of }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %of ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


134> cmovow_r16_r16 (cmovow %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovow %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovow %cx, %bx

  maybe read:      { %cx %of }
  must read:       { %cx %of }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%of ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


135> cmovpel_r32_r32 (cmovpel %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpel %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpel %ecx, %ebx

  maybe read:      { %ecx %pf }
  must read:       { %ecx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%pf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


136> cmovpeq_r64_r64 (cmovpeq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpeq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpeq %rcx, %rbx

  maybe read:      { %rcx %pf }
  must read:       { %rcx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %pf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


137> cmovpew_r16_r16 (cmovpew %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpew %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpew %cx, %bx

  maybe read:      { %cx %pf }
  must read:       { %cx %pf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%pf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


138> cmovpl_r32_r32 (cmovpl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpl %ecx, %ebx

  maybe read:      { %ecx %pf }
  must read:       { %ecx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%pf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


139> cmovpol_r32_r32 (cmovpol %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpol %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpol %ecx, %ebx

  maybe read:      { %ecx %pf }
  must read:       { %ecx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (!%pf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


140> cmovpoq_r64_r64 (cmovpoq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpoq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpoq %rcx, %rbx

  maybe read:      { %rcx %pf }
  must read:       { %rcx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : !%pf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


141> cmovpow_r16_r16 (cmovpow %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpow %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpow %cx, %bx

  maybe read:      { %cx %pf }
  must read:       { %cx %pf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (!%pf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


142> cmovpq_r64_r64 (cmovpq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpq %rcx, %rbx

  maybe read:      { %rcx %pf }
  must read:       { %rcx %pf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %pf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


143> cmovpw_r16_r16 (cmovpw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovpw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovpw %cx, %bx

  maybe read:      { %cx %pf }
  must read:       { %cx %pf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%pf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


144> cmovsl_r32_r32 (cmovsl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovsl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovsl %ecx, %ebx

  maybe read:      { %ecx %sf }
  must read:       { %ecx %sf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%sf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


145> cmovsq_r64_r64 (cmovsq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovsq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovsq %rcx, %rbx

  maybe read:      { %rcx %sf }
  must read:       { %rcx %sf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %sf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


146> cmovsw_r16_r16 (cmovsw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovsw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovsw %cx, %bx

  maybe read:      { %cx %sf }
  must read:       { %cx %sf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%sf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


147> cmovzl_r32_r32 (cmovzl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovzl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovzl %ecx, %ebx

  maybe read:      { %ecx %zf }
  must read:       { %ecx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : 0x0₃₂ ∘ (%zf ? %rcx[31:0] : %rbx[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


148> cmovzq_r64_r64 (cmovzq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovzq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovzq %rcx, %rbx

  maybe read:      { %rcx %zf }
  must read:       { %rcx %zf }
  maybe write:     { %rbx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %zf ? %rcx : %rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


149> cmovzw_r16_r16 (cmovzw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmovzw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmovzw %cx, %bx

  maybe read:      { %cx %zf }
  must read:       { %cx %zf }
  maybe write:     { %bx }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { cmov }

Formula:

%rbx   : %rbx[63:16] ∘ (%zf ? %rcx[15:0] : %rbx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


150> cmpb_r8_r8 (cmpb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (!%rcx[7:7] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(!%rcx[7:7] = 0x1₁ ↔ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


151> cmpb_r8_rh (cmpb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (!%rax[15:15] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(!%rax[15:15] = 0x1₁ ↔ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


152> cmpb_rh_r8 (cmpb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[3:0] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (!%rbx[7:7] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(!%rbx[7:7] = 0x1₁ ↔ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


153> cmpb_rh_rh (cmpb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[11:8] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (!%rbx[15:15] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(!%rbx[15:15] = 0x1₁ ↔ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


154> cmpl_r32_r32 (cmpl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[32:32] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:0] = 0x0₃₂
%sf    : (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁
%of    : (!%rcx[31:31] = 0x1₁ ↔ %rbx[31:31] = 0x1₁) ∧ !(!%rcx[31:31] = 0x1₁ ↔ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


155> cmpq_r64_r64 (cmpq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[64:64] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:0] = 0x0₆₄
%sf    : (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:63] = 0x1₁
%of    : (!%rcx[63:63] = 0x1₁ ↔ %rbx[63:63] = 0x1₁) ∧ !(!%rcx[63:63] = 0x1₁ ↔ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:63] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


156> cmpw_r16_r16 (cmpw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : !((0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[16:16] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:0] = 0x0₁₆
%sf    : (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁
%of    : (!%rcx[15:15] = 0x1₁ ↔ %rbx[15:15] = 0x1₁) ∧ !(!%rcx[15:15] = 0x1₁ ↔ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


157> cmpxchgb_r8_r8 (cmpxchgb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpxchgb %cl, %bl

  maybe read:      { %al %cl %bl }
  must read:       { %al %cl %bl }
  maybe write:     { %al %bl %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:8] ∘ %rbx[7:0]
%rbx   : %rbx[63:8] ∘ ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[7:0] = 0x0₈ ? %rcx[7:0] : %rbx[7:0])

%cf    : (((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[3:0] + 0x0₁ ∘ (0xf₄ ⊕ %rbx[3:0]))[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[7:7] = 0x1₁
%of    : (%rax[7:7] = 0x1₁ ↔ (0x1₁ ⊕ %rbx[7:7]) = 0x1₁) ∧ !(%rax[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[7:0]))[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


158> cmpxchgb_r8_rh (cmpxchgb %bh, %cl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgb %bh, %cl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpxchgb %bh, %cl

  maybe read:      { %al %cl %bh }
  must read:       { %al %cl %bh }
  maybe write:     { %al %cl %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:8] ∘ %rcx[7:0]
%rcx   : %rcx[63:8] ∘ ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[7:0] = 0x0₈ ? %rbx[15:8] : %rcx[7:0])

%cf    : (((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[3:0] + 0x0₁ ∘ (0xf₄ ⊕ %rcx[3:0]))[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[7:7] = 0x1₁
%of    : (%rax[7:7] = 0x1₁ ↔ (0x1₁ ⊕ %rcx[7:7]) = 0x1₁) ∧ !(%rax[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rcx[7:0]))[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


159> cmpxchgb_rh_r8 (cmpxchgb %cl, %bh)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgb %cl, %bh" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpxchgb %cl, %bh

  maybe read:      { %al %cl %bh }
  must read:       { %al %cl %bh }
  maybe write:     { %al %bh %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:8] ∘ %rbx[15:8]
%rbx   : %rbx[63:16] ∘ ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:0] = 0x0₈ ? %rcx[7:0] : %rbx[15:8]) ∘ %rbx[7:0]

%cf    : (((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[3:0] + 0x0₁ ∘ (0xf₄ ⊕ %rbx[11:8]))[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:7] = 0x1₁
%of    : (%rax[7:7] = 0x1₁ ↔ (0x1₁ ⊕ %rbx[15:15]) = 0x1₁) ∧ !(%rax[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


160> cmpxchgb_rh_rh (cmpxchgb %ch, %bh)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgb %ch, %bh" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpxchgb %ch, %bh

  maybe read:      { %al %ch %bh }
  must read:       { %al %ch %bh }
  maybe write:     { %al %bh %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:8] ∘ %rbx[15:8]
%rbx   : %rbx[63:16] ∘ ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:0] = 0x0₈ ? %rcx[15:8] : %rbx[15:8]) ∘ %rbx[7:0]

%cf    : (((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[8:8] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[3:0] + 0x0₁ ∘ (0xf₄ ⊕ %rbx[11:8]))[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:7] = 0x1₁
%of    : (%rax[7:7] = 0x1₁ ↔ (0x1₁ ⊕ %rbx[15:15]) = 0x1₁) ∧ !(%rax[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rax[7:0] + 0x1₉ + 0x0₁ ∘ (0xff₈ ⊕ %rbx[15:8]))[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


161> cmpxchgl_r32_r32 (cmpxchgl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgl %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:cmpxchgl_r32_r32:cmpxchgl %ecx, %ebx

162> cmpxchgq_r64_r64 (cmpxchgq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpxchgq %rcx, %rbx

  maybe read:      { %rax %rcx %rbx }
  must read:       { %rax %rcx %rbx }
  maybe write:     { %rax %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rax %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : (((0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[63:0] = 0x0₆₄ ? 0x1₉ : 0x0₉) + ((0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[63:0] = 0x0₆₄ ? 0x1₉ : 0x0₉))[7:0] = 0x0₈ ? %rbx : %rax
%rbx   : (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[63:0] = 0x0₆₄ ? %rcx : %rbx

%cf    : (((0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[64:64] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[64:64] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ (%rbx[3:0] ⊕ 0xf₄) + 0x0₁ ∘ %rax[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[63:0] = 0x0₆₄
%sf    : (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[63:63] = 0x1₁
%of    : ((%rbx[63:63] ⊕ 0x1₁) = 0x1₁ ↔ %rax[63:63] = 0x1₁) ∧ !((%rbx[63:63] ⊕ 0x1₁) = 0x1₁ ↔ (0x0₁ ∘ (%rbx ⊕ 0xffffffffffffffff₆₄) + 0x1₆₅ + 0x0₁ ∘ %rax)[63:63] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


163> cmpxchgw_r16_r16 (cmpxchgw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cmpxchgw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cmpxchgw %cx, %bx

  maybe read:      { %ax %cx %bx }
  must read:       { %ax %cx %bx }
  maybe write:     { %ax %bx %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[15:0]
%rbx   : %rbx[63:16] ∘ ((0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[15:0] = 0x0₁₆ ? %rcx[15:0] : %rbx[15:0])

%cf    : (((0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[16:16] = 0x1₁ ? 0x0₉ : 0xff₉) + ((0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[16:16] = 0x1₁ ? 0x0₉ : 0xff₉))[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[3:0] + 0x0₁ ∘ (%rbx[3:0] ⊕ 0xf₄))[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[15:0] = 0x0₁₆
%sf    : (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[15:15] = 0x1₁
%of    : (%rax[15:15] = 0x1₁ ↔ (%rbx[15:15] ⊕ 0x1₁) = 0x1₁) ∧ !(%rax[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rax[15:0] + 0x1₁₇ + 0x0₁ ∘ (%rbx[15:0] ⊕ 0xffff₁₆))[15:15] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


164> comisd_xmm_xmm (comisd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "comisd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:comisd_xmm_xmm:comisd %xmm2, %xmm1

165> comiss_xmm_xmm (comiss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "comiss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:comiss_xmm_xmm:comiss %xmm2, %xmm1

166> cqto (cqto)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cqto" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cqto

  maybe read:      { %rax }
  must read:       { %rax }
  maybe write:     { %rdx }
  must write:      { %rdx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rdx   : sign-extend-128(%rax)[127:64]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


167> cvtdq2pd_xmm_xmm (cvtdq2pd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtdq2pd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtdq2pd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (cvt_int32_to_double(%ymm2[63:32]) ∘ cvt_int32_to_double(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


168> cvtdq2ps_xmm_xmm (cvtdq2ps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtdq2ps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtdq2ps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (cvt_int32_to_single(%ymm2[127:96]) ∘ (cvt_int32_to_single(%ymm2[95:64]) ∘ (cvt_int32_to_single(%ymm2[63:32]) ∘ cvt_int32_to_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


169> cvtpd2dq_xmm_xmm (cvtpd2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtpd2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtpd2dq %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₆₄ ∘ (cvt_double_to_int32(%ymm2[127:64]) ∘ cvt_double_to_int32(%ymm2[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


170> cvtpd2ps_xmm_xmm (cvtpd2ps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtpd2ps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtpd2ps %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₆₄ ∘ (cvt_double_to_single(%ymm2[127:64]) ∘ cvt_double_to_single(%ymm2[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


171> cvtps2dq_xmm_xmm (cvtps2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtps2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtps2dq %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (cvt_single_to_int32(%ymm2[127:96]) ∘ (cvt_single_to_int32(%ymm2[95:64]) ∘ (cvt_single_to_int32(%ymm2[63:32]) ∘ cvt_single_to_int32(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


172> cvtps2pd_xmm_xmm (cvtps2pd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtps2pd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtps2pd %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (cvt_single_to_double(%ymm2[63:32]) ∘ cvt_single_to_double(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


173> cvtsd2sil_r32_xmm (cvtsd2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsd2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvtsd2sil %xmm1, %ebx
      Message: No such opcode 'cvtsd2sil' exists
      


174> cvtsd2siq_r64_xmm (cvtsd2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsd2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvtsd2siq %xmm1, %rbx
      Message: No such opcode 'cvtsd2siq' exists
      


175> cvtsd2ss_xmm_xmm (cvtsd2ss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsd2ss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtsd2ss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm1 %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ cvt_double_to_single(%ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


176> cvtsi2sdl_xmm_r32 (cvtsi2sdl %ebx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsi2sdl %ebx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtsi2sdl %ebx, %xmm1

  maybe read:      { %ebx %xmm1 %mxcsr::rc[0] }
  must read:       { %ebx %xmm1 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ cvt_int32_to_double(%rbx[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


177> cvtsi2sdq_xmm_r64 (cvtsi2sdq %rbx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsi2sdq %rbx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtsi2sdq %rbx, %xmm1

  maybe read:      { %rbx %xmm1 %mxcsr::rc[0] }
  must read:       { %rbx %xmm1 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ cvt_int64_to_double(%rbx))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


178> cvtsi2ssl_xmm_r32 (cvtsi2ssl %ebx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsi2ssl %ebx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtsi2ssl %ebx, %xmm1

  maybe read:      { %ebx %xmm1 %mxcsr::rc[0] }
  must read:       { %ebx %xmm1 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ cvt_int32_to_single(%rbx[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


179> cvtsi2ssq_xmm_r64 (cvtsi2ssq %rbx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtsi2ssq %rbx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtsi2ssq %rbx, %xmm1

  maybe read:      { %rbx %xmm1 %mxcsr::rc[0] }
  must read:       { %rbx %xmm1 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ cvt_int64_to_single(%rbx))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


180> cvtss2sd_xmm_xmm (cvtss2sd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtss2sd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvtss2sd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm1 %xmm2 %mxcsr::rc[0] }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ cvt_single_to_double(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


181> cvtss2sil_r32_xmm (cvtss2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtss2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvtss2sil %xmm1, %ebx
      Message: No such opcode 'cvtss2sil' exists
      


182> cvtss2siq_r64_xmm (cvtss2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvtss2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvtss2siq %xmm1, %rbx
      Message: No such opcode 'cvtss2siq' exists
      


183> cvttpd2dq_xmm_xmm (cvttpd2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvttpd2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvttpd2dq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (cvt_double_to_int32_truncate(%ymm2[127:64]) ∘ cvt_double_to_int32_truncate(%ymm2[63:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


184> cvttps2dq_xmm_xmm (cvttps2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvttps2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cvttps2dq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[127:96] | 0x0₃₂)) ∘ (cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[95:64] | 0x0₃₂)) ∘ (cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[63:32] | 0x0₃₂)) ∘ cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[31:0] | 0x0₃₂)))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


185> cvttsd2sil_r32_xmm (cvttsd2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvttsd2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvttsd2sil %xmm1, %ebx
      Message: No such opcode 'cvttsd2sil' exists
      


186> cvttsd2siq_r64_xmm (cvttsd2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvttsd2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvttsd2siq %xmm1, %rbx
      Message: No such opcode 'cvttsd2siq' exists
      


187> cvttss2sil_r32_xmm (cvttss2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvttss2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvttss2sil %xmm1, %ebx
      Message: No such opcode 'cvttss2sil' exists
      


188> cvttss2siq_r64_xmm (cvttss2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cvttss2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: cvttss2siq %xmm1, %rbx
      Message: No such opcode 'cvttss2siq' exists
      


189> cwtd (cwtd)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cwtd" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cwtd

  maybe read:      { %ax }
  must read:       { %ax }
  maybe write:     { %dx }
  must write:      { %dx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rdx   : %rdx[63:16] ∘ sign-extend-32(%rax[15:0])[31:16]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


190> cwtl (cwtl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "cwtl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

cwtl

  maybe read:      { %ax }
  must read:       { %ax }
  maybe write:     { %rax }
  must write:      { %rax }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ sign-extend-32(%rax[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


191> decb_r8 (decb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "decb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

decb %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %pf %af %zf %sf %of }
  must write:      { %bl %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] - 0x1₈)

%pf    : !((%rbx[7:0] - 0x1₈)[0:0] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[1:1] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[2:2] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[3:3] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[4:4] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[5:5] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[6:6] = 0x1₁ ⊕ (%rbx[7:0] - 0x1₈)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0x0₄
%zf    : %rbx[7:0] - 0x1₈ = 0x0₈
%sf    : (%rbx[7:0] - 0x1₈)[7:7] = 0x1₁
%of    : %rbx[7:7] = 0x1₁ ∧ %rbx[6:0] = 0x0₇

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


192> decb_rh (decb %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "decb %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

decb %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %pf %af %zf %sf %of }
  must write:      { %ah %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] - 0x1₈) ∘ %rax[7:0]

%pf    : !((%rax[15:8] - 0x1₈)[0:0] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[1:1] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[2:2] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[3:3] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[4:4] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[5:5] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[6:6] = 0x1₁ ⊕ (%rax[15:8] - 0x1₈)[7:7] = 0x1₁)
%af    : %rax[11:8] = 0x0₄
%zf    : %rax[15:8] - 0x1₈ = 0x0₈
%sf    : (%rax[15:8] - 0x1₈)[7:7] = 0x1₁
%of    : %rax[15:15] = 0x1₁ ∧ %rax[14:8] = 0x0₇

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


193> decl_r32 (decl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "decl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

decl %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %pf %af %zf %sf %of }
  must write:      { %rbx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] - 0x1₃₂)

%pf    : !((%rbx[31:0] - 0x1₃₂)[0:0] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[1:1] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[2:2] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[3:3] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[4:4] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[5:5] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[6:6] = 0x1₁ ⊕ (%rbx[31:0] - 0x1₃₂)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0x0₄
%zf    : %rbx[31:0] - 0x1₃₂ = 0x0₃₂
%sf    : (%rbx[31:0] - 0x1₃₂)[31:31] = 0x1₁
%of    : %rbx[31:31] = 0x1₁ ∧ %rbx[30:0] = 0x0₃₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


194> decq_r64 (decq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "decq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

decq %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %pf %af %zf %sf %of }
  must write:      { %rbx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx - 0x1₆₄

%pf    : !((%rbx - 0x1₆₄)[0:0] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[1:1] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[2:2] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[3:3] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[4:4] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[5:5] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[6:6] = 0x1₁ ⊕ (%rbx - 0x1₆₄)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0x0₄
%zf    : %rbx - 0x1₆₄ = 0x0₆₄
%sf    : (%rbx - 0x1₆₄)[63:63] = 0x1₁
%of    : %rbx[63:63] = 0x1₁ ∧ %rbx[62:0] = 0x0₆₃

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


195> decw_r16 (decw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "decw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

decw %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %pf %af %zf %sf %of }
  must write:      { %bx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] - 0x1₁₆)

%pf    : !((%rbx[15:0] - 0x1₁₆)[0:0] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[1:1] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[2:2] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[3:3] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[4:4] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[5:5] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[6:6] = 0x1₁ ⊕ (%rbx[15:0] - 0x1₁₆)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0x0₄
%zf    : %rbx[15:0] - 0x1₁₆ = 0x0₁₆
%sf    : (%rbx[15:0] - 0x1₁₆)[15:15] = 0x1₁
%of    : %rbx[15:15] = 0x1₁ ∧ %rbx[14:0] = 0x0₁₅

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


196> divb_r8 (divb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divb %bl

  maybe read:      { %ax %bl }
  must read:       { %ax %bl }
  maybe write:     { %ax }
  must write:      { %ax }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ div_remainder_int8(%rax[15:0], %rbx[7:0]) ∘ div_quotient_int8(%rax[15:0], %rbx[7:0])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


197> divb_rh (divb %bh)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divb %bh" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divb %bh

  maybe read:      { %ax %bh }
  must read:       { %ax %bh }
  maybe write:     { %ax }
  must write:      { %ax }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ div_remainder_int8(%rax[15:0], %rbx[15:8]) ∘ div_quotient_int8(%rax[15:0], %rbx[15:8])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


198> divl_r32 (divl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divl %ebx

  maybe read:      { %eax %edx %ebx }
  must read:       { %eax %edx %ebx }
  maybe write:     { %rax %rdx }
  must write:      { %rax %rdx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ div_quotient_int32(%rdx[31:0] ∘ %rax[31:0], %rbx[31:0])
%rdx   : 0x0₃₂ ∘ div_remainder_int32(%rdx[31:0] ∘ %rax[31:0], %rbx[31:0])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


199> divpd_xmm_xmm (divpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (div_double(%ymm1[127:64], %ymm2[127:64]) ∘ div_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


200> divps_xmm_xmm (divps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (div_single(%ymm1[127:96], %ymm2[127:96]) ∘ (div_single(%ymm1[95:64], %ymm2[95:64]) ∘ (div_single(%ymm1[63:32], %ymm2[63:32]) ∘ div_single(%ymm1[31:0], %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


201> divq_r64 (divq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divq %rbx

  maybe read:      { %rax %rdx %rbx }
  must read:       { %rax %rdx %rbx }
  maybe write:     { %rax %rdx }
  must write:      { %rax %rdx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : div_quotient_int64(%rdx ∘ %rax, %rbx)
%rdx   : div_remainder_int64(%rdx ∘ %rax, %rbx)

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


202> divsd_xmm_xmm (divsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ div_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


203> divss_xmm_xmm (divss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ div_single(%ymm1[31:0], %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


204> divw_r16 (divw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "divw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

divw %bx

  maybe read:      { %ax %dx %bx }
  must read:       { %ax %dx %bx }
  maybe write:     { %ax %dx }
  must write:      { %ax %dx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ div_quotient_int16(%rdx[15:0] ∘ %rax[15:0], %rbx[15:0])
%rdx   : %rdx[63:16] ∘ div_remainder_int16(%rdx[15:0] ∘ %rax[15:0], %rbx[15:0])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


205> haddpd_xmm_xmm (haddpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "haddpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

haddpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (add_double(%ymm2[63:0], %ymm2[127:64]) ∘ add_double(%ymm1[63:0], %ymm1[127:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


206> haddps_xmm_xmm (haddps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "haddps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

haddps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (add_single(%ymm2[95:64], %ymm2[127:96]) ∘ add_single(%ymm2[31:0], %ymm2[63:32]) ∘ add_single(%ymm1[95:64], %ymm1[127:96]) ∘ add_single(%ymm1[31:0], %ymm1[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


207> hsubpd_xmm_xmm (hsubpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "hsubpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

hsubpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sub_double(%ymm2[63:0], %ymm2[127:64]) ∘ sub_double(%ymm1[63:0], %ymm1[127:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


208> hsubps_xmm_xmm (hsubps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "hsubps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

hsubps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sub_single(%ymm2[95:64], %ymm2[127:96]) ∘ sub_single(%ymm2[31:0], %ymm2[63:32]) ∘ (sub_single(%ymm1[95:64], %ymm1[127:96]) ∘ sub_single(%ymm1[31:0], %ymm1[63:32])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


209> idivb_r8 (idivb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "idivb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

idivb %bl

  maybe read:      { %ax %bl }
  must read:       { %ax %bl }
  maybe write:     { %ax }
  must write:      { %ax }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ idiv_remainder_int8(%rax[15:0], %rbx[7:0]) ∘ idiv_quotient_int8(%rax[15:0], %rbx[7:0])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


210> idivb_rh (idivb %bh)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "idivb %bh" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

idivb %bh

  maybe read:      { %ax %bh }
  must read:       { %ax %bh }
  maybe write:     { %ax }
  must write:      { %ax }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ idiv_remainder_int8(%rax[15:0], %rbx[15:8]) ∘ idiv_quotient_int8(%rax[15:0], %rbx[15:8])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


211> idivl_r32 (idivl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "idivl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

idivl %ebx

  maybe read:      { %eax %edx %ebx }
  must read:       { %eax %edx %ebx }
  maybe write:     { %rax %rdx }
  must write:      { %rax %rdx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ idiv_quotient_int32(%rdx[31:0] ∘ %rax[31:0], %rbx[31:0])
%rdx   : 0x0₃₂ ∘ idiv_remainder_int32(%rdx[31:0] ∘ %rax[31:0], %rbx[31:0])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


212> idivq_r64 (idivq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "idivq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

idivq %rbx

  maybe read:      { %rax %rdx %rbx }
  must read:       { %rax %rdx %rbx }
  maybe write:     { %rax %rdx }
  must write:      { %rax %rdx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : idiv_quotient_int64(%rdx ∘ %rax, %rbx)
%rdx   : idiv_remainder_int64(%rdx ∘ %rax, %rbx)

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


213> idivw_r16 (idivw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "idivw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

idivw %bx

  maybe read:      { %ax %dx %bx }
  must read:       { %ax %dx %bx }
  maybe write:     { %ax %dx }
  must write:      { %ax %dx }
  maybe undef:     { %cf %pf %af %zf %sf %of }
  must undef:      { %cf %pf %af %zf %sf %of }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ idiv_quotient_int16(%rdx[15:0] ∘ %rax[15:0], %rbx[15:0])
%rdx   : %rdx[63:16] ∘ idiv_remainder_int16(%rdx[15:0] ∘ %rax[15:0], %rbx[15:0])

%cf    : TMP_BOOL_5
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : TMP_BOOL_4

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


214> imulb_r8 (imulb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imulb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imulb %bl

  maybe read:      { %al %bl }
  must read:       { %al %bl }
  maybe write:     { %ax %cf %of }
  must write:      { %ax %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (sign-extend-16(%rbx[7:0]) * sign-extend-16(%rax[7:0]))

%cf    : !(sign-extend-16(%rbx[7:0]) * sign-extend-16(%rax[7:0]) = sign-extend-16((sign-extend-16(%rbx[7:0]) * sign-extend-16(%rax[7:0]))[7:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-16(%rbx[7:0]) * sign-extend-16(%rax[7:0]))[7:7] = 0x1₁
%of    : !(sign-extend-16(%rbx[7:0]) * sign-extend-16(%rax[7:0]) = sign-extend-16((sign-extend-16(%rbx[7:0]) * sign-extend-16(%rax[7:0]))[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


215> imulb_rh (imulb %bh)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imulb %bh" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imulb %bh

  maybe read:      { %al %bh }
  must read:       { %al %bh }
  maybe write:     { %ax %cf %of }
  must write:      { %ax %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (sign-extend-16(%rbx[15:8]) * sign-extend-16(%rax[7:0]))

%cf    : !(sign-extend-16(%rbx[15:8]) * sign-extend-16(%rax[7:0]) = sign-extend-16((sign-extend-16(%rbx[15:8]) * sign-extend-16(%rax[7:0]))[7:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-16(%rbx[15:8]) * sign-extend-16(%rax[7:0]))[7:7] = 0x1₁
%of    : !(sign-extend-16(%rbx[15:8]) * sign-extend-16(%rax[7:0]) = sign-extend-16((sign-extend-16(%rbx[15:8]) * sign-extend-16(%rax[7:0]))[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


216> imull_r32 (imull %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imull %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imull %ebx

  maybe read:      { %eax %ebx }
  must read:       { %eax %ebx }
  maybe write:     { %rax %rdx %cf %of }
  must write:      { %rax %rdx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ (sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]))[31:0]
%rdx   : 0x0₃₂ ∘ (sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]))[63:32]

%cf    : !(sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]) = sign-extend-64((sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]))[31:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]))[31:31] = 0x1₁
%of    : !(sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]) = sign-extend-64((sign-extend-64(%rbx[31:0]) * sign-extend-64(%rax[31:0]))[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


217> imull_r32_r32 (imull %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imull %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imull %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (sign-extend-64(%rbx[31:0]) * sign-extend-64(%rcx[31:0]))[31:0]

%cf    : !(sign-extend-64(%rbx[31:0]) * sign-extend-64(%rcx[31:0]) = sign-extend-64((sign-extend-64(%rbx[31:0]) * sign-extend-64(%rcx[31:0]))[31:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-64(%rbx[31:0]) * sign-extend-64(%rcx[31:0]))[31:31] = 0x1₁
%of    : !(sign-extend-64(%rbx[31:0]) * sign-extend-64(%rcx[31:0]) = sign-extend-64((sign-extend-64(%rbx[31:0]) * sign-extend-64(%rcx[31:0]))[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


218> imulq_r64 (imulq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imulq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imulq %rbx

  maybe read:      { %rax %rbx }
  must read:       { %rax %rbx }
  maybe write:     { %rax %rdx %cf %of }
  must write:      { %rax %rdx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : (sign-extend-128(%rbx) * sign-extend-128(%rax))[63:0]
%rdx   : (sign-extend-128(%rbx) * sign-extend-128(%rax))[127:64]

%cf    : !(sign-extend-128(%rbx) * sign-extend-128(%rax) = sign-extend-128((sign-extend-128(%rbx) * sign-extend-128(%rax))[63:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-128(%rbx) * sign-extend-128(%rax))[63:63] = 0x1₁
%of    : !(sign-extend-128(%rbx) * sign-extend-128(%rax) = sign-extend-128((sign-extend-128(%rbx) * sign-extend-128(%rax))[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


219> imulq_r64_r64 (imulq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imulq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imulq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rbx   : (sign-extend-128(%rbx) * sign-extend-128(%rcx))[63:0]

%cf    : !(sign-extend-128(%rbx) * sign-extend-128(%rcx) = sign-extend-128((sign-extend-128(%rbx) * sign-extend-128(%rcx))[63:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-128(%rbx) * sign-extend-128(%rcx))[63:63] = 0x1₁
%of    : !(sign-extend-128(%rbx) * sign-extend-128(%rcx) = sign-extend-128((sign-extend-128(%rbx) * sign-extend-128(%rcx))[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


220> imulw_r16 (imulw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imulw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imulw %bx

  maybe read:      { %ax %bx }
  must read:       { %ax %bx }
  maybe write:     { %ax %dx %cf %of }
  must write:      { %ax %dx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]))[15:0]
%rdx   : %rdx[63:16] ∘ (sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]))[31:16]

%cf    : !(sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]) = sign-extend-32((sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]))[15:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]))[15:15] = 0x1₁
%of    : !(sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]) = sign-extend-32((sign-extend-32(%rbx[15:0]) * sign-extend-32(%rax[15:0]))[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


221> imulw_r16_r16 (imulw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "imulw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

imulw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (sign-extend-32(%rbx[15:0]) * sign-extend-32(%rcx[15:0]))[15:0]

%cf    : !(sign-extend-32(%rbx[15:0]) * sign-extend-32(%rcx[15:0]) = sign-extend-32((sign-extend-32(%rbx[15:0]) * sign-extend-32(%rcx[15:0]))[15:0]))
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : (sign-extend-32(%rbx[15:0]) * sign-extend-32(%rcx[15:0]))[15:15] = 0x1₁
%of    : !(sign-extend-32(%rbx[15:0]) * sign-extend-32(%rcx[15:0]) = sign-extend-32((sign-extend-32(%rbx[15:0]) * sign-extend-32(%rcx[15:0]))[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


222> incb_r8 (incb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "incb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

incb %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %pf %af %zf %sf %of }
  must write:      { %bl %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] + 0x1₈)

%pf    : !((%rbx[7:0] + 0x1₈)[0:0] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[1:1] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[2:2] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[3:3] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[4:4] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[5:5] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[6:6] = 0x1₁ ⊕ (%rbx[7:0] + 0x1₈)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0xf₄
%zf    : %rbx[7:0] + 0x1₈ = 0x0₈
%sf    : (%rbx[7:0] + 0x1₈)[7:7] = 0x1₁
%of    : !(%rbx[7:7] = 0x1₁) ∧ %rbx[6:0] = 0xffffffffffffffff₇

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


223> incb_rh (incb %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "incb %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

incb %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %pf %af %zf %sf %of }
  must write:      { %ah %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] + 0x1₈) ∘ %rax[7:0]

%pf    : !((%rax[15:8] + 0x1₈)[0:0] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[1:1] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[2:2] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[3:3] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[4:4] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[5:5] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[6:6] = 0x1₁ ⊕ (%rax[15:8] + 0x1₈)[7:7] = 0x1₁)
%af    : %rax[11:8] = 0xf₄
%zf    : %rax[15:8] + 0x1₈ = 0x0₈
%sf    : (%rax[15:8] + 0x1₈)[7:7] = 0x1₁
%of    : !(%rax[15:15] = 0x1₁) ∧ %rax[14:8] = 0xffffffffffffffff₇

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


224> incl_r32 (incl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "incl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

incl %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %pf %af %zf %sf %of }
  must write:      { %rbx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] + 0x1₃₂)

%pf    : !((%rbx[31:0] + 0x1₃₂)[0:0] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[1:1] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[2:2] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[3:3] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[4:4] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[5:5] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[6:6] = 0x1₁ ⊕ (%rbx[31:0] + 0x1₃₂)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0xf₄
%zf    : %rbx[31:0] + 0x1₃₂ = 0x0₃₂
%sf    : (%rbx[31:0] + 0x1₃₂)[31:31] = 0x1₁
%of    : !(%rbx[31:31] = 0x1₁) ∧ %rbx[30:0] = 0xffffffffffffffff₃₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


225> incq_r64 (incq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "incq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

incq %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %pf %af %zf %sf %of }
  must write:      { %rbx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx + 0x1₆₄

%pf    : !((%rbx + 0x1₆₄)[0:0] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[1:1] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[2:2] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[3:3] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[4:4] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[5:5] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[6:6] = 0x1₁ ⊕ (%rbx + 0x1₆₄)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0xf₄
%zf    : %rbx + 0x1₆₄ = 0x0₆₄
%sf    : (%rbx + 0x1₆₄)[63:63] = 0x1₁
%of    : !(%rbx[63:63] = 0x1₁) ∧ %rbx[62:0] = 0xffffffffffffffff₆₃

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


226> incw_r16 (incw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "incw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

incw %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %pf %af %zf %sf %of }
  must write:      { %bx %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] + 0x1₁₆)

%pf    : !((%rbx[15:0] + 0x1₁₆)[0:0] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[1:1] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[2:2] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[3:3] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[4:4] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[5:5] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[6:6] = 0x1₁ ⊕ (%rbx[15:0] + 0x1₁₆)[7:7] = 0x1₁)
%af    : %rbx[3:0] = 0xf₄
%zf    : %rbx[15:0] + 0x1₁₆ = 0x0₁₆
%sf    : (%rbx[15:0] + 0x1₁₆)[15:15] = 0x1₁
%of    : !(%rbx[15:15] = 0x1₁) ∧ %rbx[14:0] = 0xffffffffffffffff₁₅

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


227> lzcntl_r32_r32 (lzcntl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "lzcntl %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:lzcntl_r32_r32:lzcntl %ecx, %ebx

228> lzcntq_r64_r64 (lzcntq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "lzcntq %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:lzcntq_r64_r64:lzcntq %rcx, %rbx

229> lzcntw_r16_r16 (lzcntw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "lzcntw %cx, %bx" 1>/tmp/yyy 2>&1 
Unsupported:lzcntw_r16_r16:lzcntw %cx, %bx

230> maxpd_xmm_xmm (maxpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "maxpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

maxpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((maxcmp_double(%ymm1[127:64], %ymm2[127:64]) = 0x1₁ ? %ymm1[127:64] : %ymm2[127:64]) ∘ (maxcmp_double(%ymm1[63:0], %ymm2[63:0]) = 0x1₁ ? %ymm1[63:0] : %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


231> maxps_xmm_xmm (maxps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "maxps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

maxps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((maxcmp_single(%ymm1[127:96], %ymm2[127:96]) = 0x1₁ ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((maxcmp_single(%ymm1[95:64], %ymm2[95:64]) = 0x1₁ ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((maxcmp_single(%ymm1[63:32], %ymm2[63:32]) = 0x1₁ ? %ymm1[63:32] : %ymm2[63:32]) ∘ (maxcmp_single(%ymm1[31:0], %ymm2[31:0]) = 0x1₁ ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


232> maxsd_xmm_xmm (maxsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "maxsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

maxsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ (maxcmp_double(%ymm1[63:0], %ymm2[63:0]) = 0x1₁ ? %ymm1[63:0] : %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


233> maxss_xmm_xmm (maxss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "maxss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

maxss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ (maxcmp_single(%ymm1[31:0], %ymm2[31:0]) = 0x1₁ ? %ymm1[31:0] : %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


234> minpd_xmm_xmm (minpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "minpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

minpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((mincmp_double(%ymm1[127:64], %ymm2[127:64]) = 0x1₁ ? %ymm1[127:64] : %ymm2[127:64]) ∘ (mincmp_double(%ymm1[63:0], %ymm2[63:0]) = 0x1₁ ? %ymm1[63:0] : %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


235> minps_xmm_xmm (minps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "minps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

minps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((mincmp_single(%ymm1[127:96], %ymm2[127:96]) = 0x1₁ ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((mincmp_single(%ymm1[95:64], %ymm2[95:64]) = 0x1₁ ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((mincmp_single(%ymm1[63:32], %ymm2[63:32]) = 0x1₁ ? %ymm1[63:32] : %ymm2[63:32]) ∘ (mincmp_single(%ymm1[31:0], %ymm2[31:0]) = 0x1₁ ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


236> minsd_xmm_xmm (minsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "minsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

minsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ (mincmp_double(%ymm1[63:0], %ymm2[63:0]) = 0x1₁ ? %ymm1[63:0] : %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


237> minss_xmm_xmm (minss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "minss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

minss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ (mincmp_single(%ymm1[31:0], %ymm2[31:0]) = 0x1₁ ? %ymm1[31:0] : %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


238> movapd_xmm_xmm (movapd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movapd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movapd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


239> movaps_xmm_xmm (movaps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movaps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movaps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


240> movb_r8_r8 (movb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movb %cl, %bl

  maybe read:      { %cl }
  must read:       { %cl }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ %rcx[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


241> movb_rh_rh (movb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movb %bh, %ah

  maybe read:      { %bh }
  must read:       { %bh }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[15:8] ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


242> movddup_xmm_xmm (movddup %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movddup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movddup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


243> movdqa_xmm_xmm (movdqa %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movdqa %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movdqa %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


244> movdqu_xmm_xmm (movdqu %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movdqu %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movdqu %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


245> movd_r32_xmm (movd %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movd %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movd %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%rbx   : 0x0₃₂ ∘ %ymm1[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


246> movd_xmm_r32 (movd %ebx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movd %ebx, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:movd_xmm_r32:movd %ebx, %xmm1

247> movhlps_xmm_xmm (movhlps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movhlps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movhlps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ %ymm2[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


248> movlhps_xmm_xmm (movlhps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movlhps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movlhps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:0] ∘ %ymm1[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


249> movl_r32_r32 (movl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movl %ecx, %ebx

  maybe read:      { %ecx }
  must read:       { %ecx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ %rcx[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


250> movmskpd_r32_xmm (movmskpd %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movmskpd %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movmskpd %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%rbx   : sign-extend-64((((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


251> movmskpd_r64_xmm (movmskpd %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movmskpd %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movmskpd %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%rbx   : 0x0₃₂ ∘ (((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


252> movmskps_r32_xmm (movmskps %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movmskps %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movmskps %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%rbx   : 0x0₄₈ ∘ (0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]) + 0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]))[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


253> movmskps_r64_xmm (movmskps %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movmskps %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movmskps %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%rbx   : 0x0₄₈ ∘ (0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]) + 0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]))[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


254> movq_r64_xmm (movq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movq %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movq %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%rbx   : %ymm1[63:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


255> movq_xmm_r64 (movq %rbx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movq %rbx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movq %rbx, %xmm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₆₄ ∘ %rbx)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


256> movq_xmm_xmm (movq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₆₄ ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


257> movsbl_r32_r8 (movsbl %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movsbl %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movsbl %cl, %ebx

  maybe read:      { %cl }
  must read:       { %cl }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ sign-extend-32(%rcx[7:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


258> movsbl_r32_rh (movsbl %ah, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movsbl %ah, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movsbl %ah, %ebx

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ sign-extend-32(%rax[15:8])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


259> movsbw_r16_r8 (movsbw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movsbw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movsbw %cl, %bx

  maybe read:      { %cl }
  must read:       { %cl }
  maybe write:     { %bx }
  must write:      { %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ sign-extend-16(%rcx[7:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


260> movsbw_r16_rh (movsbw %ah, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movsbw %ah, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movsbw %ah, %bx

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %bx }
  must write:      { %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ sign-extend-16(%rax[15:8])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


261> movsd_xmm_xmm (movsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


262> movshdup_xmm_xmm (movshdup %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movshdup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movshdup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:96] ∘ %ymm2[127:96] ∘ %ymm2[63:32] ∘ %ymm2[63:32])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


263> movsldup_xmm_xmm (movsldup %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movsldup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movsldup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { pni }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[95:64] ∘ %ymm2[95:64] ∘ (%ymm2[31:0] ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


264> movss_xmm_xmm (movss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ %ymm2[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


265> movswl_r32_r16 (movswl %cx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movswl %cx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movswl %cx, %ebx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ sign-extend-32(%rcx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


266> movupd_xmm_xmm (movupd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movupd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movupd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


267> movups_xmm_xmm (movups %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movups %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movups %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


268> movw_r16_r16 (movw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movw %cx, %bx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %bx }
  must write:      { %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ %rcx[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


269> movzbl_r32_r8 (movzbl %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzbl %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzbl %cl, %ebx

  maybe read:      { %cl }
  must read:       { %cl }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₂₄ ∘ %rcx[7:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


270> movzbl_r32_rh (movzbl %ah, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzbl %ah, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzbl %ah, %ebx

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₂₄ ∘ %rax[15:8])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


271> movzbq_r64_r8 (movzbq %cl, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzbq %cl, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzbq %cl, %rbx

  maybe read:      { %cl }
  must read:       { %cl }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₅₆ ∘ %rcx[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


272> movzbw_r16_r8 (movzbw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzbw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzbw %cl, %bx

  maybe read:      { %cl }
  must read:       { %cl }
  maybe write:     { %bx }
  must write:      { %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₈ ∘ %rcx[7:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


273> movzbw_r16_rh (movzbw %ah, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzbw %ah, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzbw %ah, %bx

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %bx }
  must write:      { %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₈ ∘ %rax[15:8])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


274> movzwl_r32_r16 (movzwl %cx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzwl %cx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzwl %cx, %ebx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁₆ ∘ %rcx[15:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


275> movzwq_r64_r16 (movzwq %cx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "movzwq %cx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

movzwq %cx, %rbx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₄₈ ∘ %rcx[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


276> mulb_r8 (mulb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulb %bl

  maybe read:      { %al %bl }
  must read:       { %al %bl }
  maybe write:     { %ax %cf %of }
  must write:      { %ax %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₈ ∘ %rbx[7:0] * 0x0₈ ∘ %rax[7:0])

%cf    : !((0x0₈ ∘ %rbx[7:0] * 0x0₈ ∘ %rax[7:0])[15:8] = 0x0₈)
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : !((0x0₈ ∘ %rbx[7:0] * 0x0₈ ∘ %rax[7:0])[15:8] = 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


277> mulb_rh (mulb %bh)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulb %bh" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulb %bh

  maybe read:      { %al %bh }
  must read:       { %al %bh }
  maybe write:     { %ax %cf %of }
  must write:      { %ax %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₈ ∘ %rbx[15:8] * 0x0₈ ∘ %rax[7:0])

%cf    : !((0x0₈ ∘ %rbx[15:8] * 0x0₈ ∘ %rax[7:0])[15:8] = 0x0₈)
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : !((0x0₈ ∘ %rbx[15:8] * 0x0₈ ∘ %rax[7:0])[15:8] = 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


278> mull_r32 (mull %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mull %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mull %ebx

  maybe read:      { %eax %ebx }
  must read:       { %eax %ebx }
  maybe write:     { %rax %rdx %cf %of }
  must write:      { %rax %rdx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ (0x0₃₂ ∘ %rbx[31:0] * 0x0₃₂ ∘ %rax[31:0])[31:0]
%rdx   : 0x0₃₂ ∘ (0x0₃₂ ∘ %rbx[31:0] * 0x0₃₂ ∘ %rax[31:0])[63:32]

%cf    : !((0x0₃₂ ∘ %rbx[31:0] * 0x0₃₂ ∘ %rax[31:0])[63:32] = 0x0₃₂)
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : !((0x0₃₂ ∘ %rbx[31:0] * 0x0₃₂ ∘ %rax[31:0])[63:32] = 0x0₃₂)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


279> mulpd_xmm_xmm (mulpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (mul_double(%ymm1[127:64], %ymm2[127:64]) ∘ mul_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


280> mulps_xmm_xmm (mulps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (mul_single(%ymm1[127:96], %ymm2[127:96]) ∘ (mul_single(%ymm1[95:64], %ymm2[95:64]) ∘ (mul_single(%ymm1[63:32], %ymm2[63:32]) ∘ mul_single(%ymm1[31:0], %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


281> mulq_r64 (mulq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulq %rbx

  maybe read:      { %rax %rbx }
  must read:       { %rax %rbx }
  maybe write:     { %rax %rdx %cf %of }
  must write:      { %rax %rdx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : (0x0₆₄ ∘ %rbx * 0x0₆₄ ∘ %rax)[63:0]
%rdx   : (0x0₆₄ ∘ %rbx * 0x0₆₄ ∘ %rax)[127:64]

%cf    : !((0x0₆₄ ∘ %rbx * 0x0₆₄ ∘ %rax)[127:64] = 0x0₆₄)
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : !((0x0₆₄ ∘ %rbx * 0x0₆₄ ∘ %rax)[127:64] = 0x0₆₄)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


282> mulsd_xmm_xmm (mulsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ mul_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


283> mulss_xmm_xmm (mulss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ mul_single(%ymm1[31:0], %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


284> mulw_r16 (mulw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

mulw %bx

  maybe read:      { %ax %bx }
  must read:       { %ax %bx }
  maybe write:     { %ax %dx %cf %of }
  must write:      { %ax %dx %cf %of }
  maybe undef:     { %pf %af %zf %sf }
  must undef:      { %pf %af %zf %sf }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁₆ ∘ %rbx[15:0] * 0x0₁₆ ∘ %rax[15:0])[15:0]
%rdx   : %rdx[63:16] ∘ (0x0₁₆ ∘ %rbx[15:0] * 0x0₁₆ ∘ %rax[15:0])[31:16]

%cf    : !((0x0₁₆ ∘ %rbx[15:0] * 0x0₁₆ ∘ %rax[15:0])[31:16] = 0x0₁₆)
%pf    : TMP_BOOL_2
%af    : TMP_BOOL_1
%zf    : TMP_BOOL_0
%sf    : TMP_BOOL_3
%of    : !((0x0₁₆ ∘ %rbx[15:0] * 0x0₁₆ ∘ %rax[15:0])[31:16] = 0x0₁₆)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


285> mulxl_r32_r32_r32 (mulxl %ecx, %ebx, %eax)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulxl %ecx, %ebx, %eax" 1>/tmp/yyy 2>&1 
Unsupported:mulxl_r32_r32_r32:mulxl %ecx, %ebx, %eax

286> mulxq_r64_r64_r64 (mulxq %rcx, %rbx, %rax)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "mulxq %rcx, %rbx, %rax" 1>/tmp/yyy 2>&1 
Unsupported:mulxq_r64_r64_r64:mulxq %rcx, %rbx, %rax

287> negb_r8 (negb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "negb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

negb %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ -%rbx[7:0]

%cf    : !(%rbx[7:0] = 0x0₈)
%pf    : !((-%rbx[7:0])[0:0] = 0x1₁ ⊕ (-%rbx[7:0])[1:1] = 0x1₁ ⊕ (-%rbx[7:0])[2:2] = 0x1₁ ⊕ (-%rbx[7:0])[3:3] = 0x1₁ ⊕ (-%rbx[7:0])[4:4] = 0x1₁ ⊕ (-%rbx[7:0])[5:5] = 0x1₁ ⊕ (-%rbx[7:0])[6:6] = 0x1₁ ⊕ (-%rbx[7:0])[7:7] = 0x1₁)
%af    : %rbx[3:3] = 0x1₁ ∧ (-%rbx[7:0])[3:3] = 0x1₁
%zf    : -%rbx[7:0] = 0x0₈
%sf    : (-%rbx[7:0])[7:7] = 0x1₁
%of    : %rbx[7:7] = 0x1₁ ∧ (-%rbx[7:0])[7:7] = 0x1₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


288> negb_rh (negb %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "negb %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

negb %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ -%rax[15:8] ∘ %rax[7:0]

%cf    : !(%rax[15:8] = 0x0₈)
%pf    : !((-%rax[15:8])[0:0] = 0x1₁ ⊕ (-%rax[15:8])[1:1] = 0x1₁ ⊕ (-%rax[15:8])[2:2] = 0x1₁ ⊕ (-%rax[15:8])[3:3] = 0x1₁ ⊕ (-%rax[15:8])[4:4] = 0x1₁ ⊕ (-%rax[15:8])[5:5] = 0x1₁ ⊕ (-%rax[15:8])[6:6] = 0x1₁ ⊕ (-%rax[15:8])[7:7] = 0x1₁)
%af    : %rax[11:11] = 0x1₁ ∧ (-%rax[15:8])[3:3] = 0x1₁
%zf    : -%rax[15:8] = 0x0₈
%sf    : (-%rax[15:8])[7:7] = 0x1₁
%of    : %rax[15:15] = 0x1₁ ∧ (-%rax[15:8])[7:7] = 0x1₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


289> negl_r32 (negl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "negl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

negl %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ -%rbx[31:0]

%cf    : !(%rbx[31:0] = 0x0₃₂)
%pf    : !((-%rbx[31:0])[0:0] = 0x1₁ ⊕ (-%rbx[31:0])[1:1] = 0x1₁ ⊕ (-%rbx[31:0])[2:2] = 0x1₁ ⊕ (-%rbx[31:0])[3:3] = 0x1₁ ⊕ (-%rbx[31:0])[4:4] = 0x1₁ ⊕ (-%rbx[31:0])[5:5] = 0x1₁ ⊕ (-%rbx[31:0])[6:6] = 0x1₁ ⊕ (-%rbx[31:0])[7:7] = 0x1₁)
%af    : %rbx[3:3] = 0x1₁ ∧ (-%rbx[31:0])[3:3] = 0x1₁
%zf    : -%rbx[31:0] = 0x0₃₂
%sf    : (-%rbx[31:0])[31:31] = 0x1₁
%of    : %rbx[31:31] = 0x1₁ ∧ (-%rbx[31:0])[31:31] = 0x1₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


290> negq_r64 (negq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "negq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

negq %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : -%rbx

%cf    : !(%rbx = 0x0₆₄)
%pf    : !((-%rbx)[0:0] = 0x1₁ ⊕ (-%rbx)[1:1] = 0x1₁ ⊕ (-%rbx)[2:2] = 0x1₁ ⊕ (-%rbx)[3:3] = 0x1₁ ⊕ (-%rbx)[4:4] = 0x1₁ ⊕ (-%rbx)[5:5] = 0x1₁ ⊕ (-%rbx)[6:6] = 0x1₁ ⊕ (-%rbx)[7:7] = 0x1₁)
%af    : %rbx[3:3] = 0x1₁ ∧ (-%rbx)[3:3] = 0x1₁
%zf    : -%rbx = 0x0₆₄
%sf    : (-%rbx)[63:63] = 0x1₁
%of    : %rbx[63:63] = 0x1₁ ∧ (-%rbx)[63:63] = 0x1₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


291> negw_r16 (negw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "negw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

negw %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %af %zf %sf %of }
  must write:      { %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ -%rbx[15:0]

%cf    : !(%rbx[15:0] = 0x0₁₆)
%pf    : !((-%rbx[15:0])[0:0] = 0x1₁ ⊕ (-%rbx[15:0])[1:1] = 0x1₁ ⊕ (-%rbx[15:0])[2:2] = 0x1₁ ⊕ (-%rbx[15:0])[3:3] = 0x1₁ ⊕ (-%rbx[15:0])[4:4] = 0x1₁ ⊕ (-%rbx[15:0])[5:5] = 0x1₁ ⊕ (-%rbx[15:0])[6:6] = 0x1₁ ⊕ (-%rbx[15:0])[7:7] = 0x1₁)
%af    : %rbx[3:3] = 0x1₁ ∧ (-%rbx[15:0])[3:3] = 0x1₁
%zf    : -%rbx[15:0] = 0x0₁₆
%sf    : (-%rbx[15:0])[15:15] = 0x1₁
%of    : %rbx[15:15] = 0x1₁ ∧ (-%rbx[15:0])[15:15] = 0x1₁

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


292> nop (nop)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "nop" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

nop

  maybe read:      { }
  must read:       { }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


293> nopl_r32 (nopl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "nopl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

nopl %ebx

  maybe read:      { }
  must read:       { }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { nopl }

Formula:

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


294> nopw_r16 (nopw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "nopw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

nopw %bx

  maybe read:      { }
  must read:       { }
  maybe write:     { }
  must write:      { }
  maybe undef:     { }
  must undef:      { }
  required flags:  { nopl }

Formula:

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


295> notb_r8 (notb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "notb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

notb %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ !%rbx[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


296> notb_rh (notb %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "notb %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

notb %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ !%rax[15:8] ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


297> notl_r32 (notl %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "notl %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

notl %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ !%rbx[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


298> notq_r64 (notq %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "notq %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

notq %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : !%rbx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


299> notw_r16 (notw %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "notw %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

notw %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx }
  must write:      { %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ !%rbx[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


300> orb_r8_r8 (orb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] | %rcx[7:0])

%cf    : false
%pf    : !((%rbx[0:0] | %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] | %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] | %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] | %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] | %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] | %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] | %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] | %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] | %rcx[7:0]) = 0x0₈
%sf    : (%rbx[7:7] | %rcx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


301> orb_r8_rh (orb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] | %rax[15:8])

%cf    : false
%pf    : !((%rbx[0:0] | %rax[8:8]) = 0x1₁ ⊕ (%rbx[1:1] | %rax[9:9]) = 0x1₁ ⊕ (%rbx[2:2] | %rax[10:10]) = 0x1₁ ⊕ (%rbx[3:3] | %rax[11:11]) = 0x1₁ ⊕ (%rbx[4:4] | %rax[12:12]) = 0x1₁ ⊕ (%rbx[5:5] | %rax[13:13]) = 0x1₁ ⊕ (%rbx[6:6] | %rax[14:14]) = 0x1₁ ⊕ (%rbx[7:7] | %rax[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] | %rax[15:8]) = 0x0₈
%sf    : (%rbx[7:7] | %rax[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


302> orb_rh_r8 (orb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] | %rbx[7:0]) ∘ %rax[7:0]

%cf    : false
%pf    : !((%rax[8:8] | %rbx[0:0]) = 0x1₁ ⊕ (%rax[9:9] | %rbx[1:1]) = 0x1₁ ⊕ (%rax[10:10] | %rbx[2:2]) = 0x1₁ ⊕ (%rax[11:11] | %rbx[3:3]) = 0x1₁ ⊕ (%rax[12:12] | %rbx[4:4]) = 0x1₁ ⊕ (%rax[13:13] | %rbx[5:5]) = 0x1₁ ⊕ (%rax[14:14] | %rbx[6:6]) = 0x1₁ ⊕ (%rax[15:15] | %rbx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] | %rbx[7:0]) = 0x0₈
%sf    : (%rax[15:15] | %rbx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


303> orb_rh_rh (orb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] | %rbx[15:8]) ∘ %rax[7:0]

%cf    : false
%pf    : !((%rax[8:8] | %rbx[8:8]) = 0x1₁ ⊕ (%rax[9:9] | %rbx[9:9]) = 0x1₁ ⊕ (%rax[10:10] | %rbx[10:10]) = 0x1₁ ⊕ (%rax[11:11] | %rbx[11:11]) = 0x1₁ ⊕ (%rax[12:12] | %rbx[12:12]) = 0x1₁ ⊕ (%rax[13:13] | %rbx[13:13]) = 0x1₁ ⊕ (%rax[14:14] | %rbx[14:14]) = 0x1₁ ⊕ (%rax[15:15] | %rbx[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] | %rbx[15:8]) = 0x0₈
%sf    : (%rax[15:15] | %rbx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


304> orl_r32_r32 (orl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] | %rcx[31:0])

%cf    : false
%pf    : !((%rbx[0:0] | %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] | %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] | %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] | %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] | %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] | %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] | %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] | %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[31:0] | %rcx[31:0]) = 0x0₃₂
%sf    : (%rbx[31:31] | %rcx[31:31]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


305> orpd_xmm_xmm (orpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] | %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


306> orps_xmm_xmm (orps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] | %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


307> orw_r16_r16 (orw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "orw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

orw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] | %rcx[15:0])

%cf    : false
%pf    : !((%rbx[0:0] | %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] | %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] | %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] | %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] | %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] | %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] | %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] | %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[15:0] | %rcx[15:0]) = 0x0₁₆
%sf    : (%rbx[15:15] | %rcx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


308> pabsb_xmm_xmm (pabsb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pabsb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pabsb %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:120] > 0x7f₈ ? -%ymm2[127:120] : %ymm2[127:120]) ∘ ((%ymm2[119:112] > 0x7f₈ ? -%ymm2[119:112] : %ymm2[119:112]) ∘ ((%ymm2[111:104] > 0x7f₈ ? -%ymm2[111:104] : %ymm2[111:104]) ∘ ((%ymm2[103:96] > 0x7f₈ ? -%ymm2[103:96] : %ymm2[103:96]) ∘ ((%ymm2[95:88] > 0x7f₈ ? -%ymm2[95:88] : %ymm2[95:88]) ∘ ((%ymm2[87:80] > 0x7f₈ ? -%ymm2[87:80] : %ymm2[87:80]) ∘ ((%ymm2[79:72] > 0x7f₈ ? -%ymm2[79:72] : %ymm2[79:72]) ∘ ((%ymm2[71:64] > 0x7f₈ ? -%ymm2[71:64] : %ymm2[71:64]) ∘ ((%ymm2[63:56] > 0x7f₈ ? -%ymm2[63:56] : %ymm2[63:56]) ∘ ((%ymm2[55:48] > 0x7f₈ ? -%ymm2[55:48] : %ymm2[55:48]) ∘ ((%ymm2[47:40] > 0x7f₈ ? -%ymm2[47:40] : %ymm2[47:40]) ∘ ((%ymm2[39:32] > 0x7f₈ ? -%ymm2[39:32] : %ymm2[39:32]) ∘ ((%ymm2[31:24] > 0x7f₈ ? -%ymm2[31:24] : %ymm2[31:24]) ∘ ((%ymm2[23:16] > 0x7f₈ ? -%ymm2[23:16] : %ymm2[23:16]) ∘ ((%ymm2[15:8] > 0x7f₈ ? -%ymm2[15:8] : %ymm2[15:8]) ∘ (%ymm2[7:0] > 0x7f₈ ? -%ymm2[7:0] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


309> pabsd_xmm_xmm (pabsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pabsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pabsd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:96] > 0x7fffffff₃₂ ? -%ymm2[127:96] : %ymm2[127:96]) ∘ ((%ymm2[95:64] > 0x7fffffff₃₂ ? -%ymm2[95:64] : %ymm2[95:64]) ∘ ((%ymm2[63:32] > 0x7fffffff₃₂ ? -%ymm2[63:32] : %ymm2[63:32]) ∘ (%ymm2[31:0] > 0x7fffffff₃₂ ? -%ymm2[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


310> pabsw_xmm_xmm (pabsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pabsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pabsw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:112] > 0x7fff₁₆ ? -%ymm2[127:112] : %ymm2[127:112]) ∘ ((%ymm2[111:96] > 0x7fff₁₆ ? -%ymm2[111:96] : %ymm2[111:96]) ∘ ((%ymm2[95:80] > 0x7fff₁₆ ? -%ymm2[95:80] : %ymm2[95:80]) ∘ ((%ymm2[79:64] > 0x7fff₁₆ ? -%ymm2[79:64] : %ymm2[79:64]) ∘ ((%ymm2[63:48] > 0x7fff₁₆ ? -%ymm2[63:48] : %ymm2[63:48]) ∘ ((%ymm2[47:32] > 0x7fff₁₆ ? -%ymm2[47:32] : %ymm2[47:32]) ∘ ((%ymm2[31:16] > 0x7fff₁₆ ? -%ymm2[31:16] : %ymm2[31:16]) ∘ (%ymm2[15:0] > 0x7fff₁₆ ? -%ymm2[15:0] : %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


311> packssdw_xmm_xmm (packssdw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "packssdw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:packssdw_xmm_xmm:packssdw %xmm2, %xmm1

312> packsswb_xmm_xmm (packsswb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "packsswb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:packsswb_xmm_xmm:packsswb %xmm2, %xmm1

313> packusdw_xmm_xmm (packusdw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "packusdw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:packusdw_xmm_xmm:packusdw %xmm2, %xmm1

314> packuswb_xmm_xmm (packuswb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "packuswb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:packuswb_xmm_xmm:packuswb %xmm2, %xmm1

315> paddb_xmm_xmm (paddb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

paddb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] + %ymm2[127:120]) ∘ ((%ymm1[119:112] + %ymm2[119:112]) ∘ ((%ymm1[111:104] + %ymm2[111:104]) ∘ ((%ymm1[103:96] + %ymm2[103:96]) ∘ ((%ymm1[95:88] + %ymm2[95:88]) ∘ ((%ymm1[87:80] + %ymm2[87:80]) ∘ ((%ymm1[79:72] + %ymm2[79:72]) ∘ ((%ymm1[71:64] + %ymm2[71:64]) ∘ ((%ymm1[63:56] + %ymm2[63:56]) ∘ ((%ymm1[55:48] + %ymm2[55:48]) ∘ ((%ymm1[47:40] + %ymm2[47:40]) ∘ ((%ymm1[39:32] + %ymm2[39:32]) ∘ ((%ymm1[31:24] + %ymm2[31:24]) ∘ ((%ymm1[23:16] + %ymm2[23:16]) ∘ ((%ymm1[15:8] + %ymm2[15:8]) ∘ (%ymm1[7:0] + %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


316> paddd_xmm_xmm (paddd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

paddd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] + %ymm2[127:96]) ∘ ((%ymm1[95:64] + %ymm2[95:64]) ∘ ((%ymm1[63:32] + %ymm2[63:32]) ∘ (%ymm1[31:0] + %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


317> paddq_xmm_xmm (paddq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

paddq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:64] + %ymm2[127:64]) ∘ (%ymm1[63:0] + %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


318> paddsb_xmm_xmm (paddsb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddsb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:paddsb_xmm_xmm:paddsb %xmm2, %xmm1

319> paddsw_xmm_xmm (paddsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:paddsw_xmm_xmm:paddsw %xmm2, %xmm1

320> paddusb_xmm_xmm (paddusb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddusb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

paddusb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (((0x0₁ ∘ %ymm1[127:120] + 0x0₁ ∘ %ymm2[127:120])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[127:120] + 0x0₁ ∘ %ymm2[127:120])[7:0]) ∘ (((0x0₁ ∘ %ymm1[119:112] + 0x0₁ ∘ %ymm2[119:112])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[119:112] + 0x0₁ ∘ %ymm2[119:112])[7:0]) ∘ (((0x0₁ ∘ %ymm1[111:104] + 0x0₁ ∘ %ymm2[111:104])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[111:104] + 0x0₁ ∘ %ymm2[111:104])[7:0]) ∘ (((0x0₁ ∘ %ymm1[103:96] + 0x0₁ ∘ %ymm2[103:96])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[103:96] + 0x0₁ ∘ %ymm2[103:96])[7:0]) ∘ (((0x0₁ ∘ %ymm1[95:88] + 0x0₁ ∘ %ymm2[95:88])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[95:88] + 0x0₁ ∘ %ymm2[95:88])[7:0]) ∘ (((0x0₁ ∘ %ymm1[87:80] + 0x0₁ ∘ %ymm2[87:80])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[87:80] + 0x0₁ ∘ %ymm2[87:80])[7:0]) ∘ (((0x0₁ ∘ %ymm1[79:72] + 0x0₁ ∘ %ymm2[79:72])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[79:72] + 0x0₁ ∘ %ymm2[79:72])[7:0]) ∘ (((0x0₁ ∘ %ymm1[71:64] + 0x0₁ ∘ %ymm2[71:64])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[71:64] + 0x0₁ ∘ %ymm2[71:64])[7:0]) ∘ (((0x0₁ ∘ %ymm1[63:56] + 0x0₁ ∘ %ymm2[63:56])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[63:56] + 0x0₁ ∘ %ymm2[63:56])[7:0]) ∘ (((0x0₁ ∘ %ymm1[55:48] + 0x0₁ ∘ %ymm2[55:48])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[55:48] + 0x0₁ ∘ %ymm2[55:48])[7:0]) ∘ (((0x0₁ ∘ %ymm1[47:40] + 0x0₁ ∘ %ymm2[47:40])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[47:40] + 0x0₁ ∘ %ymm2[47:40])[7:0]) ∘ (((0x0₁ ∘ %ymm1[39:32] + 0x0₁ ∘ %ymm2[39:32])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[39:32] + 0x0₁ ∘ %ymm2[39:32])[7:0]) ∘ (((0x0₁ ∘ %ymm1[31:24] + 0x0₁ ∘ %ymm2[31:24])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[31:24] + 0x0₁ ∘ %ymm2[31:24])[7:0]) ∘ (((0x0₁ ∘ %ymm1[23:16] + 0x0₁ ∘ %ymm2[23:16])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[23:16] + 0x0₁ ∘ %ymm2[23:16])[7:0]) ∘ (((0x0₁ ∘ %ymm1[15:8] + 0x0₁ ∘ %ymm2[15:8])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[15:8] + 0x0₁ ∘ %ymm2[15:8])[7:0]) ∘ ((0x0₁ ∘ %ymm1[7:0] + 0x0₁ ∘ %ymm2[7:0])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm1[7:0] + 0x0₁ ∘ %ymm2[7:0])[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


321> paddusw_xmm_xmm (paddusw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddusw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

paddusw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (((0x0₁ ∘ %ymm1[127:112] + 0x0₁ ∘ %ymm2[127:112])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[127:112] + 0x0₁ ∘ %ymm2[127:112])[15:0]) ∘ (((0x0₁ ∘ %ymm1[111:96] + 0x0₁ ∘ %ymm2[111:96])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[111:96] + 0x0₁ ∘ %ymm2[111:96])[15:0]) ∘ (((0x0₁ ∘ %ymm1[95:80] + 0x0₁ ∘ %ymm2[95:80])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[95:80] + 0x0₁ ∘ %ymm2[95:80])[15:0]) ∘ (((0x0₁ ∘ %ymm1[79:64] + 0x0₁ ∘ %ymm2[79:64])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[79:64] + 0x0₁ ∘ %ymm2[79:64])[15:0]) ∘ (((0x0₁ ∘ %ymm1[63:48] + 0x0₁ ∘ %ymm2[63:48])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[63:48] + 0x0₁ ∘ %ymm2[63:48])[15:0]) ∘ (((0x0₁ ∘ %ymm1[47:32] + 0x0₁ ∘ %ymm2[47:32])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[47:32] + 0x0₁ ∘ %ymm2[47:32])[15:0]) ∘ (((0x0₁ ∘ %ymm1[31:16] + 0x0₁ ∘ %ymm2[31:16])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[31:16] + 0x0₁ ∘ %ymm2[31:16])[15:0]) ∘ ((0x0₁ ∘ %ymm1[15:0] + 0x0₁ ∘ %ymm2[15:0])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm1[15:0] + 0x0₁ ∘ %ymm2[15:0])[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


322> paddw_xmm_xmm (paddw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "paddw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

paddw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] + %ymm2[127:112]) ∘ ((%ymm1[111:96] + %ymm2[111:96]) ∘ ((%ymm1[95:80] + %ymm2[95:80]) ∘ ((%ymm1[79:64] + %ymm2[79:64]) ∘ ((%ymm1[63:48] + %ymm2[63:48]) ∘ ((%ymm1[47:32] + %ymm2[47:32]) ∘ ((%ymm1[31:16] + %ymm2[31:16]) ∘ (%ymm1[15:0] + %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


323> pandn_xmm_xmm (pandn %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pandn %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pandn %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (!%ymm1[127:0] & %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


324> pand_xmm_xmm (pand %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pand %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pand %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] & %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


325> pavgb_xmm_xmm (pavgb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pavgb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pavgb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((0x0₁ ∘ %ymm1[127:120] + 0x0₁ ∘ %ymm2[127:120] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[119:112] + 0x0₁ ∘ %ymm2[119:112] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[111:104] + 0x0₁ ∘ %ymm2[111:104] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[103:96] + 0x0₁ ∘ %ymm2[103:96] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[95:88] + 0x0₁ ∘ %ymm2[95:88] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[87:80] + 0x0₁ ∘ %ymm2[87:80] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[79:72] + 0x0₁ ∘ %ymm2[79:72] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[71:64] + 0x0₁ ∘ %ymm2[71:64] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[63:56] + 0x0₁ ∘ %ymm2[63:56] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[55:48] + 0x0₁ ∘ %ymm2[55:48] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[47:40] + 0x0₁ ∘ %ymm2[47:40] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[39:32] + 0x0₁ ∘ %ymm2[39:32] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[31:24] + 0x0₁ ∘ %ymm2[31:24] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[23:16] + 0x0₁ ∘ %ymm2[23:16] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm1[15:8] + 0x0₁ ∘ %ymm2[15:8] + 0x1₉ >> 0x1₉)[7:0] ∘ (0x0₁ ∘ %ymm1[7:0] + 0x0₁ ∘ %ymm2[7:0] + 0x1₉ >> 0x1₉)[7:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


326> pavgw_xmm_xmm (pavgw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pavgw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pavgw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((0x0₁ ∘ %ymm1[127:112] + 0x0₁ ∘ %ymm2[127:112] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm1[111:96] + 0x0₁ ∘ %ymm2[111:96] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm1[95:80] + 0x0₁ ∘ %ymm2[95:80] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm1[79:64] + 0x0₁ ∘ %ymm2[79:64] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm1[63:48] + 0x0₁ ∘ %ymm2[63:48] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm1[47:32] + 0x0₁ ∘ %ymm2[47:32] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm1[31:16] + 0x0₁ ∘ %ymm2[31:16] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ (0x0₁ ∘ %ymm1[15:0] + 0x0₁ ∘ %ymm2[15:0] + 0x1₁₇ >> 0x1₁₇)[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


327> pblendvb_xmm_xmm_xmm0 (pblendvb %xmm0, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pblendvb %xmm0, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pblendvb_xmm_xmm_xmm0:pblendvb %xmm0, %xmm2, %xmm1

328> pcmpeqb_xmm_xmm (pcmpeqb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpeqb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpeqb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] = %ymm2[127:120] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[119:112] = %ymm2[119:112] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[111:104] = %ymm2[111:104] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[103:96] = %ymm2[103:96] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[95:88] = %ymm2[95:88] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[87:80] = %ymm2[87:80] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[79:72] = %ymm2[79:72] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[71:64] = %ymm2[71:64] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[63:56] = %ymm2[63:56] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[55:48] = %ymm2[55:48] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[47:40] = %ymm2[47:40] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[39:32] = %ymm2[39:32] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[31:24] = %ymm2[31:24] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[23:16] = %ymm2[23:16] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[15:8] = %ymm2[15:8] ? 0xff₈ : 0x0₈) ∘ (%ymm1[7:0] = %ymm2[7:0] ? 0xff₈ : 0x0₈))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


329> pcmpeqd_xmm_xmm (pcmpeqd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpeqd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpeqd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] = %ymm2[127:96] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm1[95:64] = %ymm2[95:64] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm1[63:32] = %ymm2[63:32] ? 0xffffffff₃₂ : 0x0₃₂) ∘ (%ymm1[31:0] = %ymm2[31:0] ? 0xffffffff₃₂ : 0x0₃₂))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


330> pcmpeqq_xmm_xmm (pcmpeqq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpeqq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpeqq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:64] = %ymm2[127:64] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ (%ymm1[63:0] = %ymm2[63:0] ? 0xffffffffffffffff₆₄ : 0x0₆₄))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


331> pcmpeqw_xmm_xmm (pcmpeqw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpeqw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpeqw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] = %ymm2[127:112] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[111:96] = %ymm2[111:96] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[95:80] = %ymm2[95:80] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[79:64] = %ymm2[79:64] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[63:48] = %ymm2[63:48] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[47:32] = %ymm2[47:32] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[31:16] = %ymm2[31:16] ? 0xffff₁₆ : 0x0₁₆) ∘ (%ymm1[15:0] = %ymm2[15:0] ? 0xffff₁₆ : 0x0₁₆))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


332> pcmpgtb_xmm_xmm (pcmpgtb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpgtb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpgtb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] > %ymm2[127:120] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[119:112] > %ymm2[119:112] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[111:104] > %ymm2[111:104] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[103:96] > %ymm2[103:96] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[95:88] > %ymm2[95:88] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[87:80] > %ymm2[87:80] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[79:72] > %ymm2[79:72] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[71:64] > %ymm2[71:64] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[63:56] > %ymm2[63:56] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[55:48] > %ymm2[55:48] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[47:40] > %ymm2[47:40] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[39:32] > %ymm2[39:32] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[31:24] > %ymm2[31:24] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[23:16] > %ymm2[23:16] ? 0xff₈ : 0x0₈) ∘ ((%ymm1[15:8] > %ymm2[15:8] ? 0xff₈ : 0x0₈) ∘ (%ymm1[7:0] > %ymm2[7:0] ? 0xff₈ : 0x0₈))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


333> pcmpgtd_xmm_xmm (pcmpgtd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpgtd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpgtd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] > %ymm2[127:96] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm1[95:64] > %ymm2[95:64] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm1[63:32] > %ymm2[63:32] ? 0xffffffff₃₂ : 0x0₃₂) ∘ (%ymm1[31:0] > %ymm2[31:0] ? 0xffffffff₃₂ : 0x0₃₂))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


334> pcmpgtq_xmm_xmm (pcmpgtq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpgtq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpgtq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:64] > %ymm2[127:64] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ (%ymm1[63:0] > %ymm2[63:0] ? 0xffffffffffffffff₆₄ : 0x0₆₄))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


335> pcmpgtw_xmm_xmm (pcmpgtw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pcmpgtw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pcmpgtw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] > %ymm2[127:112] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[111:96] > %ymm2[111:96] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[95:80] > %ymm2[95:80] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[79:64] > %ymm2[79:64] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[63:48] > %ymm2[63:48] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[47:32] > %ymm2[47:32] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm1[31:16] > %ymm2[31:16] ? 0xffff₁₆ : 0x0₁₆) ∘ (%ymm1[15:0] > %ymm2[15:0] ? 0xffff₁₆ : 0x0₁₆))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


336> pdepl_r32_r32_r32 (pdepl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pdepl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:pdepl_r32_r32_r32:pdepl %edx, %ecx, %ebx

337> pdepq_r64_r64_r64 (pdepq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pdepq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:pdepq_r64_r64_r64:pdepq %rdx, %rcx, %rbx

338> pextl_r32_r32_r32 (pextl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pextl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:pextl_r32_r32_r32:pextl %edx, %ecx, %ebx

339> pextq_r64_r64_r64 (pextq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pextq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:pextq_r64_r64_r64:pextq %rdx, %rcx, %rbx

340> phaddd_xmm_xmm (phaddd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phaddd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

phaddd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:96] + %ymm2[95:64]) ∘ (%ymm2[63:32] + %ymm2[31:0]) ∘ (%ymm1[127:96] + %ymm1[95:64]) ∘ (%ymm1[63:32] + %ymm1[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


341> phaddsw_xmm_xmm (phaddsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phaddsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:phaddsw_xmm_xmm:phaddsw %xmm2, %xmm1

342> phaddw_xmm_xmm (phaddw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phaddw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

phaddw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:112] + %ymm2[111:96]) ∘ (%ymm2[95:80] + %ymm2[79:64]) ∘ (%ymm2[63:48] + %ymm2[47:32]) ∘ (%ymm2[31:16] + %ymm2[15:0]) ∘ (%ymm1[127:112] + %ymm1[111:96]) ∘ (%ymm1[95:80] + %ymm1[79:64]) ∘ (%ymm1[63:48] + %ymm1[47:32]) ∘ (%ymm1[31:16] + %ymm1[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


343> phminposuw_xmm_xmm (phminposuw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phminposuw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:phminposuw_xmm_xmm:phminposuw %xmm2, %xmm1

344> phsubd_xmm_xmm (phsubd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phsubd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

phsubd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[95:64] - %ymm2[127:96]) ∘ (%ymm2[31:0] - %ymm2[63:32]) ∘ (%ymm1[95:64] - %ymm1[127:96]) ∘ (%ymm1[31:0] - %ymm1[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


345> phsubsw_xmm_xmm (phsubsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phsubsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:phsubsw_xmm_xmm:phsubsw %xmm2, %xmm1

346> phsubw_xmm_xmm (phsubw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "phsubw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

phsubw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[111:96] - %ymm2[127:112]) ∘ (%ymm2[79:64] - %ymm2[95:80]) ∘ (%ymm2[47:32] - %ymm2[63:48]) ∘ (%ymm2[15:0] - %ymm2[31:16]) ∘ (%ymm1[111:96] - %ymm1[127:112]) ∘ (%ymm1[79:64] - %ymm1[95:80]) ∘ (%ymm1[47:32] - %ymm1[63:48]) ∘ (%ymm1[15:0] - %ymm1[31:16]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


347> pmaddubsw_xmm_xmm (pmaddubsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaddubsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pmaddubsw_xmm_xmm:pmaddubsw %xmm2, %xmm1

348> pmaddwd_xmm_xmm (pmaddwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaddwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pmaddwd_xmm_xmm:pmaddwd %xmm2, %xmm1

349> pmaxsb_xmm_xmm (pmaxsb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaxsb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmaxsb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] > %ymm2[127:120] ? %ymm1[127:120] : %ymm2[127:120]) ∘ ((%ymm1[119:112] > %ymm2[119:112] ? %ymm1[119:112] : %ymm2[119:112]) ∘ ((%ymm1[111:104] > %ymm2[111:104] ? %ymm1[111:104] : %ymm2[111:104]) ∘ ((%ymm1[103:96] > %ymm2[103:96] ? %ymm1[103:96] : %ymm2[103:96]) ∘ ((%ymm1[95:88] > %ymm2[95:88] ? %ymm1[95:88] : %ymm2[95:88]) ∘ ((%ymm1[87:80] > %ymm2[87:80] ? %ymm1[87:80] : %ymm2[87:80]) ∘ ((%ymm1[79:72] > %ymm2[79:72] ? %ymm1[79:72] : %ymm2[79:72]) ∘ ((%ymm1[71:64] > %ymm2[71:64] ? %ymm1[71:64] : %ymm2[71:64]) ∘ ((%ymm1[63:56] > %ymm2[63:56] ? %ymm1[63:56] : %ymm2[63:56]) ∘ ((%ymm1[55:48] > %ymm2[55:48] ? %ymm1[55:48] : %ymm2[55:48]) ∘ ((%ymm1[47:40] > %ymm2[47:40] ? %ymm1[47:40] : %ymm2[47:40]) ∘ ((%ymm1[39:32] > %ymm2[39:32] ? %ymm1[39:32] : %ymm2[39:32]) ∘ ((%ymm1[31:24] > %ymm2[31:24] ? %ymm1[31:24] : %ymm2[31:24]) ∘ ((%ymm1[23:16] > %ymm2[23:16] ? %ymm1[23:16] : %ymm2[23:16]) ∘ ((%ymm1[15:8] > %ymm2[15:8] ? %ymm1[15:8] : %ymm2[15:8]) ∘ (%ymm1[7:0] > %ymm2[7:0] ? %ymm1[7:0] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


350> pmaxsd_xmm_xmm (pmaxsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaxsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmaxsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] > %ymm2[127:96] ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((%ymm1[95:64] > %ymm2[95:64] ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((%ymm1[63:32] > %ymm2[63:32] ? %ymm1[63:32] : %ymm2[63:32]) ∘ (%ymm1[31:0] > %ymm2[31:0] ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


351> pmaxsw_xmm_xmm (pmaxsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaxsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmaxsw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] > %ymm2[127:112] ? %ymm1[127:112] : %ymm2[127:112]) ∘ ((%ymm1[111:96] > %ymm2[111:96] ? %ymm1[111:96] : %ymm2[111:96]) ∘ ((%ymm1[95:80] > %ymm2[95:80] ? %ymm1[95:80] : %ymm2[95:80]) ∘ ((%ymm1[79:64] > %ymm2[79:64] ? %ymm1[79:64] : %ymm2[79:64]) ∘ ((%ymm1[63:48] > %ymm2[63:48] ? %ymm1[63:48] : %ymm2[63:48]) ∘ ((%ymm1[47:32] > %ymm2[47:32] ? %ymm1[47:32] : %ymm2[47:32]) ∘ ((%ymm1[31:16] > %ymm2[31:16] ? %ymm1[31:16] : %ymm2[31:16]) ∘ (%ymm1[15:0] > %ymm2[15:0] ? %ymm1[15:0] : %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


352> pmaxub_xmm_xmm (pmaxub %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaxub %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmaxub %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] > %ymm2[127:120] ? %ymm1[127:120] : %ymm2[127:120]) ∘ ((%ymm1[119:112] > %ymm2[119:112] ? %ymm1[119:112] : %ymm2[119:112]) ∘ ((%ymm1[111:104] > %ymm2[111:104] ? %ymm1[111:104] : %ymm2[111:104]) ∘ ((%ymm1[103:96] > %ymm2[103:96] ? %ymm1[103:96] : %ymm2[103:96]) ∘ ((%ymm1[95:88] > %ymm2[95:88] ? %ymm1[95:88] : %ymm2[95:88]) ∘ ((%ymm1[87:80] > %ymm2[87:80] ? %ymm1[87:80] : %ymm2[87:80]) ∘ ((%ymm1[79:72] > %ymm2[79:72] ? %ymm1[79:72] : %ymm2[79:72]) ∘ ((%ymm1[71:64] > %ymm2[71:64] ? %ymm1[71:64] : %ymm2[71:64]) ∘ ((%ymm1[63:56] > %ymm2[63:56] ? %ymm1[63:56] : %ymm2[63:56]) ∘ ((%ymm1[55:48] > %ymm2[55:48] ? %ymm1[55:48] : %ymm2[55:48]) ∘ ((%ymm1[47:40] > %ymm2[47:40] ? %ymm1[47:40] : %ymm2[47:40]) ∘ ((%ymm1[39:32] > %ymm2[39:32] ? %ymm1[39:32] : %ymm2[39:32]) ∘ ((%ymm1[31:24] > %ymm2[31:24] ? %ymm1[31:24] : %ymm2[31:24]) ∘ ((%ymm1[23:16] > %ymm2[23:16] ? %ymm1[23:16] : %ymm2[23:16]) ∘ ((%ymm1[15:8] > %ymm2[15:8] ? %ymm1[15:8] : %ymm2[15:8]) ∘ (%ymm1[7:0] > %ymm2[7:0] ? %ymm1[7:0] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


353> pmaxud_xmm_xmm (pmaxud %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaxud %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmaxud %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] > %ymm2[127:96] ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((%ymm1[95:64] > %ymm2[95:64] ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((%ymm1[63:32] > %ymm2[63:32] ? %ymm1[63:32] : %ymm2[63:32]) ∘ (%ymm1[31:0] > %ymm2[31:0] ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


354> pmaxuw_xmm_xmm (pmaxuw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmaxuw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmaxuw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] > %ymm2[127:112] ? %ymm1[127:112] : %ymm2[127:112]) ∘ ((%ymm1[111:96] > %ymm2[111:96] ? %ymm1[111:96] : %ymm2[111:96]) ∘ ((%ymm1[95:80] > %ymm2[95:80] ? %ymm1[95:80] : %ymm2[95:80]) ∘ ((%ymm1[79:64] > %ymm2[79:64] ? %ymm1[79:64] : %ymm2[79:64]) ∘ ((%ymm1[63:48] > %ymm2[63:48] ? %ymm1[63:48] : %ymm2[63:48]) ∘ ((%ymm1[47:32] > %ymm2[47:32] ? %ymm1[47:32] : %ymm2[47:32]) ∘ ((%ymm1[31:16] > %ymm2[31:16] ? %ymm1[31:16] : %ymm2[31:16]) ∘ (%ymm1[15:0] > %ymm2[15:0] ? %ymm1[15:0] : %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


355> pminsb_xmm_xmm (pminsb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pminsb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pminsb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] < %ymm2[127:120] ? %ymm1[127:120] : %ymm2[127:120]) ∘ ((%ymm1[119:112] < %ymm2[119:112] ? %ymm1[119:112] : %ymm2[119:112]) ∘ ((%ymm1[111:104] < %ymm2[111:104] ? %ymm1[111:104] : %ymm2[111:104]) ∘ ((%ymm1[103:96] < %ymm2[103:96] ? %ymm1[103:96] : %ymm2[103:96]) ∘ ((%ymm1[95:88] < %ymm2[95:88] ? %ymm1[95:88] : %ymm2[95:88]) ∘ ((%ymm1[87:80] < %ymm2[87:80] ? %ymm1[87:80] : %ymm2[87:80]) ∘ ((%ymm1[79:72] < %ymm2[79:72] ? %ymm1[79:72] : %ymm2[79:72]) ∘ ((%ymm1[71:64] < %ymm2[71:64] ? %ymm1[71:64] : %ymm2[71:64]) ∘ ((%ymm1[63:56] < %ymm2[63:56] ? %ymm1[63:56] : %ymm2[63:56]) ∘ ((%ymm1[55:48] < %ymm2[55:48] ? %ymm1[55:48] : %ymm2[55:48]) ∘ ((%ymm1[47:40] < %ymm2[47:40] ? %ymm1[47:40] : %ymm2[47:40]) ∘ ((%ymm1[39:32] < %ymm2[39:32] ? %ymm1[39:32] : %ymm2[39:32]) ∘ ((%ymm1[31:24] < %ymm2[31:24] ? %ymm1[31:24] : %ymm2[31:24]) ∘ ((%ymm1[23:16] < %ymm2[23:16] ? %ymm1[23:16] : %ymm2[23:16]) ∘ ((%ymm1[15:8] < %ymm2[15:8] ? %ymm1[15:8] : %ymm2[15:8]) ∘ (%ymm1[7:0] < %ymm2[7:0] ? %ymm1[7:0] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


356> pminsd_xmm_xmm (pminsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pminsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pminsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] < %ymm2[127:96] ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((%ymm1[95:64] < %ymm2[95:64] ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((%ymm1[63:32] < %ymm2[63:32] ? %ymm1[63:32] : %ymm2[63:32]) ∘ (%ymm1[31:0] < %ymm2[31:0] ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


357> pminsw_xmm_xmm (pminsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pminsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pminsw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] < %ymm2[127:112] ? %ymm1[127:112] : %ymm2[127:112]) ∘ ((%ymm1[111:96] < %ymm2[111:96] ? %ymm1[111:96] : %ymm2[111:96]) ∘ ((%ymm1[95:80] < %ymm2[95:80] ? %ymm1[95:80] : %ymm2[95:80]) ∘ ((%ymm1[79:64] < %ymm2[79:64] ? %ymm1[79:64] : %ymm2[79:64]) ∘ ((%ymm1[63:48] < %ymm2[63:48] ? %ymm1[63:48] : %ymm2[63:48]) ∘ ((%ymm1[47:32] < %ymm2[47:32] ? %ymm1[47:32] : %ymm2[47:32]) ∘ ((%ymm1[31:16] < %ymm2[31:16] ? %ymm1[31:16] : %ymm2[31:16]) ∘ (%ymm1[15:0] < %ymm2[15:0] ? %ymm1[15:0] : %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


358> pminub_xmm_xmm (pminub %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pminub %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pminub %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] < %ymm2[127:120] ? %ymm1[127:120] : %ymm2[127:120]) ∘ ((%ymm1[119:112] < %ymm2[119:112] ? %ymm1[119:112] : %ymm2[119:112]) ∘ ((%ymm1[111:104] < %ymm2[111:104] ? %ymm1[111:104] : %ymm2[111:104]) ∘ ((%ymm1[103:96] < %ymm2[103:96] ? %ymm1[103:96] : %ymm2[103:96]) ∘ ((%ymm1[95:88] < %ymm2[95:88] ? %ymm1[95:88] : %ymm2[95:88]) ∘ ((%ymm1[87:80] < %ymm2[87:80] ? %ymm1[87:80] : %ymm2[87:80]) ∘ ((%ymm1[79:72] < %ymm2[79:72] ? %ymm1[79:72] : %ymm2[79:72]) ∘ ((%ymm1[71:64] < %ymm2[71:64] ? %ymm1[71:64] : %ymm2[71:64]) ∘ ((%ymm1[63:56] < %ymm2[63:56] ? %ymm1[63:56] : %ymm2[63:56]) ∘ ((%ymm1[55:48] < %ymm2[55:48] ? %ymm1[55:48] : %ymm2[55:48]) ∘ ((%ymm1[47:40] < %ymm2[47:40] ? %ymm1[47:40] : %ymm2[47:40]) ∘ ((%ymm1[39:32] < %ymm2[39:32] ? %ymm1[39:32] : %ymm2[39:32]) ∘ ((%ymm1[31:24] < %ymm2[31:24] ? %ymm1[31:24] : %ymm2[31:24]) ∘ ((%ymm1[23:16] < %ymm2[23:16] ? %ymm1[23:16] : %ymm2[23:16]) ∘ ((%ymm1[15:8] < %ymm2[15:8] ? %ymm1[15:8] : %ymm2[15:8]) ∘ (%ymm1[7:0] < %ymm2[7:0] ? %ymm1[7:0] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


359> pminud_xmm_xmm (pminud %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pminud %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pminud %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] < %ymm2[127:96] ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((%ymm1[95:64] < %ymm2[95:64] ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((%ymm1[63:32] < %ymm2[63:32] ? %ymm1[63:32] : %ymm2[63:32]) ∘ (%ymm1[31:0] < %ymm2[31:0] ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


360> pminuw_xmm_xmm (pminuw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pminuw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pminuw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] < %ymm2[127:112] ? %ymm1[127:112] : %ymm2[127:112]) ∘ ((%ymm1[111:96] < %ymm2[111:96] ? %ymm1[111:96] : %ymm2[111:96]) ∘ ((%ymm1[95:80] < %ymm2[95:80] ? %ymm1[95:80] : %ymm2[95:80]) ∘ ((%ymm1[79:64] < %ymm2[79:64] ? %ymm1[79:64] : %ymm2[79:64]) ∘ ((%ymm1[63:48] < %ymm2[63:48] ? %ymm1[63:48] : %ymm2[63:48]) ∘ ((%ymm1[47:32] < %ymm2[47:32] ? %ymm1[47:32] : %ymm2[47:32]) ∘ ((%ymm1[31:16] < %ymm2[31:16] ? %ymm1[31:16] : %ymm2[31:16]) ∘ (%ymm1[15:0] < %ymm2[15:0] ? %ymm1[15:0] : %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


361> pmovmskb_r32_xmm (pmovmskb %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovmskb %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovmskb %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁₆ ∘ ((%ymm1[127:127] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[119:119] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[111:111] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[103:103] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[95:95] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[87:87] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[79:79] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[71:71] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[63:63] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[55:55] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[47:47] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[39:39] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[31:31] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[23:23] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[15:15] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ (%ymm1[7:7] = 0x1₁ ? 0x1₁ : 0x0₁)))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


362> pmovmskb_r64_xmm (pmovmskb %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovmskb %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovmskb %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%rbx   : 0x0₄₈ ∘ ((%ymm1[127:127] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[119:119] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[111:111] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[103:103] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[95:95] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[87:87] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[79:79] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[71:71] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[63:63] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[55:55] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[47:47] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[39:39] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[31:31] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[23:23] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[15:15] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ (%ymm1[7:7] = 0x1₁ ? 0x1₁ : 0x0₁))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


363> pmovsxbd_xmm_xmm (pmovsxbd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovsxbd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovsxbd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sign-extend-32(%ymm2[31:24]) ∘ (sign-extend-32(%ymm2[23:16]) ∘ (sign-extend-32(%ymm2[15:8]) ∘ sign-extend-32(%ymm2[7:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


364> pmovsxbq_xmm_xmm (pmovsxbq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovsxbq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovsxbq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sign-extend-64(%ymm2[15:8]) ∘ sign-extend-64(%ymm2[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


365> pmovsxbw_xmm_xmm (pmovsxbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovsxbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovsxbw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sign-extend-16(%ymm2[63:56]) ∘ (sign-extend-16(%ymm2[55:48]) ∘ (sign-extend-16(%ymm2[47:40]) ∘ (sign-extend-16(%ymm2[39:32]) ∘ (sign-extend-16(%ymm2[31:24]) ∘ (sign-extend-16(%ymm2[23:16]) ∘ (sign-extend-16(%ymm2[15:8]) ∘ sign-extend-16(%ymm2[7:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


366> pmovsxdq_xmm_xmm (pmovsxdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovsxdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovsxdq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sign-extend-64(%ymm2[63:32]) ∘ sign-extend-64(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


367> pmovsxwd_xmm_xmm (pmovsxwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovsxwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovsxwd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sign-extend-32(%ymm2[63:48]) ∘ (sign-extend-32(%ymm2[47:32]) ∘ (sign-extend-32(%ymm2[31:16]) ∘ sign-extend-32(%ymm2[15:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


368> pmovsxwq_xmm_xmm (pmovsxwq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovsxwq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovsxwq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sign-extend-64(%ymm2[31:16]) ∘ sign-extend-64(%ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


369> pmovzxbd_xmm_xmm (pmovzxbd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovzxbd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovzxbd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₂₄ ∘ %ymm2[31:24] ∘ (0x0₂₄ ∘ %ymm2[23:16] ∘ (0x0₂₄ ∘ %ymm2[15:8] ∘ (0x0₂₄ ∘ %ymm2[7:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


370> pmovzxbq_xmm_xmm (pmovzxbq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovzxbq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovzxbq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₅₆ ∘ %ymm2[15:8] ∘ (0x0₅₆ ∘ %ymm2[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


371> pmovzxbw_xmm_xmm (pmovzxbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovzxbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovzxbw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₈ ∘ %ymm2[63:56] ∘ (0x0₈ ∘ %ymm2[55:48] ∘ (0x0₈ ∘ %ymm2[47:40] ∘ (0x0₈ ∘ %ymm2[39:32] ∘ (0x0₈ ∘ %ymm2[31:24] ∘ (0x0₈ ∘ %ymm2[23:16] ∘ (0x0₈ ∘ %ymm2[15:8] ∘ (0x0₈ ∘ %ymm2[7:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


372> pmovzxdq_xmm_xmm (pmovzxdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovzxdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovzxdq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₃₂ ∘ %ymm2[63:32] ∘ (0x0₃₂ ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


373> pmovzxwd_xmm_xmm (pmovzxwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovzxwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovzxwd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₁₆ ∘ %ymm2[63:48] ∘ (0x0₁₆ ∘ %ymm2[47:32] ∘ (0x0₁₆ ∘ %ymm2[31:16] ∘ (0x0₁₆ ∘ %ymm2[15:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


374> pmovzxwq_xmm_xmm (pmovzxwq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmovzxwq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmovzxwq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (0x0₄₈ ∘ %ymm2[31:16] ∘ (0x0₄₈ ∘ %ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


375> pmuldq_xmm_xmm (pmuldq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmuldq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmuldq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((sign-extend-64(%ymm1[95:64]) * sign-extend-64(%ymm2[95:64])) ∘ (sign-extend-64(%ymm1[31:0]) * sign-extend-64(%ymm2[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


376> pmulhrsw_xmm_xmm (pmulhrsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmulhrsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pmulhrsw_xmm_xmm:pmulhrsw %xmm2, %xmm1

377> pmulhuw_xmm_xmm (pmulhuw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmulhuw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pmulhuw_xmm_xmm:pmulhuw %xmm2, %xmm1

378> pmulhw_xmm_xmm (pmulhw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmulhw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmulhw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((sign-extend-32(%ymm1[127:112]) * sign-extend-32(%ymm2[127:112]))[31:16] ∘ ((sign-extend-32(%ymm1[111:96]) * sign-extend-32(%ymm2[111:96]))[31:16] ∘ ((sign-extend-32(%ymm1[95:80]) * sign-extend-32(%ymm2[95:80]))[31:16] ∘ ((sign-extend-32(%ymm1[79:64]) * sign-extend-32(%ymm2[79:64]))[31:16] ∘ ((sign-extend-32(%ymm1[63:48]) * sign-extend-32(%ymm2[63:48]))[31:16] ∘ ((sign-extend-32(%ymm1[47:32]) * sign-extend-32(%ymm2[47:32]))[31:16] ∘ ((sign-extend-32(%ymm1[31:16]) * sign-extend-32(%ymm2[31:16]))[31:16] ∘ (sign-extend-32(%ymm1[15:0]) * sign-extend-32(%ymm2[15:0]))[31:16])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


379> pmulld_xmm_xmm (pmulld %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmulld %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmulld %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((sign-extend-64(%ymm1[127:96]) * sign-extend-64(%ymm2[127:96]))[31:0] ∘ ((sign-extend-64(%ymm1[95:64]) * sign-extend-64(%ymm2[95:64]))[31:0] ∘ ((sign-extend-64(%ymm1[63:32]) * sign-extend-64(%ymm2[63:32]))[31:0] ∘ (sign-extend-64(%ymm1[31:0]) * sign-extend-64(%ymm2[31:0]))[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


380> pmullw_xmm_xmm (pmullw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmullw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pmullw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((sign-extend-32(%ymm1[127:112]) * sign-extend-32(%ymm2[127:112]))[15:0] ∘ ((sign-extend-32(%ymm1[111:96]) * sign-extend-32(%ymm2[111:96]))[15:0] ∘ ((sign-extend-32(%ymm1[95:80]) * sign-extend-32(%ymm2[95:80]))[15:0] ∘ ((sign-extend-32(%ymm1[79:64]) * sign-extend-32(%ymm2[79:64]))[15:0] ∘ ((sign-extend-32(%ymm1[63:48]) * sign-extend-32(%ymm2[63:48]))[15:0] ∘ ((sign-extend-32(%ymm1[47:32]) * sign-extend-32(%ymm2[47:32]))[15:0] ∘ ((sign-extend-32(%ymm1[31:16]) * sign-extend-32(%ymm2[31:16]))[15:0] ∘ (sign-extend-32(%ymm1[15:0]) * sign-extend-32(%ymm2[15:0]))[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


381> pmuludq_xmm_xmm (pmuludq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pmuludq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pmuludq_xmm_xmm:pmuludq %xmm2, %xmm1

382> popcntl_r32_r32 (popcntl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "popcntl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

popcntl %ecx, %ebx

  maybe read:      { %ecx }
  must read:       { %ecx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { popcnt }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[31:31] + 0x0₁ ∘ %rcx[30:30]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[29:29] + 0x0₁ ∘ %rcx[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[27:27] + 0x0₁ ∘ %rcx[26:26]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[25:25] + 0x0₁ ∘ %rcx[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[23:23] + 0x0₁ ∘ %rcx[22:22]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[21:21] + 0x0₁ ∘ %rcx[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[19:19] + 0x0₁ ∘ %rcx[18:18]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[17:17] + 0x0₁ ∘ %rcx[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[15:15] + 0x0₁ ∘ %rcx[14:14]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[13:13] + 0x0₁ ∘ %rcx[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[11:11] + 0x0₁ ∘ %rcx[10:10]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[9:9] + 0x0₁ ∘ %rcx[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[7:7] + 0x0₁ ∘ %rcx[6:6]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[5:5] + 0x0₁ ∘ %rcx[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[3:3] + 0x0₁ ∘ %rcx[2:2]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[1:1] + 0x0₁ ∘ %rcx[0:0])))))

%cf    : false
%pf    : false
%af    : false
%zf    : %rcx[31:0] = 0x0₃₂
%sf    : false
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


383> popcntw_r16_r16 (popcntw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "popcntw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

popcntw %cx, %bx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %bx %cf %pf %af %zf %sf %of }
  must write:      { %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { popcnt }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[15:15] + 0x0₁ ∘ %rcx[14:14]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[13:13] + 0x0₁ ∘ %rcx[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[11:11] + 0x0₁ ∘ %rcx[10:10]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[9:9] + 0x0₁ ∘ %rcx[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[7:7] + 0x0₁ ∘ %rcx[6:6]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[5:5] + 0x0₁ ∘ %rcx[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ %rcx[3:3] + 0x0₁ ∘ %rcx[2:2]) + 0x0₂ ∘ (0x0₁ ∘ %rcx[1:1] + 0x0₁ ∘ %rcx[0:0]))))

%cf    : false
%pf    : false
%af    : false
%zf    : %rcx[15:0] = 0x0₁₆
%sf    : false
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


384> por_xmm_xmm (por %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "por %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

por %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] | %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


385> psadbw_xmm_xmm (psadbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psadbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:psadbw_xmm_xmm:psadbw %xmm2, %xmm1

386> pshufb_xmm_xmm (pshufb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pshufb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:pshufb_xmm_xmm:pshufb %xmm2, %xmm1

387> psignb_xmm_xmm (psignb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psignb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psignb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:120] > 0x0₈ ? %ymm1[127:120] : %ymm2[127:120] = 0x0₈ ? 0x0₈ : -%ymm1[127:120]) ∘ ((%ymm2[119:112] > 0x0₈ ? %ymm1[119:112] : %ymm2[119:112] = 0x0₈ ? 0x0₈ : -%ymm1[119:112]) ∘ ((%ymm2[111:104] > 0x0₈ ? %ymm1[111:104] : %ymm2[111:104] = 0x0₈ ? 0x0₈ : -%ymm1[111:104]) ∘ ((%ymm2[103:96] > 0x0₈ ? %ymm1[103:96] : %ymm2[103:96] = 0x0₈ ? 0x0₈ : -%ymm1[103:96]) ∘ ((%ymm2[95:88] > 0x0₈ ? %ymm1[95:88] : %ymm2[95:88] = 0x0₈ ? 0x0₈ : -%ymm1[95:88]) ∘ ((%ymm2[87:80] > 0x0₈ ? %ymm1[87:80] : %ymm2[87:80] = 0x0₈ ? 0x0₈ : -%ymm1[87:80]) ∘ ((%ymm2[79:72] > 0x0₈ ? %ymm1[79:72] : %ymm2[79:72] = 0x0₈ ? 0x0₈ : -%ymm1[79:72]) ∘ ((%ymm2[71:64] > 0x0₈ ? %ymm1[71:64] : %ymm2[71:64] = 0x0₈ ? 0x0₈ : -%ymm1[71:64]) ∘ ((%ymm2[63:56] > 0x0₈ ? %ymm1[63:56] : %ymm2[63:56] = 0x0₈ ? 0x0₈ : -%ymm1[63:56]) ∘ ((%ymm2[55:48] > 0x0₈ ? %ymm1[55:48] : %ymm2[55:48] = 0x0₈ ? 0x0₈ : -%ymm1[55:48]) ∘ ((%ymm2[47:40] > 0x0₈ ? %ymm1[47:40] : %ymm2[47:40] = 0x0₈ ? 0x0₈ : -%ymm1[47:40]) ∘ ((%ymm2[39:32] > 0x0₈ ? %ymm1[39:32] : %ymm2[39:32] = 0x0₈ ? 0x0₈ : -%ymm1[39:32]) ∘ ((%ymm2[31:24] > 0x0₈ ? %ymm1[31:24] : %ymm2[31:24] = 0x0₈ ? 0x0₈ : -%ymm1[31:24]) ∘ ((%ymm2[23:16] > 0x0₈ ? %ymm1[23:16] : %ymm2[23:16] = 0x0₈ ? 0x0₈ : -%ymm1[23:16]) ∘ ((%ymm2[15:8] > 0x0₈ ? %ymm1[15:8] : %ymm2[15:8] = 0x0₈ ? 0x0₈ : -%ymm1[15:8]) ∘ (%ymm2[7:0] > 0x0₈ ? %ymm1[7:0] : %ymm2[7:0] = 0x0₈ ? 0x0₈ : -%ymm1[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


388> psignd_xmm_xmm (psignd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psignd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psignd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:96] > 0x0₃₂ ? %ymm1[127:96] : %ymm2[127:96] = 0x0₃₂ ? 0x0₃₂ : -%ymm1[127:96]) ∘ ((%ymm2[95:64] > 0x0₃₂ ? %ymm1[95:64] : %ymm2[95:64] = 0x0₃₂ ? 0x0₃₂ : -%ymm1[95:64]) ∘ ((%ymm2[63:32] > 0x0₃₂ ? %ymm1[63:32] : %ymm2[63:32] = 0x0₃₂ ? 0x0₃₂ : -%ymm1[63:32]) ∘ (%ymm2[31:0] > 0x0₃₂ ? %ymm1[31:0] : %ymm2[31:0] = 0x0₃₂ ? 0x0₃₂ : -%ymm1[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


389> psignw_xmm_xmm (psignw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psignw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psignw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { ssse3 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm2[127:112] > 0x0₁₆ ? %ymm1[127:112] : %ymm2[127:112] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[127:112]) ∘ ((%ymm2[111:96] > 0x0₁₆ ? %ymm1[111:96] : %ymm2[111:96] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[111:96]) ∘ ((%ymm2[95:80] > 0x0₁₆ ? %ymm1[95:80] : %ymm2[95:80] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[95:80]) ∘ ((%ymm2[79:64] > 0x0₁₆ ? %ymm1[79:64] : %ymm2[79:64] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[79:64]) ∘ ((%ymm2[63:48] > 0x0₁₆ ? %ymm1[63:48] : %ymm2[63:48] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[63:48]) ∘ ((%ymm2[47:32] > 0x0₁₆ ? %ymm1[47:32] : %ymm2[47:32] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[47:32]) ∘ ((%ymm2[31:16] > 0x0₁₆ ? %ymm1[31:16] : %ymm2[31:16] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[31:16]) ∘ (%ymm2[15:0] > 0x0₁₆ ? %ymm1[15:0] : %ymm2[15:0] = 0x0₁₆ ? 0x0₁₆ : -%ymm1[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


390> pslld_xmm_xmm (pslld %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pslld %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pslld %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] << %ymm2[127:96]) ∘ ((%ymm1[95:64] << %ymm2[95:64]) ∘ ((%ymm1[63:32] << %ymm2[63:32]) ∘ (%ymm1[31:0] << %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


391> psllq_xmm_xmm (psllq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psllq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psllq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:64] << %ymm2[127:64]) ∘ (%ymm1[63:0] << %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


392> psllw_xmm_xmm (psllw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psllw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psllw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] << %ymm2[127:112]) ∘ ((%ymm1[111:96] << %ymm2[111:96]) ∘ ((%ymm1[95:80] << %ymm2[95:80]) ∘ ((%ymm1[79:64] << %ymm2[79:64]) ∘ ((%ymm1[63:48] << %ymm2[63:48]) ∘ ((%ymm1[47:32] << %ymm2[47:32]) ∘ ((%ymm1[31:16] << %ymm2[31:16]) ∘ (%ymm1[15:0] << %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


393> psrad_xmm_xmm (psrad %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psrad %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:psrad_xmm_xmm:psrad %xmm2, %xmm1

394> psraw_xmm_xmm (psraw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psraw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:psraw_xmm_xmm:psraw %xmm2, %xmm1

395> psrld_xmm_xmm (psrld %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psrld %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psrld %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] >> %ymm2[127:96]) ∘ ((%ymm1[95:64] >> %ymm2[95:64]) ∘ ((%ymm1[63:32] >> %ymm2[63:32]) ∘ (%ymm1[31:0] >> %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


396> psrlq_xmm_xmm (psrlq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psrlq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psrlq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:64] >> %ymm2[127:64]) ∘ (%ymm1[63:0] >> %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


397> psrlw_xmm_xmm (psrlw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psrlw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psrlw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] >> %ymm2[127:112]) ∘ ((%ymm1[111:96] >> %ymm2[111:96]) ∘ ((%ymm1[95:80] >> %ymm2[95:80]) ∘ ((%ymm1[79:64] >> %ymm2[79:64]) ∘ ((%ymm1[63:48] >> %ymm2[63:48]) ∘ ((%ymm1[47:32] >> %ymm2[47:32]) ∘ ((%ymm1[31:16] >> %ymm2[31:16]) ∘ (%ymm1[15:0] >> %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


398> psubb_xmm_xmm (psubb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:120] - %ymm2[127:120]) ∘ ((%ymm1[119:112] - %ymm2[119:112]) ∘ ((%ymm1[111:104] - %ymm2[111:104]) ∘ ((%ymm1[103:96] - %ymm2[103:96]) ∘ ((%ymm1[95:88] - %ymm2[95:88]) ∘ ((%ymm1[87:80] - %ymm2[87:80]) ∘ ((%ymm1[79:72] - %ymm2[79:72]) ∘ ((%ymm1[71:64] - %ymm2[71:64]) ∘ ((%ymm1[63:56] - %ymm2[63:56]) ∘ ((%ymm1[55:48] - %ymm2[55:48]) ∘ ((%ymm1[47:40] - %ymm2[47:40]) ∘ ((%ymm1[39:32] - %ymm2[39:32]) ∘ ((%ymm1[31:24] - %ymm2[31:24]) ∘ ((%ymm1[23:16] - %ymm2[23:16]) ∘ ((%ymm1[15:8] - %ymm2[15:8]) ∘ (%ymm1[7:0] - %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


399> psubd_xmm_xmm (psubd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:96] - %ymm2[127:96]) ∘ ((%ymm1[95:64] - %ymm2[95:64]) ∘ ((%ymm1[63:32] - %ymm2[63:32]) ∘ (%ymm1[31:0] - %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


400> psubq_xmm_xmm (psubq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:64] - %ymm2[127:64]) ∘ (%ymm1[63:0] - %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


401> psubsb_xmm_xmm (psubsb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubsb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubsb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((sign-extend-10(%ymm1[127:120]) - sign-extend-10(%ymm2[127:120]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[127:120]) - sign-extend-10(%ymm2[127:120]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[127:120]) - sign-extend-10(%ymm2[127:120]))[7:0]) ∘ ((sign-extend-10(%ymm1[119:112]) - sign-extend-10(%ymm2[119:112]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[119:112]) - sign-extend-10(%ymm2[119:112]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[119:112]) - sign-extend-10(%ymm2[119:112]))[7:0]) ∘ ((sign-extend-10(%ymm1[111:104]) - sign-extend-10(%ymm2[111:104]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[111:104]) - sign-extend-10(%ymm2[111:104]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[111:104]) - sign-extend-10(%ymm2[111:104]))[7:0]) ∘ ((sign-extend-10(%ymm1[103:96]) - sign-extend-10(%ymm2[103:96]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[103:96]) - sign-extend-10(%ymm2[103:96]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[103:96]) - sign-extend-10(%ymm2[103:96]))[7:0]) ∘ ((sign-extend-10(%ymm1[95:88]) - sign-extend-10(%ymm2[95:88]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[95:88]) - sign-extend-10(%ymm2[95:88]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[95:88]) - sign-extend-10(%ymm2[95:88]))[7:0]) ∘ ((sign-extend-10(%ymm1[87:80]) - sign-extend-10(%ymm2[87:80]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[87:80]) - sign-extend-10(%ymm2[87:80]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[87:80]) - sign-extend-10(%ymm2[87:80]))[7:0]) ∘ ((sign-extend-10(%ymm1[79:72]) - sign-extend-10(%ymm2[79:72]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[79:72]) - sign-extend-10(%ymm2[79:72]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[79:72]) - sign-extend-10(%ymm2[79:72]))[7:0]) ∘ ((sign-extend-10(%ymm1[71:64]) - sign-extend-10(%ymm2[71:64]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[71:64]) - sign-extend-10(%ymm2[71:64]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[71:64]) - sign-extend-10(%ymm2[71:64]))[7:0]) ∘ ((sign-extend-10(%ymm1[63:56]) - sign-extend-10(%ymm2[63:56]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[63:56]) - sign-extend-10(%ymm2[63:56]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[63:56]) - sign-extend-10(%ymm2[63:56]))[7:0]) ∘ ((sign-extend-10(%ymm1[55:48]) - sign-extend-10(%ymm2[55:48]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[55:48]) - sign-extend-10(%ymm2[55:48]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[55:48]) - sign-extend-10(%ymm2[55:48]))[7:0]) ∘ ((sign-extend-10(%ymm1[47:40]) - sign-extend-10(%ymm2[47:40]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[47:40]) - sign-extend-10(%ymm2[47:40]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[47:40]) - sign-extend-10(%ymm2[47:40]))[7:0]) ∘ ((sign-extend-10(%ymm1[39:32]) - sign-extend-10(%ymm2[39:32]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[39:32]) - sign-extend-10(%ymm2[39:32]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[39:32]) - sign-extend-10(%ymm2[39:32]))[7:0]) ∘ ((sign-extend-10(%ymm1[31:24]) - sign-extend-10(%ymm2[31:24]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[31:24]) - sign-extend-10(%ymm2[31:24]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[31:24]) - sign-extend-10(%ymm2[31:24]))[7:0]) ∘ ((sign-extend-10(%ymm1[23:16]) - sign-extend-10(%ymm2[23:16]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[23:16]) - sign-extend-10(%ymm2[23:16]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[23:16]) - sign-extend-10(%ymm2[23:16]))[7:0]) ∘ ((sign-extend-10(%ymm1[15:8]) - sign-extend-10(%ymm2[15:8]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[15:8]) - sign-extend-10(%ymm2[15:8]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[15:8]) - sign-extend-10(%ymm2[15:8]))[7:0]) ∘ (sign-extend-10(%ymm1[7:0]) - sign-extend-10(%ymm2[7:0]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm1[7:0]) - sign-extend-10(%ymm2[7:0]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm1[7:0]) - sign-extend-10(%ymm2[7:0]))[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


402> psubsw_xmm_xmm (psubsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubsw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((sign-extend-18(%ymm1[127:112]) - sign-extend-18(%ymm2[127:112]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[127:112]) - sign-extend-18(%ymm2[127:112]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[127:112]) - sign-extend-18(%ymm2[127:112]))[15:0]) ∘ ((sign-extend-18(%ymm1[111:96]) - sign-extend-18(%ymm2[111:96]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[111:96]) - sign-extend-18(%ymm2[111:96]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[111:96]) - sign-extend-18(%ymm2[111:96]))[15:0]) ∘ ((sign-extend-18(%ymm1[95:80]) - sign-extend-18(%ymm2[95:80]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[95:80]) - sign-extend-18(%ymm2[95:80]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[95:80]) - sign-extend-18(%ymm2[95:80]))[15:0]) ∘ ((sign-extend-18(%ymm1[79:64]) - sign-extend-18(%ymm2[79:64]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[79:64]) - sign-extend-18(%ymm2[79:64]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[79:64]) - sign-extend-18(%ymm2[79:64]))[15:0]) ∘ ((sign-extend-18(%ymm1[63:48]) - sign-extend-18(%ymm2[63:48]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[63:48]) - sign-extend-18(%ymm2[63:48]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[63:48]) - sign-extend-18(%ymm2[63:48]))[15:0]) ∘ ((sign-extend-18(%ymm1[47:32]) - sign-extend-18(%ymm2[47:32]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[47:32]) - sign-extend-18(%ymm2[47:32]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[47:32]) - sign-extend-18(%ymm2[47:32]))[15:0]) ∘ ((sign-extend-18(%ymm1[31:16]) - sign-extend-18(%ymm2[31:16]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[31:16]) - sign-extend-18(%ymm2[31:16]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[31:16]) - sign-extend-18(%ymm2[31:16]))[15:0]) ∘ (sign-extend-18(%ymm1[15:0]) - sign-extend-18(%ymm2[15:0]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm1[15:0]) - sign-extend-18(%ymm2[15:0]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm1[15:0]) - sign-extend-18(%ymm2[15:0]))[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


403> psubusb_xmm_xmm (psubusb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubusb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubusb %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((0x0₂ ∘ %ymm1[127:120] - 0x0₂ ∘ %ymm2[127:120] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[127:120] - 0x0₂ ∘ %ymm2[127:120] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[127:120] - 0x0₂ ∘ %ymm2[127:120])[7:0]) ∘ ((0x0₂ ∘ %ymm1[119:112] - 0x0₂ ∘ %ymm2[119:112] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[119:112] - 0x0₂ ∘ %ymm2[119:112] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[119:112] - 0x0₂ ∘ %ymm2[119:112])[7:0]) ∘ ((0x0₂ ∘ %ymm1[111:104] - 0x0₂ ∘ %ymm2[111:104] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[111:104] - 0x0₂ ∘ %ymm2[111:104] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[111:104] - 0x0₂ ∘ %ymm2[111:104])[7:0]) ∘ ((0x0₂ ∘ %ymm1[103:96] - 0x0₂ ∘ %ymm2[103:96] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[103:96] - 0x0₂ ∘ %ymm2[103:96] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[103:96] - 0x0₂ ∘ %ymm2[103:96])[7:0]) ∘ ((0x0₂ ∘ %ymm1[95:88] - 0x0₂ ∘ %ymm2[95:88] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[95:88] - 0x0₂ ∘ %ymm2[95:88] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[95:88] - 0x0₂ ∘ %ymm2[95:88])[7:0]) ∘ ((0x0₂ ∘ %ymm1[87:80] - 0x0₂ ∘ %ymm2[87:80] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[87:80] - 0x0₂ ∘ %ymm2[87:80] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[87:80] - 0x0₂ ∘ %ymm2[87:80])[7:0]) ∘ ((0x0₂ ∘ %ymm1[79:72] - 0x0₂ ∘ %ymm2[79:72] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[79:72] - 0x0₂ ∘ %ymm2[79:72] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[79:72] - 0x0₂ ∘ %ymm2[79:72])[7:0]) ∘ ((0x0₂ ∘ %ymm1[71:64] - 0x0₂ ∘ %ymm2[71:64] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[71:64] - 0x0₂ ∘ %ymm2[71:64] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[71:64] - 0x0₂ ∘ %ymm2[71:64])[7:0]) ∘ ((0x0₂ ∘ %ymm1[63:56] - 0x0₂ ∘ %ymm2[63:56] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[63:56] - 0x0₂ ∘ %ymm2[63:56] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[63:56] - 0x0₂ ∘ %ymm2[63:56])[7:0]) ∘ ((0x0₂ ∘ %ymm1[55:48] - 0x0₂ ∘ %ymm2[55:48] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[55:48] - 0x0₂ ∘ %ymm2[55:48] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[55:48] - 0x0₂ ∘ %ymm2[55:48])[7:0]) ∘ ((0x0₂ ∘ %ymm1[47:40] - 0x0₂ ∘ %ymm2[47:40] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[47:40] - 0x0₂ ∘ %ymm2[47:40] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[47:40] - 0x0₂ ∘ %ymm2[47:40])[7:0]) ∘ ((0x0₂ ∘ %ymm1[39:32] - 0x0₂ ∘ %ymm2[39:32] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[39:32] - 0x0₂ ∘ %ymm2[39:32] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[39:32] - 0x0₂ ∘ %ymm2[39:32])[7:0]) ∘ ((0x0₂ ∘ %ymm1[31:24] - 0x0₂ ∘ %ymm2[31:24] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[31:24] - 0x0₂ ∘ %ymm2[31:24] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[31:24] - 0x0₂ ∘ %ymm2[31:24])[7:0]) ∘ ((0x0₂ ∘ %ymm1[23:16] - 0x0₂ ∘ %ymm2[23:16] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[23:16] - 0x0₂ ∘ %ymm2[23:16] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[23:16] - 0x0₂ ∘ %ymm2[23:16])[7:0]) ∘ ((0x0₂ ∘ %ymm1[15:8] - 0x0₂ ∘ %ymm2[15:8] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[15:8] - 0x0₂ ∘ %ymm2[15:8] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[15:8] - 0x0₂ ∘ %ymm2[15:8])[7:0]) ∘ (0x0₂ ∘ %ymm1[7:0] - 0x0₂ ∘ %ymm2[7:0] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm1[7:0] - 0x0₂ ∘ %ymm2[7:0] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm1[7:0] - 0x0₂ ∘ %ymm2[7:0])[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


404> psubusw_xmm_xmm (psubusw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubusw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubusw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((0x0₂ ∘ %ymm1[127:112] - 0x0₂ ∘ %ymm2[127:112] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[127:112] - 0x0₂ ∘ %ymm2[127:112] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[127:112] - 0x0₂ ∘ %ymm2[127:112])[15:0]) ∘ ((0x0₂ ∘ %ymm1[111:96] - 0x0₂ ∘ %ymm2[111:96] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[111:96] - 0x0₂ ∘ %ymm2[111:96] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[111:96] - 0x0₂ ∘ %ymm2[111:96])[15:0]) ∘ ((0x0₂ ∘ %ymm1[95:80] - 0x0₂ ∘ %ymm2[95:80] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[95:80] - 0x0₂ ∘ %ymm2[95:80] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[95:80] - 0x0₂ ∘ %ymm2[95:80])[15:0]) ∘ ((0x0₂ ∘ %ymm1[79:64] - 0x0₂ ∘ %ymm2[79:64] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[79:64] - 0x0₂ ∘ %ymm2[79:64] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[79:64] - 0x0₂ ∘ %ymm2[79:64])[15:0]) ∘ ((0x0₂ ∘ %ymm1[63:48] - 0x0₂ ∘ %ymm2[63:48] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[63:48] - 0x0₂ ∘ %ymm2[63:48] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[63:48] - 0x0₂ ∘ %ymm2[63:48])[15:0]) ∘ ((0x0₂ ∘ %ymm1[47:32] - 0x0₂ ∘ %ymm2[47:32] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[47:32] - 0x0₂ ∘ %ymm2[47:32] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[47:32] - 0x0₂ ∘ %ymm2[47:32])[15:0]) ∘ ((0x0₂ ∘ %ymm1[31:16] - 0x0₂ ∘ %ymm2[31:16] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[31:16] - 0x0₂ ∘ %ymm2[31:16] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[31:16] - 0x0₂ ∘ %ymm2[31:16])[15:0]) ∘ (0x0₂ ∘ %ymm1[15:0] - 0x0₂ ∘ %ymm2[15:0] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm1[15:0] - 0x0₂ ∘ %ymm2[15:0] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm1[15:0] - 0x0₂ ∘ %ymm2[15:0])[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


405> psubw_xmm_xmm (psubw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "psubw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

psubw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ ((%ymm1[127:112] - %ymm2[127:112]) ∘ ((%ymm1[111:96] - %ymm2[111:96]) ∘ ((%ymm1[95:80] - %ymm2[95:80]) ∘ ((%ymm1[79:64] - %ymm2[79:64]) ∘ ((%ymm1[63:48] - %ymm2[63:48]) ∘ ((%ymm1[47:32] - %ymm2[47:32]) ∘ ((%ymm1[31:16] - %ymm2[31:16]) ∘ (%ymm1[15:0] - %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


406> ptest_xmm_xmm (ptest %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "ptest %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:ptest_xmm_xmm:ptest %xmm2, %xmm1

407> punpckhbw_xmm_xmm (punpckhbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpckhbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpckhbw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:120] ∘ %ymm1[127:120] ∘ (%ymm2[119:112] ∘ %ymm1[119:112] ∘ (%ymm2[111:104] ∘ %ymm1[111:104] ∘ (%ymm2[103:96] ∘ %ymm1[103:96] ∘ (%ymm2[95:88] ∘ %ymm1[95:88] ∘ (%ymm2[87:80] ∘ %ymm1[87:80] ∘ (%ymm2[79:72] ∘ %ymm1[79:72] ∘ (%ymm2[71:64] ∘ %ymm1[71:64]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


408> punpckhdq_xmm_xmm (punpckhdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpckhdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpckhdq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:96] ∘ %ymm1[127:96] ∘ (%ymm2[95:64] ∘ %ymm1[95:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


409> punpckhqdq_xmm_xmm (punpckhqdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpckhqdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpckhqdq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:64] ∘ %ymm1[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


410> punpckhwd_xmm_xmm (punpckhwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpckhwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpckhwd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:112] ∘ %ymm1[127:112] ∘ (%ymm2[111:96] ∘ %ymm1[111:96] ∘ (%ymm2[95:80] ∘ %ymm1[95:80] ∘ (%ymm2[79:64] ∘ %ymm1[79:64]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


411> punpcklbw_xmm_xmm (punpcklbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpcklbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpcklbw %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:56] ∘ %ymm1[63:56] ∘ (%ymm2[55:48] ∘ %ymm1[55:48] ∘ (%ymm2[47:40] ∘ %ymm1[47:40] ∘ (%ymm2[39:32] ∘ %ymm1[39:32] ∘ (%ymm2[31:24] ∘ %ymm1[31:24] ∘ (%ymm2[23:16] ∘ %ymm1[23:16] ∘ (%ymm2[15:8] ∘ %ymm1[15:8] ∘ (%ymm2[7:0] ∘ %ymm1[7:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


412> punpckldq_xmm_xmm (punpckldq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpckldq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpckldq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:32] ∘ %ymm1[63:32] ∘ (%ymm2[31:0] ∘ %ymm1[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


413> punpcklqdq_xmm_xmm (punpcklqdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpcklqdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpcklqdq %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:0] ∘ %ymm1[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


414> punpcklwd_xmm_xmm (punpcklwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "punpcklwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

punpcklwd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:48] ∘ %ymm1[63:48] ∘ (%ymm2[47:32] ∘ %ymm1[47:32] ∘ (%ymm2[31:16] ∘ %ymm1[31:16] ∘ (%ymm2[15:0] ∘ %ymm1[15:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


415> pxor_xmm_xmm (pxor %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "pxor %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

pxor %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] ⊕ %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


416> rclb_r8_cl (rclb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclb %cl, %bl

  maybe read:      { %cl %bl %cf }
  must read:       { %cl %bl %cf }
  maybe write:     { %bl %cf %of }
  must write:      { %bl }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_left 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_left 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


417> rclb_r8_one (rclb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclb $0x1, %bl

  maybe read:      { %bl %cf }
  must read:       { %bl %cf }
  maybe write:     { %bl %cf %of }
  must write:      { %bl %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_left 0x1₉)[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_left 0x1₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


418> rclb_rh_cl (rclb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclb %cl, %ah

  maybe read:      { %ah %cl %cf }
  must read:       { %ah %cl %cf }
  maybe write:     { %ah %cf %of }
  must write:      { %ah }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_left 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[7:0] ∘ %rax[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_left 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


419> rclb_rh_one (rclb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclb $0x1, %ah

  maybe read:      { %ah %cf }
  must read:       { %ah %cf }
  maybe write:     { %ah %cf %of }
  must write:      { %ah %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_left 0x1₉)[7:0] ∘ %rax[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_left 0x1₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


420> rcll_r32_cl (rcll %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcll %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcll %cl, %ebx

  maybe read:      { %cl %ebx %cf }
  must read:       { %cl %ebx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_left 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈) % 0x21₃₃)[31:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_left 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈) % 0x21₃₃)[32:32] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


421> rcll_r32_one (rcll $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcll \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcll $0x1, %ebx

  maybe read:      { %ebx %cf }
  must read:       { %ebx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_left 0x1₃₃)[31:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_left 0x1₃₃)[32:32] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


422> rclq_r64_cl (rclq %cl, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclq %cl, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclq %cl, %rbx

  maybe read:      { %cl %rbx %cf }
  must read:       { %cl %rbx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_left 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈) % 0x41₆₅)[63:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_left 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈) % 0x41₆₅)[64:64] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


423> rclq_r64_one (rclq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclq $0x1, %rbx

  maybe read:      { %rbx %cf }
  must read:       { %rbx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_left 0x0₅₇ ∘ 0x1₈ % 0x41₆₅)[63:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_left 0x0₅₇ ∘ 0x1₈ % 0x41₆₅)[64:64] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


424> rclw_r16_cl (rclw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclw %cl, %bx

  maybe read:      { %cl %bx %cf }
  must read:       { %cl %bx %cf }
  maybe write:     { %bx %cf %of }
  must write:      { %bx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_left 0x0₉ ∘ (%rcx[7:0] & 0x1f₈) % 0x11₁₇)[15:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_left 0x0₉ ∘ (%rcx[7:0] & 0x1f₈) % 0x11₁₇)[16:16] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


425> rclw_r16_one (rclw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rclw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rclw $0x1, %bx

  maybe read:      { %bx %cf }
  must read:       { %bx %cf }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_left 0x1₁₇)[15:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_left 0x1₁₇)[16:16] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


426> rcpps_xmm_xmm (rcpps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcpps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcpps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (approx_reciprocal_single(%ymm2[127:96]) ∘ (approx_reciprocal_single(%ymm2[95:64]) ∘ (approx_reciprocal_single(%ymm2[63:32]) ∘ approx_reciprocal_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


427> rcpss_xmm_xmm (rcpss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcpss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcpss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ approx_reciprocal_single(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


428> rcrb_r8_cl (rcrb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrb %cl, %bl

  maybe read:      { %cl %bl %cf }
  must read:       { %cl %bl %cf }
  maybe write:     { %bl %cf %of }
  must write:      { %bl }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


429> rcrb_r8_one (rcrb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrb $0x1, %bl

  maybe read:      { %bl %cf }
  must read:       { %bl %cf }
  maybe write:     { %bl %cf %of }
  must write:      { %bl %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_right 0x1₉)[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[7:0] rot_right 0x1₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


430> rcrb_rh_cl (rcrb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrb %cl, %ah

  maybe read:      { %ah %cl %cf }
  must read:       { %ah %cl %cf }
  maybe write:     { %ah %cf %of }
  must write:      { %ah }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[7:0] ∘ %rax[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈) % 0x9₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


431> rcrb_rh_one (rcrb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrb $0x1, %ah

  maybe read:      { %ah %cf }
  must read:       { %ah %cf }
  maybe write:     { %ah %cf %of }
  must write:      { %ah %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_right 0x1₉)[7:0] ∘ %rax[7:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rax[15:8] rot_right 0x1₉)[8:8] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


432> rcrl_r32_cl (rcrl %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrl %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrl %cl, %ebx

  maybe read:      { %cl %ebx %cf }
  must read:       { %cl %ebx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈) % 0x21₃₃)[31:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈) % 0x21₃₃)[32:32] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


433> rcrl_r32_one (rcrl $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrl \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrl $0x1, %ebx

  maybe read:      { %ebx %cf }
  must read:       { %ebx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_right 0x1₃₃)[31:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[31:0] rot_right 0x1₃₃)[32:32] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


434> rcrq_r64_cl (rcrq %cl, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrq %cl, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrq %cl, %rbx

  maybe read:      { %cl %rbx %cf }
  must read:       { %cl %rbx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_right 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈) % 0x41₆₅)[63:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_right 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈) % 0x41₆₅)[64:64] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


435> rcrq_r64_one (rcrq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrq $0x1, %rbx

  maybe read:      { %rbx %cf }
  must read:       { %rbx %cf }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_right 0x0₅₇ ∘ 0x1₈ % 0x41₆₅)[63:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx rot_right 0x0₅₇ ∘ 0x1₈ % 0x41₆₅)[64:64] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


436> rcrw_r16_cl (rcrw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrw %cl, %bx

  maybe read:      { %cl %bx %cf }
  must read:       { %cl %bx %cf }
  maybe write:     { %bx %cf %of }
  must write:      { %bx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈) % 0x11₁₇)[15:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈) % 0x11₁₇)[16:16] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


437> rcrw_r16_one (rcrw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rcrw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rcrw $0x1, %bx

  maybe read:      { %bx %cf }
  must read:       { %bx %cf }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_right 0x1₁₇)[15:0]

%cf    : ((%cf ? 0x1₁ : 0x0₁) ∘ %rbx[15:0] rot_right 0x1₁₇)[16:16] = 0x1₁
%of    : TMP_BOOL_0

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


438> rolb_r8_cl (rolb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %of }
  must write:      { %bl }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] rot_left (%rcx[7:0] & 0x1f₈))

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


439> rolb_r8_one (rolb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %of }
  must write:      { %bl %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] rot_left 0x1₈)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


440> rolb_rh_cl (rolb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolb %cl, %ah

  maybe read:      { %ah %cl }
  must read:       { %ah %cl }
  maybe write:     { %ah %cf %of }
  must write:      { %ah }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] rot_left (%rcx[7:0] & 0x1f₈)) ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


441> rolb_rh_one (rolb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %of }
  must write:      { %ah %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] rot_left 0x1₈) ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


442> roll_r32_cl (roll %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "roll %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

roll %cl, %ebx

  maybe read:      { %cl %ebx }
  must read:       { %cl %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] rot_left 0x0₂₄ ∘ (%rcx[7:0] & 0x1f₈))

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


443> roll_r32_one (roll $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "roll \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

roll $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] rot_left 0x1₃₂)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


444> rolq_r64_cl (rolq %cl, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolq %cl, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolq %cl, %rbx

  maybe read:      { %cl %rbx }
  must read:       { %cl %rbx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx rot_left 0x0₅₆ ∘ (%rcx[7:0] & 0x3f₈)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


445> rolq_r64_one (rolq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx rot_left 0x1₆₄

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


446> rolw_r16_cl (rolw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolw %cl, %bx

  maybe read:      { %cl %bx }
  must read:       { %cl %bx }
  maybe write:     { %bx %cf %of }
  must write:      { %bx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] rot_left 0x0₈ ∘ (%rcx[7:0] & 0x1f₈))

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


447> rolw_r16_one (rolw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rolw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rolw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] rot_left 0x1₁₆)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


448> rorb_r8_cl (rorb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %of }
  must write:      { %bl }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] rot_right (%rcx[7:0] & 0x1f₈))

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


449> rorb_r8_one (rorb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %of }
  must write:      { %bl %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] rot_right 0x1₈)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


450> rorb_rh_cl (rorb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorb %cl, %ah

  maybe read:      { %ah %cl }
  must read:       { %ah %cl }
  maybe write:     { %ah %cf %of }
  must write:      { %ah }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] rot_right (%rcx[7:0] & 0x1f₈)) ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


451> rorb_rh_one (rorb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %of }
  must write:      { %ah %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] rot_right 0x1₈) ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


452> rorl_r32_cl (rorl %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorl %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorl %cl, %ebx

  maybe read:      { %cl %ebx }
  must read:       { %cl %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] rot_right 0x0₂₄ ∘ (%rcx[7:0] & 0x1f₈))

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


453> rorl_r32_one (rorl $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorl \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorl $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] rot_right 0x1₃₂)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


454> rorq_r64_cl (rorq %cl, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorq %cl, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorq %cl, %rbx

  maybe read:      { %cl %rbx }
  must read:       { %cl %rbx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx rot_right 0x0₅₆ ∘ (%rcx[7:0] & 0x3f₈)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


455> rorq_r64_one (rorq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %of }
  must write:      { %rbx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx rot_right 0x1₆₄

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


456> rorw_r16_cl (rorw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorw %cl, %bx

  maybe read:      { %cl %bx }
  must read:       { %cl %bx }
  maybe write:     { %bx %cf %of }
  must write:      { %bx }
  maybe undef:     { %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] rot_right 0x0₈ ∘ (%rcx[7:0] & 0x1f₈))

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


457> rorw_r16_one (rorw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rorw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rorw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %of }
  must write:      { %bx %cf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] rot_right 0x1₁₆)

%cf    : TMP_BOOL_0
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


458> rsqrtps_xmm_xmm (rsqrtps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rsqrtps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rsqrtps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (approx_reciprocal_sqrt_single(%ymm2[127:96]) ∘ (approx_reciprocal_sqrt_single(%ymm2[95:64]) ∘ (approx_reciprocal_sqrt_single(%ymm2[63:32]) ∘ approx_reciprocal_sqrt_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


459> rsqrtss_xmm_xmm (rsqrtss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "rsqrtss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

rsqrtss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ approx_reciprocal_sqrt_single(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


460> salb_r8_cl (salb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


461> salb_r8_one (salb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx[7:0] << 0x1₉)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:0] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:7] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


462> salb_rh_cl (salb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salb %cl, %ah

  maybe read:      { %ah %cl }
  must read:       { %ah %cl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


463> salb_rh_one (salb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:0] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rax[15:8] << 0x1₉)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:0] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:7] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


464> sall_r32_cl (sall %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sall %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sall %cl, %ebx

  maybe read:      { %cl %ebx }
  must read:       { %cl %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[31:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[31:0] = 0x0₃₂ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[31:31] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


465> sall_r32_one (sall $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sall \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sall $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[31:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[31:0] = 0x0₃₂ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[31:31] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


466> salq_r64_one (salq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[63:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[63:0] = 0x0₆₄ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[63:63] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


467> salw_r16_cl (salw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salw %cl, %bx

  maybe read:      { %cl %bx }
  must read:       { %cl %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[15:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[15:0] = 0x0₁₆ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[15:15] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


468> salw_r16_one (salw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "salw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

salw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[15:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[15:0] = 0x0₁₆ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[15:15] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


469> sarb_r8_cl (sarb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl }
  maybe undef:     { %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


470> sarb_r8_one (sarb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[8:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[1:1] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[2:2] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[3:3] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[4:4] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[5:5] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[6:6] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[7:7] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[8:1] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (%rbx[7:0] ∘ 0x0₁ sign_shift_right 0x1₉)[8:8] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


471> sarb_rh_cl (sarb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarb %cl, %ah

  maybe read:      { %ah %cl }
  must read:       { %ah %cl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah }
  maybe undef:     { %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


472> sarb_rh_one (sarb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[8:1] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[1:1] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[2:2] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[3:3] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[4:4] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[5:5] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[6:6] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[7:7] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[8:1] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (%rax[15:8] ∘ 0x0₁ sign_shift_right 0x1₉)[8:8] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


473> sarl_r32_cl (sarl %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarl %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarl %cl, %ebx

  maybe read:      { %cl %ebx }
  must read:       { %cl %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx }
  maybe undef:     { %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[32:1]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[32:1] = 0x0₃₂ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[32:32] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


474> sarl_r32_one (sarl $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarl \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarl $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[32:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[1:1] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[2:2] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[3:3] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[4:4] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[5:5] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[6:6] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[7:7] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[32:1] = 0x0₃₂ ∨ false ∧ %zf
%sf    : true ∧ (%rbx[31:0] ∘ 0x0₁ sign_shift_right 0x1₃₃)[32:32] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


475> sarq_r64_one (sarq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[64:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[1:1] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[2:2] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[3:3] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[4:4] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[5:5] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[6:6] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[7:7] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[64:1] = 0x0₆₄ ∨ false ∧ %zf
%sf    : true ∧ (%rbx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[64:64] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


476> sarw_r16_cl (sarw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarw %cl, %bx

  maybe read:      { %cl %bx }
  must read:       { %cl %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx }
  maybe undef:     { %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[16:1]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[16:1] = 0x0₁₆ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[16:16] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


477> sarw_r16_one (sarw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[16:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[1:1] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[2:2] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[3:3] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[4:4] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[5:5] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[6:6] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[7:7] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[16:1] = 0x0₁₆ ∨ false ∧ %zf
%sf    : true ∧ (%rbx[15:0] ∘ 0x0₁ sign_shift_right 0x1₁₇)[16:16] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


478> sarxl_r32_r32_r32 (sarxl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarxl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:sarxl_r32_r32_r32:sarxl %edx, %ecx, %ebx

479> sarxq_r64_r64_r64 (sarxq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sarxq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sarxq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { bmi2 }

Formula:

%rbx   : (%rcx ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ (%rdx[7:0] & 0x3f₈))[64:1]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


480> sbbb_r8_r8 (sbbb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbb %cl, %bl

  maybe read:      { %cl %bl %cf }
  must read:       { %cl %bl %cf }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (!%rcx[7:7] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(!%rcx[7:7] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rcx[7:0] : 0x0₁ ∘ !%rcx[7:0] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


481> sbbb_r8_rh (sbbb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbb %ah, %bl

  maybe read:      { %ah %bl %cf }
  must read:       { %ah %bl %cf }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (!%rax[15:15] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(!%rax[15:15] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rax[15:8] : 0x0₁ ∘ !%rax[15:8] + 0x1₉) + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


482> sbbb_rh_r8 (sbbb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbb %bl, %ah

  maybe read:      { %ah %bl %cf }
  must read:       { %ah %bl %cf }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[3:0] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (!%rbx[7:7] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(!%rbx[7:7] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rbx[7:0] : 0x0₁ ∘ !%rbx[7:0] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


483> sbbb_rh_rh (sbbb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbb %bh, %ah

  maybe read:      { %ah %bh %cf }
  must read:       { %ah %bh %cf }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[11:8] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (!%rbx[15:15] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(!%rbx[15:15] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rbx[15:8] : 0x0₁ ∘ !%rbx[15:8] + 0x1₉) + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


484> sbbl_r32_r32 (sbbl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbl %ecx, %ebx

  maybe read:      { %ecx %ebx %cf }
  must read:       { %ecx %ebx %cf }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[31:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[32:32] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[31:0] = 0x0₃₂
%sf    : ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁
%of    : (!%rcx[31:31] = 0x1₁ ↔ %rbx[31:31] = 0x1₁) ∧ !(!%rcx[31:31] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rcx[31:0] : 0x0₁ ∘ !%rcx[31:0] + 0x1₃₃) + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


485> sbbq_r64_r64 (sbbq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbq %rcx, %rbx

  maybe read:      { %rcx %rbx %cf }
  must read:       { %rcx %rbx %cf }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[63:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[64:64] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[63:0] = 0x0₆₄
%sf    : ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[63:63] = 0x1₁
%of    : (!%rcx[63:63] = 0x1₁ ↔ %rbx[63:63] = 0x1₁) ∧ !(!%rcx[63:63] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rcx : 0x0₁ ∘ !%rcx + 0x1₆₅) + 0x0₁ ∘ %rbx)[63:63] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


486> sbbw_r16_r16 (sbbw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sbbw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sbbw %cx, %bx

  maybe read:      { %cx %bx %cf }
  must read:       { %cx %bx %cf }
  maybe write:     { %bx %cf %pf %af %zf %sf %of }
  must write:      { %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[15:0]

%cf    : !(((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[16:16] = 0x1₁)
%pf    : !(((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[0:0] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[1:1] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[2:2] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[3:3] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[4:4] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[5:5] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[6:6] = 0x1₁ ⊕ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[15:0] = 0x0₁₆
%sf    : ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁
%of    : (!%rcx[15:15] = 0x1₁ ↔ %rbx[15:15] = 0x1₁) ∧ !(!%rcx[15:15] = 0x1₁ ↔ ((%cf ? 0x0₁ ∘ !%rcx[15:0] : 0x0₁ ∘ !%rcx[15:0] + 0x1₁₇) + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


487> setae_r8 (setae %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setae %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setae %bl

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%cf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


488> setae_rh (setae %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setae %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setae %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


489> seta_r8 (seta %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "seta %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

seta %bl

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%cf ∧ !%zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


490> seta_rh (seta %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "seta %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

seta %ah

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%cf ∧ !%zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


491> setbe_r8 (setbe %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setbe %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setbe %bl

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%cf ∨ %zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


492> setbe_rh (setbe %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setbe %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setbe %ah

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%cf ∨ %zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


493> setb_r8 (setb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setb %bl

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%cf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


494> setb_rh (setb %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setb %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setb %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


495> setc_r8 (setc %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setc %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setc %bl

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%cf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


496> setc_rh (setc %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setc %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setc %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


497> sete_r8 (sete %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sete %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sete %bl

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


498> sete_rh (sete %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sete %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sete %ah

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


499> setge_r8 (setge %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setge %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setge %bl

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%sf ↔ %of ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


500> setge_rh (setge %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setge %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setge %ah

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%sf ↔ %of ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


501> setg_r8 (setg %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setg %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setg %bl

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%zf ∧ (%sf ↔ %of) ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


502> setg_rh (setg %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setg %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setg %ah

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%zf ∧ (%sf ↔ %of) ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


503> setle_r8 (setle %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setle %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setle %bl

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%zf ∨ !(%sf ↔ %of) ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


504> setle_rh (setle %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setle %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setle %ah

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%zf ∨ !(%sf ↔ %of) ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


505> setl_r8 (setl %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setl %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setl %bl

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!(%sf ↔ %of) ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


506> setl_rh (setl %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setl %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setl %ah

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!(%sf ↔ %of) ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


507> setnae_r8 (setnae %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnae %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnae %bl

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%cf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


508> setnae_rh (setnae %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnae %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnae %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


509> setna_r8 (setna %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setna %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setna %bl

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%cf ∨ %zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


510> setna_rh (setna %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setna %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setna %ah

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%cf ∨ %zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


511> setnbe_r8 (setnbe %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnbe %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnbe %bl

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%cf ∧ !%zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


512> setnbe_rh (setnbe %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnbe %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnbe %ah

  maybe read:      { %cf %zf }
  must read:       { %cf %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%cf ∧ !%zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


513> setnb_r8 (setnb %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnb %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnb %bl

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%cf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


514> setnb_rh (setnb %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnb %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnb %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


515> setnc_r8 (setnc %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnc %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnc %bl

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%cf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


516> setnc_rh (setnc %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnc %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnc %ah

  maybe read:      { %cf }
  must read:       { %cf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%cf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


517> setne_r8 (setne %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setne %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setne %bl

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


518> setne_rh (setne %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setne %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setne %ah

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


519> setnge_r8 (setnge %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnge %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnge %bl

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!(%sf ↔ %of) ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


520> setnge_rh (setnge %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnge %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnge %ah

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!(%sf ↔ %of) ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


521> setng_r8 (setng %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setng %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setng %bl

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%zf ∨ !(%sf ↔ %of) ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


522> setng_rh (setng %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setng %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setng %ah

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%zf ∨ !(%sf ↔ %of) ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


523> setnle_r8 (setnle %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnle %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnle %bl

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%zf ∧ (%sf ↔ %of) ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


524> setnle_rh (setnle %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnle %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnle %ah

  maybe read:      { %zf %sf %of }
  must read:       { %zf %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%zf ∧ (%sf ↔ %of) ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


525> setnl_r8 (setnl %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnl %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnl %bl

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%sf ↔ %of ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


526> setnl_rh (setnl %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnl %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnl %ah

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%sf ↔ %of ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


527> setno_r8 (setno %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setno %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setno %bl

  maybe read:      { %of }
  must read:       { %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%of ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


528> setno_rh (setno %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setno %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setno %ah

  maybe read:      { %of }
  must read:       { %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%of ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


529> setnp_r8 (setnp %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnp %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnp %bl

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%pf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


530> setnp_rh (setnp %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnp %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnp %ah

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%pf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


531> setns_r8 (setns %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setns %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setns %bl

  maybe read:      { %sf }
  must read:       { %sf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%sf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


532> setns_rh (setns %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setns %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setns %ah

  maybe read:      { %sf }
  must read:       { %sf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%sf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


533> setnz_r8 (setnz %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnz %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnz %bl

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


534> setnz_rh (setnz %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setnz %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setnz %ah

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


535> seto_r8 (seto %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "seto %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

seto %bl

  maybe read:      { %of }
  must read:       { %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%of ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


536> seto_rh (seto %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "seto %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

seto %ah

  maybe read:      { %of }
  must read:       { %of }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%of ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


537> setpe_r8 (setpe %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setpe %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setpe %bl

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%pf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


538> setpe_rh (setpe %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setpe %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setpe %ah

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%pf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


539> setpo_r8 (setpo %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setpo %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setpo %bl

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (!%pf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


540> setpo_rh (setpo %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setpo %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setpo %ah

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (!%pf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


541> setp_r8 (setp %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setp %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setp %bl

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%pf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


542> setp_rh (setp %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setp %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setp %ah

  maybe read:      { %pf }
  must read:       { %pf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%pf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


543> sets_r8 (sets %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sets %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sets %bl

  maybe read:      { %sf }
  must read:       { %sf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%sf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


544> sets_rh (sets %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sets %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sets %ah

  maybe read:      { %sf }
  must read:       { %sf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%sf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


545> setz_r8 (setz %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setz %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setz %bl

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%zf ? 0x1₈ : 0x0₈)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


546> setz_rh (setz %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "setz %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

setz %ah

  maybe read:      { %zf }
  must read:       { %zf }
  maybe write:     { %ah }
  must write:      { %ah }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%zf ? 0x1₈ : 0x0₈) ∘ %rax[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


547> shlb_r8_cl (shlb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[7:0] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


548> shlb_r8_one (shlb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx[7:0] << 0x1₉)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:0] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx[7:0] << 0x1₉)[7:7] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


549> shlb_rh_cl (shlb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlb %cl, %ah

  maybe read:      { %ah %cl }
  must read:       { %ah %cl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:0] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rax[15:8] << 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


550> shlb_rh_one (shlb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:0] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rax[15:8] << 0x1₉)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:0] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rax[15:8] << 0x1₉)[7:7] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


551> shll_r32_cl (shll %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shll %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shll %cl, %ebx

  maybe read:      { %cl %ebx }
  must read:       { %cl %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[31:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[31:0] = 0x0₃₂ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[31:0] << 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[31:31] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


552> shll_r32_one (shll $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shll \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shll $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[31:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[31:0] = 0x0₃₂ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx[31:0] << 0x1₃₃)[31:31] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


553> shlq_r64_cl (shlq %cl, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlq %cl, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlq %cl, %rbx

  maybe read:      { %cl %rbx }
  must read:       { %cl %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[63:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x3f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x3f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x3f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x3f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x3f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[63:0] = 0x0₆₄ ∨ !(!((%rcx[7:0] & 0x3f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x3f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ (%rcx[7:0] & 0x3f₈))[63:63] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x3f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


554> shlq_r64_one (shlq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[63:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[63:0] = 0x0₆₄ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx << 0x0₅₇ ∘ 0x1₈)[63:63] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


555> shlw_r16_cl (shlw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlw %cl, %bx

  maybe read:      { %cl %bx }
  must read:       { %cl %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[15:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[15:0] = 0x0₁₆ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (0x0₁ ∘ %rbx[15:0] << 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[15:15] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


556> shlw_r16_one (shlw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[15:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[7:7] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[15:0] = 0x0₁₆ ∨ false ∧ %zf
%sf    : true ∧ (0x0₁ ∘ %rbx[15:0] << 0x1₁₇)[15:15] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


557> shlxl_r32_r32_r32 (shlxl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlxl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:shlxl_r32_r32_r32:shlxl %edx, %ecx, %ebx

558> shlxq_r64_r64_r64 (shlxq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shlxq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shlxq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { bmi2 }

Formula:

%rbx   : (0x0₁ ∘ %rcx << 0x0₅₇ ∘ (%rdx[7:0] & 0x3f₈))[63:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


559> shrb_r8_cl (shrb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[7:0] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


560> shrb_r8_one (shrb $0x1, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrb \$0x1, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrb $0x1, %bl

  maybe read:      { %bl }
  must read:       { %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[8:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[1:1] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[2:2] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[3:3] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[4:4] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[5:5] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[6:6] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[7:7] = 0x1₁ ⊕ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[8:1] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (%rbx[7:0] ∘ 0x0₁ >> 0x1₉)[8:8] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


561> shrb_rh_cl (shrb %cl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrb %cl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrb %cl, %ah

  maybe read:      { %ah %cl }
  must read:       { %ah %cl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:1] = 0x0₈ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rax[15:8] ∘ 0x0₁ >> 0x0₁ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


562> shrb_rh_one (shrb $0x1, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrb \$0x1, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrb $0x1, %ah

  maybe read:      { %ah }
  must read:       { %ah }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[8:1] ∘ %rax[7:0]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rax[15:8] ∘ 0x0₁ >> 0x1₉)[1:1] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[2:2] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[3:3] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[4:4] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[5:5] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[6:6] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[7:7] = 0x1₁ ⊕ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[8:1] = 0x0₈ ∨ false ∧ %zf
%sf    : true ∧ (%rax[15:8] ∘ 0x0₁ >> 0x1₉)[8:8] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


563> shrl_r32_cl (shrl %cl, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrl %cl, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrl %cl, %ebx

  maybe read:      { %cl %ebx }
  must read:       { %cl %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[32:1]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[32:1] = 0x0₃₂ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[31:0] ∘ 0x0₁ >> 0x0₂₅ ∘ (%rcx[7:0] & 0x1f₈))[32:32] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


564> shrl_r32_one (shrl $0x1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrl \$0x1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrl $0x1, %ebx

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[32:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[1:1] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[2:2] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[3:3] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[4:4] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[5:5] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[6:6] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[7:7] = 0x1₁ ⊕ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[32:1] = 0x0₃₂ ∨ false ∧ %zf
%sf    : true ∧ (%rbx[31:0] ∘ 0x0₁ >> 0x1₃₃)[32:32] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


565> shrq_r64_one (shrq $0x1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrq \$0x1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrq $0x1, %rbx

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[64:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[1:1] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[2:2] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[3:3] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[4:4] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[5:5] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[6:6] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[7:7] = 0x1₁ ⊕ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[64:1] = 0x0₆₄ ∨ false ∧ %zf
%sf    : true ∧ (%rbx ∘ 0x0₁ >> 0x0₅₇ ∘ 0x1₈)[64:64] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


566> shrw_r16_cl (shrw %cl, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrw %cl, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrw %cl, %bx

  maybe read:      { %cl %bx }
  must read:       { %cl %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx }
  maybe undef:     { %cf %af %of }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[16:1]

%cf    : TMP_BOOL_0
%pf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ !((%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[1:1] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[2:2] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[3:3] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[4:4] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[5:5] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[6:6] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[7:7] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[8:8] = 0x1₁) ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %pf
%af    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ TMP_BOOL_2 ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %af
%zf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[16:1] = 0x0₁₆ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %zf
%sf    : !((%rcx[7:0] & 0x1f₈) = 0x0₈) ∧ (%rbx[15:0] ∘ 0x0₁ >> 0x0₉ ∘ (%rcx[7:0] & 0x1f₈))[16:16] = 0x1₁ ∨ !(!((%rcx[7:0] & 0x1f₈) = 0x0₈)) ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


567> shrw_r16_one (shrw $0x1, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrw \$0x1, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrw $0x1, %bx

  maybe read:      { %bx }
  must read:       { %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[16:1]

%cf    : TMP_BOOL_0
%pf    : true ∧ !((%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[1:1] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[2:2] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[3:3] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[4:4] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[5:5] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[6:6] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[7:7] = 0x1₁ ⊕ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[8:8] = 0x1₁) ∨ false ∧ %pf
%af    : true ∧ TMP_BOOL_2 ∨ false ∧ %af
%zf    : true ∧ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[16:1] = 0x0₁₆ ∨ false ∧ %zf
%sf    : true ∧ (%rbx[15:0] ∘ 0x0₁ >> 0x1₁₇)[16:16] = 0x1₁ ∨ false ∧ %sf
%of    : TMP_BOOL_1

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


568> shrxl_r32_r32_r32 (shrxl %edx, %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrxl %edx, %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrxl %edx, %ecx, %ebx

  maybe read:      { %ecx %edx }
  must read:       { %ecx %edx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { bmi2 }

Formula:

%rbx   : (0x0₃₂ ∘ %rcx[31:0] ∘ 0x0₁ >> 0x0₅₇ ∘ (((%rdx[7:0] | (0x0₁ ∘ (0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[63:63] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[62:62]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[61:61] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[59:59] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[58:58]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[57:57] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[55:55] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[54:54]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[53:53] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[51:51] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[50:50]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[49:49] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[47:47] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[46:46]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[45:45] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[43:43] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[42:42]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[41:41] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[39:39] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[38:38]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[37:37] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[35:35] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[34:34]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[33:33] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[31:31] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[30:30]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[29:29] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[27:27] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[26:26]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[25:25] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[23:23] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[22:22]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[21:21] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[19:19] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[18:18]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[17:17] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[15:15] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[14:14]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[13:13] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[11:11] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[10:10]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[9:9] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[7:7] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[6:6]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[5:5] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[3:3] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[2:2]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[1:1] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[0:0]))))))[31:0] + 0xffffffff₃₃)[7:0]) ⊕ (0x0₁ ∘ (0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[63:63] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[62:62]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[61:61] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[59:59] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[58:58]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[57:57] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[55:55] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[54:54]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[53:53] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[51:51] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[50:50]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[49:49] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[47:47] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[46:46]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[45:45] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[43:43] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[42:42]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[41:41] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[39:39] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[38:38]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[37:37] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[35:35] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[34:34]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[33:33] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[31:31] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[30:30]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[29:29] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[27:27] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[26:26]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[25:25] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[23:23] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[22:22]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[21:21] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[19:19] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[18:18]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[17:17] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[15:15] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[14:14]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[13:13] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[11:11] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[10:10]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[9:9] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[7:7] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[6:6]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[5:5] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[3:3] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[2:2]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[1:1] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0])) + 0x0₁ ∘ (0x0₆₄ ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ 0x0₆₄)[31:0]))[0:0]))))))[31:0] + 0xffffffff₃₃)[7:0]) & 0x3f₈))[64:1]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


569> shrxq_r64_r64_r64 (shrxq %rdx, %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "shrxq %rdx, %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

shrxq %rdx, %rcx, %rbx

  maybe read:      { %rcx %rdx }
  must read:       { %rcx %rdx }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { bmi2 }

Formula:

%rbx   : (%rcx ∘ 0x0₁ >> 0x0₅₇ ∘ (%rdx[7:0] & 0x3f₈))[64:1]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


570> sqrtpd_xmm_xmm (sqrtpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sqrtpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sqrtpd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sqrt_double(%ymm2[127:64]) ∘ sqrt_double(%ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


571> sqrtps_xmm_xmm (sqrtps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sqrtps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sqrtps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sqrt_single(%ymm2[127:96]) ∘ (sqrt_single(%ymm2[95:64]) ∘ (sqrt_single(%ymm2[63:32]) ∘ sqrt_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


572> sqrtsd_xmm_xmm (sqrtsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sqrtsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sqrtsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ sqrt_double(%ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


573> sqrtss_xmm_xmm (sqrtss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "sqrtss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

sqrtss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ sqrt_single(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


574> stc (stc)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "stc" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

stc

  maybe read:      { }
  must read:       { }
  maybe write:     { %cf }
  must write:      { %cf }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%cf    : true

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


575> subb_r8_r8 (subb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : !((0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (!%rcx[7:7] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(!%rcx[7:7] = 0x1₁ ↔ (0x0₁ ∘ !%rcx[7:0] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


576> subb_r8_rh (subb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %bl %cf %pf %af %zf %sf %of }
  must write:      { %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : !((0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (!%rax[15:15] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(!%rax[15:15] = 0x1₁ ↔ (0x0₁ ∘ !%rax[15:8] + 0x1₉ + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


577> subb_rh_r8 (subb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : !((0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[3:0] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (!%rbx[7:7] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(!%rbx[7:7] = 0x1₁ ↔ (0x0₁ ∘ !%rbx[7:0] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


578> subb_rh_rh (subb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %cf %pf %af %zf %sf %of }
  must write:      { %ah %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]

%cf    : !((0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[11:8] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (!%rbx[15:15] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(!%rbx[15:15] = 0x1₁ ↔ (0x0₁ ∘ !%rbx[15:8] + 0x1₉ + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


579> subl_r32_r32 (subl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:0]

%cf    : !((0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[32:32] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:0] = 0x0₃₂
%sf    : (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁
%of    : (!%rcx[31:31] = 0x1₁ ↔ %rbx[31:31] = 0x1₁) ∧ !(!%rcx[31:31] = 0x1₁ ↔ (0x0₁ ∘ !%rcx[31:0] + 0x1₃₃ + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


580> subpd_xmm_xmm (subpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sub_double(%ymm1[127:64], %ymm2[127:64]) ∘ sub_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


581> subps_xmm_xmm (subps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (sub_single(%ymm1[127:96], %ymm2[127:96]) ∘ (sub_single(%ymm1[95:64], %ymm2[95:64]) ∘ (sub_single(%ymm1[63:32], %ymm2[63:32]) ∘ sub_single(%ymm1[31:0], %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


582> subq_r64_r64 (subq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:0]

%cf    : !((0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[64:64] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:0] = 0x0₆₄
%sf    : (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:63] = 0x1₁
%of    : (!%rcx[63:63] = 0x1₁ ↔ %rbx[63:63] = 0x1₁) ∧ !(!%rcx[63:63] = 0x1₁ ↔ (0x0₁ ∘ !%rcx + 0x1₆₅ + 0x0₁ ∘ %rbx)[63:63] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


583> subsd_xmm_xmm (subsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subsd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:64] ∘ sub_double(%ymm1[63:0], %ymm2[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


584> subss_xmm_xmm (subss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subss %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:32] ∘ sub_single(%ymm1[31:0], %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


585> subw_r16_r16 (subw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "subw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

subw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf %pf %af %zf %sf %of }
  must write:      { %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:0]

%cf    : !((0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[16:16] = 0x1₁)
%pf    : !((0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:0] = 0x0₁₆
%sf    : (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁
%of    : (!%rcx[15:15] = 0x1₁ ↔ %rbx[15:15] = 0x1₁) ∧ !(!%rcx[15:15] = 0x1₁ ↔ (0x0₁ ∘ !%rcx[15:0] + 0x1₁₇ + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


586> testb_r8_r8 (testb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] & %rcx[7:0]) = 0x0₈
%sf    : (%rbx[7:7] & %rcx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


587> testb_r8_rh (testb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rbx[0:0] & %rax[8:8]) = 0x1₁ ⊕ (%rbx[1:1] & %rax[9:9]) = 0x1₁ ⊕ (%rbx[2:2] & %rax[10:10]) = 0x1₁ ⊕ (%rbx[3:3] & %rax[11:11]) = 0x1₁ ⊕ (%rbx[4:4] & %rax[12:12]) = 0x1₁ ⊕ (%rbx[5:5] & %rax[13:13]) = 0x1₁ ⊕ (%rbx[6:6] & %rax[14:14]) = 0x1₁ ⊕ (%rbx[7:7] & %rax[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] & %rax[15:8]) = 0x0₈
%sf    : (%rbx[7:7] & %rax[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


588> testb_rh_r8 (testb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rax[8:8] & %rbx[0:0]) = 0x1₁ ⊕ (%rax[9:9] & %rbx[1:1]) = 0x1₁ ⊕ (%rax[10:10] & %rbx[2:2]) = 0x1₁ ⊕ (%rax[11:11] & %rbx[3:3]) = 0x1₁ ⊕ (%rax[12:12] & %rbx[4:4]) = 0x1₁ ⊕ (%rax[13:13] & %rbx[5:5]) = 0x1₁ ⊕ (%rax[14:14] & %rbx[6:6]) = 0x1₁ ⊕ (%rax[15:15] & %rbx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] & %rbx[7:0]) = 0x0₈
%sf    : (%rax[15:15] & %rbx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


589> testb_rh_rh (testb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rax[8:8] & %rbx[8:8]) = 0x1₁ ⊕ (%rax[9:9] & %rbx[9:9]) = 0x1₁ ⊕ (%rax[10:10] & %rbx[10:10]) = 0x1₁ ⊕ (%rax[11:11] & %rbx[11:11]) = 0x1₁ ⊕ (%rax[12:12] & %rbx[12:12]) = 0x1₁ ⊕ (%rax[13:13] & %rbx[13:13]) = 0x1₁ ⊕ (%rax[14:14] & %rbx[14:14]) = 0x1₁ ⊕ (%rax[15:15] & %rbx[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] & %rbx[15:8]) = 0x0₈
%sf    : (%rax[15:15] & %rbx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


590> testl_r32_r32 (testl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[31:0] & %rcx[31:0]) = 0x0₃₂
%sf    : (%rbx[31:31] & %rcx[31:31]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


591> testq_r64_r64 (testq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx & %rcx) = 0x0₆₄
%sf    : (%rbx[63:63] & %rcx[63:63]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


592> testw_r16_r16 (testw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "testw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

testw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %cf %pf %zf %sf %of }
  must write:      { %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%cf    : false
%pf    : !((%rbx[0:0] & %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] & %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] & %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] & %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] & %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] & %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] & %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] & %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[15:0] & %rcx[15:0]) = 0x0₁₆
%sf    : (%rbx[15:15] & %rcx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


593> tzcntl_r32_r32 (tzcntl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "tzcntl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

tzcntl %ecx, %ebx

  maybe read:      { %ecx }
  must read:       { %ecx }
  maybe write:     { %rbx %cf %zf }
  must write:      { %rbx %cf %zf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { bmi1 }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ (0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[63:63] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[62:62]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[61:61] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[59:59] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[58:58]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[57:57] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[55:55] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[54:54]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[53:53] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[51:51] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[50:50]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[49:49] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[47:47] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[46:46]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[45:45] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[43:43] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[42:42]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[41:41] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[39:39] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[38:38]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[37:37] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[35:35] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[34:34]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[33:33] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[31:31] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[30:30]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[29:29] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[27:27] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[26:26]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[25:25] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[23:23] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[22:22]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[21:21] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[19:19] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[18:18]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[17:17] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[15:15] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[14:14]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[13:13] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[11:11] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[10:10]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[9:9] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[7:7] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[6:6]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[5:5] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[3:3] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[2:2]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[1:1] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff₃₃)[31:0]

%cf    : (0x0₁ ∘ (sign-extend-64((((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[7:0] ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[7:0]) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64((((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[7:0] ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[7:0]) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[8:8] = 0x1₁
%pf    : TMP_BOOL_24
%af    : TMP_BOOL_25
%zf    : (0x0₁ ∘ (0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[63:63] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[62:62]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[61:61] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[59:59] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[58:58]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[57:57] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[55:55] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[54:54]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[53:53] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[51:51] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[50:50]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[49:49] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[47:47] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[46:46]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[45:45] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[43:43] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[42:42]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[41:41] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[39:39] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[38:38]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[37:37] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[35:35] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[34:34]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[33:33] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[31:31] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[30:30]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[29:29] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[27:27] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[26:26]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[25:25] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[23:23] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[22:22]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[21:21] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[19:19] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[18:18]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[17:17] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[15:15] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[14:14]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[13:13] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[11:11] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[10:10]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[9:9] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[7:7] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[6:6]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[5:5] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[3:3] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[2:2]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[1:1] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ %rcx[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff₃₃)[31:0] = 0x0₃₂
%sf    : TMP_BOOL_26
%of    : TMP_BOOL_27

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


594> tzcntq_r64_r64 (tzcntq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "tzcntq %rcx, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:tzcntq_r64_r64:tzcntq %rcx, %rbx

595> tzcntw_r16_r16 (tzcntw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "tzcntw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

tzcntw %cx, %bx

  maybe read:      { %cx }
  must read:       { %cx }
  maybe write:     { %bx %cf %zf }
  must write:      { %bx %cf %zf }
  maybe undef:     { %pf %af %sf %of }
  must undef:      { %pf %af %sf %of }
  required flags:  { bmi1 }

Formula:

%rbx   : %rbx[63:16] ∘ (((0x0₁ ∘ (sign-extend-64((((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0] ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0]) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64((((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0] ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0]) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[8:8] = 0x1₁ ? 0x100₁₆ : 0x0₁₆) = 0x0₁₆ ? (0x0₁ ∘ (0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[63:63] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[62:62]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[61:61] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[59:59] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[58:58]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[57:57] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[55:55] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[54:54]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[53:53] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[51:51] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[50:50]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[49:49] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[47:47] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[46:46]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[45:45] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[43:43] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[42:42]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[41:41] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[39:39] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[38:38]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[37:37] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[35:35] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[34:34]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[33:33] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[31:31] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[30:30]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[29:29] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[27:27] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[26:26]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[25:25] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[23:23] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[22:22]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[21:21] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[19:19] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[18:18]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[17:17] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[15:15] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[14:14]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[13:13] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[11:11] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[10:10]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[9:9] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:7] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[6:6]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[5:5] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[3:3] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[2:2]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[1:1] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff₃₃)[15:0] : 0x10₁₆)

%cf    : (0x0₁ ∘ (sign-extend-64((((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0] ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0]) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1] + 0x0₁ ∘ (sign-extend-64((((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0] ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:0]) ∘ 0x0₁ sign_shift_right 0x0₅₇ ∘ 0x1₈)[8:1])[8:8] = 0x1₁
%pf    : TMP_BOOL_31
%af    : TMP_BOOL_32
%zf    : (0x0₁ ∘ (0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[63:63] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[62:62]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[61:61] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[60:60])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[59:59] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[58:58]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[57:57] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[56:56]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[55:55] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[54:54]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[53:53] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[52:52])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[51:51] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[50:50]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[49:49] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[48:48])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[47:47] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[46:46]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[45:45] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[44:44])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[43:43] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[42:42]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[41:41] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[40:40]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[39:39] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[38:38]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[37:37] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[36:36])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[35:35] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[34:34]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[33:33] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[32:32]))))) + 0x0₃₂ ∘ (0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[31:31] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[30:30]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[29:29] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[28:28])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[27:27] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[26:26]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[25:25] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[24:24]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[23:23] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[22:22]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[21:21] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[20:20])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[19:19] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[18:18]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[17:17] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[16:16])))) + 0x0₁₆ ∘ (0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[15:15] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[14:14]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[13:13] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[12:12])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[11:11] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[10:10]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[9:9] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[8:8]))) + 0x0₈ ∘ (0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[7:7] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[6:6]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[5:5] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[4:4])) + 0x0₄ ∘ (0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[3:3] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[2:2]) + 0x0₂ ∘ (0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[1:1] + 0x0₁ ∘ (((0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40] + 0x0₁ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[47:40])[8:8] = 0x1₁ ? 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]) + 0x1₆₅ : 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0])) + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0] ⊕ 0x0₃₂ ∘ (0x0₁ ∘ 0xffffffffffffffff₆₄ + 0x0₁ ∘ (0x0₃₂ ∘ sign-extend-64(%rcx[15:0])[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff₃₃)[31:0] = 0x0₃₂
%sf    : TMP_BOOL_33
%of    : TMP_BOOL_34

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


596> ucomisd_xmm_xmm (ucomisd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "ucomisd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:ucomisd_xmm_xmm:ucomisd %xmm2, %xmm1

597> ucomiss_xmm_xmm (ucomiss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "ucomiss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:ucomiss_xmm_xmm:ucomiss %xmm2, %xmm1

598> unpckhpd_xmm_xmm (unpckhpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "unpckhpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

unpckhpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:64] ∘ %ymm1[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


599> unpckhps_xmm_xmm (unpckhps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "unpckhps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

unpckhps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[127:96] ∘ %ymm1[127:96] ∘ %ymm2[95:64] ∘ %ymm1[95:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


600> unpcklpd_xmm_xmm (unpcklpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "unpcklpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

unpcklpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:0] ∘ %ymm1[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


601> unpcklps_xmm_xmm (unpcklps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "unpcklps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

unpcklps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm2[63:32] ∘ %ymm1[63:32] ∘ %ymm2[31:0] ∘ %ymm1[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


602> vaddpd_xmm_xmm_xmm (vaddpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vaddpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₆₄ ∘ (0x0₆₄ ∘ (add_double(%ymm2[127:64], %ymm3[127:64]) ∘ add_double(%ymm2[63:0], %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


603> vaddps_xmm_xmm_xmm (vaddps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vaddps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (add_single(%ymm2[127:96], %ymm3[127:96]) ∘ (add_single(%ymm2[95:64], %ymm3[95:64]) ∘ (add_single(%ymm2[63:32], %ymm3[63:32]) ∘ add_single(%ymm2[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


604> vaddsd_xmm_xmm_xmm (vaddsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vaddsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ add_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


605> vaddss_xmm_xmm_xmm (vaddss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vaddss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ add_single(%ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


606> vaddsubpd_xmm_xmm_xmm (vaddsubpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddsubpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vaddsubpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (add_double(%ymm2[127:64], %ymm3[127:64]) ∘ sub_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


607> vaddsubpd_ymm_ymm_ymm (vaddsubpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddsubpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vaddsubpd_ymm_ymm_ymm:vaddsubpd %ymm3, %ymm2, %ymm1

608> vaddsubps_xmm_xmm_xmm (vaddsubps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddsubps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vaddsubps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (add_single(%ymm2[127:96], %ymm3[127:96]) ∘ sub_single(%ymm2[95:64], %ymm3[95:64]) ∘ add_single(%ymm2[63:32], %ymm3[63:32]) ∘ sub_single(%ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


609> vaddsubps_ymm_ymm_ymm (vaddsubps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vaddsubps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vaddsubps_ymm_ymm_ymm:vaddsubps %ymm3, %ymm2, %ymm1

610> vandnpd_xmm_xmm_xmm (vandnpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandnpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandnpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (!%ymm2[127:0] & %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


611> vandnpd_ymm_ymm_ymm (vandnpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandnpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandnpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : !%ymm2 & %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


612> vandnps_xmm_xmm_xmm (vandnps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandnps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandnps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (!%ymm2[127:0] & %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


613> vandnps_ymm_ymm_ymm (vandnps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandnps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandnps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : !%ymm2 & %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


614> vandpd_xmm_xmm_xmm (vandpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] & %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


615> vandpd_ymm_ymm_ymm (vandpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2 & %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


616> vandps_xmm_xmm_xmm (vandps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] & %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


617> vandps_ymm_ymm_ymm (vandps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vandps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vandps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2 & %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


618> vblendvpd_xmm_xmm_xmm_xmm (vblendvpd %xmm4, %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vblendvpd %xmm4, %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vblendvpd_xmm_xmm_xmm_xmm:vblendvpd %xmm4, %xmm3, %xmm2, %xmm1

619> vblendvpd_ymm_ymm_ymm_ymm (vblendvpd %ymm4, %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vblendvpd %ymm4, %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vblendvpd_ymm_ymm_ymm_ymm:vblendvpd %ymm4, %ymm3, %ymm2, %ymm1

620> vblendvps_xmm_xmm_xmm_xmm (vblendvps %xmm4, %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vblendvps %xmm4, %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vblendvps_xmm_xmm_xmm_xmm:vblendvps %xmm4, %xmm3, %xmm2, %xmm1

621> vblendvps_ymm_ymm_ymm_ymm (vblendvps %ymm4, %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vblendvps %ymm4, %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vblendvps_ymm_ymm_ymm_ymm:vblendvps %ymm4, %ymm3, %ymm2, %ymm1

622> vbroadcastsd_ymm_xmm (vbroadcastsd %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vbroadcastsd %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vbroadcastsd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2[63:0] ∘ %ymm2[63:0] ∘ %ymm2[63:0] ∘ %ymm2[63:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


623> vbroadcastss_xmm_xmm (vbroadcastss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vbroadcastss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vbroadcastss %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


624> vbroadcastss_ymm_xmm (vbroadcastss %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vbroadcastss %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vbroadcastss %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


625> vcomisd_xmm_xmm (vcomisd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcomisd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vcomisd_xmm_xmm:vcomisd %xmm2, %xmm1

626> vcomiss_xmm_xmm (vcomiss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcomiss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vcomiss_xmm_xmm:vcomiss %xmm2, %xmm1

627> vcvtdq2pd_xmm_xmm (vcvtdq2pd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtdq2pd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtdq2pd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (cvt_int32_to_double(%ymm2[63:32]) ∘ cvt_int32_to_double(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


628> vcvtdq2ps_xmm_xmm (vcvtdq2ps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtdq2ps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtdq2ps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (cvt_int32_to_single(%ymm2[127:96]) ∘ (cvt_int32_to_single(%ymm2[95:64]) ∘ (cvt_int32_to_single(%ymm2[63:32]) ∘ cvt_int32_to_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


629> vcvtpd2dqx_xmm_xmm (vcvtpd2dqx %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtpd2dqx %xmm2, %xmm1" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvtpd2dqx %xmm2, %xmm1
      Message: No such opcode 'vcvtpd2dqx' exists
      


630> vcvtpd2ps_xmm_xmm (vcvtpd2ps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtpd2ps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtpd2ps %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (cvt_double_to_single(%ymm2[127:64]) ∘ cvt_double_to_single(%ymm2[63:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


631> vcvtph2ps_xmm_xmm (vcvtph2ps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtph2ps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vcvtph2ps_xmm_xmm:vcvtph2ps %xmm2, %xmm1

632> vcvtph2ps_ymm_xmm (vcvtph2ps %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtph2ps %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vcvtph2ps_ymm_xmm:vcvtph2ps %xmm2, %ymm1

633> vcvtps2dq_xmm_xmm (vcvtps2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtps2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtps2dq %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (cvt_single_to_int32(%ymm2[127:96]) ∘ (cvt_single_to_int32(%ymm2[95:64]) ∘ (cvt_single_to_int32(%ymm2[63:32]) ∘ cvt_single_to_int32(%ymm2[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


634> vcvtps2pd_xmm_xmm (vcvtps2pd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtps2pd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtps2pd %xmm2, %xmm1

  maybe read:      { %xmm2 %mxcsr::rc[0] }
  must read:       { %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (cvt_single_to_double(%ymm2[63:32]) ∘ cvt_single_to_double(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


635> vcvtsd2sil_r32_xmm (vcvtsd2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsd2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvtsd2sil %xmm1, %ebx
      Message: No such opcode 'vcvtsd2sil' exists
      


636> vcvtsd2siq_r64_xmm (vcvtsd2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsd2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvtsd2siq %xmm1, %rbx
      Message: No such opcode 'vcvtsd2siq' exists
      


637> vcvtsd2ss_xmm_xmm_xmm (vcvtsd2ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsd2ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtsd2ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 %mxcsr::rc[0] }
  must read:       { %xmm2 %xmm3 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ cvt_double_to_single(%ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


638> vcvtsi2sdl_xmm_xmm_r32 (vcvtsi2sdl %ebx, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsi2sdl %ebx, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtsi2sdl %ebx, %xmm2, %xmm1

  maybe read:      { %ebx %xmm2 %mxcsr::rc[0] }
  must read:       { %ebx %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ cvt_int32_to_double(%rbx[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


639> vcvtsi2sdq_xmm_xmm_r64 (vcvtsi2sdq %rbx, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsi2sdq %rbx, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vcvtsi2sdq_xmm_xmm_r64:vcvtsi2sdq %rbx, %xmm2, %xmm1

640> vcvtsi2ssl_xmm_xmm_r32 (vcvtsi2ssl %ebx, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsi2ssl %ebx, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtsi2ssl %ebx, %xmm2, %xmm1

  maybe read:      { %ebx %xmm2 %mxcsr::rc[0] }
  must read:       { %ebx %xmm2 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ cvt_int32_to_single(%rbx[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


641> vcvtsi2ssq_xmm_xmm_r64 (vcvtsi2ssq %rbx, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtsi2ssq %rbx, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vcvtsi2ssq_xmm_xmm_r64:vcvtsi2ssq %rbx, %xmm2, %xmm1

642> vcvtss2sd_xmm_xmm_xmm (vcvtss2sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtss2sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvtss2sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 %mxcsr::rc[0] }
  must read:       { %xmm2 %xmm3 %mxcsr::rc[0] }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ cvt_single_to_double(%ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


643> vcvtss2sil_r32_xmm (vcvtss2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtss2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvtss2sil %xmm1, %ebx
      Message: No such opcode 'vcvtss2sil' exists
      


644> vcvtss2siq_r64_xmm (vcvtss2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvtss2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvtss2siq %xmm1, %rbx
      Message: No such opcode 'vcvtss2siq' exists
      


645> vcvttpd2dq_xmm_xmm (vcvttpd2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvttpd2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvttpd2dq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (cvt_double_to_int32_truncate(%ymm2[127:64]) ∘ cvt_double_to_int32_truncate(%ymm2[63:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


646> vcvttps2dq_xmm_xmm (vcvttps2dq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvttps2dq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vcvttps2dq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[127:96] | 0x0₃₂)) ∘ (cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[95:64] | 0x0₃₂)) ∘ (cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[63:32] | 0x0₃₂)) ∘ cvt_single_to_int32_truncate(0x0₃₂ ⊕ (%ymm2[31:0] | 0x0₃₂))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


647> vcvttsd2sil_r32_xmm (vcvttsd2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvttsd2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvttsd2sil %xmm1, %ebx
      Message: No such opcode 'vcvttsd2sil' exists
      


648> vcvttsd2siq_r64_xmm (vcvttsd2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvttsd2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvttsd2siq %xmm1, %rbx
      Message: No such opcode 'vcvttsd2siq' exists
      


649> vcvttss2sil_r32_xmm (vcvttss2sil %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvttss2sil %xmm1, %ebx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvttss2sil %xmm1, %ebx
      Message: No such opcode 'vcvttss2sil' exists
      


650> vcvttss2siq_r64_xmm (vcvttss2siq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vcvttss2siq %xmm1, %rbx" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vcvttss2siq %xmm1, %rbx
      Message: No such opcode 'vcvttss2siq' exists
      


651> vdivpd_xmm_xmm_xmm (vdivpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vdivpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vdivpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (div_double(%ymm2[127:64], %ymm3[127:64]) ∘ div_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


652> vdivps_xmm_xmm_xmm (vdivps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vdivps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vdivps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (div_single(%ymm2[127:96], %ymm3[127:96]) ∘ div_single(%ymm2[95:64], %ymm3[95:64]) ∘ (div_single(%ymm2[63:32], %ymm3[63:32]) ∘ div_single(%ymm2[31:0], %ymm3[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


653> vdivsd_xmm_xmm_xmm (vdivsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vdivsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vdivsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ div_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


654> vdivss_xmm_xmm_xmm (vdivss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vdivss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vdivss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ div_single(%ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


655> vfmadd132pd_xmm_xmm_xmm (vfmadd132pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd132pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm1[127:64], vnfmsub132_double(0x0₆₄, %ymm2[127:64], 0x0₆₄), %ymm3[127:64]) ∘ vfmsub132_double(%ymm1[63:0], vnfmsub132_double(0x0₆₄, %ymm2[63:0], 0x0₆₄), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


656> vfmadd132ps_xmm_xmm_xmm (vfmadd132ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₆₄ | (vfmsub132_single(%ymm1[127:96], vfnmsub132_single(0x0₃₂ ⊕ %ymm2[127:96] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm2[127:96]), %ymm2[127:96], %ymm2[127:96]), %ymm3[127:96]) ∘ vfmsub132_single(%ymm1[95:64], vfnmsub132_single(0x0₃₂ ⊕ %ymm2[95:64] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm2[95:64]), %ymm2[95:64], %ymm2[95:64]), %ymm3[95:64]) | 0x0₆₄ ⊕ %ymm2[127:64] ⊕ (0x0₆₄ | 0x0₆₄ ⊕ %ymm2[127:64]))) ∘ (0x0₆₄ | (vfmsub132_single(%ymm1[63:32], vfnmsub132_single(0x0₃₂ ⊕ %ymm2[63:32] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm2[63:32]), %ymm2[63:32], %ymm2[63:32]), %ymm3[63:32]) ∘ vfmsub132_single(%ymm1[31:0], vfnmsub132_single(0x0₃₂ ⊕ %ymm2[31:0] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm2[31:0]), %ymm2[31:0], %ymm2[31:0]), %ymm3[31:0]) | 0x0₆₄ ⊕ %ymm2[63:0] ⊕ (0x0₆₄ | 0x0₆₄ ⊕ %ymm2[63:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


657> vfmadd132sd_xmm_xmm_xmm (vfmadd132sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd132sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmadd132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


658> vfmadd132ss_xmm_xmm_xmm (vfmadd132ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd132ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfmadd132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


659> vfmadd213pd_xmm_xmm_xmm (vfmadd213pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], vnfmsub132_double(0x0₆₄, %ymm3[127:64], 0x0₆₄), %ymm1[127:64]) ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(0x0₆₄, %ymm3[63:0], 0x0₆₄), %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


660> vfmadd213pd_ymm_ymm_ymm (vfmadd213pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd213pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmadd132_double(%ymm2[255:192], %ymm3[255:192], %ymm1[255:192]) ∘ (vfmadd132_double(%ymm2[191:128], %ymm3[191:128], %ymm1[191:128]) ∘ (vfmadd132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64]) ∘ vfmadd132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


661> vfmadd213ps_xmm_xmm_xmm (vfmadd213ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) | 0x0₆₄) ∘ (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) | 0x0₆₄) ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ %ymm3[127:96] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm3[127:96]), %ymm3[127:96], %ymm3[127:96]), %ymm1[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ %ymm3[95:64] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm3[95:64]), %ymm3[95:64], %ymm3[95:64]), %ymm1[95:64]) | 0x0₆₄ ⊕ %ymm3[127:64] ⊕ (0x0₆₄ | 0x0₆₄ ⊕ %ymm3[127:64])) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ %ymm3[63:32] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm3[63:32]), %ymm3[63:32], %ymm3[63:32]), %ymm1[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ %ymm3[31:0] ⊕ (0x0₃₂ | 0x0₃₂ ⊕ %ymm3[31:0]), %ymm3[31:0], %ymm3[31:0]), %ymm1[31:0]) | 0x0₆₄ ⊕ %ymm3[63:0] ⊕ (0x0₆₄ | 0x0₆₄ ⊕ %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


662> vfmadd213ps_ymm_ymm_ymm (vfmadd213ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd213ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmadd132_single(%ymm2[255:224], %ymm3[255:224], %ymm1[255:224]) ∘ vfmadd132_single(%ymm2[223:192], %ymm3[223:192], %ymm1[223:192]) ∘ (vfmadd132_single(%ymm2[191:160], %ymm3[191:160], %ymm1[191:160]) ∘ (vfmadd132_single(%ymm2[159:128], %ymm3[159:128], %ymm1[159:128]) ∘ (vfmadd132_single(%ymm2[127:96], %ymm3[127:96], %ymm1[127:96]) ∘ (vfmadd132_single(%ymm2[95:64], %ymm3[95:64], %ymm1[95:64]) ∘ (vfmadd132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfmadd132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


663> vfmadd213sd_xmm_xmm_xmm (vfmadd213sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd213sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(0x0₆₄, %ymm3[63:0], 0x0₆₄), %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


664> vfmadd213ss_xmm_xmm_xmm (vfmadd213ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd213ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd213ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfmadd132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


665> vfmadd231pd_xmm_xmm_xmm (vfmadd231pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], vnfmsub132_double(0x0₆₄, %ymm1[127:64], 0x0₆₄), %ymm3[127:64]) ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(0x0₆₄, %ymm1[63:0], 0x0₆₄), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


666> vfmadd231pd_ymm_ymm_ymm (vfmadd231pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd231pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmadd132_double(%ymm2[255:192], %ymm1[255:192], %ymm3[255:192]) ∘ (vfmadd132_double(%ymm2[191:128], %ymm1[191:128], %ymm3[191:128]) ∘ (vfmadd132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vfmadd132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


667> vfmadd231ps_xmm_xmm_xmm (vfmadd231ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmadd132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfmadd132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfmadd132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfmadd132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


668> vfmadd231ps_ymm_ymm_ymm (vfmadd231ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd231ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmadd132_single(%ymm2[255:224], %ymm1[255:224], %ymm3[255:224]) ∘ vfmadd132_single(%ymm2[223:192], %ymm1[223:192], %ymm3[223:192]) ∘ (vfmadd132_single(%ymm2[191:160], %ymm1[191:160], %ymm3[191:160]) ∘ vfmadd132_single(%ymm2[159:128], %ymm1[159:128], %ymm3[159:128]) ∘ (vfmadd132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfmadd132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfmadd132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfmadd132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0])))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


669> vfmadd231sd_xmm_xmm_xmm (vfmadd231sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd231sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(0x0₆₄, %ymm1[63:0], 0x0₆₄), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


670> vfmadd231ss_xmm_xmm_xmm (vfmadd231ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmadd231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmadd231ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfmadd132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


671> vfmaddsub132pd_xmm_xmm_xmm (vfmaddsub132pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmaddsub132pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm1[127:64], vnfmsub132_double(0x0₆₄, %ymm2[127:64], 0x0₆₄), %ymm3[127:64]) ∘ vfmsub132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


672> vfmaddsub132pd_ymm_ymm_ymm (vfmaddsub132pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub132pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmaddsub132pd_ymm_ymm_ymm:vfmaddsub132pd %ymm3, %ymm2, %ymm1

673> vfmaddsub132ps_xmm_xmm_xmm (vfmaddsub132ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmaddsub132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₆₄ | (vfmsub132_single(%ymm1[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[127:96]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[127:96]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[127:96])), %ymm3[127:96]) ∘ vfmsub132_single(%ymm1[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[95:64]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[95:64]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[95:64])), %ymm3[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[95:64]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[95:64])))) ∘ (0x0₆₄ | (vfmsub132_single(%ymm1[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[63:32]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[63:32]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[63:32])), %ymm3[63:32]) ∘ vfmsub132_single(%ymm1[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[31:0]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[31:0]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[31:0])), %ymm3[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[31:0]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm2[31:0])))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


674> vfmaddsub132ps_ymm_ymm_ymm (vfmaddsub132ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub132ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmaddsub132ps_ymm_ymm_ymm:vfmaddsub132ps %ymm3, %ymm2, %ymm1

675> vfmaddsub213pd_xmm_xmm_xmm (vfmaddsub213pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmaddsub213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], vnfmsub132_double((maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂) ⊕ (%ymm3[127:96] | 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂) ⊕ (%ymm3[127:96] | 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂))) ∘ (maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂) ⊕ (%ymm3[95:64] | 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂) ⊕ (%ymm3[95:64] | 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂))), %ymm3[127:64], 0x0₆₄), %ymm1[127:64]) ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(%ymm1[63:32], 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂) ⊕ (%ymm3[63:32] | 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂))) = 0x1₁ ? %ymm1[63:32] : 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂) ⊕ (%ymm3[63:32] | 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂))) ∘ (maxcmp_single(%ymm1[31:0], 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂) ⊕ (%ymm3[31:0] | 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂))) = 0x1₁ ? %ymm1[31:0] : 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂) ⊕ (%ymm3[31:0] | 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂))), %ymm3[63:0], 0x0₆₄), vnfmsub132_double((maxcmp_single(%ymm1[63:32], 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂) ⊕ (%ymm3[63:32] | 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂))) = 0x1₁ ? %ymm1[63:32] : 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂) ⊕ (%ymm3[63:32] | 0x0₃₂ ⊕ (%ymm3[63:32] | 0x0₃₂))) ∘ (maxcmp_single(%ymm1[31:0], 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂) ⊕ (%ymm3[31:0] | 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂))) = 0x1₁ ? %ymm1[31:0] : 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂) ⊕ (%ymm3[31:0] | 0x0₃₂ ⊕ (%ymm3[31:0] | 0x0₃₂))), %ymm3[63:0], 0x0₆₄), 0x0₃₂ ∘ vnfmsub132_double((maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂) ⊕ (%ymm3[127:96] | 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂) ⊕ (%ymm3[127:96] | 0x0₃₂ ⊕ (%ymm3[127:96] | 0x0₃₂))) ∘ (maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂) ⊕ (%ymm3[95:64] | 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂) ⊕ (%ymm3[95:64] | 0x0₃₂ ⊕ (%ymm3[95:64] | 0x0₃₂))), %ymm3[127:64], 0x0₆₄)[63:32]), %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


676> vfmaddsub213pd_ymm_ymm_ymm (vfmaddsub213pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmaddsub213pd_ymm_ymm_ymm:vfmaddsub213pd %ymm3, %ymm2, %ymm1

677> vfmaddsub213ps_xmm_xmm_xmm (vfmaddsub213ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmaddsub213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) | 0x0₆₄) ∘ (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) | 0x0₆₄) ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96])), %ymm1[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64])), %ymm1[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[95:64]))) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32])), %ymm1[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0])), %ymm1[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


678> vfmaddsub213ps_ymm_ymm_ymm (vfmaddsub213ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmaddsub213ps_ymm_ymm_ymm:vfmaddsub213ps %ymm3, %ymm2, %ymm1

679> vfmaddsub231pd_xmm_xmm_xmm (vfmaddsub231pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmaddsub231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], vnfmsub132_double((maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) ∘ (maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))), %ymm1[127:64], 0x0₆₄), %ymm3[127:64]) ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(%ymm3[63:32], 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) = 0x1₁ ? %ymm3[63:32] : 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) ∘ (maxcmp_single(%ymm3[31:0], 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))) = 0x1₁ ? %ymm3[31:0] : 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))), %ymm1[63:0], 0x0₆₄), vnfmsub132_double((maxcmp_single(%ymm3[63:32], 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) = 0x1₁ ? %ymm3[63:32] : 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂) ⊕ (%ymm1[63:32] | 0x0₃₂ ⊕ (%ymm1[63:32] | 0x0₃₂))) ∘ (maxcmp_single(%ymm3[31:0], 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))) = 0x1₁ ? %ymm3[31:0] : 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂) ⊕ (%ymm1[31:0] | 0x0₃₂ ⊕ (%ymm1[31:0] | 0x0₃₂))), %ymm1[63:0], 0x0₆₄), 0x0₃₂ ∘ vnfmsub132_double((maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂) ⊕ (%ymm1[127:96] | 0x0₃₂ ⊕ (%ymm1[127:96] | 0x0₃₂))) ∘ (maxcmp_single(0x0₃₂, 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))) = 0x1₁ ? 0x0₃₂ : 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂) ⊕ (%ymm1[95:64] | 0x0₃₂ ⊕ (%ymm1[95:64] | 0x0₃₂))), %ymm1[127:64], 0x0₆₄)[63:32]), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


680> vfmaddsub231pd_ymm_ymm_ymm (vfmaddsub231pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmaddsub231pd_ymm_ymm_ymm:vfmaddsub231pd %ymm3, %ymm2, %ymm1

681> vfmaddsub231ps_xmm_xmm_xmm (vfmaddsub231ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmaddsub231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[127:96]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[127:96]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[127:96])), %ymm3[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[95:64]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[95:64]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[95:64])), %ymm3[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[95:64]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[127:96]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[95:64]))) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[63:32]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[63:32]), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[63:32])), %ymm3[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[31:0]) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[31:0]), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[31:0])), %ymm3[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[31:0]) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[63:32]) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), %ymm1[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


682> vfmaddsub231ps_ymm_ymm_ymm (vfmaddsub231ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmaddsub231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmaddsub231ps_ymm_ymm_ymm:vfmaddsub231ps %ymm3, %ymm2, %ymm1

683> vfmsub132pd_xmm_xmm_xmm (vfmsub132pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub132pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm1[127:64], %ymm2[127:64], %ymm3[127:64]) ∘ vfmsub132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


684> vfmsub132ps_xmm_xmm_xmm (vfmsub132ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfmsub132_single(%ymm1[127:96], %ymm2[127:96], %ymm3[127:96]) ∘ (vfmsub132_single(%ymm1[95:64], %ymm2[95:64], %ymm3[95:64]) ∘ (vfmsub132_single(%ymm1[63:32], %ymm2[63:32], %ymm3[63:32]) ∘ vfmsub132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


685> vfmsub132sd_xmm_xmm_xmm (vfmsub132sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub132sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


686> vfmsub132ss_xmm_xmm_xmm (vfmsub132ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub132ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfmsub132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


687> vfmsub213pd_xmm_xmm_xmm (vfmsub213pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ vfmsub132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64])[63:8] ∘ vfmsub132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64])[7:0] ∘ vfmsub132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


688> vfmsub213pd_ymm_ymm_ymm (vfmsub213pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub213pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmsub132_double(%ymm2[255:192], %ymm3[255:192], %ymm1[255:192]) ∘ (vfmsub132_double(%ymm2[191:128], %ymm3[191:128], %ymm1[191:128]) ∘ (vfmsub132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64]) ∘ vfmsub132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


689> vfmsub213ps_xmm_xmm_xmm (vfmsub213ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_single(%ymm2[127:96], %ymm3[127:96], %ymm1[127:96]) ∘ (vfmsub132_single(%ymm2[95:64], %ymm3[95:64], %ymm1[95:64]) ∘ (vfmsub132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfmsub132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


690> vfmsub213ps_ymm_ymm_ymm (vfmsub213ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub213ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmsub132_single(%ymm2[255:224], %ymm3[255:224], %ymm1[255:224]) ∘ vfmsub132_single(%ymm2[223:192], %ymm3[223:192], %ymm1[223:192]) ∘ (vfmsub132_single(%ymm2[191:160], %ymm3[191:160], %ymm1[191:160]) ∘ (vfmsub132_single(%ymm2[159:128], %ymm3[159:128], %ymm1[159:128]) ∘ (vfmsub132_single(%ymm2[127:96], %ymm3[127:96], %ymm1[127:96]) ∘ (vfmsub132_single(%ymm2[95:64], %ymm3[95:64], %ymm1[95:64]) ∘ (vfmsub132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfmsub132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


691> vfmsub213sd_xmm_xmm_xmm (vfmsub213sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub213sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


692> vfmsub213ss_xmm_xmm_xmm (vfmsub213ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub213ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub213ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfmadd132_single(%ymm2[31:0], vfnmsub132_single(%ymm3[31:0], %ymm3[31:0], 0x0₂₄ ∘ %ymm3[7:0]), %ymm1[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


693> vfmsub231pd_xmm_xmm_xmm (vfmsub231pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vfmsub132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


694> vfmsub231pd_ymm_ymm_ymm (vfmsub231pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub231pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmsub132_double(%ymm2[255:192], %ymm1[255:192], %ymm3[255:192]) ∘ vfmsub132_double(%ymm2[191:128], %ymm1[191:128], %ymm3[191:128]) ∘ (vfmsub132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vfmsub132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


695> vfmsub231ps_xmm_xmm_xmm (vfmsub231ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfmsub132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfmsub132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


696> vfmsub231ps_ymm_ymm_ymm (vfmsub231ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub231ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfmsub132_single(%ymm2[255:224], %ymm1[255:224], %ymm3[255:224]) ∘ (vfmsub132_single(%ymm2[223:192], %ymm1[223:192], %ymm3[223:192]) ∘ (vfmsub132_single(%ymm2[191:160], %ymm1[191:160], %ymm3[191:160]) ∘ (vfmsub132_single(%ymm2[159:128], %ymm1[159:128], %ymm3[159:128]) ∘ (vfmsub132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfmsub132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfmsub132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


697> vfmsub231sd_xmm_xmm_xmm (vfmsub231sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub231sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


698> vfmsub231ss_xmm_xmm_xmm (vfmsub231ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsub231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsub231ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


699> vfmsubadd132pd_xmm_xmm_xmm (vfmsubadd132pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsubadd132pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm1[127:64], %ymm2[127:64], %ymm3[127:64]) ∘ vfmsub132_double(%ymm1[63:0], vnfmsub132_double(%ymm2[63:0], %ymm2[63:0], 0x0₃₂ ∘ %ymm2[127:96]), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


700> vfmsubadd132pd_ymm_ymm_ymm (vfmsubadd132pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd132pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmsubadd132pd_ymm_ymm_ymm:vfmsubadd132pd %ymm3, %ymm2, %ymm1

701> vfmsubadd132ps_xmm_xmm_xmm (vfmsubadd132ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsubadd132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((vfmsub132_single(%ymm1[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[31:24], %ymm2[127:96], %ymm2[127:96])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[31:24], %ymm2[127:96], %ymm2[127:96]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[31:24], %ymm2[127:96], %ymm2[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[31:24], %ymm2[127:96], %ymm2[127:96]))), %ymm3[127:96]) ∘ vfmsub132_single(%ymm1[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[23:16], %ymm2[95:64], %ymm2[95:64])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[23:16], %ymm2[95:64], %ymm2[95:64]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[23:16], %ymm2[95:64], %ymm2[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[23:16], %ymm2[95:64], %ymm2[95:64]))), %ymm3[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[31:24], %ymm2[127:96], %ymm2[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[23:16], %ymm2[95:64], %ymm2[95:64])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[31:24], %ymm2[127:96], %ymm2[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[23:16], %ymm2[95:64], %ymm2[95:64])))) ∘ (vfmsub132_single(%ymm1[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[15:8], %ymm2[63:32], %ymm2[63:32])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[15:8], %ymm2[63:32], %ymm2[63:32]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[15:8], %ymm2[63:32], %ymm2[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[15:8], %ymm2[63:32], %ymm2[63:32]))), %ymm3[63:32]) ∘ vfmsub132_single(%ymm1[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[7:0], %ymm2[31:0], %ymm2[31:0])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[7:0], %ymm2[31:0], %ymm2[31:0]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[7:0], %ymm2[31:0], %ymm2[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[7:0], %ymm2[31:0], %ymm2[31:0]))), %ymm3[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[15:8], %ymm2[63:32], %ymm2[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[7:0], %ymm2[31:0], %ymm2[31:0])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[15:8], %ymm2[63:32], %ymm2[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm2[7:0], %ymm2[31:0], %ymm2[31:0])))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


702> vfmsubadd132ps_ymm_ymm_ymm (vfmsubadd132ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd132ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmsubadd132ps_ymm_ymm_ymm:vfmsubadd132ps %ymm3, %ymm2, %ymm1

703> vfmsubadd213pd_xmm_xmm_xmm (vfmsubadd213pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsubadd213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ vfmsub132_double(%ymm2[127:64], %ymm3[127:64] ⊕ 0x0₆₄, %ymm1[127:64])[63:8] ∘ vfmsub132_double(%ymm2[127:64], %ymm3[127:64] ⊕ 0x0₆₄, %ymm1[127:64])[7:0] ∘ vfmsub132_double(%ymm2[63:0], vfmsub132_double(vnfmsub132_double(mincmp_double(0x0₆₄, 0x0₃₂ ∘ %ymm3[127:96]) = 0x1₁ ? 0x0₆₄ : 0x0₃₂ ∘ %ymm3[127:96], 0x0₃₂ ∘ %ymm3[127:96], mincmp_double(0x0₆₄, 0x0₃₂ ∘ %ymm3[127:96]) = 0x1₁ ? 0x0₆₄ : 0x0₃₂ ∘ %ymm3[127:96]), %ymm3[63:0], %ymm3[63:0]), %ymm1[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


704> vfmsubadd213pd_ymm_ymm_ymm (vfmsubadd213pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmsubadd213pd_ymm_ymm_ymm:vfmsubadd213pd %ymm3, %ymm2, %ymm1

705> vfmsubadd213ps_xmm_xmm_xmm (vfmsubadd213ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsubadd213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[31:24], %ymm3[127:96], %ymm3[127:96])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[31:24], %ymm3[127:96], %ymm3[127:96]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[31:24], %ymm3[127:96], %ymm3[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[31:24], %ymm3[127:96], %ymm3[127:96]))), %ymm1[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[23:16], %ymm3[95:64], %ymm3[95:64])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[23:16], %ymm3[95:64], %ymm3[95:64]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[23:16], %ymm3[95:64], %ymm3[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[23:16], %ymm3[95:64], %ymm3[95:64]))), %ymm1[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[31:24], %ymm3[127:96], %ymm3[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[23:16], %ymm3[95:64], %ymm3[95:64])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[31:24], %ymm3[127:96], %ymm3[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[23:16], %ymm3[95:64], %ymm3[95:64])))) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[15:8], %ymm3[63:32], %ymm3[63:32])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[15:8], %ymm3[63:32], %ymm3[63:32]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[15:8], %ymm3[63:32], %ymm3[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[15:8], %ymm3[63:32], %ymm3[63:32]))), %ymm1[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[7:0], %ymm3[31:0], %ymm3[31:0])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[7:0], %ymm3[31:0], %ymm3[31:0]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[7:0], %ymm3[31:0], %ymm3[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[7:0], %ymm3[31:0], %ymm3[31:0]))), %ymm1[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[15:8], %ymm3[63:32], %ymm3[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[7:0], %ymm3[31:0], %ymm3[31:0])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[15:8], %ymm3[63:32], %ymm3[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm3[7:0], %ymm3[31:0], %ymm3[31:0])))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


706> vfmsubadd213ps_ymm_ymm_ymm (vfmsubadd213ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmsubadd213ps_ymm_ymm_ymm:vfmsubadd213ps %ymm3, %ymm2, %ymm1

707> vfmsubadd231pd_xmm_xmm_xmm (vfmsubadd231pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsubadd231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfmsub132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vfmsub132_double(%ymm2[63:0], vnfmsub132_double(%ymm1[63:0], %ymm1[63:0], 0x0₃₂ ∘ %ymm1[127:96]), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


708> vfmsubadd231pd_ymm_ymm_ymm (vfmsubadd231pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmsubadd231pd_ymm_ymm_ymm:vfmsubadd231pd %ymm3, %ymm2, %ymm1

709> vfmsubadd231ps_xmm_xmm_xmm (vfmsubadd231ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfmsubadd231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((vfmsub132_single(%ymm2[127:96], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96]))), %ymm3[127:96]) ∘ vfmsub132_single(%ymm2[95:64], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64]))), %ymm3[95:64]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[31:24], %ymm1[127:96], %ymm1[127:96])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[23:16], %ymm1[95:64], %ymm1[95:64])))) ∘ (vfmsub132_single(%ymm2[63:32], vfnmsub132_single(0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32]))), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])), add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32]))), %ymm3[63:32]) ∘ vfmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])) ⊕ (0x0₃₂ | 0x0₃₂ ⊕ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0]))), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])), sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0]))), %ymm3[31:0]) | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])) ⊕ (0x0₆₄ | 0x0₆₄ ⊕ add_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[15:8], %ymm1[63:32], %ymm1[63:32])) ∘ sub_single(vfnmsub132_single(0x0₃₂, 0x0₃₂, 0x0₃₂), vfnmsub132_single(0x0₂₄ ∘ %ymm1[7:0], %ymm1[31:0], %ymm1[31:0])))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


710> vfmsubadd231ps_ymm_ymm_ymm (vfmsubadd231ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfmsubadd231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vfmsubadd231ps_ymm_ymm_ymm:vfmsubadd231ps %ymm3, %ymm2, %ymm1

711> vfnmadd132pd_xmm_xmm_xmm (vfnmadd132pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd132pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ 0x0₆₄) ∘ (vnfmsub132_double(%ymm1[127:64], vnfmsub132_double(0x0₆₄, %ymm2[127:64], 0x0₆₄), %ymm3[127:64]) ∘ vnfmsub132_double(%ymm1[63:0], vnfmsub132_double(0x0₆₄, %ymm2[63:0], 0x0₃₂ ∘ %ymm1[95:64]), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


712> vfnmadd132ps_xmm_xmm_xmm (vfnmadd132ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfnmadd132_single(%ymm1[127:96], %ymm2[127:96], 0x0₃₂ | %ymm3[127:96]) ∘ (vfnmadd132_single(%ymm1[95:64], %ymm2[95:64], 0x0₃₂ | %ymm3[95:64]) ∘ (vfnmadd132_single(%ymm1[63:32], %ymm2[63:32], %ymm3[63:32]) ∘ vfnmadd132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


713> vfnmadd132sd_xmm_xmm_xmm (vfnmadd132sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd132sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfnmadd132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


714> vfnmadd132ss_xmm_xmm_xmm (vfnmadd132ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd132ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfnmadd132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


715> vfnmadd213pd_xmm_xmm_xmm (vfnmadd213pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfnmadd132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64]) ∘ vfnmadd132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


716> vfnmadd213pd_ymm_ymm_ymm (vfnmadd213pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd213pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmadd132_double(%ymm2[255:192], %ymm3[255:192], %ymm1[255:192]) ∘ (vfnmadd132_double(%ymm2[191:128], %ymm3[191:128], %ymm1[191:128]) ∘ (vfnmadd132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64]) ∘ vfnmadd132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


717> vfnmadd213ps_xmm_xmm_xmm (vfnmadd213ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfnmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ (vfnmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂) ∘ vfnmadd132_single(0x0₃₂, 0x0₃₂, 0x0₃₂))) ∘ (vfnmadd132_single(%ymm2[127:96], %ymm3[127:96], 0x0₃₂ | %ymm1[127:96]) ∘ (vfnmadd132_single(%ymm2[95:64], %ymm3[95:64], 0x0₃₂ | %ymm1[95:64]) ∘ (vfnmadd132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfnmadd132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


718> vfnmadd213ps_ymm_ymm_ymm (vfnmadd213ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd213ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmadd132_single(%ymm2[255:224], %ymm3[255:224], %ymm1[255:224]) ∘ vfnmadd132_single(%ymm2[223:192], %ymm3[223:192], %ymm1[223:192]) ∘ (vfnmadd132_single(%ymm2[191:160], %ymm3[191:160], %ymm1[191:160]) ∘ (vfnmadd132_single(%ymm2[159:128], %ymm3[159:128], %ymm1[159:128]) ∘ (vfnmadd132_single(%ymm2[127:96], %ymm3[127:96], %ymm1[127:96]) ∘ (vfnmadd132_single(%ymm2[95:64], %ymm3[95:64], %ymm1[95:64]) ∘ (vfnmadd132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfnmadd132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


719> vfnmadd213sd_xmm_xmm_xmm (vfnmadd213sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd213sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm1[127:64] ⊕ 0x0₆₄) ∘ vfmsub132_double(vnfmsub132_double(mincmp_double(0x0₃₂ ∘ %ymm2[95:64], 0x0₃₂ ∘ %ymm2[31:0]) = 0x1₁ ? 0x0₃₂ ∘ %ymm2[95:64] : 0x0₃₂ ∘ %ymm2[31:0], %ymm2[63:0], mincmp_double(0x0₃₂ ∘ %ymm2[95:64], 0x0₃₂ ∘ %ymm2[31:0]) = 0x1₁ ? 0x0₃₂ ∘ %ymm2[95:64] : 0x0₃₂ ∘ %ymm2[31:0]), vfmsub132_double(vnfmsub132_double(0x0₆₄, 0x0₆₄, 0x0₆₄), %ymm3[63:0], 0x0₆₄), %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


720> vfnmadd213ss_xmm_xmm_xmm (vfnmadd213ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd213ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd213ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfnmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂, %ymm3[31:0], %ymm3[31:0]), %ymm1[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


721> vfnmadd231pd_xmm_xmm_xmm (vfnmadd231pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmadd132_double(0x0₆₄, 0x0₆₄, 0x0₆₄) ∘ vfnmadd132_double(0x0₆₄, 0x0₆₄, 0x0₆₄) ∘ (vfnmadd132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vfnmadd132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


722> vfnmadd231pd_ymm_ymm_ymm (vfnmadd231pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd231pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmadd132_double(%ymm2[255:192], %ymm1[255:192], %ymm3[255:192]) ∘ vfnmadd132_double(%ymm2[191:128], %ymm1[191:128], %ymm3[191:128]) ∘ (vfnmadd132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vfnmadd132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


723> vfnmadd231ps_xmm_xmm_xmm (vfnmadd231ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfnmadd132_single(%ymm2[127:96], %ymm1[127:96], 0x0₃₂ | %ymm3[127:96]) ∘ (vfnmadd132_single(%ymm2[95:64], %ymm1[95:64], 0x0₃₂ | %ymm3[95:64]) ∘ (vfnmadd132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfnmadd132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


724> vfnmadd231ps_ymm_ymm_ymm (vfnmadd231ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd231ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmadd132_single(%ymm2[255:224], %ymm1[255:224], %ymm3[255:224]) ∘ (vfnmadd132_single(%ymm2[223:192], %ymm1[223:192], %ymm3[223:192]) ∘ (vfnmadd132_single(%ymm2[191:160], %ymm1[191:160], %ymm3[191:160]) ∘ vfnmadd132_single(%ymm2[159:128], %ymm1[159:128], %ymm3[159:128]))) ∘ (vfnmadd132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfnmadd132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfnmadd132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfnmadd132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


725> vfnmadd231sd_xmm_xmm_xmm (vfnmadd231sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd231sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(vnfmsub132_double(0x0₆₄, %ymm2[63:0], 0x0₆₄), vnfmsub132_double(0x0₆₄, %ymm1[63:0], 0x0₆₄), %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


726> vfnmadd231ss_xmm_xmm_xmm (vfnmadd231ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmadd231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmadd231ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfnmsub132_single(%ymm2[31:0], vfnmsub132_single(0x0₃₂, %ymm1[31:0], %ymm1[31:0]), %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


727> vfnmsub132pd_xmm_xmm_xmm (vfnmsub132pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub132pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub132pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ 0x0₆₄) ∘ (vnfmsub132_double(%ymm1[127:64], %ymm2[127:64], %ymm3[127:64]) ∘ vnfmsub132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


728> vfnmsub132ps_xmm_xmm_xmm (vfnmsub132ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub132ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub132ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfnmsub132_single(%ymm1[127:96], %ymm2[127:96], %ymm3[127:96]) ∘ (vfnmsub132_single(%ymm1[95:64], %ymm2[95:64], %ymm3[95:64]) ∘ (vfnmsub132_single(%ymm1[63:32], %ymm2[63:32], %ymm3[63:32]) ∘ vfnmsub132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


729> vfnmsub132sd_xmm_xmm_xmm (vfnmsub132sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub132sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub132sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vnfmsub132_double(%ymm1[63:0], %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


730> vfnmsub132ss_xmm_xmm_xmm (vfnmsub132ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub132ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub132ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfnmsub132_single(%ymm1[31:0], %ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


731> vfnmsub213pd_xmm_xmm_xmm (vfnmsub213pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub213pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub213pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vnfmsub132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64]) ∘ vnfmsub132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


732> vfnmsub213pd_ymm_ymm_ymm (vfnmsub213pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub213pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub213pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vnfmsub132_double(%ymm2[255:192], %ymm3[255:192], %ymm1[255:192]) ∘ (vnfmsub132_double(%ymm2[191:128], %ymm3[191:128], %ymm1[191:128]) ∘ (vnfmsub132_double(%ymm2[127:64], %ymm3[127:64], %ymm1[127:64]) ∘ vnfmsub132_double(%ymm2[63:0], %ymm3[63:0], %ymm1[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


733> vfnmsub213ps_xmm_xmm_xmm (vfnmsub213ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub213ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub213ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfnmsub132_single(%ymm2[127:96], %ymm3[127:96], %ymm1[127:96]) ∘ (vfnmsub132_single(%ymm2[95:64], %ymm3[95:64], %ymm1[95:64]) ∘ (vfnmsub132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfnmsub132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


734> vfnmsub213ps_ymm_ymm_ymm (vfnmsub213ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub213ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub213ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmsub132_single(%ymm2[255:224], %ymm3[255:224], %ymm1[255:224]) ∘ (vfnmsub132_single(%ymm2[223:192], %ymm3[223:192], %ymm1[223:192]) ∘ (vfnmsub132_single(%ymm2[191:160], %ymm3[191:160], %ymm1[191:160]) ∘ (vfnmsub132_single(%ymm2[159:128], %ymm3[159:128], %ymm1[159:128]) ∘ (vfnmsub132_single(%ymm2[127:96], %ymm3[127:96], %ymm1[127:96]) ∘ (vfnmsub132_single(%ymm2[95:64], %ymm3[95:64], %ymm1[95:64]) ∘ (vfnmsub132_single(%ymm2[63:32], %ymm3[63:32], %ymm1[63:32]) ∘ vfnmsub132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


735> vfnmsub213sd_xmm_xmm_xmm (vfnmsub213sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub213sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub213sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm1[127:64] ⊕ 0x0₆₄) ∘ vfmsub132_double(vnfmsub132_double(mincmp_double(0x0₃₂ ∘ %ymm2[95:64], 0x0₃₂ ∘ %ymm2[31:0]) = 0x1₁ ? 0x0₃₂ ∘ %ymm2[95:64] : 0x0₃₂ ∘ %ymm2[31:0], %ymm2[63:0], mincmp_double(0x0₃₂ ∘ %ymm2[95:64], 0x0₃₂ ∘ %ymm2[31:0]) = 0x1₁ ? 0x0₃₂ ∘ %ymm2[95:64] : 0x0₃₂ ∘ %ymm2[31:0]), %ymm3[63:0], %ymm1[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


736> vfnmsub213ss_xmm_xmm_xmm (vfnmsub213ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub213ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub213ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfnmsub132_single(%ymm2[31:0], %ymm3[31:0], %ymm1[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


737> vfnmsub231pd_xmm_xmm_xmm (vfnmsub231pd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub231pd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vnfmsub132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vnfmsub132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


738> vfnmsub231pd_ymm_ymm_ymm (vfnmsub231pd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub231pd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub231pd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vnfmsub132_double(%ymm2[255:192], %ymm1[255:192], %ymm3[255:192]) ∘ (vnfmsub132_double(%ymm2[191:128], %ymm1[191:128], %ymm3[191:128]) ∘ (vnfmsub132_double(%ymm2[127:64], %ymm1[127:64], %ymm3[127:64]) ∘ vnfmsub132_double(%ymm2[63:0], %ymm1[63:0], %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


739> vfnmsub231ps_xmm_xmm_xmm (vfnmsub231ps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub231ps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub231ps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (vfnmsub132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfnmsub132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfnmsub132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfnmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


740> vfnmsub231ps_ymm_ymm_ymm (vfnmsub231ps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub231ps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub231ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : vfnmsub132_single(%ymm2[255:224], %ymm1[255:224], %ymm3[255:224]) ∘ (vfnmsub132_single(%ymm2[223:192], %ymm1[223:192], %ymm3[223:192]) ∘ (vfnmsub132_single(%ymm2[191:160], %ymm1[191:160], %ymm3[191:160]) ∘ vfnmsub132_single(%ymm2[159:128], %ymm1[159:128], %ymm3[159:128]))) ∘ (vfnmsub132_single(%ymm2[127:96], %ymm1[127:96], %ymm3[127:96]) ∘ (vfnmsub132_single(%ymm2[95:64], %ymm1[95:64], %ymm3[95:64]) ∘ (vfnmsub132_single(%ymm2[63:32], %ymm1[63:32], %ymm3[63:32]) ∘ vfnmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


741> vfnmsub231sd_xmm_xmm_xmm (vfnmsub231sd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub231sd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub231sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:64] ∘ vfmsub132_double(vnfmsub132_double(mincmp_double(0x0₃₂ ∘ %ymm2[95:64], 0x0₃₂ ∘ %ymm2[31:0]) = 0x1₁ ? 0x0₃₂ ∘ %ymm2[95:64] : 0x0₃₂ ∘ %ymm2[31:0], %ymm2[63:0], mincmp_double(0x0₃₂ ∘ %ymm2[95:64], 0x0₃₂ ∘ %ymm2[31:0]) = 0x1₁ ? 0x0₃₂ ∘ %ymm2[95:64] : 0x0₃₂ ∘ %ymm2[31:0]), %ymm1[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


742> vfnmsub231ss_xmm_xmm_xmm (vfnmsub231ss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vfnmsub231ss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vfnmsub231ss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm1[127:32] ∘ vfnmsub132_single(%ymm2[31:0], %ymm1[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


743> vhaddpd_xmm_xmm_xmm (vhaddpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhaddpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhaddpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (add_double(%ymm3[63:0], %ymm3[127:64]) ∘ add_double(%ymm2[63:0], %ymm2[127:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


744> vhaddpd_ymm_ymm_ymm (vhaddpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhaddpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhaddpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : add_double(%ymm3[191:128], %ymm3[255:192]) ∘ add_double(%ymm2[191:128], %ymm2[255:192]) ∘ (add_double(%ymm3[63:0], %ymm3[127:64]) ∘ add_double(%ymm2[63:0], %ymm2[127:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


745> vhaddps_xmm_xmm_xmm (vhaddps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhaddps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhaddps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (add_single(%ymm3[95:64], %ymm3[127:96]) ∘ add_single(%ymm3[31:0], %ymm3[63:32]) ∘ add_single(%ymm2[95:64], %ymm2[127:96]) ∘ add_single(%ymm2[31:0], %ymm2[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


746> vhaddps_ymm_ymm_ymm (vhaddps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhaddps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhaddps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : add_single(%ymm3[223:192], %ymm3[255:224]) ∘ add_single(%ymm3[159:128], %ymm3[191:160]) ∘ add_single(%ymm2[223:192], %ymm2[255:224]) ∘ add_single(%ymm2[159:128], %ymm2[191:160]) ∘ (add_single(%ymm3[95:64], %ymm3[127:96]) ∘ add_single(%ymm3[31:0], %ymm3[63:32]) ∘ add_single(%ymm2[95:64], %ymm2[127:96]) ∘ add_single(%ymm2[31:0], %ymm2[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


747> vhsubpd_xmm_xmm_xmm (vhsubpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhsubpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhsubpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sub_double(%ymm3[63:0], %ymm3[127:64]) ∘ sub_double(%ymm2[63:0], %ymm2[127:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


748> vhsubpd_ymm_ymm_ymm (vhsubpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhsubpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhsubpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : sub_double(%ymm3[191:128], %ymm3[255:192]) ∘ (sub_double(%ymm2[191:128], %ymm2[255:192]) ∘ (sub_double(%ymm3[63:0], %ymm3[127:64]) ∘ sub_double(%ymm2[63:0], %ymm2[127:64])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


749> vhsubps_xmm_xmm_xmm (vhsubps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhsubps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhsubps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sub_single(%ymm3[95:64], %ymm3[127:96]) ∘ sub_single(%ymm3[31:0], %ymm3[63:32]) ∘ (sub_single(%ymm2[95:64], %ymm2[127:96]) ∘ sub_single(%ymm2[31:0], %ymm2[63:32])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


750> vhsubps_ymm_ymm_ymm (vhsubps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vhsubps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vhsubps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : sub_single(%ymm3[223:192], %ymm3[255:224]) ∘ (sub_single(%ymm3[159:128], %ymm3[191:160]) ∘ (sub_single(%ymm2[223:192], %ymm2[255:224]) ∘ (sub_single(%ymm2[159:128], %ymm2[191:160]) ∘ (sub_single(%ymm3[95:64], %ymm3[127:96]) ∘ (sub_single(%ymm3[31:0], %ymm3[63:32]) ∘ (sub_single(%ymm2[95:64], %ymm2[127:96]) ∘ sub_single(%ymm2[31:0], %ymm2[63:32])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


751> vmaxpd_xmm_xmm_xmm (vmaxpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmaxpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmaxpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₆₄ ∘ (0x0₆₄ ∘ ((maxcmp_double(%ymm2[127:64], %ymm3[127:64]) = 0x1₁ ? %ymm2[127:64] : %ymm3[127:64]) ∘ (maxcmp_double(%ymm2[63:0], %ymm3[63:0]) = 0x1₁ ? %ymm2[63:0] : %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


752> vmaxps_xmm_xmm_xmm (vmaxps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmaxps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmaxps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ ((maxcmp_single(%ymm2[127:96], %ymm3[127:96]) = 0x1₁ ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((maxcmp_single(%ymm2[95:64], %ymm3[95:64]) = 0x1₁ ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((maxcmp_single(%ymm2[63:32], %ymm3[63:32]) = 0x1₁ ? %ymm2[63:32] : %ymm3[63:32]) ∘ (maxcmp_single(%ymm2[31:0], %ymm3[31:0]) = 0x1₁ ? %ymm2[31:0] : %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


753> vmaxsd_xmm_xmm_xmm (vmaxsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmaxsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmaxsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ (maxcmp_double(%ymm2[63:0], %ymm3[63:0]) = 0x1₁ ? %ymm2[63:0] : %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


754> vmaxss_xmm_xmm_xmm (vmaxss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmaxss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmaxss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ (maxcmp_single(%ymm2[31:0], %ymm3[31:0]) = 0x1₁ ? %ymm2[31:0] : %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


755> vminpd_xmm_xmm_xmm (vminpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vminpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vminpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₆₄ ∘ (0x0₆₄ ∘ ((mincmp_double(%ymm2[127:64], %ymm3[127:64]) = 0x1₁ ? %ymm2[127:64] : %ymm3[127:64]) ∘ (mincmp_double(%ymm2[63:0], %ymm3[63:0]) = 0x1₁ ? %ymm2[63:0] : %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


756> vminps_xmm_xmm_xmm (vminps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vminps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vminps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ ((mincmp_single(%ymm2[127:96], %ymm3[127:96]) = 0x1₁ ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((mincmp_single(%ymm2[95:64], %ymm3[95:64]) = 0x1₁ ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((mincmp_single(%ymm2[63:32], %ymm3[63:32]) = 0x1₁ ? %ymm2[63:32] : %ymm3[63:32]) ∘ (mincmp_single(%ymm2[31:0], %ymm3[31:0]) = 0x1₁ ? %ymm2[31:0] : %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


757> vminsd_xmm_xmm_xmm (vminsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vminsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vminsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ (mincmp_double(%ymm2[63:0], %ymm3[63:0]) = 0x1₁ ? %ymm2[63:0] : %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


758> vminss_xmm_xmm_xmm (vminss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vminss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vminss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ (mincmp_single(%ymm2[31:0], %ymm3[31:0]) = 0x1₁ ? %ymm2[31:0] : %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


759> vmovapd_xmm_xmm (vmovapd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovapd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovapd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


760> vmovapd_ymm_ymm (vmovapd %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovapd %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovapd %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


761> vmovaps_xmm_xmm (vmovaps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovaps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovaps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


762> vmovaps_ymm_ymm (vmovaps %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovaps %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovaps %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


763> vmovddup_xmm_xmm (vmovddup %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovddup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovddup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


764> vmovddup_ymm_ymm (vmovddup %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovddup %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovddup %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2[191:128] ∘ %ymm2[191:128] ∘ (%ymm2[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


765> vmovdqa_xmm_xmm (vmovdqa %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovdqa %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovdqa %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


766> vmovdqa_ymm_ymm (vmovdqa %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovdqa %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovdqa %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


767> vmovdqu_xmm_xmm (vmovdqu %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovdqu %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovdqu %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


768> vmovdqu_ymm_ymm (vmovdqu %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovdqu %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovdqu %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


769> vmovd_r32_xmm (vmovd %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovd %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovd %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ %ymm1[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


770> vmovd_xmm_r32 (vmovd %ebx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovd %ebx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovd %ebx, %xmm1

  maybe read:      { %ebx }
  must read:       { %ebx }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₂₂₄ ∘ %rbx[31:24] ∘ %rbx[23:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


771> vmovhlps_xmm_xmm_xmm (vmovhlps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovhlps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovhlps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ %ymm3[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


772> vmovlhps_xmm_xmm_xmm (vmovlhps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovlhps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovlhps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


773> vmovmskpd_r32_xmm (vmovmskpd %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskpd %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovmskpd %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ (((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


774> vmovmskpd_r32_ymm (vmovmskpd %ymm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskpd %ymm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovmskpd %ymm1, %ebx

  maybe read:      { %ymm1 }
  must read:       { %ymm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₄₈ ∘ (0x0₁ ∘ ((((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]) + 0x0₁ ∘ ((((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]))[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


775> vmovmskpd_r64_xmm (vmovmskpd %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskpd %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovmskpd %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ (((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


776> vmovmskpd_r64_ymm (vmovmskpd %ymm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskpd %ymm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovmskpd %ymm1, %rbx

  maybe read:      { %ymm1 }
  must read:       { %ymm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ (((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:16] ∘ (0x0₁ ∘ ((((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]) + 0x0₁ ∘ ((((((0x0₁ ∘ %ymm1[63:32] + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[63:32] + 0x1₃₃ : 0x0₁ ∘ %ymm1[63:32]) + 0x0₁ ∘ %ymm1[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[127:96] + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[127:96] + 0x1₃₃ : 0x0₁ ∘ %ymm1[127:96]) + 0x0₁ ∘ %ymm1[127:96])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ %ymm1[191:160] + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[191:160] + 0x1₃₃ : 0x0₁ ∘ %ymm1[191:160]) + 0x0₁ ∘ %ymm1[191:160])[32:32] = 0x1₁ ? (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ %ymm1[255:224] + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x0₁ ∘ %ymm1[255:224] + 0x1₃₃ : 0x0₁ ∘ %ymm1[255:224]) + 0x0₁ ∘ %ymm1[255:224])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]))[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


777> vmovmskps_r32_xmm (vmovmskps %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskps %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovmskps %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:16] ∘ (0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]) + 0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]))[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


778> vmovmskps_r32_ymm (vmovmskps %ymm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskps %ymm1, %ebx" 1>/tmp/yyy 2>&1 
Unsupported:vmovmskps_r32_ymm:vmovmskps %ymm1, %ebx

779> vmovmskps_r64_xmm (vmovmskps %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskps %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovmskps %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[31:16] ∘ (0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]) + 0x0₁ ∘ ((((((0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[31:0])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[63:32])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[15:8] ∘ (0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0] + 0x0₁ ∘ (((((0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[95:64])[63:32])[32:32] = 0x1₁ ? (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x2₃₃ : 0x1₃₃ : (((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃) + ((((0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32] + 0x1₃₃ : 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32]) + 0x0₁ ∘ sign-extend-64(%ymm1[127:96])[63:32])[32:32] = 0x1₁ ? 0x1₃₃ : 0x0₃₃))[7:0])[7:0]))[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


780> vmovmskps_r64_ymm (vmovmskps %ymm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovmskps %ymm1, %rbx" 1>/tmp/yyy 2>&1 
Unsupported:vmovmskps_r64_ymm:vmovmskps %ymm1, %rbx

781> vmovq_r64_xmm (vmovq %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovq %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovq %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : %ymm1[63:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


782> vmovq_xmm_r64 (vmovq %rbx, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovq %rbx, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovq %rbx, %xmm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₆₄ ∘ (0x0₆₄ ⊕ %rbx))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


783> vmovq_xmm_xmm (vmovq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₆₄ ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


784> vmovsd_xmm_xmm_xmm (vmovsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ %ymm3[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


785> vmovshdup_xmm_xmm (vmovshdup %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovshdup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovshdup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:96] ∘ %ymm2[127:96] ∘ (%ymm2[63:32] ∘ %ymm2[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


786> vmovshdup_ymm_ymm (vmovshdup %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovshdup %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovshdup %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2[255:224] ∘ %ymm2[255:224] ∘ (%ymm2[191:160] ∘ %ymm2[191:160]) ∘ (%ymm2[127:96] ∘ %ymm2[127:96] ∘ (%ymm2[63:32] ∘ %ymm2[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


787> vmovsldup_xmm_xmm (vmovsldup %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovsldup %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovsldup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[95:64] ∘ %ymm2[95:64] ∘ (%ymm2[31:0] ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


788> vmovsldup_ymm_ymm (vmovsldup %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovsldup %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovsldup %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2[223:192] ∘ %ymm2[223:192] ∘ (%ymm2[159:128] ∘ %ymm2[159:128]) ∘ (%ymm2[95:64] ∘ %ymm2[95:64] ∘ (%ymm2[31:0] ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


789> vmovss_xmm_xmm_xmm (vmovss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ %ymm3[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


790> vmovupd_xmm_xmm (vmovupd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovupd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovupd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


791> vmovupd_ymm_ymm (vmovupd %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovupd %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovupd %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


792> vmovups_xmm_xmm (vmovups %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovups %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovups %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ %ymm2[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


793> vmovups_ymm_ymm (vmovups %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmovups %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmovups %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


794> vmulpd_xmm_xmm_xmm (vmulpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmulpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmulpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (mul_double(%ymm2[127:64], %ymm3[127:64]) ∘ mul_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


795> vmulps_xmm_xmm_xmm (vmulps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmulps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmulps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (0x0₃₂ ∘ (mul_single(%ymm2[127:96], %ymm3[127:96]) ∘ (mul_single(%ymm2[95:64], %ymm3[95:64]) ∘ (mul_single(%ymm2[63:32], %ymm3[63:32]) ∘ mul_single(%ymm2[31:0], %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


796> vmulsd_xmm_xmm_xmm (vmulsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmulsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmulsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ mul_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


797> vmulss_xmm_xmm_xmm (vmulss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vmulss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vmulss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ mul_single(%ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


798> vorpd_xmm_xmm_xmm (vorpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vorpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vorpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] | %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


799> vorpd_ymm_ymm_ymm (vorpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vorpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vorpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2 | %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


800> vorps_xmm_xmm_xmm (vorps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vorps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vorps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] | %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


801> vorps_ymm_ymm_ymm (vorps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vorps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vorps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2 | %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


802> vpabsb_xmm_xmm (vpabsb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpabsb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpabsb %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] > 0x7f₈ ? -%ymm2[127:120] : %ymm2[127:120]) ∘ ((%ymm2[119:112] > 0x7f₈ ? -%ymm2[119:112] : %ymm2[119:112]) ∘ ((%ymm2[111:104] > 0x7f₈ ? -%ymm2[111:104] : %ymm2[111:104]) ∘ ((%ymm2[103:96] > 0x7f₈ ? -%ymm2[103:96] : %ymm2[103:96]) ∘ ((%ymm2[95:88] > 0x7f₈ ? -%ymm2[95:88] : %ymm2[95:88]) ∘ ((%ymm2[87:80] > 0x7f₈ ? -%ymm2[87:80] : %ymm2[87:80]) ∘ ((%ymm2[79:72] > 0x7f₈ ? -%ymm2[79:72] : %ymm2[79:72]) ∘ ((%ymm2[71:64] > 0x7f₈ ? -%ymm2[71:64] : %ymm2[71:64]) ∘ ((%ymm2[63:56] > 0x7f₈ ? -%ymm2[63:56] : %ymm2[63:56]) ∘ ((%ymm2[55:48] > 0x7f₈ ? -%ymm2[55:48] : %ymm2[55:48]) ∘ ((%ymm2[47:40] > 0x7f₈ ? -%ymm2[47:40] : %ymm2[47:40]) ∘ ((%ymm2[39:32] > 0x7f₈ ? -%ymm2[39:32] : %ymm2[39:32]) ∘ ((%ymm2[31:24] > 0x7f₈ ? -%ymm2[31:24] : %ymm2[31:24]) ∘ ((%ymm2[23:16] > 0x7f₈ ? -%ymm2[23:16] : %ymm2[23:16]) ∘ ((%ymm2[15:8] > 0x7f₈ ? -%ymm2[15:8] : %ymm2[15:8]) ∘ (%ymm2[7:0] > 0x7f₈ ? -%ymm2[7:0] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


803> vpabsb_ymm_ymm (vpabsb %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpabsb %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpabsb %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] > 0x7f₈ ? -%ymm2[255:248] : %ymm2[255:248]) ∘ ((%ymm2[247:240] > 0x7f₈ ? -%ymm2[247:240] : %ymm2[247:240]) ∘ ((%ymm2[239:232] > 0x7f₈ ? -%ymm2[239:232] : %ymm2[239:232]) ∘ ((%ymm2[231:224] > 0x7f₈ ? -%ymm2[231:224] : %ymm2[231:224]) ∘ ((%ymm2[223:216] > 0x7f₈ ? -%ymm2[223:216] : %ymm2[223:216]) ∘ ((%ymm2[215:208] > 0x7f₈ ? -%ymm2[215:208] : %ymm2[215:208]) ∘ ((%ymm2[207:200] > 0x7f₈ ? -%ymm2[207:200] : %ymm2[207:200]) ∘ ((%ymm2[199:192] > 0x7f₈ ? -%ymm2[199:192] : %ymm2[199:192]) ∘ ((%ymm2[191:184] > 0x7f₈ ? -%ymm2[191:184] : %ymm2[191:184]) ∘ ((%ymm2[183:176] > 0x7f₈ ? -%ymm2[183:176] : %ymm2[183:176]) ∘ ((%ymm2[175:168] > 0x7f₈ ? -%ymm2[175:168] : %ymm2[175:168]) ∘ ((%ymm2[167:160] > 0x7f₈ ? -%ymm2[167:160] : %ymm2[167:160]) ∘ ((%ymm2[159:152] > 0x7f₈ ? -%ymm2[159:152] : %ymm2[159:152]) ∘ ((%ymm2[151:144] > 0x7f₈ ? -%ymm2[151:144] : %ymm2[151:144]) ∘ ((%ymm2[143:136] > 0x7f₈ ? -%ymm2[143:136] : %ymm2[143:136]) ∘ ((%ymm2[135:128] > 0x7f₈ ? -%ymm2[135:128] : %ymm2[135:128]) ∘ ((%ymm2[127:120] > 0x7f₈ ? -%ymm2[127:120] : %ymm2[127:120]) ∘ ((%ymm2[119:112] > 0x7f₈ ? -%ymm2[119:112] : %ymm2[119:112]) ∘ ((%ymm2[111:104] > 0x7f₈ ? -%ymm2[111:104] : %ymm2[111:104]) ∘ ((%ymm2[103:96] > 0x7f₈ ? -%ymm2[103:96] : %ymm2[103:96]) ∘ ((%ymm2[95:88] > 0x7f₈ ? -%ymm2[95:88] : %ymm2[95:88]) ∘ ((%ymm2[87:80] > 0x7f₈ ? -%ymm2[87:80] : %ymm2[87:80]) ∘ ((%ymm2[79:72] > 0x7f₈ ? -%ymm2[79:72] : %ymm2[79:72]) ∘ ((%ymm2[71:64] > 0x7f₈ ? -%ymm2[71:64] : %ymm2[71:64]) ∘ ((%ymm2[63:56] > 0x7f₈ ? -%ymm2[63:56] : %ymm2[63:56]) ∘ ((%ymm2[55:48] > 0x7f₈ ? -%ymm2[55:48] : %ymm2[55:48]) ∘ ((%ymm2[47:40] > 0x7f₈ ? -%ymm2[47:40] : %ymm2[47:40]) ∘ ((%ymm2[39:32] > 0x7f₈ ? -%ymm2[39:32] : %ymm2[39:32]) ∘ ((%ymm2[31:24] > 0x7f₈ ? -%ymm2[31:24] : %ymm2[31:24]) ∘ ((%ymm2[23:16] > 0x7f₈ ? -%ymm2[23:16] : %ymm2[23:16]) ∘ ((%ymm2[15:8] > 0x7f₈ ? -%ymm2[15:8] : %ymm2[15:8]) ∘ (%ymm2[7:0] > 0x7f₈ ? -%ymm2[7:0] : %ymm2[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


804> vpabsd_xmm_xmm (vpabsd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpabsd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpabsd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] > 0x7fffffff₃₂ ? -%ymm2[127:96] : %ymm2[127:96]) ∘ ((%ymm2[95:64] > 0x7fffffff₃₂ ? -%ymm2[95:64] : %ymm2[95:64]) ∘ ((%ymm2[63:32] > 0x7fffffff₃₂ ? -%ymm2[63:32] : %ymm2[63:32]) ∘ (%ymm2[31:0] > 0x7fffffff₃₂ ? -%ymm2[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


805> vpabsd_ymm_ymm (vpabsd %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpabsd %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpabsd %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] > 0x7fffffff₃₂ ? -%ymm2[255:224] : %ymm2[255:224]) ∘ ((%ymm2[223:192] > 0x7fffffff₃₂ ? -%ymm2[223:192] : %ymm2[223:192]) ∘ ((%ymm2[191:160] > 0x7fffffff₃₂ ? -%ymm2[191:160] : %ymm2[191:160]) ∘ ((%ymm2[159:128] > 0x7fffffff₃₂ ? -%ymm2[159:128] : %ymm2[159:128]) ∘ ((%ymm2[127:96] > 0x7fffffff₃₂ ? -%ymm2[127:96] : %ymm2[127:96]) ∘ ((%ymm2[95:64] > 0x7fffffff₃₂ ? -%ymm2[95:64] : %ymm2[95:64]) ∘ ((%ymm2[63:32] > 0x7fffffff₃₂ ? -%ymm2[63:32] : %ymm2[63:32]) ∘ (%ymm2[31:0] > 0x7fffffff₃₂ ? -%ymm2[31:0] : %ymm2[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


806> vpabsw_xmm_xmm (vpabsw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpabsw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpabsw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] > 0x7fff₁₆ ? -%ymm2[127:112] : %ymm2[127:112]) ∘ ((%ymm2[111:96] > 0x7fff₁₆ ? -%ymm2[111:96] : %ymm2[111:96]) ∘ ((%ymm2[95:80] > 0x7fff₁₆ ? -%ymm2[95:80] : %ymm2[95:80]) ∘ ((%ymm2[79:64] > 0x7fff₁₆ ? -%ymm2[79:64] : %ymm2[79:64]) ∘ ((%ymm2[63:48] > 0x7fff₁₆ ? -%ymm2[63:48] : %ymm2[63:48]) ∘ ((%ymm2[47:32] > 0x7fff₁₆ ? -%ymm2[47:32] : %ymm2[47:32]) ∘ ((%ymm2[31:16] > 0x7fff₁₆ ? -%ymm2[31:16] : %ymm2[31:16]) ∘ (%ymm2[15:0] > 0x7fff₁₆ ? -%ymm2[15:0] : %ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


807> vpabsw_ymm_ymm (vpabsw %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpabsw %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpabsw %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] > 0x7fff₁₆ ? -%ymm2[255:240] : %ymm2[255:240]) ∘ ((%ymm2[239:224] > 0x7fff₁₆ ? -%ymm2[239:224] : %ymm2[239:224]) ∘ ((%ymm2[223:208] > 0x7fff₁₆ ? -%ymm2[223:208] : %ymm2[223:208]) ∘ ((%ymm2[207:192] > 0x7fff₁₆ ? -%ymm2[207:192] : %ymm2[207:192]) ∘ ((%ymm2[191:176] > 0x7fff₁₆ ? -%ymm2[191:176] : %ymm2[191:176]) ∘ ((%ymm2[175:160] > 0x7fff₁₆ ? -%ymm2[175:160] : %ymm2[175:160]) ∘ ((%ymm2[159:144] > 0x7fff₁₆ ? -%ymm2[159:144] : %ymm2[159:144]) ∘ ((%ymm2[143:128] > 0x7fff₁₆ ? -%ymm2[143:128] : %ymm2[143:128]) ∘ ((%ymm2[127:112] > 0x7fff₁₆ ? -%ymm2[127:112] : %ymm2[127:112]) ∘ ((%ymm2[111:96] > 0x7fff₁₆ ? -%ymm2[111:96] : %ymm2[111:96]) ∘ ((%ymm2[95:80] > 0x7fff₁₆ ? -%ymm2[95:80] : %ymm2[95:80]) ∘ ((%ymm2[79:64] > 0x7fff₁₆ ? -%ymm2[79:64] : %ymm2[79:64]) ∘ ((%ymm2[63:48] > 0x7fff₁₆ ? -%ymm2[63:48] : %ymm2[63:48]) ∘ ((%ymm2[47:32] > 0x7fff₁₆ ? -%ymm2[47:32] : %ymm2[47:32]) ∘ ((%ymm2[31:16] > 0x7fff₁₆ ? -%ymm2[31:16] : %ymm2[31:16]) ∘ (%ymm2[15:0] > 0x7fff₁₆ ? -%ymm2[15:0] : %ymm2[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


808> vpackssdw_xmm_xmm_xmm (vpackssdw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpackssdw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpackssdw_xmm_xmm_xmm:vpackssdw %xmm3, %xmm2, %xmm1

809> vpackssdw_ymm_ymm_ymm (vpackssdw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpackssdw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpackssdw_ymm_ymm_ymm:vpackssdw %ymm3, %ymm2, %ymm1

810> vpacksswb_xmm_xmm_xmm (vpacksswb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpacksswb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpacksswb_xmm_xmm_xmm:vpacksswb %xmm3, %xmm2, %xmm1

811> vpacksswb_ymm_ymm_ymm (vpacksswb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpacksswb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpacksswb_ymm_ymm_ymm:vpacksswb %ymm3, %ymm2, %ymm1

812> vpackusdw_xmm_xmm_xmm (vpackusdw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpackusdw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpackusdw_xmm_xmm_xmm:vpackusdw %xmm3, %xmm2, %xmm1

813> vpackusdw_ymm_ymm_ymm (vpackusdw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpackusdw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpackusdw_ymm_ymm_ymm:vpackusdw %ymm3, %ymm2, %ymm1

814> vpackuswb_xmm_xmm_xmm (vpackuswb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpackuswb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpackuswb_xmm_xmm_xmm:vpackuswb %xmm3, %xmm2, %xmm1

815> vpackuswb_ymm_ymm_ymm (vpackuswb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpackuswb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpackuswb_ymm_ymm_ymm:vpackuswb %ymm3, %ymm2, %ymm1

816> vpaddb_xmm_xmm_xmm (vpaddb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] + %ymm3[127:120]) ∘ ((%ymm2[119:112] + %ymm3[119:112]) ∘ ((%ymm2[111:104] + %ymm3[111:104]) ∘ ((%ymm2[103:96] + %ymm3[103:96]) ∘ ((%ymm2[95:88] + %ymm3[95:88]) ∘ ((%ymm2[87:80] + %ymm3[87:80]) ∘ ((%ymm2[79:72] + %ymm3[79:72]) ∘ ((%ymm2[71:64] + %ymm3[71:64]) ∘ ((%ymm2[63:56] + %ymm3[63:56]) ∘ ((%ymm2[55:48] + %ymm3[55:48]) ∘ ((%ymm2[47:40] + %ymm3[47:40]) ∘ ((%ymm2[39:32] + %ymm3[39:32]) ∘ ((%ymm2[31:24] + %ymm3[31:24]) ∘ ((%ymm2[23:16] + %ymm3[23:16]) ∘ ((%ymm2[15:8] + %ymm3[15:8]) ∘ (%ymm2[7:0] + %ymm3[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


817> vpaddb_ymm_ymm_ymm (vpaddb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] + %ymm3[255:248]) ∘ ((%ymm2[247:240] + %ymm3[247:240]) ∘ ((%ymm2[239:232] + %ymm3[239:232]) ∘ ((%ymm2[231:224] + %ymm3[231:224]) ∘ ((%ymm2[223:216] + %ymm3[223:216]) ∘ ((%ymm2[215:208] + %ymm3[215:208]) ∘ ((%ymm2[207:200] + %ymm3[207:200]) ∘ ((%ymm2[199:192] + %ymm3[199:192]) ∘ ((%ymm2[191:184] + %ymm3[191:184]) ∘ ((%ymm2[183:176] + %ymm3[183:176]) ∘ ((%ymm2[175:168] + %ymm3[175:168]) ∘ ((%ymm2[167:160] + %ymm3[167:160]) ∘ ((%ymm2[159:152] + %ymm3[159:152]) ∘ ((%ymm2[151:144] + %ymm3[151:144]) ∘ ((%ymm2[143:136] + %ymm3[143:136]) ∘ ((%ymm2[135:128] + %ymm3[135:128]) ∘ ((%ymm2[127:120] + %ymm3[127:120]) ∘ ((%ymm2[119:112] + %ymm3[119:112]) ∘ ((%ymm2[111:104] + %ymm3[111:104]) ∘ ((%ymm2[103:96] + %ymm3[103:96]) ∘ ((%ymm2[95:88] + %ymm3[95:88]) ∘ ((%ymm2[87:80] + %ymm3[87:80]) ∘ ((%ymm2[79:72] + %ymm3[79:72]) ∘ ((%ymm2[71:64] + %ymm3[71:64]) ∘ ((%ymm2[63:56] + %ymm3[63:56]) ∘ ((%ymm2[55:48] + %ymm3[55:48]) ∘ ((%ymm2[47:40] + %ymm3[47:40]) ∘ ((%ymm2[39:32] + %ymm3[39:32]) ∘ ((%ymm2[31:24] + %ymm3[31:24]) ∘ ((%ymm2[23:16] + %ymm3[23:16]) ∘ ((%ymm2[15:8] + %ymm3[15:8]) ∘ (%ymm2[7:0] + %ymm3[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


818> vpaddd_xmm_xmm_xmm (vpaddd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] + %ymm3[127:96]) ∘ ((%ymm2[95:64] + %ymm3[95:64]) ∘ ((%ymm2[63:32] + %ymm3[63:32]) ∘ (%ymm2[31:0] + %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


819> vpaddd_ymm_ymm_ymm (vpaddd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] + %ymm3[255:224]) ∘ ((%ymm2[223:192] + %ymm3[223:192]) ∘ ((%ymm2[191:160] + %ymm3[191:160]) ∘ ((%ymm2[159:128] + %ymm3[159:128]) ∘ ((%ymm2[127:96] + %ymm3[127:96]) ∘ ((%ymm2[95:64] + %ymm3[95:64]) ∘ ((%ymm2[63:32] + %ymm3[63:32]) ∘ (%ymm2[31:0] + %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


820> vpaddq_xmm_xmm_xmm (vpaddq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] + %ymm3[127:64]) ∘ (%ymm2[63:0] + %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


821> vpaddq_ymm_ymm_ymm (vpaddq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:192] + %ymm3[255:192]) ∘ ((%ymm2[191:128] + %ymm3[191:128]) ∘ ((%ymm2[127:64] + %ymm3[127:64]) ∘ (%ymm2[63:0] + %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


822> vpaddsb_xmm_xmm_xmm (vpaddsb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddsb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpaddsb_xmm_xmm_xmm:vpaddsb %xmm3, %xmm2, %xmm1

823> vpaddsb_ymm_ymm_ymm (vpaddsb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddsb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpaddsb_ymm_ymm_ymm:vpaddsb %ymm3, %ymm2, %ymm1

824> vpaddsw_xmm_xmm_xmm (vpaddsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpaddsw_xmm_xmm_xmm:vpaddsw %xmm3, %xmm2, %xmm1

825> vpaddsw_ymm_ymm_ymm (vpaddsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpaddsw_ymm_ymm_ymm:vpaddsw %ymm3, %ymm2, %ymm1

826> vpaddusb_xmm_xmm_xmm (vpaddusb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddusb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddusb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (((0x0₁ ∘ %ymm2[127:120] + 0x0₁ ∘ %ymm3[127:120])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[127:120] + 0x0₁ ∘ %ymm3[127:120])[7:0]) ∘ (((0x0₁ ∘ %ymm2[119:112] + 0x0₁ ∘ %ymm3[119:112])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[119:112] + 0x0₁ ∘ %ymm3[119:112])[7:0]) ∘ (((0x0₁ ∘ %ymm2[111:104] + 0x0₁ ∘ %ymm3[111:104])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[111:104] + 0x0₁ ∘ %ymm3[111:104])[7:0]) ∘ (((0x0₁ ∘ %ymm2[103:96] + 0x0₁ ∘ %ymm3[103:96])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[103:96] + 0x0₁ ∘ %ymm3[103:96])[7:0]) ∘ (((0x0₁ ∘ %ymm2[95:88] + 0x0₁ ∘ %ymm3[95:88])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[95:88] + 0x0₁ ∘ %ymm3[95:88])[7:0]) ∘ (((0x0₁ ∘ %ymm2[87:80] + 0x0₁ ∘ %ymm3[87:80])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[87:80] + 0x0₁ ∘ %ymm3[87:80])[7:0]) ∘ (((0x0₁ ∘ %ymm2[79:72] + 0x0₁ ∘ %ymm3[79:72])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[79:72] + 0x0₁ ∘ %ymm3[79:72])[7:0]) ∘ (((0x0₁ ∘ %ymm2[71:64] + 0x0₁ ∘ %ymm3[71:64])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[71:64] + 0x0₁ ∘ %ymm3[71:64])[7:0]) ∘ (((0x0₁ ∘ %ymm2[63:56] + 0x0₁ ∘ %ymm3[63:56])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[63:56] + 0x0₁ ∘ %ymm3[63:56])[7:0]) ∘ (((0x0₁ ∘ %ymm2[55:48] + 0x0₁ ∘ %ymm3[55:48])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[55:48] + 0x0₁ ∘ %ymm3[55:48])[7:0]) ∘ (((0x0₁ ∘ %ymm2[47:40] + 0x0₁ ∘ %ymm3[47:40])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[47:40] + 0x0₁ ∘ %ymm3[47:40])[7:0]) ∘ (((0x0₁ ∘ %ymm2[39:32] + 0x0₁ ∘ %ymm3[39:32])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[39:32] + 0x0₁ ∘ %ymm3[39:32])[7:0]) ∘ (((0x0₁ ∘ %ymm2[31:24] + 0x0₁ ∘ %ymm3[31:24])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[31:24] + 0x0₁ ∘ %ymm3[31:24])[7:0]) ∘ (((0x0₁ ∘ %ymm2[23:16] + 0x0₁ ∘ %ymm3[23:16])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[23:16] + 0x0₁ ∘ %ymm3[23:16])[7:0]) ∘ (((0x0₁ ∘ %ymm2[15:8] + 0x0₁ ∘ %ymm3[15:8])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[15:8] + 0x0₁ ∘ %ymm3[15:8])[7:0]) ∘ ((0x0₁ ∘ %ymm2[7:0] + 0x0₁ ∘ %ymm3[7:0])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[7:0] + 0x0₁ ∘ %ymm3[7:0])[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


827> vpaddusb_ymm_ymm_ymm (vpaddusb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddusb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddusb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : ((0x0₁ ∘ %ymm2[255:248] + 0x0₁ ∘ %ymm3[255:248])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[255:248] + 0x0₁ ∘ %ymm3[255:248])[7:0]) ∘ (((0x0₁ ∘ %ymm2[247:240] + 0x0₁ ∘ %ymm3[247:240])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[247:240] + 0x0₁ ∘ %ymm3[247:240])[7:0]) ∘ (((0x0₁ ∘ %ymm2[239:232] + 0x0₁ ∘ %ymm3[239:232])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[239:232] + 0x0₁ ∘ %ymm3[239:232])[7:0]) ∘ (((0x0₁ ∘ %ymm2[231:224] + 0x0₁ ∘ %ymm3[231:224])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[231:224] + 0x0₁ ∘ %ymm3[231:224])[7:0]) ∘ (((0x0₁ ∘ %ymm2[223:216] + 0x0₁ ∘ %ymm3[223:216])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[223:216] + 0x0₁ ∘ %ymm3[223:216])[7:0]) ∘ (((0x0₁ ∘ %ymm2[215:208] + 0x0₁ ∘ %ymm3[215:208])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[215:208] + 0x0₁ ∘ %ymm3[215:208])[7:0]) ∘ (((0x0₁ ∘ %ymm2[207:200] + 0x0₁ ∘ %ymm3[207:200])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[207:200] + 0x0₁ ∘ %ymm3[207:200])[7:0]) ∘ (((0x0₁ ∘ %ymm2[199:192] + 0x0₁ ∘ %ymm3[199:192])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[199:192] + 0x0₁ ∘ %ymm3[199:192])[7:0]) ∘ (((0x0₁ ∘ %ymm2[191:184] + 0x0₁ ∘ %ymm3[191:184])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[191:184] + 0x0₁ ∘ %ymm3[191:184])[7:0]) ∘ (((0x0₁ ∘ %ymm2[183:176] + 0x0₁ ∘ %ymm3[183:176])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[183:176] + 0x0₁ ∘ %ymm3[183:176])[7:0]) ∘ (((0x0₁ ∘ %ymm2[175:168] + 0x0₁ ∘ %ymm3[175:168])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[175:168] + 0x0₁ ∘ %ymm3[175:168])[7:0]) ∘ (((0x0₁ ∘ %ymm2[167:160] + 0x0₁ ∘ %ymm3[167:160])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[167:160] + 0x0₁ ∘ %ymm3[167:160])[7:0]) ∘ (((0x0₁ ∘ %ymm2[159:152] + 0x0₁ ∘ %ymm3[159:152])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[159:152] + 0x0₁ ∘ %ymm3[159:152])[7:0]) ∘ (((0x0₁ ∘ %ymm2[151:144] + 0x0₁ ∘ %ymm3[151:144])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[151:144] + 0x0₁ ∘ %ymm3[151:144])[7:0]) ∘ (((0x0₁ ∘ %ymm2[143:136] + 0x0₁ ∘ %ymm3[143:136])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[143:136] + 0x0₁ ∘ %ymm3[143:136])[7:0]) ∘ (((0x0₁ ∘ %ymm2[135:128] + 0x0₁ ∘ %ymm3[135:128])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[135:128] + 0x0₁ ∘ %ymm3[135:128])[7:0]) ∘ (((0x0₁ ∘ %ymm2[127:120] + 0x0₁ ∘ %ymm3[127:120])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[127:120] + 0x0₁ ∘ %ymm3[127:120])[7:0]) ∘ (((0x0₁ ∘ %ymm2[119:112] + 0x0₁ ∘ %ymm3[119:112])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[119:112] + 0x0₁ ∘ %ymm3[119:112])[7:0]) ∘ (((0x0₁ ∘ %ymm2[111:104] + 0x0₁ ∘ %ymm3[111:104])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[111:104] + 0x0₁ ∘ %ymm3[111:104])[7:0]) ∘ (((0x0₁ ∘ %ymm2[103:96] + 0x0₁ ∘ %ymm3[103:96])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[103:96] + 0x0₁ ∘ %ymm3[103:96])[7:0]) ∘ (((0x0₁ ∘ %ymm2[95:88] + 0x0₁ ∘ %ymm3[95:88])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[95:88] + 0x0₁ ∘ %ymm3[95:88])[7:0]) ∘ (((0x0₁ ∘ %ymm2[87:80] + 0x0₁ ∘ %ymm3[87:80])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[87:80] + 0x0₁ ∘ %ymm3[87:80])[7:0]) ∘ (((0x0₁ ∘ %ymm2[79:72] + 0x0₁ ∘ %ymm3[79:72])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[79:72] + 0x0₁ ∘ %ymm3[79:72])[7:0]) ∘ (((0x0₁ ∘ %ymm2[71:64] + 0x0₁ ∘ %ymm3[71:64])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[71:64] + 0x0₁ ∘ %ymm3[71:64])[7:0]) ∘ (((0x0₁ ∘ %ymm2[63:56] + 0x0₁ ∘ %ymm3[63:56])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[63:56] + 0x0₁ ∘ %ymm3[63:56])[7:0]) ∘ (((0x0₁ ∘ %ymm2[55:48] + 0x0₁ ∘ %ymm3[55:48])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[55:48] + 0x0₁ ∘ %ymm3[55:48])[7:0]) ∘ (((0x0₁ ∘ %ymm2[47:40] + 0x0₁ ∘ %ymm3[47:40])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[47:40] + 0x0₁ ∘ %ymm3[47:40])[7:0]) ∘ (((0x0₁ ∘ %ymm2[39:32] + 0x0₁ ∘ %ymm3[39:32])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[39:32] + 0x0₁ ∘ %ymm3[39:32])[7:0]) ∘ (((0x0₁ ∘ %ymm2[31:24] + 0x0₁ ∘ %ymm3[31:24])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[31:24] + 0x0₁ ∘ %ymm3[31:24])[7:0]) ∘ (((0x0₁ ∘ %ymm2[23:16] + 0x0₁ ∘ %ymm3[23:16])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[23:16] + 0x0₁ ∘ %ymm3[23:16])[7:0]) ∘ (((0x0₁ ∘ %ymm2[15:8] + 0x0₁ ∘ %ymm3[15:8])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[15:8] + 0x0₁ ∘ %ymm3[15:8])[7:0]) ∘ ((0x0₁ ∘ %ymm2[7:0] + 0x0₁ ∘ %ymm3[7:0])[8:8] = 0x1₁ ? 0xff₈ : (0x0₁ ∘ %ymm2[7:0] + 0x0₁ ∘ %ymm3[7:0])[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


828> vpaddusw_xmm_xmm_xmm (vpaddusw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddusw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddusw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (((0x0₁ ∘ %ymm2[127:112] + 0x0₁ ∘ %ymm3[127:112])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[127:112] + 0x0₁ ∘ %ymm3[127:112])[15:0]) ∘ (((0x0₁ ∘ %ymm2[111:96] + 0x0₁ ∘ %ymm3[111:96])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[111:96] + 0x0₁ ∘ %ymm3[111:96])[15:0]) ∘ (((0x0₁ ∘ %ymm2[95:80] + 0x0₁ ∘ %ymm3[95:80])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[95:80] + 0x0₁ ∘ %ymm3[95:80])[15:0]) ∘ (((0x0₁ ∘ %ymm2[79:64] + 0x0₁ ∘ %ymm3[79:64])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[79:64] + 0x0₁ ∘ %ymm3[79:64])[15:0]) ∘ (((0x0₁ ∘ %ymm2[63:48] + 0x0₁ ∘ %ymm3[63:48])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[63:48] + 0x0₁ ∘ %ymm3[63:48])[15:0]) ∘ (((0x0₁ ∘ %ymm2[47:32] + 0x0₁ ∘ %ymm3[47:32])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[47:32] + 0x0₁ ∘ %ymm3[47:32])[15:0]) ∘ (((0x0₁ ∘ %ymm2[31:16] + 0x0₁ ∘ %ymm3[31:16])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[31:16] + 0x0₁ ∘ %ymm3[31:16])[15:0]) ∘ ((0x0₁ ∘ %ymm2[15:0] + 0x0₁ ∘ %ymm3[15:0])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[15:0] + 0x0₁ ∘ %ymm3[15:0])[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


829> vpaddusw_ymm_ymm_ymm (vpaddusw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddusw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddusw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : ((0x0₁ ∘ %ymm2[255:240] + 0x0₁ ∘ %ymm3[255:240])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[255:240] + 0x0₁ ∘ %ymm3[255:240])[15:0]) ∘ (((0x0₁ ∘ %ymm2[239:224] + 0x0₁ ∘ %ymm3[239:224])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[239:224] + 0x0₁ ∘ %ymm3[239:224])[15:0]) ∘ (((0x0₁ ∘ %ymm2[223:208] + 0x0₁ ∘ %ymm3[223:208])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[223:208] + 0x0₁ ∘ %ymm3[223:208])[15:0]) ∘ (((0x0₁ ∘ %ymm2[207:192] + 0x0₁ ∘ %ymm3[207:192])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[207:192] + 0x0₁ ∘ %ymm3[207:192])[15:0]) ∘ (((0x0₁ ∘ %ymm2[191:176] + 0x0₁ ∘ %ymm3[191:176])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[191:176] + 0x0₁ ∘ %ymm3[191:176])[15:0]) ∘ (((0x0₁ ∘ %ymm2[175:160] + 0x0₁ ∘ %ymm3[175:160])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[175:160] + 0x0₁ ∘ %ymm3[175:160])[15:0]) ∘ (((0x0₁ ∘ %ymm2[159:144] + 0x0₁ ∘ %ymm3[159:144])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[159:144] + 0x0₁ ∘ %ymm3[159:144])[15:0]) ∘ (((0x0₁ ∘ %ymm2[143:128] + 0x0₁ ∘ %ymm3[143:128])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[143:128] + 0x0₁ ∘ %ymm3[143:128])[15:0]) ∘ (((0x0₁ ∘ %ymm2[127:112] + 0x0₁ ∘ %ymm3[127:112])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[127:112] + 0x0₁ ∘ %ymm3[127:112])[15:0]) ∘ (((0x0₁ ∘ %ymm2[111:96] + 0x0₁ ∘ %ymm3[111:96])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[111:96] + 0x0₁ ∘ %ymm3[111:96])[15:0]) ∘ (((0x0₁ ∘ %ymm2[95:80] + 0x0₁ ∘ %ymm3[95:80])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[95:80] + 0x0₁ ∘ %ymm3[95:80])[15:0]) ∘ (((0x0₁ ∘ %ymm2[79:64] + 0x0₁ ∘ %ymm3[79:64])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[79:64] + 0x0₁ ∘ %ymm3[79:64])[15:0]) ∘ (((0x0₁ ∘ %ymm2[63:48] + 0x0₁ ∘ %ymm3[63:48])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[63:48] + 0x0₁ ∘ %ymm3[63:48])[15:0]) ∘ (((0x0₁ ∘ %ymm2[47:32] + 0x0₁ ∘ %ymm3[47:32])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[47:32] + 0x0₁ ∘ %ymm3[47:32])[15:0]) ∘ (((0x0₁ ∘ %ymm2[31:16] + 0x0₁ ∘ %ymm3[31:16])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[31:16] + 0x0₁ ∘ %ymm3[31:16])[15:0]) ∘ ((0x0₁ ∘ %ymm2[15:0] + 0x0₁ ∘ %ymm3[15:0])[16:16] = 0x1₁ ? 0xffff₁₆ : (0x0₁ ∘ %ymm2[15:0] + 0x0₁ ∘ %ymm3[15:0])[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


830> vpaddw_xmm_xmm_xmm (vpaddw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] + %ymm3[127:112]) ∘ ((%ymm2[111:96] + %ymm3[111:96]) ∘ ((%ymm2[95:80] + %ymm3[95:80]) ∘ ((%ymm2[79:64] + %ymm3[79:64]) ∘ ((%ymm2[63:48] + %ymm3[63:48]) ∘ ((%ymm2[47:32] + %ymm3[47:32]) ∘ ((%ymm2[31:16] + %ymm3[31:16]) ∘ (%ymm2[15:0] + %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


831> vpaddw_ymm_ymm_ymm (vpaddw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpaddw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpaddw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] + %ymm3[255:240]) ∘ ((%ymm2[239:224] + %ymm3[239:224]) ∘ ((%ymm2[223:208] + %ymm3[223:208]) ∘ ((%ymm2[207:192] + %ymm3[207:192]) ∘ ((%ymm2[191:176] + %ymm3[191:176]) ∘ ((%ymm2[175:160] + %ymm3[175:160]) ∘ ((%ymm2[159:144] + %ymm3[159:144]) ∘ ((%ymm2[143:128] + %ymm3[143:128]) ∘ ((%ymm2[127:112] + %ymm3[127:112]) ∘ ((%ymm2[111:96] + %ymm3[111:96]) ∘ ((%ymm2[95:80] + %ymm3[95:80]) ∘ ((%ymm2[79:64] + %ymm3[79:64]) ∘ ((%ymm2[63:48] + %ymm3[63:48]) ∘ ((%ymm2[47:32] + %ymm3[47:32]) ∘ ((%ymm2[31:16] + %ymm3[31:16]) ∘ (%ymm2[15:0] + %ymm3[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


832> vpandn_xmm_xmm_xmm (vpandn %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpandn %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpandn %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (!%ymm2[127:0] & %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


833> vpandn_ymm_ymm_ymm (vpandn %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpandn %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpandn %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : !%ymm2 & %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


834> vpand_xmm_xmm_xmm (vpand %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpand %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpand %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] & %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


835> vpand_ymm_ymm_ymm (vpand %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpand %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpand %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2 & %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


836> vpavgb_xmm_xmm_xmm (vpavgb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpavgb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpavgb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₁ ∘ %ymm2[127:120] + 0x0₁ ∘ %ymm3[127:120] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[119:112] + 0x0₁ ∘ %ymm3[119:112] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[111:104] + 0x0₁ ∘ %ymm3[111:104] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[103:96] + 0x0₁ ∘ %ymm3[103:96] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[95:88] + 0x0₁ ∘ %ymm3[95:88] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[87:80] + 0x0₁ ∘ %ymm3[87:80] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[79:72] + 0x0₁ ∘ %ymm3[79:72] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[71:64] + 0x0₁ ∘ %ymm3[71:64] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[63:56] + 0x0₁ ∘ %ymm3[63:56] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[55:48] + 0x0₁ ∘ %ymm3[55:48] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[47:40] + 0x0₁ ∘ %ymm3[47:40] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[39:32] + 0x0₁ ∘ %ymm3[39:32] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[31:24] + 0x0₁ ∘ %ymm3[31:24] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[23:16] + 0x0₁ ∘ %ymm3[23:16] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[15:8] + 0x0₁ ∘ %ymm3[15:8] + 0x1₉ >> 0x1₉)[7:0] ∘ (0x0₁ ∘ %ymm2[7:0] + 0x0₁ ∘ %ymm3[7:0] + 0x1₉ >> 0x1₉)[7:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


837> vpavgb_ymm_ymm_ymm (vpavgb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpavgb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpavgb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (0x0₁ ∘ %ymm2[255:248] + 0x0₁ ∘ %ymm3[255:248] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[247:240] + 0x0₁ ∘ %ymm3[247:240] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[239:232] + 0x0₁ ∘ %ymm3[239:232] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[231:224] + 0x0₁ ∘ %ymm3[231:224] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[223:216] + 0x0₁ ∘ %ymm3[223:216] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[215:208] + 0x0₁ ∘ %ymm3[215:208] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[207:200] + 0x0₁ ∘ %ymm3[207:200] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[199:192] + 0x0₁ ∘ %ymm3[199:192] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[191:184] + 0x0₁ ∘ %ymm3[191:184] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[183:176] + 0x0₁ ∘ %ymm3[183:176] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[175:168] + 0x0₁ ∘ %ymm3[175:168] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[167:160] + 0x0₁ ∘ %ymm3[167:160] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[159:152] + 0x0₁ ∘ %ymm3[159:152] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[151:144] + 0x0₁ ∘ %ymm3[151:144] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[143:136] + 0x0₁ ∘ %ymm3[143:136] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[135:128] + 0x0₁ ∘ %ymm3[135:128] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[127:120] + 0x0₁ ∘ %ymm3[127:120] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[119:112] + 0x0₁ ∘ %ymm3[119:112] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[111:104] + 0x0₁ ∘ %ymm3[111:104] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[103:96] + 0x0₁ ∘ %ymm3[103:96] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[95:88] + 0x0₁ ∘ %ymm3[95:88] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[87:80] + 0x0₁ ∘ %ymm3[87:80] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[79:72] + 0x0₁ ∘ %ymm3[79:72] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[71:64] + 0x0₁ ∘ %ymm3[71:64] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[63:56] + 0x0₁ ∘ %ymm3[63:56] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[55:48] + 0x0₁ ∘ %ymm3[55:48] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[47:40] + 0x0₁ ∘ %ymm3[47:40] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[39:32] + 0x0₁ ∘ %ymm3[39:32] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[31:24] + 0x0₁ ∘ %ymm3[31:24] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[23:16] + 0x0₁ ∘ %ymm3[23:16] + 0x1₉ >> 0x1₉)[7:0] ∘ ((0x0₁ ∘ %ymm2[15:8] + 0x0₁ ∘ %ymm3[15:8] + 0x1₉ >> 0x1₉)[7:0] ∘ (0x0₁ ∘ %ymm2[7:0] + 0x0₁ ∘ %ymm3[7:0] + 0x1₉ >> 0x1₉)[7:0]))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


838> vpavgw_xmm_xmm_xmm (vpavgw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpavgw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpavgw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₁ ∘ %ymm2[127:112] + 0x0₁ ∘ %ymm3[127:112] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[111:96] + 0x0₁ ∘ %ymm3[111:96] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[95:80] + 0x0₁ ∘ %ymm3[95:80] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[79:64] + 0x0₁ ∘ %ymm3[79:64] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[63:48] + 0x0₁ ∘ %ymm3[63:48] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[47:32] + 0x0₁ ∘ %ymm3[47:32] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[31:16] + 0x0₁ ∘ %ymm3[31:16] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ (0x0₁ ∘ %ymm2[15:0] + 0x0₁ ∘ %ymm3[15:0] + 0x1₁₇ >> 0x1₁₇)[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


839> vpavgw_ymm_ymm_ymm (vpavgw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpavgw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpavgw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (0x0₁ ∘ %ymm2[255:240] + 0x0₁ ∘ %ymm3[255:240] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[239:224] + 0x0₁ ∘ %ymm3[239:224] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[223:208] + 0x0₁ ∘ %ymm3[223:208] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[207:192] + 0x0₁ ∘ %ymm3[207:192] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[191:176] + 0x0₁ ∘ %ymm3[191:176] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[175:160] + 0x0₁ ∘ %ymm3[175:160] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[159:144] + 0x0₁ ∘ %ymm3[159:144] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[143:128] + 0x0₁ ∘ %ymm3[143:128] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[127:112] + 0x0₁ ∘ %ymm3[127:112] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[111:96] + 0x0₁ ∘ %ymm3[111:96] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[95:80] + 0x0₁ ∘ %ymm3[95:80] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[79:64] + 0x0₁ ∘ %ymm3[79:64] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[63:48] + 0x0₁ ∘ %ymm3[63:48] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[47:32] + 0x0₁ ∘ %ymm3[47:32] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ ((0x0₁ ∘ %ymm2[31:16] + 0x0₁ ∘ %ymm3[31:16] + 0x1₁₇ >> 0x1₁₇)[15:0] ∘ (0x0₁ ∘ %ymm2[15:0] + 0x0₁ ∘ %ymm3[15:0] + 0x1₁₇ >> 0x1₁₇)[15:0]))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


840> vpblendvb_xmm_xmm_xmm_xmm (vpblendvb %xmm4, %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpblendvb %xmm4, %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpblendvb_xmm_xmm_xmm_xmm:vpblendvb %xmm4, %xmm3, %xmm2, %xmm1

841> vpblendvb_ymm_ymm_ymm_ymm (vpblendvb %ymm4, %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpblendvb %ymm4, %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpblendvb_ymm_ymm_ymm_ymm:vpblendvb %ymm4, %ymm3, %ymm2, %ymm1

842> vpbroadcastb_xmm_xmm (vpbroadcastb %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastb %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastb %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0] ∘ %ymm2[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


843> vpbroadcastb_ymm_xmm (vpbroadcastb %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastb %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastb %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0])) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]))) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0])) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]) ∘ (%ymm2[7:0] ∘ %ymm2[7:0] ∘ (%ymm2[7:0] ∘ %ymm2[7:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


844> vpbroadcastd_xmm_xmm (vpbroadcastd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


845> vpbroadcastd_ymm_xmm (vpbroadcastd %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastd %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ (%ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0] ∘ %ymm2[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


846> vpbroadcastq_xmm_xmm (vpbroadcastq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


847> vpbroadcastq_ymm_xmm (vpbroadcastq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2[63:0] ∘ %ymm2[63:0] ∘ (%ymm2[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


848> vpbroadcastw_xmm_xmm (vpbroadcastw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


849> vpbroadcastw_ymm_xmm (vpbroadcastw %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpbroadcastw %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpbroadcastw %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0])) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0]) ∘ (%ymm2[15:0] ∘ %ymm2[15:0] ∘ (%ymm2[15:0] ∘ %ymm2[15:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


850> vpcmpeqb_xmm_xmm_xmm (vpcmpeqb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] = %ymm3[127:120] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[119:112] = %ymm3[119:112] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[111:104] = %ymm3[111:104] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[103:96] = %ymm3[103:96] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[95:88] = %ymm3[95:88] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[87:80] = %ymm3[87:80] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[79:72] = %ymm3[79:72] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[71:64] = %ymm3[71:64] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[63:56] = %ymm3[63:56] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[55:48] = %ymm3[55:48] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[47:40] = %ymm3[47:40] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[39:32] = %ymm3[39:32] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[31:24] = %ymm3[31:24] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[23:16] = %ymm3[23:16] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[15:8] = %ymm3[15:8] ? 0xff₈ : 0x0₈) ∘ (%ymm2[7:0] = %ymm3[7:0] ? 0xff₈ : 0x0₈))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


851> vpcmpeqb_ymm_ymm_ymm (vpcmpeqb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] = %ymm3[255:248] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[247:240] = %ymm3[247:240] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[239:232] = %ymm3[239:232] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[231:224] = %ymm3[231:224] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[223:216] = %ymm3[223:216] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[215:208] = %ymm3[215:208] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[207:200] = %ymm3[207:200] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[199:192] = %ymm3[199:192] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[191:184] = %ymm3[191:184] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[183:176] = %ymm3[183:176] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[175:168] = %ymm3[175:168] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[167:160] = %ymm3[167:160] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[159:152] = %ymm3[159:152] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[151:144] = %ymm3[151:144] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[143:136] = %ymm3[143:136] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[135:128] = %ymm3[135:128] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[127:120] = %ymm3[127:120] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[119:112] = %ymm3[119:112] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[111:104] = %ymm3[111:104] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[103:96] = %ymm3[103:96] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[95:88] = %ymm3[95:88] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[87:80] = %ymm3[87:80] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[79:72] = %ymm3[79:72] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[71:64] = %ymm3[71:64] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[63:56] = %ymm3[63:56] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[55:48] = %ymm3[55:48] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[47:40] = %ymm3[47:40] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[39:32] = %ymm3[39:32] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[31:24] = %ymm3[31:24] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[23:16] = %ymm3[23:16] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[15:8] = %ymm3[15:8] ? 0xff₈ : 0x0₈) ∘ (%ymm2[7:0] = %ymm3[7:0] ? 0xff₈ : 0x0₈)))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


852> vpcmpeqd_xmm_xmm_xmm (vpcmpeqd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] = %ymm3[127:96] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[95:64] = %ymm3[95:64] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[63:32] = %ymm3[63:32] ? 0xffffffff₃₂ : 0x0₃₂) ∘ (%ymm2[31:0] = %ymm3[31:0] ? 0xffffffff₃₂ : 0x0₃₂))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


853> vpcmpeqd_ymm_ymm_ymm (vpcmpeqd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] = %ymm3[255:224] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[223:192] = %ymm3[223:192] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[191:160] = %ymm3[191:160] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[159:128] = %ymm3[159:128] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[127:96] = %ymm3[127:96] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[95:64] = %ymm3[95:64] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[63:32] = %ymm3[63:32] ? 0xffffffff₃₂ : 0x0₃₂) ∘ (%ymm2[31:0] = %ymm3[31:0] ? 0xffffffff₃₂ : 0x0₃₂)))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


854> vpcmpeqq_xmm_xmm_xmm (vpcmpeqq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] = %ymm3[127:64] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ (%ymm2[63:0] = %ymm3[63:0] ? 0xffffffffffffffff₆₄ : 0x0₆₄))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


855> vpcmpeqq_ymm_ymm_ymm (vpcmpeqq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:192] = %ymm3[255:192] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ ((%ymm2[191:128] = %ymm3[191:128] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ ((%ymm2[127:64] = %ymm3[127:64] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ (%ymm2[63:0] = %ymm3[63:0] ? 0xffffffffffffffff₆₄ : 0x0₆₄)))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


856> vpcmpeqw_xmm_xmm_xmm (vpcmpeqw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] = %ymm3[127:112] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[111:96] = %ymm3[111:96] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[95:80] = %ymm3[95:80] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[79:64] = %ymm3[79:64] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[63:48] = %ymm3[63:48] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[47:32] = %ymm3[47:32] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[31:16] = %ymm3[31:16] ? 0xffff₁₆ : 0x0₁₆) ∘ (%ymm2[15:0] = %ymm3[15:0] ? 0xffff₁₆ : 0x0₁₆))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


857> vpcmpeqw_ymm_ymm_ymm (vpcmpeqw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpeqw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpeqw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] = %ymm3[255:240] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[239:224] = %ymm3[239:224] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[223:208] = %ymm3[223:208] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[207:192] = %ymm3[207:192] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[191:176] = %ymm3[191:176] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[175:160] = %ymm3[175:160] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[159:144] = %ymm3[159:144] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[143:128] = %ymm3[143:128] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[127:112] = %ymm3[127:112] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[111:96] = %ymm3[111:96] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[95:80] = %ymm3[95:80] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[79:64] = %ymm3[79:64] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[63:48] = %ymm3[63:48] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[47:32] = %ymm3[47:32] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[31:16] = %ymm3[31:16] ? 0xffff₁₆ : 0x0₁₆) ∘ (%ymm2[15:0] = %ymm3[15:0] ? 0xffff₁₆ : 0x0₁₆)))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


858> vpcmpgtb_xmm_xmm_xmm (vpcmpgtb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] > %ymm3[127:120] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[119:112] > %ymm3[119:112] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[111:104] > %ymm3[111:104] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[103:96] > %ymm3[103:96] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[95:88] > %ymm3[95:88] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[87:80] > %ymm3[87:80] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[79:72] > %ymm3[79:72] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[71:64] > %ymm3[71:64] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[63:56] > %ymm3[63:56] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[55:48] > %ymm3[55:48] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[47:40] > %ymm3[47:40] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[39:32] > %ymm3[39:32] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[31:24] > %ymm3[31:24] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[23:16] > %ymm3[23:16] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[15:8] > %ymm3[15:8] ? 0xff₈ : 0x0₈) ∘ (%ymm2[7:0] > %ymm3[7:0] ? 0xff₈ : 0x0₈))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


859> vpcmpgtb_ymm_ymm_ymm (vpcmpgtb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] > %ymm3[255:248] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[247:240] > %ymm3[247:240] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[239:232] > %ymm3[239:232] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[231:224] > %ymm3[231:224] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[223:216] > %ymm3[223:216] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[215:208] > %ymm3[215:208] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[207:200] > %ymm3[207:200] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[199:192] > %ymm3[199:192] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[191:184] > %ymm3[191:184] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[183:176] > %ymm3[183:176] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[175:168] > %ymm3[175:168] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[167:160] > %ymm3[167:160] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[159:152] > %ymm3[159:152] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[151:144] > %ymm3[151:144] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[143:136] > %ymm3[143:136] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[135:128] > %ymm3[135:128] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[127:120] > %ymm3[127:120] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[119:112] > %ymm3[119:112] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[111:104] > %ymm3[111:104] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[103:96] > %ymm3[103:96] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[95:88] > %ymm3[95:88] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[87:80] > %ymm3[87:80] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[79:72] > %ymm3[79:72] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[71:64] > %ymm3[71:64] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[63:56] > %ymm3[63:56] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[55:48] > %ymm3[55:48] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[47:40] > %ymm3[47:40] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[39:32] > %ymm3[39:32] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[31:24] > %ymm3[31:24] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[23:16] > %ymm3[23:16] ? 0xff₈ : 0x0₈) ∘ ((%ymm2[15:8] > %ymm3[15:8] ? 0xff₈ : 0x0₈) ∘ (%ymm2[7:0] > %ymm3[7:0] ? 0xff₈ : 0x0₈)))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


860> vpcmpgtd_xmm_xmm_xmm (vpcmpgtd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] > %ymm3[127:96] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[95:64] > %ymm3[95:64] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[63:32] > %ymm3[63:32] ? 0xffffffff₃₂ : 0x0₃₂) ∘ (%ymm2[31:0] > %ymm3[31:0] ? 0xffffffff₃₂ : 0x0₃₂))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


861> vpcmpgtd_ymm_ymm_ymm (vpcmpgtd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] > %ymm3[255:224] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[223:192] > %ymm3[223:192] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[191:160] > %ymm3[191:160] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[159:128] > %ymm3[159:128] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[127:96] > %ymm3[127:96] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[95:64] > %ymm3[95:64] ? 0xffffffff₃₂ : 0x0₃₂) ∘ ((%ymm2[63:32] > %ymm3[63:32] ? 0xffffffff₃₂ : 0x0₃₂) ∘ (%ymm2[31:0] > %ymm3[31:0] ? 0xffffffff₃₂ : 0x0₃₂)))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


862> vpcmpgtq_xmm_xmm_xmm (vpcmpgtq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] > %ymm3[127:64] ? 0xffffffffffffffff₆₄ : 0x0₆₄) ∘ (%ymm2[63:0] > %ymm3[63:0] ? 0xffffffffffffffff₆₄ : 0x0₆₄))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


863> vpcmpgtw_xmm_xmm_xmm (vpcmpgtw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] > %ymm3[127:112] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[111:96] > %ymm3[111:96] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[95:80] > %ymm3[95:80] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[79:64] > %ymm3[79:64] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[63:48] > %ymm3[63:48] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[47:32] > %ymm3[47:32] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[31:16] > %ymm3[31:16] ? 0xffff₁₆ : 0x0₁₆) ∘ (%ymm2[15:0] > %ymm3[15:0] ? 0xffff₁₆ : 0x0₁₆))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


864> vpcmpgtw_ymm_ymm_ymm (vpcmpgtw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpcmpgtw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpcmpgtw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] > %ymm3[255:240] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[239:224] > %ymm3[239:224] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[223:208] > %ymm3[223:208] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[207:192] > %ymm3[207:192] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[191:176] > %ymm3[191:176] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[175:160] > %ymm3[175:160] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[159:144] > %ymm3[159:144] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[143:128] > %ymm3[143:128] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[127:112] > %ymm3[127:112] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[111:96] > %ymm3[111:96] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[95:80] > %ymm3[95:80] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[79:64] > %ymm3[79:64] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[63:48] > %ymm3[63:48] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[47:32] > %ymm3[47:32] ? 0xffff₁₆ : 0x0₁₆) ∘ ((%ymm2[31:16] > %ymm3[31:16] ? 0xffff₁₆ : 0x0₁₆) ∘ (%ymm2[15:0] > %ymm3[15:0] ? 0xffff₁₆ : 0x0₁₆)))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


865> vpermd_ymm_ymm_ymm (vpermd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpermd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpermd_ymm_ymm_ymm:vpermd %ymm3, %ymm2, %ymm1

866> vpermilpd_xmm_xmm_xmm (vpermilpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpermilpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpermilpd_xmm_xmm_xmm:vpermilpd %xmm3, %xmm2, %xmm1

867> vpermilpd_ymm_ymm_ymm (vpermilpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpermilpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpermilpd_ymm_ymm_ymm:vpermilpd %ymm3, %ymm2, %ymm1

868> vpermilps_xmm_xmm_xmm (vpermilps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpermilps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpermilps_xmm_xmm_xmm:vpermilps %xmm3, %xmm2, %xmm1

869> vpermilps_ymm_ymm_ymm (vpermilps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpermilps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpermilps_ymm_ymm_ymm:vpermilps %ymm3, %ymm2, %ymm1

870> vpermps_ymm_ymm_ymm (vpermps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpermps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpermps_ymm_ymm_ymm:vpermps %ymm3, %ymm2, %ymm1

871> vphaddd_xmm_xmm_xmm (vphaddd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphaddd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphaddd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[127:96] + %ymm3[95:64]) ∘ (%ymm3[63:32] + %ymm3[31:0]) ∘ (%ymm2[127:96] + %ymm2[95:64]) ∘ (%ymm2[63:32] + %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


872> vphaddd_ymm_ymm_ymm (vphaddd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphaddd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphaddd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm3[255:224] + %ymm3[223:192]) ∘ (%ymm3[191:160] + %ymm3[159:128]) ∘ (%ymm2[255:224] + %ymm2[223:192]) ∘ (%ymm2[191:160] + %ymm2[159:128]) ∘ ((%ymm3[127:96] + %ymm3[95:64]) ∘ (%ymm3[63:32] + %ymm3[31:0]) ∘ (%ymm2[127:96] + %ymm2[95:64]) ∘ (%ymm2[63:32] + %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


873> vphaddsw_xmm_xmm_xmm (vphaddsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphaddsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vphaddsw_xmm_xmm_xmm:vphaddsw %xmm3, %xmm2, %xmm1

874> vphaddsw_ymm_ymm_ymm (vphaddsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphaddsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vphaddsw_ymm_ymm_ymm:vphaddsw %ymm3, %ymm2, %ymm1

875> vphaddw_xmm_xmm_xmm (vphaddw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphaddw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphaddw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[127:112] + %ymm3[111:96]) ∘ (%ymm3[95:80] + %ymm3[79:64]) ∘ (%ymm3[63:48] + %ymm3[47:32]) ∘ (%ymm3[31:16] + %ymm3[15:0]) ∘ (%ymm2[127:112] + %ymm2[111:96]) ∘ (%ymm2[95:80] + %ymm2[79:64]) ∘ (%ymm2[63:48] + %ymm2[47:32]) ∘ (%ymm2[31:16] + %ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


876> vphaddw_ymm_ymm_ymm (vphaddw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphaddw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphaddw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm3[255:240] + %ymm3[239:224]) ∘ (%ymm3[223:208] + %ymm3[207:192]) ∘ (%ymm3[191:176] + %ymm3[175:160]) ∘ (%ymm3[159:144] + %ymm3[143:128]) ∘ (%ymm2[255:240] + %ymm2[239:224]) ∘ (%ymm2[223:208] + %ymm2[207:192]) ∘ (%ymm2[191:176] + %ymm2[175:160]) ∘ (%ymm2[159:144] + %ymm2[143:128]) ∘ ((%ymm3[127:112] + %ymm3[111:96]) ∘ (%ymm3[95:80] + %ymm3[79:64]) ∘ (%ymm3[63:48] + %ymm3[47:32]) ∘ (%ymm3[31:16] + %ymm3[15:0]) ∘ (%ymm2[127:112] + %ymm2[111:96]) ∘ (%ymm2[95:80] + %ymm2[79:64]) ∘ (%ymm2[63:48] + %ymm2[47:32]) ∘ (%ymm2[31:16] + %ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


877> vphminposuw_xmm_xmm (vphminposuw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphminposuw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vphminposuw_xmm_xmm:vphminposuw %xmm2, %xmm1

878> vphsubd_xmm_xmm_xmm (vphsubd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphsubd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphsubd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[95:64] - %ymm3[127:96]) ∘ (%ymm3[31:0] - %ymm3[63:32]) ∘ (%ymm2[95:64] - %ymm2[127:96]) ∘ (%ymm2[31:0] - %ymm2[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


879> vphsubd_ymm_ymm_ymm (vphsubd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphsubd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphsubd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm3[223:192] - %ymm3[255:224]) ∘ (%ymm3[159:128] - %ymm3[191:160]) ∘ (%ymm2[223:192] - %ymm2[255:224]) ∘ (%ymm2[159:128] - %ymm2[191:160]) ∘ ((%ymm3[95:64] - %ymm3[127:96]) ∘ (%ymm3[31:0] - %ymm3[63:32]) ∘ (%ymm2[95:64] - %ymm2[127:96]) ∘ (%ymm2[31:0] - %ymm2[63:32]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


880> vphsubsw_xmm_xmm_xmm (vphsubsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphsubsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vphsubsw_xmm_xmm_xmm:vphsubsw %xmm3, %xmm2, %xmm1

881> vphsubsw_ymm_ymm_ymm (vphsubsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphsubsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vphsubsw_ymm_ymm_ymm:vphsubsw %ymm3, %ymm2, %ymm1

882> vphsubw_xmm_xmm_xmm (vphsubw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphsubw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphsubw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[111:96] - %ymm3[127:112]) ∘ (%ymm3[79:64] - %ymm3[95:80]) ∘ (%ymm3[47:32] - %ymm3[63:48]) ∘ (%ymm3[15:0] - %ymm3[31:16]) ∘ (%ymm2[111:96] - %ymm2[127:112]) ∘ (%ymm2[79:64] - %ymm2[95:80]) ∘ (%ymm2[47:32] - %ymm2[63:48]) ∘ (%ymm2[15:0] - %ymm2[31:16]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


883> vphsubw_ymm_ymm_ymm (vphsubw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vphsubw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vphsubw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm3[239:224] - %ymm3[255:240]) ∘ (%ymm3[207:192] - %ymm3[223:208]) ∘ (%ymm3[175:160] - %ymm3[191:176]) ∘ (%ymm3[143:128] - %ymm3[159:144]) ∘ (%ymm2[239:224] - %ymm2[255:240]) ∘ (%ymm2[207:192] - %ymm2[223:208]) ∘ (%ymm2[175:160] - %ymm2[191:176]) ∘ (%ymm2[143:128] - %ymm2[159:144]) ∘ ((%ymm3[111:96] - %ymm3[127:112]) ∘ (%ymm3[79:64] - %ymm3[95:80]) ∘ (%ymm3[47:32] - %ymm3[63:48]) ∘ (%ymm3[15:0] - %ymm3[31:16]) ∘ (%ymm2[111:96] - %ymm2[127:112]) ∘ (%ymm2[79:64] - %ymm2[95:80]) ∘ (%ymm2[47:32] - %ymm2[63:48]) ∘ (%ymm2[15:0] - %ymm2[31:16]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


884> vpmaddubsw_xmm_xmm_xmm (vpmaddubsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaddubsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmaddubsw_xmm_xmm_xmm:vpmaddubsw %xmm3, %xmm2, %xmm1

885> vpmaddubsw_ymm_ymm_ymm (vpmaddubsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaddubsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmaddubsw_ymm_ymm_ymm:vpmaddubsw %ymm3, %ymm2, %ymm1

886> vpmaddwd_xmm_xmm_xmm (vpmaddwd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaddwd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmaddwd_xmm_xmm_xmm:vpmaddwd %xmm3, %xmm2, %xmm1

887> vpmaddwd_ymm_ymm_ymm (vpmaddwd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaddwd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmaddwd_ymm_ymm_ymm:vpmaddwd %ymm3, %ymm2, %ymm1

888> vpmaxsb_xmm_xmm_xmm (vpmaxsb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxsb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxsb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] > %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] > %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] > %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] > %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] > %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] > %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] > %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] > %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] > %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] > %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] > %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] > %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] > %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] > %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] > %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] > %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


889> vpmaxsb_ymm_ymm_ymm (vpmaxsb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxsb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxsb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] > %ymm3[255:248] ? %ymm2[255:248] : %ymm3[255:248]) ∘ ((%ymm2[247:240] > %ymm3[247:240] ? %ymm2[247:240] : %ymm3[247:240]) ∘ ((%ymm2[239:232] > %ymm3[239:232] ? %ymm2[239:232] : %ymm3[239:232]) ∘ ((%ymm2[231:224] > %ymm3[231:224] ? %ymm2[231:224] : %ymm3[231:224]) ∘ ((%ymm2[223:216] > %ymm3[223:216] ? %ymm2[223:216] : %ymm3[223:216]) ∘ ((%ymm2[215:208] > %ymm3[215:208] ? %ymm2[215:208] : %ymm3[215:208]) ∘ ((%ymm2[207:200] > %ymm3[207:200] ? %ymm2[207:200] : %ymm3[207:200]) ∘ ((%ymm2[199:192] > %ymm3[199:192] ? %ymm2[199:192] : %ymm3[199:192]) ∘ ((%ymm2[191:184] > %ymm3[191:184] ? %ymm2[191:184] : %ymm3[191:184]) ∘ ((%ymm2[183:176] > %ymm3[183:176] ? %ymm2[183:176] : %ymm3[183:176]) ∘ ((%ymm2[175:168] > %ymm3[175:168] ? %ymm2[175:168] : %ymm3[175:168]) ∘ ((%ymm2[167:160] > %ymm3[167:160] ? %ymm2[167:160] : %ymm3[167:160]) ∘ ((%ymm2[159:152] > %ymm3[159:152] ? %ymm2[159:152] : %ymm3[159:152]) ∘ ((%ymm2[151:144] > %ymm3[151:144] ? %ymm2[151:144] : %ymm3[151:144]) ∘ ((%ymm2[143:136] > %ymm3[143:136] ? %ymm2[143:136] : %ymm3[143:136]) ∘ ((%ymm2[135:128] > %ymm3[135:128] ? %ymm2[135:128] : %ymm3[135:128]) ∘ ((%ymm2[127:120] > %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] > %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] > %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] > %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] > %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] > %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] > %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] > %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] > %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] > %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] > %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] > %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] > %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] > %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] > %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] > %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


890> vpmaxsd_xmm_xmm_xmm (vpmaxsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] > %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] > %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] > %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] > %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


891> vpmaxsd_ymm_ymm_ymm (vpmaxsd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxsd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxsd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] > %ymm3[255:224] ? %ymm2[255:224] : %ymm3[255:224]) ∘ ((%ymm2[223:192] > %ymm3[223:192] ? %ymm2[223:192] : %ymm3[223:192]) ∘ ((%ymm2[191:160] > %ymm3[191:160] ? %ymm2[191:160] : %ymm3[191:160]) ∘ ((%ymm2[159:128] > %ymm3[159:128] ? %ymm2[159:128] : %ymm3[159:128]) ∘ ((%ymm2[127:96] > %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] > %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] > %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] > %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


892> vpmaxsw_xmm_xmm_xmm (vpmaxsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxsw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] > %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] > %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] > %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] > %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] > %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] > %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] > %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] > %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


893> vpmaxsw_ymm_ymm_ymm (vpmaxsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxsw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] > %ymm3[255:240] ? %ymm2[255:240] : %ymm3[255:240]) ∘ ((%ymm2[239:224] > %ymm3[239:224] ? %ymm2[239:224] : %ymm3[239:224]) ∘ ((%ymm2[223:208] > %ymm3[223:208] ? %ymm2[223:208] : %ymm3[223:208]) ∘ ((%ymm2[207:192] > %ymm3[207:192] ? %ymm2[207:192] : %ymm3[207:192]) ∘ ((%ymm2[191:176] > %ymm3[191:176] ? %ymm2[191:176] : %ymm3[191:176]) ∘ ((%ymm2[175:160] > %ymm3[175:160] ? %ymm2[175:160] : %ymm3[175:160]) ∘ ((%ymm2[159:144] > %ymm3[159:144] ? %ymm2[159:144] : %ymm3[159:144]) ∘ ((%ymm2[143:128] > %ymm3[143:128] ? %ymm2[143:128] : %ymm3[143:128]) ∘ ((%ymm2[127:112] > %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] > %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] > %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] > %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] > %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] > %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] > %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] > %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


894> vpmaxub_xmm_xmm_xmm (vpmaxub %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxub %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxub %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] > %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] > %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] > %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] > %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] > %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] > %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] > %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] > %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] > %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] > %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] > %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] > %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] > %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] > %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] > %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] > %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


895> vpmaxub_ymm_ymm_ymm (vpmaxub %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxub %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxub %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] > %ymm3[255:248] ? %ymm2[255:248] : %ymm3[255:248]) ∘ ((%ymm2[247:240] > %ymm3[247:240] ? %ymm2[247:240] : %ymm3[247:240]) ∘ ((%ymm2[239:232] > %ymm3[239:232] ? %ymm2[239:232] : %ymm3[239:232]) ∘ ((%ymm2[231:224] > %ymm3[231:224] ? %ymm2[231:224] : %ymm3[231:224]) ∘ ((%ymm2[223:216] > %ymm3[223:216] ? %ymm2[223:216] : %ymm3[223:216]) ∘ ((%ymm2[215:208] > %ymm3[215:208] ? %ymm2[215:208] : %ymm3[215:208]) ∘ ((%ymm2[207:200] > %ymm3[207:200] ? %ymm2[207:200] : %ymm3[207:200]) ∘ ((%ymm2[199:192] > %ymm3[199:192] ? %ymm2[199:192] : %ymm3[199:192]) ∘ ((%ymm2[191:184] > %ymm3[191:184] ? %ymm2[191:184] : %ymm3[191:184]) ∘ ((%ymm2[183:176] > %ymm3[183:176] ? %ymm2[183:176] : %ymm3[183:176]) ∘ ((%ymm2[175:168] > %ymm3[175:168] ? %ymm2[175:168] : %ymm3[175:168]) ∘ ((%ymm2[167:160] > %ymm3[167:160] ? %ymm2[167:160] : %ymm3[167:160]) ∘ ((%ymm2[159:152] > %ymm3[159:152] ? %ymm2[159:152] : %ymm3[159:152]) ∘ ((%ymm2[151:144] > %ymm3[151:144] ? %ymm2[151:144] : %ymm3[151:144]) ∘ ((%ymm2[143:136] > %ymm3[143:136] ? %ymm2[143:136] : %ymm3[143:136]) ∘ ((%ymm2[135:128] > %ymm3[135:128] ? %ymm2[135:128] : %ymm3[135:128]) ∘ ((%ymm2[127:120] > %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] > %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] > %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] > %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] > %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] > %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] > %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] > %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] > %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] > %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] > %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] > %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] > %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] > %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] > %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] > %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


896> vpmaxud_xmm_xmm_xmm (vpmaxud %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxud %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxud %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] > %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] > %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] > %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] > %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


897> vpmaxud_ymm_ymm_ymm (vpmaxud %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxud %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxud %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] > %ymm3[255:224] ? %ymm2[255:224] : %ymm3[255:224]) ∘ ((%ymm2[223:192] > %ymm3[223:192] ? %ymm2[223:192] : %ymm3[223:192]) ∘ ((%ymm2[191:160] > %ymm3[191:160] ? %ymm2[191:160] : %ymm3[191:160]) ∘ ((%ymm2[159:128] > %ymm3[159:128] ? %ymm2[159:128] : %ymm3[159:128]) ∘ ((%ymm2[127:96] > %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] > %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] > %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] > %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


898> vpmaxuw_xmm_xmm_xmm (vpmaxuw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxuw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxuw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] > %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] > %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] > %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] > %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] > %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] > %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] > %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] > %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


899> vpmaxuw_ymm_ymm_ymm (vpmaxuw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmaxuw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmaxuw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] > %ymm3[255:240] ? %ymm2[255:240] : %ymm3[255:240]) ∘ ((%ymm2[239:224] > %ymm3[239:224] ? %ymm2[239:224] : %ymm3[239:224]) ∘ ((%ymm2[223:208] > %ymm3[223:208] ? %ymm2[223:208] : %ymm3[223:208]) ∘ ((%ymm2[207:192] > %ymm3[207:192] ? %ymm2[207:192] : %ymm3[207:192]) ∘ ((%ymm2[191:176] > %ymm3[191:176] ? %ymm2[191:176] : %ymm3[191:176]) ∘ ((%ymm2[175:160] > %ymm3[175:160] ? %ymm2[175:160] : %ymm3[175:160]) ∘ ((%ymm2[159:144] > %ymm3[159:144] ? %ymm2[159:144] : %ymm3[159:144]) ∘ ((%ymm2[143:128] > %ymm3[143:128] ? %ymm2[143:128] : %ymm3[143:128]) ∘ ((%ymm2[127:112] > %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] > %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] > %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] > %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] > %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] > %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] > %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] > %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


900> vpminsb_xmm_xmm_xmm (vpminsb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminsb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminsb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] < %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] < %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] < %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] < %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] < %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] < %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] < %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] < %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] < %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] < %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] < %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] < %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] < %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] < %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] < %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] < %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


901> vpminsb_ymm_ymm_ymm (vpminsb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminsb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminsb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] < %ymm3[255:248] ? %ymm2[255:248] : %ymm3[255:248]) ∘ ((%ymm2[247:240] < %ymm3[247:240] ? %ymm2[247:240] : %ymm3[247:240]) ∘ ((%ymm2[239:232] < %ymm3[239:232] ? %ymm2[239:232] : %ymm3[239:232]) ∘ ((%ymm2[231:224] < %ymm3[231:224] ? %ymm2[231:224] : %ymm3[231:224]) ∘ ((%ymm2[223:216] < %ymm3[223:216] ? %ymm2[223:216] : %ymm3[223:216]) ∘ ((%ymm2[215:208] < %ymm3[215:208] ? %ymm2[215:208] : %ymm3[215:208]) ∘ ((%ymm2[207:200] < %ymm3[207:200] ? %ymm2[207:200] : %ymm3[207:200]) ∘ ((%ymm2[199:192] < %ymm3[199:192] ? %ymm2[199:192] : %ymm3[199:192]) ∘ ((%ymm2[191:184] < %ymm3[191:184] ? %ymm2[191:184] : %ymm3[191:184]) ∘ ((%ymm2[183:176] < %ymm3[183:176] ? %ymm2[183:176] : %ymm3[183:176]) ∘ ((%ymm2[175:168] < %ymm3[175:168] ? %ymm2[175:168] : %ymm3[175:168]) ∘ ((%ymm2[167:160] < %ymm3[167:160] ? %ymm2[167:160] : %ymm3[167:160]) ∘ ((%ymm2[159:152] < %ymm3[159:152] ? %ymm2[159:152] : %ymm3[159:152]) ∘ ((%ymm2[151:144] < %ymm3[151:144] ? %ymm2[151:144] : %ymm3[151:144]) ∘ ((%ymm2[143:136] < %ymm3[143:136] ? %ymm2[143:136] : %ymm3[143:136]) ∘ ((%ymm2[135:128] < %ymm3[135:128] ? %ymm2[135:128] : %ymm3[135:128]) ∘ ((%ymm2[127:120] < %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] < %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] < %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] < %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] < %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] < %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] < %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] < %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] < %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] < %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] < %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] < %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] < %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] < %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] < %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] < %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


902> vpminsd_xmm_xmm_xmm (vpminsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] < %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] < %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] < %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] < %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


903> vpminsd_ymm_ymm_ymm (vpminsd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminsd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminsd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] < %ymm3[255:224] ? %ymm2[255:224] : %ymm3[255:224]) ∘ ((%ymm2[223:192] < %ymm3[223:192] ? %ymm2[223:192] : %ymm3[223:192]) ∘ ((%ymm2[191:160] < %ymm3[191:160] ? %ymm2[191:160] : %ymm3[191:160]) ∘ ((%ymm2[159:128] < %ymm3[159:128] ? %ymm2[159:128] : %ymm3[159:128]) ∘ ((%ymm2[127:96] < %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] < %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] < %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] < %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


904> vpminsw_xmm_xmm_xmm (vpminsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminsw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] < %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] < %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] < %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] < %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] < %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] < %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] < %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] < %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


905> vpminub_xmm_xmm_xmm (vpminub %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminub %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminub %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] < %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] < %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] < %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] < %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] < %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] < %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] < %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] < %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] < %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] < %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] < %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] < %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] < %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] < %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] < %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] < %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


906> vpminub_ymm_ymm_ymm (vpminub %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminub %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminub %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] < %ymm3[255:248] ? %ymm2[255:248] : %ymm3[255:248]) ∘ ((%ymm2[247:240] < %ymm3[247:240] ? %ymm2[247:240] : %ymm3[247:240]) ∘ ((%ymm2[239:232] < %ymm3[239:232] ? %ymm2[239:232] : %ymm3[239:232]) ∘ ((%ymm2[231:224] < %ymm3[231:224] ? %ymm2[231:224] : %ymm3[231:224]) ∘ ((%ymm2[223:216] < %ymm3[223:216] ? %ymm2[223:216] : %ymm3[223:216]) ∘ ((%ymm2[215:208] < %ymm3[215:208] ? %ymm2[215:208] : %ymm3[215:208]) ∘ ((%ymm2[207:200] < %ymm3[207:200] ? %ymm2[207:200] : %ymm3[207:200]) ∘ ((%ymm2[199:192] < %ymm3[199:192] ? %ymm2[199:192] : %ymm3[199:192]) ∘ ((%ymm2[191:184] < %ymm3[191:184] ? %ymm2[191:184] : %ymm3[191:184]) ∘ ((%ymm2[183:176] < %ymm3[183:176] ? %ymm2[183:176] : %ymm3[183:176]) ∘ ((%ymm2[175:168] < %ymm3[175:168] ? %ymm2[175:168] : %ymm3[175:168]) ∘ ((%ymm2[167:160] < %ymm3[167:160] ? %ymm2[167:160] : %ymm3[167:160]) ∘ ((%ymm2[159:152] < %ymm3[159:152] ? %ymm2[159:152] : %ymm3[159:152]) ∘ ((%ymm2[151:144] < %ymm3[151:144] ? %ymm2[151:144] : %ymm3[151:144]) ∘ ((%ymm2[143:136] < %ymm3[143:136] ? %ymm2[143:136] : %ymm3[143:136]) ∘ ((%ymm2[135:128] < %ymm3[135:128] ? %ymm2[135:128] : %ymm3[135:128]) ∘ ((%ymm2[127:120] < %ymm3[127:120] ? %ymm2[127:120] : %ymm3[127:120]) ∘ ((%ymm2[119:112] < %ymm3[119:112] ? %ymm2[119:112] : %ymm3[119:112]) ∘ ((%ymm2[111:104] < %ymm3[111:104] ? %ymm2[111:104] : %ymm3[111:104]) ∘ ((%ymm2[103:96] < %ymm3[103:96] ? %ymm2[103:96] : %ymm3[103:96]) ∘ ((%ymm2[95:88] < %ymm3[95:88] ? %ymm2[95:88] : %ymm3[95:88]) ∘ ((%ymm2[87:80] < %ymm3[87:80] ? %ymm2[87:80] : %ymm3[87:80]) ∘ ((%ymm2[79:72] < %ymm3[79:72] ? %ymm2[79:72] : %ymm3[79:72]) ∘ ((%ymm2[71:64] < %ymm3[71:64] ? %ymm2[71:64] : %ymm3[71:64]) ∘ ((%ymm2[63:56] < %ymm3[63:56] ? %ymm2[63:56] : %ymm3[63:56]) ∘ ((%ymm2[55:48] < %ymm3[55:48] ? %ymm2[55:48] : %ymm3[55:48]) ∘ ((%ymm2[47:40] < %ymm3[47:40] ? %ymm2[47:40] : %ymm3[47:40]) ∘ ((%ymm2[39:32] < %ymm3[39:32] ? %ymm2[39:32] : %ymm3[39:32]) ∘ ((%ymm2[31:24] < %ymm3[31:24] ? %ymm2[31:24] : %ymm3[31:24]) ∘ ((%ymm2[23:16] < %ymm3[23:16] ? %ymm2[23:16] : %ymm3[23:16]) ∘ ((%ymm2[15:8] < %ymm3[15:8] ? %ymm2[15:8] : %ymm3[15:8]) ∘ (%ymm2[7:0] < %ymm3[7:0] ? %ymm2[7:0] : %ymm3[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


907> vpminud_xmm_xmm_xmm (vpminud %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminud %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminud %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] < %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] < %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] < %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] < %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


908> vpminud_ymm_ymm_ymm (vpminud %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminud %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminud %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] < %ymm3[255:224] ? %ymm2[255:224] : %ymm3[255:224]) ∘ ((%ymm2[223:192] < %ymm3[223:192] ? %ymm2[223:192] : %ymm3[223:192]) ∘ ((%ymm2[191:160] < %ymm3[191:160] ? %ymm2[191:160] : %ymm3[191:160]) ∘ ((%ymm2[159:128] < %ymm3[159:128] ? %ymm2[159:128] : %ymm3[159:128]) ∘ ((%ymm2[127:96] < %ymm3[127:96] ? %ymm2[127:96] : %ymm3[127:96]) ∘ ((%ymm2[95:64] < %ymm3[95:64] ? %ymm2[95:64] : %ymm3[95:64]) ∘ ((%ymm2[63:32] < %ymm3[63:32] ? %ymm2[63:32] : %ymm3[63:32]) ∘ (%ymm2[31:0] < %ymm3[31:0] ? %ymm2[31:0] : %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


909> vpminuw_xmm_xmm_xmm (vpminuw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminuw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminuw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] < %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] < %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] < %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] < %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] < %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] < %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] < %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] < %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


910> vpminuw_ymm_ymm_ymm (vpminuw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpminuw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpminuw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] < %ymm3[255:240] ? %ymm2[255:240] : %ymm3[255:240]) ∘ ((%ymm2[239:224] < %ymm3[239:224] ? %ymm2[239:224] : %ymm3[239:224]) ∘ ((%ymm2[223:208] < %ymm3[223:208] ? %ymm2[223:208] : %ymm3[223:208]) ∘ ((%ymm2[207:192] < %ymm3[207:192] ? %ymm2[207:192] : %ymm3[207:192]) ∘ ((%ymm2[191:176] < %ymm3[191:176] ? %ymm2[191:176] : %ymm3[191:176]) ∘ ((%ymm2[175:160] < %ymm3[175:160] ? %ymm2[175:160] : %ymm3[175:160]) ∘ ((%ymm2[159:144] < %ymm3[159:144] ? %ymm2[159:144] : %ymm3[159:144]) ∘ ((%ymm2[143:128] < %ymm3[143:128] ? %ymm2[143:128] : %ymm3[143:128]) ∘ ((%ymm2[127:112] < %ymm3[127:112] ? %ymm2[127:112] : %ymm3[127:112]) ∘ ((%ymm2[111:96] < %ymm3[111:96] ? %ymm2[111:96] : %ymm3[111:96]) ∘ ((%ymm2[95:80] < %ymm3[95:80] ? %ymm2[95:80] : %ymm3[95:80]) ∘ ((%ymm2[79:64] < %ymm3[79:64] ? %ymm2[79:64] : %ymm3[79:64]) ∘ ((%ymm2[63:48] < %ymm3[63:48] ? %ymm2[63:48] : %ymm3[63:48]) ∘ ((%ymm2[47:32] < %ymm3[47:32] ? %ymm2[47:32] : %ymm3[47:32]) ∘ ((%ymm2[31:16] < %ymm3[31:16] ? %ymm2[31:16] : %ymm3[31:16]) ∘ (%ymm2[15:0] < %ymm3[15:0] ? %ymm2[15:0] : %ymm3[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


911> vpmovmskb_r32_xmm (vpmovmskb %xmm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovmskb %xmm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovmskb %xmm1, %ebx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₃₂ ∘ (0x0₁₆ ∘ ((%ymm1[127:127] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[119:119] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[111:111] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[103:103] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[95:95] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[87:87] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[79:79] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[71:71] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[63:63] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[55:55] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[47:47] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[39:39] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[31:31] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[23:23] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[15:15] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ (%ymm1[7:7] = 0x1₁ ? 0x1₁ : 0x0₁)))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


912> vpmovmskb_r32_ymm (vpmovmskb %ymm1, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovmskb %ymm1, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovmskb %ymm1, %ebx

  maybe read:      { %ymm1 }
  must read:       { %ymm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%rbx   : 0x0₃₂ ∘ ((%ymm1[255:255] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[247:247] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[239:239] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[231:231] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[223:223] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[215:215] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[207:207] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[199:199] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[191:191] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[183:183] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[175:175] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[167:167] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[159:159] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[151:151] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[143:143] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[135:135] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[127:127] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[119:119] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[111:111] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[103:103] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[95:95] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[87:87] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[79:79] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[71:71] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[63:63] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[55:55] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[47:47] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[39:39] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[31:31] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[23:23] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[15:15] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ (%ymm1[7:7] = 0x1₁ ? 0x1₁ : 0x0₁))))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


913> vpmovmskb_r64_xmm (vpmovmskb %xmm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovmskb %xmm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovmskb %xmm1, %rbx

  maybe read:      { %xmm1 }
  must read:       { %xmm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%rbx   : 0x0₄₈ ∘ ((%ymm1[127:127] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[119:119] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[111:111] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[103:103] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[95:95] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[87:87] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[79:79] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[71:71] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[63:63] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[55:55] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[47:47] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[39:39] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[31:31] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[23:23] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[15:15] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ (%ymm1[7:7] = 0x1₁ ? 0x1₁ : 0x0₁))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


914> vpmovmskb_r64_ymm (vpmovmskb %ymm1, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovmskb %ymm1, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovmskb %ymm1, %rbx

  maybe read:      { %ymm1 }
  must read:       { %ymm1 }
  maybe write:     { %rbx }
  must write:      { %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%rbx   : 0x0₃₂ ∘ ((%ymm1[255:255] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[247:247] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[239:239] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[231:231] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[223:223] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[215:215] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[207:207] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[199:199] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[191:191] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[183:183] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[175:175] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[167:167] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[159:159] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[151:151] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[143:143] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[135:135] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[127:127] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[119:119] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[111:111] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[103:103] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[95:95] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[87:87] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[79:79] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[71:71] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[63:63] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[55:55] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[47:47] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[39:39] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[31:31] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[23:23] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ ((%ymm1[15:15] = 0x1₁ ? 0x1₁ : 0x0₁) ∘ (%ymm1[7:7] = 0x1₁ ? 0x1₁ : 0x0₁))))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


915> vpmovsxbd_xmm_xmm (vpmovsxbd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxbd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxbd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sign-extend-32(%ymm2[31:24]) ∘ (sign-extend-32(%ymm2[23:16]) ∘ (sign-extend-32(%ymm2[15:8]) ∘ sign-extend-32(%ymm2[7:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


916> vpmovsxbd_ymm_xmm (vpmovsxbd %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxbd %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxbd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : sign-extend-32(%ymm2[63:56]) ∘ (sign-extend-32(%ymm2[55:48]) ∘ (sign-extend-32(%ymm2[47:40]) ∘ (sign-extend-32(%ymm2[39:32]) ∘ (sign-extend-32(%ymm2[31:24]) ∘ (sign-extend-32(%ymm2[23:16]) ∘ (sign-extend-32(%ymm2[15:8]) ∘ sign-extend-32(%ymm2[7:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


917> vpmovsxbq_xmm_xmm (vpmovsxbq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxbq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxbq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sign-extend-64(%ymm2[15:8]) ∘ sign-extend-64(%ymm2[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


918> vpmovsxbq_ymm_xmm (vpmovsxbq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxbq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxbq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : sign-extend-64(%ymm2[31:24]) ∘ (sign-extend-64(%ymm2[23:16]) ∘ (sign-extend-64(%ymm2[15:8]) ∘ sign-extend-64(%ymm2[7:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


919> vpmovsxbw_xmm_xmm (vpmovsxbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxbw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sign-extend-16(%ymm2[63:56]) ∘ (sign-extend-16(%ymm2[55:48]) ∘ (sign-extend-16(%ymm2[47:40]) ∘ (sign-extend-16(%ymm2[39:32]) ∘ (sign-extend-16(%ymm2[31:24]) ∘ (sign-extend-16(%ymm2[23:16]) ∘ (sign-extend-16(%ymm2[15:8]) ∘ sign-extend-16(%ymm2[7:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


920> vpmovsxbw_ymm_xmm (vpmovsxbw %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxbw %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxbw %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : sign-extend-16(%ymm2[127:120]) ∘ (sign-extend-16(%ymm2[119:112]) ∘ (sign-extend-16(%ymm2[111:104]) ∘ (sign-extend-16(%ymm2[103:96]) ∘ (sign-extend-16(%ymm2[95:88]) ∘ (sign-extend-16(%ymm2[87:80]) ∘ (sign-extend-16(%ymm2[79:72]) ∘ (sign-extend-16(%ymm2[71:64]) ∘ (sign-extend-16(%ymm2[63:56]) ∘ (sign-extend-16(%ymm2[55:48]) ∘ (sign-extend-16(%ymm2[47:40]) ∘ (sign-extend-16(%ymm2[39:32]) ∘ (sign-extend-16(%ymm2[31:24]) ∘ (sign-extend-16(%ymm2[23:16]) ∘ (sign-extend-16(%ymm2[15:8]) ∘ sign-extend-16(%ymm2[7:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


921> vpmovsxdq_xmm_xmm (vpmovsxdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxdq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sign-extend-64(%ymm2[63:32]) ∘ sign-extend-64(%ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


922> vpmovsxdq_ymm_xmm (vpmovsxdq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxdq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxdq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : sign-extend-64(%ymm2[127:96]) ∘ (sign-extend-64(%ymm2[95:64]) ∘ (sign-extend-64(%ymm2[63:32]) ∘ sign-extend-64(%ymm2[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


923> vpmovsxwd_xmm_xmm (vpmovsxwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxwd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sign-extend-32(%ymm2[63:48]) ∘ (sign-extend-32(%ymm2[47:32]) ∘ (sign-extend-32(%ymm2[31:16]) ∘ sign-extend-32(%ymm2[15:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


924> vpmovsxwd_ymm_xmm (vpmovsxwd %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxwd %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxwd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : sign-extend-32(%ymm2[127:112]) ∘ (sign-extend-32(%ymm2[111:96]) ∘ (sign-extend-32(%ymm2[95:80]) ∘ (sign-extend-32(%ymm2[79:64]) ∘ (sign-extend-32(%ymm2[63:48]) ∘ (sign-extend-32(%ymm2[47:32]) ∘ (sign-extend-32(%ymm2[31:16]) ∘ sign-extend-32(%ymm2[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


925> vpmovsxwq_xmm_xmm (vpmovsxwq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxwq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxwq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sign-extend-64(%ymm2[31:16]) ∘ sign-extend-64(%ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


926> vpmovsxwq_ymm_xmm (vpmovsxwq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovsxwq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovsxwq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : sign-extend-64(%ymm2[63:48]) ∘ (sign-extend-64(%ymm2[47:32]) ∘ (sign-extend-64(%ymm2[31:16]) ∘ sign-extend-64(%ymm2[15:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


927> vpmovzxbd_xmm_xmm (vpmovzxbd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxbd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxbd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₂₄ ∘ %ymm2[31:24] ∘ (0x0₂₄ ∘ %ymm2[23:16] ∘ (0x0₂₄ ∘ %ymm2[15:8] ∘ (0x0₂₄ ∘ %ymm2[7:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


928> vpmovzxbd_ymm_xmm (vpmovzxbd %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxbd %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxbd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₂₄ ∘ %ymm2[63:56] ∘ (0x0₂₄ ∘ %ymm2[55:48] ∘ (0x0₂₄ ∘ %ymm2[47:40] ∘ (0x0₂₄ ∘ %ymm2[39:32] ∘ (0x0₂₄ ∘ %ymm2[31:24] ∘ (0x0₂₄ ∘ %ymm2[23:16] ∘ (0x0₂₄ ∘ %ymm2[15:8] ∘ (0x0₂₄ ∘ %ymm2[7:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


929> vpmovzxbq_xmm_xmm (vpmovzxbq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxbq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxbq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₅₆ ∘ %ymm2[15:8] ∘ (0x0₅₆ ∘ %ymm2[7:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


930> vpmovzxbq_ymm_xmm (vpmovzxbq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxbq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxbq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₅₆ ∘ %ymm2[31:24] ∘ (0x0₅₆ ∘ %ymm2[23:16] ∘ (0x0₅₆ ∘ %ymm2[15:8] ∘ (0x0₅₆ ∘ %ymm2[7:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


931> vpmovzxbw_xmm_xmm (vpmovzxbw %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxbw %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxbw %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₈ ∘ %ymm2[63:56] ∘ (0x0₈ ∘ %ymm2[55:48] ∘ (0x0₈ ∘ %ymm2[47:40] ∘ (0x0₈ ∘ %ymm2[39:32] ∘ (0x0₈ ∘ %ymm2[31:24] ∘ (0x0₈ ∘ %ymm2[23:16] ∘ (0x0₈ ∘ %ymm2[15:8] ∘ (0x0₈ ∘ %ymm2[7:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


932> vpmovzxbw_ymm_xmm (vpmovzxbw %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxbw %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxbw %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₈ ∘ %ymm2[127:120] ∘ (0x0₈ ∘ %ymm2[119:112] ∘ (0x0₈ ∘ %ymm2[111:104] ∘ (0x0₈ ∘ %ymm2[103:96] ∘ (0x0₈ ∘ %ymm2[95:88] ∘ (0x0₈ ∘ %ymm2[87:80] ∘ (0x0₈ ∘ %ymm2[79:72] ∘ (0x0₈ ∘ %ymm2[71:64] ∘ (0x0₈ ∘ %ymm2[63:56] ∘ (0x0₈ ∘ %ymm2[55:48] ∘ (0x0₈ ∘ %ymm2[47:40] ∘ (0x0₈ ∘ %ymm2[39:32] ∘ (0x0₈ ∘ %ymm2[31:24] ∘ (0x0₈ ∘ %ymm2[23:16] ∘ (0x0₈ ∘ %ymm2[15:8] ∘ (0x0₈ ∘ %ymm2[7:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


933> vpmovzxdq_xmm_xmm (vpmovzxdq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxdq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxdq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₃₂ ∘ %ymm2[63:32] ∘ (0x0₃₂ ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


934> vpmovzxdq_ymm_xmm (vpmovzxdq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxdq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxdq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₃₂ ∘ %ymm2[127:96] ∘ (0x0₃₂ ∘ %ymm2[95:64] ∘ (0x0₃₂ ∘ %ymm2[63:32] ∘ (0x0₃₂ ∘ %ymm2[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


935> vpmovzxwd_xmm_xmm (vpmovzxwd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxwd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxwd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₁₆ ∘ %ymm2[63:48] ∘ (0x0₁₆ ∘ %ymm2[47:32] ∘ (0x0₁₆ ∘ %ymm2[31:16] ∘ (0x0₁₆ ∘ %ymm2[15:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


936> vpmovzxwd_ymm_xmm (vpmovzxwd %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxwd %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxwd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₆ ∘ %ymm2[127:112] ∘ (0x0₁₆ ∘ %ymm2[111:96] ∘ (0x0₁₆ ∘ %ymm2[95:80] ∘ (0x0₁₆ ∘ %ymm2[79:64] ∘ (0x0₁₆ ∘ %ymm2[63:48] ∘ (0x0₁₆ ∘ %ymm2[47:32] ∘ (0x0₁₆ ∘ %ymm2[31:16] ∘ (0x0₁₆ ∘ %ymm2[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


937> vpmovzxwq_xmm_xmm (vpmovzxwq %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxwq %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxwq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (0x0₄₈ ∘ %ymm2[31:16] ∘ (0x0₄₈ ∘ %ymm2[15:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


938> vpmovzxwq_ymm_xmm (vpmovzxwq %xmm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmovzxwq %xmm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmovzxwq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₄₈ ∘ %ymm2[63:48] ∘ (0x0₄₈ ∘ %ymm2[47:32] ∘ (0x0₄₈ ∘ %ymm2[31:16] ∘ (0x0₄₈ ∘ %ymm2[15:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


939> vpmuldq_xmm_xmm_xmm (vpmuldq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmuldq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmuldq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-64(%ymm2[95:64]) * sign-extend-64(%ymm3[95:64])) ∘ (sign-extend-64(%ymm2[31:0]) * sign-extend-64(%ymm3[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


940> vpmuldq_ymm_ymm_ymm (vpmuldq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmuldq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmuldq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (sign-extend-64(%ymm2[223:192]) * sign-extend-64(%ymm3[223:192])) ∘ ((sign-extend-64(%ymm2[159:128]) * sign-extend-64(%ymm3[159:128])) ∘ ((sign-extend-64(%ymm2[95:64]) * sign-extend-64(%ymm3[95:64])) ∘ (sign-extend-64(%ymm2[31:0]) * sign-extend-64(%ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


941> vpmulhrsw_xmm_xmm_xmm (vpmulhrsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulhrsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmulhrsw_xmm_xmm_xmm:vpmulhrsw %xmm3, %xmm2, %xmm1

942> vpmulhrsw_ymm_ymm_ymm (vpmulhrsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulhrsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmulhrsw_ymm_ymm_ymm:vpmulhrsw %ymm3, %ymm2, %ymm1

943> vpmulhuw_xmm_xmm_xmm (vpmulhuw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulhuw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmulhuw_xmm_xmm_xmm:vpmulhuw %xmm3, %xmm2, %xmm1

944> vpmulhuw_ymm_ymm_ymm (vpmulhuw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulhuw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmulhuw_ymm_ymm_ymm:vpmulhuw %ymm3, %ymm2, %ymm1

945> vpmulhw_xmm_xmm_xmm (vpmulhw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulhw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmulhw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-32(%ymm2[127:112]) * sign-extend-32(%ymm3[127:112]))[31:16] ∘ ((sign-extend-32(%ymm2[111:96]) * sign-extend-32(%ymm3[111:96]))[31:16] ∘ ((sign-extend-32(%ymm2[95:80]) * sign-extend-32(%ymm3[95:80]))[31:16] ∘ ((sign-extend-32(%ymm2[79:64]) * sign-extend-32(%ymm3[79:64]))[31:16] ∘ ((sign-extend-32(%ymm2[63:48]) * sign-extend-32(%ymm3[63:48]))[31:16] ∘ ((sign-extend-32(%ymm2[47:32]) * sign-extend-32(%ymm3[47:32]))[31:16] ∘ ((sign-extend-32(%ymm2[31:16]) * sign-extend-32(%ymm3[31:16]))[31:16] ∘ (sign-extend-32(%ymm2[15:0]) * sign-extend-32(%ymm3[15:0]))[31:16])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


946> vpmulhw_ymm_ymm_ymm (vpmulhw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulhw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmulhw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (sign-extend-32(%ymm2[255:240]) * sign-extend-32(%ymm3[255:240]))[31:16] ∘ ((sign-extend-32(%ymm2[239:224]) * sign-extend-32(%ymm3[239:224]))[31:16] ∘ ((sign-extend-32(%ymm2[223:208]) * sign-extend-32(%ymm3[223:208]))[31:16] ∘ ((sign-extend-32(%ymm2[207:192]) * sign-extend-32(%ymm3[207:192]))[31:16] ∘ ((sign-extend-32(%ymm2[191:176]) * sign-extend-32(%ymm3[191:176]))[31:16] ∘ ((sign-extend-32(%ymm2[175:160]) * sign-extend-32(%ymm3[175:160]))[31:16] ∘ ((sign-extend-32(%ymm2[159:144]) * sign-extend-32(%ymm3[159:144]))[31:16] ∘ ((sign-extend-32(%ymm2[143:128]) * sign-extend-32(%ymm3[143:128]))[31:16] ∘ ((sign-extend-32(%ymm2[127:112]) * sign-extend-32(%ymm3[127:112]))[31:16] ∘ ((sign-extend-32(%ymm2[111:96]) * sign-extend-32(%ymm3[111:96]))[31:16] ∘ ((sign-extend-32(%ymm2[95:80]) * sign-extend-32(%ymm3[95:80]))[31:16] ∘ ((sign-extend-32(%ymm2[79:64]) * sign-extend-32(%ymm3[79:64]))[31:16] ∘ ((sign-extend-32(%ymm2[63:48]) * sign-extend-32(%ymm3[63:48]))[31:16] ∘ ((sign-extend-32(%ymm2[47:32]) * sign-extend-32(%ymm3[47:32]))[31:16] ∘ ((sign-extend-32(%ymm2[31:16]) * sign-extend-32(%ymm3[31:16]))[31:16] ∘ (sign-extend-32(%ymm2[15:0]) * sign-extend-32(%ymm3[15:0]))[31:16]))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


947> vpmulld_xmm_xmm_xmm (vpmulld %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulld %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmulld %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-64(%ymm2[127:96]) * sign-extend-64(%ymm3[127:96]))[31:0] ∘ ((sign-extend-64(%ymm2[95:64]) * sign-extend-64(%ymm3[95:64]))[31:0] ∘ ((sign-extend-64(%ymm2[63:32]) * sign-extend-64(%ymm3[63:32]))[31:0] ∘ (sign-extend-64(%ymm2[31:0]) * sign-extend-64(%ymm3[31:0]))[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


948> vpmulld_ymm_ymm_ymm (vpmulld %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmulld %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmulld %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (sign-extend-64(%ymm2[255:224]) * sign-extend-64(%ymm3[255:224]))[31:0] ∘ ((sign-extend-64(%ymm2[223:192]) * sign-extend-64(%ymm3[223:192]))[31:0] ∘ ((sign-extend-64(%ymm2[191:160]) * sign-extend-64(%ymm3[191:160]))[31:0] ∘ ((sign-extend-64(%ymm2[159:128]) * sign-extend-64(%ymm3[159:128]))[31:0] ∘ ((sign-extend-64(%ymm2[127:96]) * sign-extend-64(%ymm3[127:96]))[31:0] ∘ ((sign-extend-64(%ymm2[95:64]) * sign-extend-64(%ymm3[95:64]))[31:0] ∘ ((sign-extend-64(%ymm2[63:32]) * sign-extend-64(%ymm3[63:32]))[31:0] ∘ (sign-extend-64(%ymm2[31:0]) * sign-extend-64(%ymm3[31:0]))[31:0]))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


949> vpmullw_xmm_xmm_xmm (vpmullw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmullw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmullw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-32(%ymm2[127:112]) * sign-extend-32(%ymm3[127:112]))[15:0] ∘ ((sign-extend-32(%ymm2[111:96]) * sign-extend-32(%ymm3[111:96]))[15:0] ∘ ((sign-extend-32(%ymm2[95:80]) * sign-extend-32(%ymm3[95:80]))[15:0] ∘ ((sign-extend-32(%ymm2[79:64]) * sign-extend-32(%ymm3[79:64]))[15:0] ∘ ((sign-extend-32(%ymm2[63:48]) * sign-extend-32(%ymm3[63:48]))[15:0] ∘ ((sign-extend-32(%ymm2[47:32]) * sign-extend-32(%ymm3[47:32]))[15:0] ∘ ((sign-extend-32(%ymm2[31:16]) * sign-extend-32(%ymm3[31:16]))[15:0] ∘ (sign-extend-32(%ymm2[15:0]) * sign-extend-32(%ymm3[15:0]))[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


950> vpmullw_ymm_ymm_ymm (vpmullw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmullw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpmullw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (sign-extend-32(%ymm2[255:240]) * sign-extend-32(%ymm3[255:240]))[15:0] ∘ ((sign-extend-32(%ymm2[239:224]) * sign-extend-32(%ymm3[239:224]))[15:0] ∘ ((sign-extend-32(%ymm2[223:208]) * sign-extend-32(%ymm3[223:208]))[15:0] ∘ ((sign-extend-32(%ymm2[207:192]) * sign-extend-32(%ymm3[207:192]))[15:0] ∘ ((sign-extend-32(%ymm2[191:176]) * sign-extend-32(%ymm3[191:176]))[15:0] ∘ ((sign-extend-32(%ymm2[175:160]) * sign-extend-32(%ymm3[175:160]))[15:0] ∘ ((sign-extend-32(%ymm2[159:144]) * sign-extend-32(%ymm3[159:144]))[15:0] ∘ ((sign-extend-32(%ymm2[143:128]) * sign-extend-32(%ymm3[143:128]))[15:0] ∘ ((sign-extend-32(%ymm2[127:112]) * sign-extend-32(%ymm3[127:112]))[15:0] ∘ ((sign-extend-32(%ymm2[111:96]) * sign-extend-32(%ymm3[111:96]))[15:0] ∘ ((sign-extend-32(%ymm2[95:80]) * sign-extend-32(%ymm3[95:80]))[15:0] ∘ ((sign-extend-32(%ymm2[79:64]) * sign-extend-32(%ymm3[79:64]))[15:0] ∘ ((sign-extend-32(%ymm2[63:48]) * sign-extend-32(%ymm3[63:48]))[15:0] ∘ ((sign-extend-32(%ymm2[47:32]) * sign-extend-32(%ymm3[47:32]))[15:0] ∘ ((sign-extend-32(%ymm2[31:16]) * sign-extend-32(%ymm3[31:16]))[15:0] ∘ (sign-extend-32(%ymm2[15:0]) * sign-extend-32(%ymm3[15:0]))[15:0]))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


951> vpmuludq_xmm_xmm_xmm (vpmuludq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmuludq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmuludq_xmm_xmm_xmm:vpmuludq %xmm3, %xmm2, %xmm1

952> vpmuludq_ymm_ymm_ymm (vpmuludq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpmuludq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpmuludq_ymm_ymm_ymm:vpmuludq %ymm3, %ymm2, %ymm1

953> vpor_xmm_xmm_xmm (vpor %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpor %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpor %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] | %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


954> vpor_ymm_ymm_ymm (vpor %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpor %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpor %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2 | %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


955> vpsadbw_xmm_xmm_xmm (vpsadbw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsadbw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsadbw_xmm_xmm_xmm:vpsadbw %xmm3, %xmm2, %xmm1

956> vpsadbw_ymm_ymm_ymm (vpsadbw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsadbw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsadbw_ymm_ymm_ymm:vpsadbw %ymm3, %ymm2, %ymm1

957> vpshufb_xmm_xmm_xmm (vpshufb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpshufb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpshufb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[127:127] = 0x1₁ ? 0x0₈ : %ymm3[123:120] = 0xf₄ ? %ymm2[127:120] : %ymm3[123:120] = 0xe₄ ? %ymm2[119:112] : %ymm3[123:120] = 0xd₄ ? %ymm2[111:104] : %ymm3[123:120] = 0xc₄ ? %ymm2[103:96] : %ymm3[123:120] = 0xb₄ ? %ymm2[95:88] : %ymm3[123:120] = 0xa₄ ? %ymm2[87:80] : %ymm3[123:120] = 0x9₄ ? %ymm2[79:72] : %ymm3[123:120] = 0x8₄ ? %ymm2[71:64] : %ymm3[123:120] = 0x7₄ ? %ymm2[63:56] : %ymm3[123:120] = 0x6₄ ? %ymm2[55:48] : %ymm3[123:120] = 0x5₄ ? %ymm2[47:40] : %ymm3[123:120] = 0x4₄ ? %ymm2[39:32] : %ymm3[123:120] = 0x3₄ ? %ymm2[31:24] : %ymm3[123:120] = 0x2₄ ? %ymm2[23:16] : %ymm3[123:120] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[119:119] = 0x1₁ ? 0x0₈ : %ymm3[115:112] = 0xf₄ ? %ymm2[127:120] : %ymm3[115:112] = 0xe₄ ? %ymm2[119:112] : %ymm3[115:112] = 0xd₄ ? %ymm2[111:104] : %ymm3[115:112] = 0xc₄ ? %ymm2[103:96] : %ymm3[115:112] = 0xb₄ ? %ymm2[95:88] : %ymm3[115:112] = 0xa₄ ? %ymm2[87:80] : %ymm3[115:112] = 0x9₄ ? %ymm2[79:72] : %ymm3[115:112] = 0x8₄ ? %ymm2[71:64] : %ymm3[115:112] = 0x7₄ ? %ymm2[63:56] : %ymm3[115:112] = 0x6₄ ? %ymm2[55:48] : %ymm3[115:112] = 0x5₄ ? %ymm2[47:40] : %ymm3[115:112] = 0x4₄ ? %ymm2[39:32] : %ymm3[115:112] = 0x3₄ ? %ymm2[31:24] : %ymm3[115:112] = 0x2₄ ? %ymm2[23:16] : %ymm3[115:112] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[111:111] = 0x1₁ ? 0x0₈ : %ymm3[107:104] = 0xf₄ ? %ymm2[127:120] : %ymm3[107:104] = 0xe₄ ? %ymm2[119:112] : %ymm3[107:104] = 0xd₄ ? %ymm2[111:104] : %ymm3[107:104] = 0xc₄ ? %ymm2[103:96] : %ymm3[107:104] = 0xb₄ ? %ymm2[95:88] : %ymm3[107:104] = 0xa₄ ? %ymm2[87:80] : %ymm3[107:104] = 0x9₄ ? %ymm2[79:72] : %ymm3[107:104] = 0x8₄ ? %ymm2[71:64] : %ymm3[107:104] = 0x7₄ ? %ymm2[63:56] : %ymm3[107:104] = 0x6₄ ? %ymm2[55:48] : %ymm3[107:104] = 0x5₄ ? %ymm2[47:40] : %ymm3[107:104] = 0x4₄ ? %ymm2[39:32] : %ymm3[107:104] = 0x3₄ ? %ymm2[31:24] : %ymm3[107:104] = 0x2₄ ? %ymm2[23:16] : %ymm3[107:104] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[103:103] = 0x1₁ ? 0x0₈ : %ymm3[99:96] = 0xf₄ ? %ymm2[127:120] : %ymm3[99:96] = 0xe₄ ? %ymm2[119:112] : %ymm3[99:96] = 0xd₄ ? %ymm2[111:104] : %ymm3[99:96] = 0xc₄ ? %ymm2[103:96] : %ymm3[99:96] = 0xb₄ ? %ymm2[95:88] : %ymm3[99:96] = 0xa₄ ? %ymm2[87:80] : %ymm3[99:96] = 0x9₄ ? %ymm2[79:72] : %ymm3[99:96] = 0x8₄ ? %ymm2[71:64] : %ymm3[99:96] = 0x7₄ ? %ymm2[63:56] : %ymm3[99:96] = 0x6₄ ? %ymm2[55:48] : %ymm3[99:96] = 0x5₄ ? %ymm2[47:40] : %ymm3[99:96] = 0x4₄ ? %ymm2[39:32] : %ymm3[99:96] = 0x3₄ ? %ymm2[31:24] : %ymm3[99:96] = 0x2₄ ? %ymm2[23:16] : %ymm3[99:96] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[95:95] = 0x1₁ ? 0x0₈ : %ymm3[91:88] = 0xf₄ ? %ymm2[127:120] : %ymm3[91:88] = 0xe₄ ? %ymm2[119:112] : %ymm3[91:88] = 0xd₄ ? %ymm2[111:104] : %ymm3[91:88] = 0xc₄ ? %ymm2[103:96] : %ymm3[91:88] = 0xb₄ ? %ymm2[95:88] : %ymm3[91:88] = 0xa₄ ? %ymm2[87:80] : %ymm3[91:88] = 0x9₄ ? %ymm2[79:72] : %ymm3[91:88] = 0x8₄ ? %ymm2[71:64] : %ymm3[91:88] = 0x7₄ ? %ymm2[63:56] : %ymm3[91:88] = 0x6₄ ? %ymm2[55:48] : %ymm3[91:88] = 0x5₄ ? %ymm2[47:40] : %ymm3[91:88] = 0x4₄ ? %ymm2[39:32] : %ymm3[91:88] = 0x3₄ ? %ymm2[31:24] : %ymm3[91:88] = 0x2₄ ? %ymm2[23:16] : %ymm3[91:88] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[87:87] = 0x1₁ ? 0x0₈ : %ymm3[83:80] = 0xf₄ ? %ymm2[127:120] : %ymm3[83:80] = 0xe₄ ? %ymm2[119:112] : %ymm3[83:80] = 0xd₄ ? %ymm2[111:104] : %ymm3[83:80] = 0xc₄ ? %ymm2[103:96] : %ymm3[83:80] = 0xb₄ ? %ymm2[95:88] : %ymm3[83:80] = 0xa₄ ? %ymm2[87:80] : %ymm3[83:80] = 0x9₄ ? %ymm2[79:72] : %ymm3[83:80] = 0x8₄ ? %ymm2[71:64] : %ymm3[83:80] = 0x7₄ ? %ymm2[63:56] : %ymm3[83:80] = 0x6₄ ? %ymm2[55:48] : %ymm3[83:80] = 0x5₄ ? %ymm2[47:40] : %ymm3[83:80] = 0x4₄ ? %ymm2[39:32] : %ymm3[83:80] = 0x3₄ ? %ymm2[31:24] : %ymm3[83:80] = 0x2₄ ? %ymm2[23:16] : %ymm3[83:80] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[79:79] = 0x1₁ ? 0x0₈ : %ymm3[75:72] = 0xf₄ ? %ymm2[127:120] : %ymm3[75:72] = 0xe₄ ? %ymm2[119:112] : %ymm3[75:72] = 0xd₄ ? %ymm2[111:104] : %ymm3[75:72] = 0xc₄ ? %ymm2[103:96] : %ymm3[75:72] = 0xb₄ ? %ymm2[95:88] : %ymm3[75:72] = 0xa₄ ? %ymm2[87:80] : %ymm3[75:72] = 0x9₄ ? %ymm2[79:72] : %ymm3[75:72] = 0x8₄ ? %ymm2[71:64] : %ymm3[75:72] = 0x7₄ ? %ymm2[63:56] : %ymm3[75:72] = 0x6₄ ? %ymm2[55:48] : %ymm3[75:72] = 0x5₄ ? %ymm2[47:40] : %ymm3[75:72] = 0x4₄ ? %ymm2[39:32] : %ymm3[75:72] = 0x3₄ ? %ymm2[31:24] : %ymm3[75:72] = 0x2₄ ? %ymm2[23:16] : %ymm3[75:72] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[71:71] = 0x1₁ ? 0x0₈ : %ymm3[67:64] = 0xf₄ ? %ymm2[127:120] : %ymm3[67:64] = 0xe₄ ? %ymm2[119:112] : %ymm3[67:64] = 0xd₄ ? %ymm2[111:104] : %ymm3[67:64] = 0xc₄ ? %ymm2[103:96] : %ymm3[67:64] = 0xb₄ ? %ymm2[95:88] : %ymm3[67:64] = 0xa₄ ? %ymm2[87:80] : %ymm3[67:64] = 0x9₄ ? %ymm2[79:72] : %ymm3[67:64] = 0x8₄ ? %ymm2[71:64] : %ymm3[67:64] = 0x7₄ ? %ymm2[63:56] : %ymm3[67:64] = 0x6₄ ? %ymm2[55:48] : %ymm3[67:64] = 0x5₄ ? %ymm2[47:40] : %ymm3[67:64] = 0x4₄ ? %ymm2[39:32] : %ymm3[67:64] = 0x3₄ ? %ymm2[31:24] : %ymm3[67:64] = 0x2₄ ? %ymm2[23:16] : %ymm3[67:64] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[63:63] = 0x1₁ ? 0x0₈ : %ymm3[59:56] = 0xf₄ ? %ymm2[127:120] : %ymm3[59:56] = 0xe₄ ? %ymm2[119:112] : %ymm3[59:56] = 0xd₄ ? %ymm2[111:104] : %ymm3[59:56] = 0xc₄ ? %ymm2[103:96] : %ymm3[59:56] = 0xb₄ ? %ymm2[95:88] : %ymm3[59:56] = 0xa₄ ? %ymm2[87:80] : %ymm3[59:56] = 0x9₄ ? %ymm2[79:72] : %ymm3[59:56] = 0x8₄ ? %ymm2[71:64] : %ymm3[59:56] = 0x7₄ ? %ymm2[63:56] : %ymm3[59:56] = 0x6₄ ? %ymm2[55:48] : %ymm3[59:56] = 0x5₄ ? %ymm2[47:40] : %ymm3[59:56] = 0x4₄ ? %ymm2[39:32] : %ymm3[59:56] = 0x3₄ ? %ymm2[31:24] : %ymm3[59:56] = 0x2₄ ? %ymm2[23:16] : %ymm3[59:56] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[55:55] = 0x1₁ ? 0x0₈ : %ymm3[51:48] = 0xf₄ ? %ymm2[127:120] : %ymm3[51:48] = 0xe₄ ? %ymm2[119:112] : %ymm3[51:48] = 0xd₄ ? %ymm2[111:104] : %ymm3[51:48] = 0xc₄ ? %ymm2[103:96] : %ymm3[51:48] = 0xb₄ ? %ymm2[95:88] : %ymm3[51:48] = 0xa₄ ? %ymm2[87:80] : %ymm3[51:48] = 0x9₄ ? %ymm2[79:72] : %ymm3[51:48] = 0x8₄ ? %ymm2[71:64] : %ymm3[51:48] = 0x7₄ ? %ymm2[63:56] : %ymm3[51:48] = 0x6₄ ? %ymm2[55:48] : %ymm3[51:48] = 0x5₄ ? %ymm2[47:40] : %ymm3[51:48] = 0x4₄ ? %ymm2[39:32] : %ymm3[51:48] = 0x3₄ ? %ymm2[31:24] : %ymm3[51:48] = 0x2₄ ? %ymm2[23:16] : %ymm3[51:48] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[47:47] = 0x1₁ ? 0x0₈ : %ymm3[43:40] = 0xf₄ ? %ymm2[127:120] : %ymm3[43:40] = 0xe₄ ? %ymm2[119:112] : %ymm3[43:40] = 0xd₄ ? %ymm2[111:104] : %ymm3[43:40] = 0xc₄ ? %ymm2[103:96] : %ymm3[43:40] = 0xb₄ ? %ymm2[95:88] : %ymm3[43:40] = 0xa₄ ? %ymm2[87:80] : %ymm3[43:40] = 0x9₄ ? %ymm2[79:72] : %ymm3[43:40] = 0x8₄ ? %ymm2[71:64] : %ymm3[43:40] = 0x7₄ ? %ymm2[63:56] : %ymm3[43:40] = 0x6₄ ? %ymm2[55:48] : %ymm3[43:40] = 0x5₄ ? %ymm2[47:40] : %ymm3[43:40] = 0x4₄ ? %ymm2[39:32] : %ymm3[43:40] = 0x3₄ ? %ymm2[31:24] : %ymm3[43:40] = 0x2₄ ? %ymm2[23:16] : %ymm3[43:40] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[39:39] = 0x1₁ ? 0x0₈ : %ymm3[35:32] = 0xf₄ ? %ymm2[127:120] : %ymm3[35:32] = 0xe₄ ? %ymm2[119:112] : %ymm3[35:32] = 0xd₄ ? %ymm2[111:104] : %ymm3[35:32] = 0xc₄ ? %ymm2[103:96] : %ymm3[35:32] = 0xb₄ ? %ymm2[95:88] : %ymm3[35:32] = 0xa₄ ? %ymm2[87:80] : %ymm3[35:32] = 0x9₄ ? %ymm2[79:72] : %ymm3[35:32] = 0x8₄ ? %ymm2[71:64] : %ymm3[35:32] = 0x7₄ ? %ymm2[63:56] : %ymm3[35:32] = 0x6₄ ? %ymm2[55:48] : %ymm3[35:32] = 0x5₄ ? %ymm2[47:40] : %ymm3[35:32] = 0x4₄ ? %ymm2[39:32] : %ymm3[35:32] = 0x3₄ ? %ymm2[31:24] : %ymm3[35:32] = 0x2₄ ? %ymm2[23:16] : %ymm3[35:32] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[31:31] = 0x1₁ ? 0x0₈ : %ymm3[27:24] = 0xf₄ ? %ymm2[127:120] : %ymm3[27:24] = 0xe₄ ? %ymm2[119:112] : %ymm3[27:24] = 0xd₄ ? %ymm2[111:104] : %ymm3[27:24] = 0xc₄ ? %ymm2[103:96] : %ymm3[27:24] = 0xb₄ ? %ymm2[95:88] : %ymm3[27:24] = 0xa₄ ? %ymm2[87:80] : %ymm3[27:24] = 0x9₄ ? %ymm2[79:72] : %ymm3[27:24] = 0x8₄ ? %ymm2[71:64] : %ymm3[27:24] = 0x7₄ ? %ymm2[63:56] : %ymm3[27:24] = 0x6₄ ? %ymm2[55:48] : %ymm3[27:24] = 0x5₄ ? %ymm2[47:40] : %ymm3[27:24] = 0x4₄ ? %ymm2[39:32] : %ymm3[27:24] = 0x3₄ ? %ymm2[31:24] : %ymm3[27:24] = 0x2₄ ? %ymm2[23:16] : %ymm3[27:24] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[23:23] = 0x1₁ ? 0x0₈ : %ymm3[19:16] = 0xf₄ ? %ymm2[127:120] : %ymm3[19:16] = 0xe₄ ? %ymm2[119:112] : %ymm3[19:16] = 0xd₄ ? %ymm2[111:104] : %ymm3[19:16] = 0xc₄ ? %ymm2[103:96] : %ymm3[19:16] = 0xb₄ ? %ymm2[95:88] : %ymm3[19:16] = 0xa₄ ? %ymm2[87:80] : %ymm3[19:16] = 0x9₄ ? %ymm2[79:72] : %ymm3[19:16] = 0x8₄ ? %ymm2[71:64] : %ymm3[19:16] = 0x7₄ ? %ymm2[63:56] : %ymm3[19:16] = 0x6₄ ? %ymm2[55:48] : %ymm3[19:16] = 0x5₄ ? %ymm2[47:40] : %ymm3[19:16] = 0x4₄ ? %ymm2[39:32] : %ymm3[19:16] = 0x3₄ ? %ymm2[31:24] : %ymm3[19:16] = 0x2₄ ? %ymm2[23:16] : %ymm3[19:16] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[15:15] = 0x1₁ ? 0x0₈ : %ymm3[11:8] = 0xf₄ ? %ymm2[127:120] : %ymm3[11:8] = 0xe₄ ? %ymm2[119:112] : %ymm3[11:8] = 0xd₄ ? %ymm2[111:104] : %ymm3[11:8] = 0xc₄ ? %ymm2[103:96] : %ymm3[11:8] = 0xb₄ ? %ymm2[95:88] : %ymm3[11:8] = 0xa₄ ? %ymm2[87:80] : %ymm3[11:8] = 0x9₄ ? %ymm2[79:72] : %ymm3[11:8] = 0x8₄ ? %ymm2[71:64] : %ymm3[11:8] = 0x7₄ ? %ymm2[63:56] : %ymm3[11:8] = 0x6₄ ? %ymm2[55:48] : %ymm3[11:8] = 0x5₄ ? %ymm2[47:40] : %ymm3[11:8] = 0x4₄ ? %ymm2[39:32] : %ymm3[11:8] = 0x3₄ ? %ymm2[31:24] : %ymm3[11:8] = 0x2₄ ? %ymm2[23:16] : %ymm3[11:8] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ (%ymm3[7:7] = 0x1₁ ? 0x0₈ : %ymm3[3:0] = 0xf₄ ? %ymm2[127:120] : %ymm3[3:0] = 0xe₄ ? %ymm2[119:112] : %ymm3[3:0] = 0xd₄ ? %ymm2[111:104] : %ymm3[3:0] = 0xc₄ ? %ymm2[103:96] : %ymm3[3:0] = 0xb₄ ? %ymm2[95:88] : %ymm3[3:0] = 0xa₄ ? %ymm2[87:80] : %ymm3[3:0] = 0x9₄ ? %ymm2[79:72] : %ymm3[3:0] = 0x8₄ ? %ymm2[71:64] : %ymm3[3:0] = 0x7₄ ? %ymm2[63:56] : %ymm3[3:0] = 0x6₄ ? %ymm2[55:48] : %ymm3[3:0] = 0x5₄ ? %ymm2[47:40] : %ymm3[3:0] = 0x4₄ ? %ymm2[39:32] : %ymm3[3:0] = 0x3₄ ? %ymm2[31:24] : %ymm3[3:0] = 0x2₄ ? %ymm2[23:16] : %ymm3[3:0] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


958> vpshufb_ymm_ymm_ymm (vpshufb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpshufb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpshufb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm3[255:255] = 0x1₁ ? 0x0₈ : %ymm3[251:248] = 0xf₄ ? %ymm2[255:248] : %ymm3[251:248] = 0xe₄ ? %ymm2[247:240] : %ymm3[251:248] = 0xd₄ ? %ymm2[239:232] : %ymm3[251:248] = 0xc₄ ? %ymm2[231:224] : %ymm3[251:248] = 0xb₄ ? %ymm2[223:216] : %ymm3[251:248] = 0xa₄ ? %ymm2[215:208] : %ymm3[251:248] = 0x9₄ ? %ymm2[207:200] : %ymm3[251:248] = 0x8₄ ? %ymm2[199:192] : %ymm3[251:248] = 0x7₄ ? %ymm2[191:184] : %ymm3[251:248] = 0x6₄ ? %ymm2[183:176] : %ymm3[251:248] = 0x5₄ ? %ymm2[175:168] : %ymm3[251:248] = 0x4₄ ? %ymm2[167:160] : %ymm3[251:248] = 0x3₄ ? %ymm2[159:152] : %ymm3[251:248] = 0x2₄ ? %ymm2[151:144] : %ymm3[251:248] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[247:247] = 0x1₁ ? 0x0₈ : %ymm3[243:240] = 0xf₄ ? %ymm2[255:248] : %ymm3[243:240] = 0xe₄ ? %ymm2[247:240] : %ymm3[243:240] = 0xd₄ ? %ymm2[239:232] : %ymm3[243:240] = 0xc₄ ? %ymm2[231:224] : %ymm3[243:240] = 0xb₄ ? %ymm2[223:216] : %ymm3[243:240] = 0xa₄ ? %ymm2[215:208] : %ymm3[243:240] = 0x9₄ ? %ymm2[207:200] : %ymm3[243:240] = 0x8₄ ? %ymm2[199:192] : %ymm3[243:240] = 0x7₄ ? %ymm2[191:184] : %ymm3[243:240] = 0x6₄ ? %ymm2[183:176] : %ymm3[243:240] = 0x5₄ ? %ymm2[175:168] : %ymm3[243:240] = 0x4₄ ? %ymm2[167:160] : %ymm3[243:240] = 0x3₄ ? %ymm2[159:152] : %ymm3[243:240] = 0x2₄ ? %ymm2[151:144] : %ymm3[243:240] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[239:239] = 0x1₁ ? 0x0₈ : %ymm3[235:232] = 0xf₄ ? %ymm2[255:248] : %ymm3[235:232] = 0xe₄ ? %ymm2[247:240] : %ymm3[235:232] = 0xd₄ ? %ymm2[239:232] : %ymm3[235:232] = 0xc₄ ? %ymm2[231:224] : %ymm3[235:232] = 0xb₄ ? %ymm2[223:216] : %ymm3[235:232] = 0xa₄ ? %ymm2[215:208] : %ymm3[235:232] = 0x9₄ ? %ymm2[207:200] : %ymm3[235:232] = 0x8₄ ? %ymm2[199:192] : %ymm3[235:232] = 0x7₄ ? %ymm2[191:184] : %ymm3[235:232] = 0x6₄ ? %ymm2[183:176] : %ymm3[235:232] = 0x5₄ ? %ymm2[175:168] : %ymm3[235:232] = 0x4₄ ? %ymm2[167:160] : %ymm3[235:232] = 0x3₄ ? %ymm2[159:152] : %ymm3[235:232] = 0x2₄ ? %ymm2[151:144] : %ymm3[235:232] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[231:231] = 0x1₁ ? 0x0₈ : %ymm3[227:224] = 0xf₄ ? %ymm2[255:248] : %ymm3[227:224] = 0xe₄ ? %ymm2[247:240] : %ymm3[227:224] = 0xd₄ ? %ymm2[239:232] : %ymm3[227:224] = 0xc₄ ? %ymm2[231:224] : %ymm3[227:224] = 0xb₄ ? %ymm2[223:216] : %ymm3[227:224] = 0xa₄ ? %ymm2[215:208] : %ymm3[227:224] = 0x9₄ ? %ymm2[207:200] : %ymm3[227:224] = 0x8₄ ? %ymm2[199:192] : %ymm3[227:224] = 0x7₄ ? %ymm2[191:184] : %ymm3[227:224] = 0x6₄ ? %ymm2[183:176] : %ymm3[227:224] = 0x5₄ ? %ymm2[175:168] : %ymm3[227:224] = 0x4₄ ? %ymm2[167:160] : %ymm3[227:224] = 0x3₄ ? %ymm2[159:152] : %ymm3[227:224] = 0x2₄ ? %ymm2[151:144] : %ymm3[227:224] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[223:223] = 0x1₁ ? 0x0₈ : %ymm3[219:216] = 0xf₄ ? %ymm2[255:248] : %ymm3[219:216] = 0xe₄ ? %ymm2[247:240] : %ymm3[219:216] = 0xd₄ ? %ymm2[239:232] : %ymm3[219:216] = 0xc₄ ? %ymm2[231:224] : %ymm3[219:216] = 0xb₄ ? %ymm2[223:216] : %ymm3[219:216] = 0xa₄ ? %ymm2[215:208] : %ymm3[219:216] = 0x9₄ ? %ymm2[207:200] : %ymm3[219:216] = 0x8₄ ? %ymm2[199:192] : %ymm3[219:216] = 0x7₄ ? %ymm2[191:184] : %ymm3[219:216] = 0x6₄ ? %ymm2[183:176] : %ymm3[219:216] = 0x5₄ ? %ymm2[175:168] : %ymm3[219:216] = 0x4₄ ? %ymm2[167:160] : %ymm3[219:216] = 0x3₄ ? %ymm2[159:152] : %ymm3[219:216] = 0x2₄ ? %ymm2[151:144] : %ymm3[219:216] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[215:215] = 0x1₁ ? 0x0₈ : %ymm3[211:208] = 0xf₄ ? %ymm2[255:248] : %ymm3[211:208] = 0xe₄ ? %ymm2[247:240] : %ymm3[211:208] = 0xd₄ ? %ymm2[239:232] : %ymm3[211:208] = 0xc₄ ? %ymm2[231:224] : %ymm3[211:208] = 0xb₄ ? %ymm2[223:216] : %ymm3[211:208] = 0xa₄ ? %ymm2[215:208] : %ymm3[211:208] = 0x9₄ ? %ymm2[207:200] : %ymm3[211:208] = 0x8₄ ? %ymm2[199:192] : %ymm3[211:208] = 0x7₄ ? %ymm2[191:184] : %ymm3[211:208] = 0x6₄ ? %ymm2[183:176] : %ymm3[211:208] = 0x5₄ ? %ymm2[175:168] : %ymm3[211:208] = 0x4₄ ? %ymm2[167:160] : %ymm3[211:208] = 0x3₄ ? %ymm2[159:152] : %ymm3[211:208] = 0x2₄ ? %ymm2[151:144] : %ymm3[211:208] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[207:207] = 0x1₁ ? 0x0₈ : %ymm3[203:200] = 0xf₄ ? %ymm2[255:248] : %ymm3[203:200] = 0xe₄ ? %ymm2[247:240] : %ymm3[203:200] = 0xd₄ ? %ymm2[239:232] : %ymm3[203:200] = 0xc₄ ? %ymm2[231:224] : %ymm3[203:200] = 0xb₄ ? %ymm2[223:216] : %ymm3[203:200] = 0xa₄ ? %ymm2[215:208] : %ymm3[203:200] = 0x9₄ ? %ymm2[207:200] : %ymm3[203:200] = 0x8₄ ? %ymm2[199:192] : %ymm3[203:200] = 0x7₄ ? %ymm2[191:184] : %ymm3[203:200] = 0x6₄ ? %ymm2[183:176] : %ymm3[203:200] = 0x5₄ ? %ymm2[175:168] : %ymm3[203:200] = 0x4₄ ? %ymm2[167:160] : %ymm3[203:200] = 0x3₄ ? %ymm2[159:152] : %ymm3[203:200] = 0x2₄ ? %ymm2[151:144] : %ymm3[203:200] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[199:199] = 0x1₁ ? 0x0₈ : %ymm3[195:192] = 0xf₄ ? %ymm2[255:248] : %ymm3[195:192] = 0xe₄ ? %ymm2[247:240] : %ymm3[195:192] = 0xd₄ ? %ymm2[239:232] : %ymm3[195:192] = 0xc₄ ? %ymm2[231:224] : %ymm3[195:192] = 0xb₄ ? %ymm2[223:216] : %ymm3[195:192] = 0xa₄ ? %ymm2[215:208] : %ymm3[195:192] = 0x9₄ ? %ymm2[207:200] : %ymm3[195:192] = 0x8₄ ? %ymm2[199:192] : %ymm3[195:192] = 0x7₄ ? %ymm2[191:184] : %ymm3[195:192] = 0x6₄ ? %ymm2[183:176] : %ymm3[195:192] = 0x5₄ ? %ymm2[175:168] : %ymm3[195:192] = 0x4₄ ? %ymm2[167:160] : %ymm3[195:192] = 0x3₄ ? %ymm2[159:152] : %ymm3[195:192] = 0x2₄ ? %ymm2[151:144] : %ymm3[195:192] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[191:191] = 0x1₁ ? 0x0₈ : %ymm3[187:184] = 0xf₄ ? %ymm2[255:248] : %ymm3[187:184] = 0xe₄ ? %ymm2[247:240] : %ymm3[187:184] = 0xd₄ ? %ymm2[239:232] : %ymm3[187:184] = 0xc₄ ? %ymm2[231:224] : %ymm3[187:184] = 0xb₄ ? %ymm2[223:216] : %ymm3[187:184] = 0xa₄ ? %ymm2[215:208] : %ymm3[187:184] = 0x9₄ ? %ymm2[207:200] : %ymm3[187:184] = 0x8₄ ? %ymm2[199:192] : %ymm3[187:184] = 0x7₄ ? %ymm2[191:184] : %ymm3[187:184] = 0x6₄ ? %ymm2[183:176] : %ymm3[187:184] = 0x5₄ ? %ymm2[175:168] : %ymm3[187:184] = 0x4₄ ? %ymm2[167:160] : %ymm3[187:184] = 0x3₄ ? %ymm2[159:152] : %ymm3[187:184] = 0x2₄ ? %ymm2[151:144] : %ymm3[187:184] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[183:183] = 0x1₁ ? 0x0₈ : %ymm3[179:176] = 0xf₄ ? %ymm2[255:248] : %ymm3[179:176] = 0xe₄ ? %ymm2[247:240] : %ymm3[179:176] = 0xd₄ ? %ymm2[239:232] : %ymm3[179:176] = 0xc₄ ? %ymm2[231:224] : %ymm3[179:176] = 0xb₄ ? %ymm2[223:216] : %ymm3[179:176] = 0xa₄ ? %ymm2[215:208] : %ymm3[179:176] = 0x9₄ ? %ymm2[207:200] : %ymm3[179:176] = 0x8₄ ? %ymm2[199:192] : %ymm3[179:176] = 0x7₄ ? %ymm2[191:184] : %ymm3[179:176] = 0x6₄ ? %ymm2[183:176] : %ymm3[179:176] = 0x5₄ ? %ymm2[175:168] : %ymm3[179:176] = 0x4₄ ? %ymm2[167:160] : %ymm3[179:176] = 0x3₄ ? %ymm2[159:152] : %ymm3[179:176] = 0x2₄ ? %ymm2[151:144] : %ymm3[179:176] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[175:175] = 0x1₁ ? 0x0₈ : %ymm3[171:168] = 0xf₄ ? %ymm2[255:248] : %ymm3[171:168] = 0xe₄ ? %ymm2[247:240] : %ymm3[171:168] = 0xd₄ ? %ymm2[239:232] : %ymm3[171:168] = 0xc₄ ? %ymm2[231:224] : %ymm3[171:168] = 0xb₄ ? %ymm2[223:216] : %ymm3[171:168] = 0xa₄ ? %ymm2[215:208] : %ymm3[171:168] = 0x9₄ ? %ymm2[207:200] : %ymm3[171:168] = 0x8₄ ? %ymm2[199:192] : %ymm3[171:168] = 0x7₄ ? %ymm2[191:184] : %ymm3[171:168] = 0x6₄ ? %ymm2[183:176] : %ymm3[171:168] = 0x5₄ ? %ymm2[175:168] : %ymm3[171:168] = 0x4₄ ? %ymm2[167:160] : %ymm3[171:168] = 0x3₄ ? %ymm2[159:152] : %ymm3[171:168] = 0x2₄ ? %ymm2[151:144] : %ymm3[171:168] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[167:167] = 0x1₁ ? 0x0₈ : %ymm3[163:160] = 0xf₄ ? %ymm2[255:248] : %ymm3[163:160] = 0xe₄ ? %ymm2[247:240] : %ymm3[163:160] = 0xd₄ ? %ymm2[239:232] : %ymm3[163:160] = 0xc₄ ? %ymm2[231:224] : %ymm3[163:160] = 0xb₄ ? %ymm2[223:216] : %ymm3[163:160] = 0xa₄ ? %ymm2[215:208] : %ymm3[163:160] = 0x9₄ ? %ymm2[207:200] : %ymm3[163:160] = 0x8₄ ? %ymm2[199:192] : %ymm3[163:160] = 0x7₄ ? %ymm2[191:184] : %ymm3[163:160] = 0x6₄ ? %ymm2[183:176] : %ymm3[163:160] = 0x5₄ ? %ymm2[175:168] : %ymm3[163:160] = 0x4₄ ? %ymm2[167:160] : %ymm3[163:160] = 0x3₄ ? %ymm2[159:152] : %ymm3[163:160] = 0x2₄ ? %ymm2[151:144] : %ymm3[163:160] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[159:159] = 0x1₁ ? 0x0₈ : %ymm3[155:152] = 0xf₄ ? %ymm2[255:248] : %ymm3[155:152] = 0xe₄ ? %ymm2[247:240] : %ymm3[155:152] = 0xd₄ ? %ymm2[239:232] : %ymm3[155:152] = 0xc₄ ? %ymm2[231:224] : %ymm3[155:152] = 0xb₄ ? %ymm2[223:216] : %ymm3[155:152] = 0xa₄ ? %ymm2[215:208] : %ymm3[155:152] = 0x9₄ ? %ymm2[207:200] : %ymm3[155:152] = 0x8₄ ? %ymm2[199:192] : %ymm3[155:152] = 0x7₄ ? %ymm2[191:184] : %ymm3[155:152] = 0x6₄ ? %ymm2[183:176] : %ymm3[155:152] = 0x5₄ ? %ymm2[175:168] : %ymm3[155:152] = 0x4₄ ? %ymm2[167:160] : %ymm3[155:152] = 0x3₄ ? %ymm2[159:152] : %ymm3[155:152] = 0x2₄ ? %ymm2[151:144] : %ymm3[155:152] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[151:151] = 0x1₁ ? 0x0₈ : %ymm3[147:144] = 0xf₄ ? %ymm2[255:248] : %ymm3[147:144] = 0xe₄ ? %ymm2[247:240] : %ymm3[147:144] = 0xd₄ ? %ymm2[239:232] : %ymm3[147:144] = 0xc₄ ? %ymm2[231:224] : %ymm3[147:144] = 0xb₄ ? %ymm2[223:216] : %ymm3[147:144] = 0xa₄ ? %ymm2[215:208] : %ymm3[147:144] = 0x9₄ ? %ymm2[207:200] : %ymm3[147:144] = 0x8₄ ? %ymm2[199:192] : %ymm3[147:144] = 0x7₄ ? %ymm2[191:184] : %ymm3[147:144] = 0x6₄ ? %ymm2[183:176] : %ymm3[147:144] = 0x5₄ ? %ymm2[175:168] : %ymm3[147:144] = 0x4₄ ? %ymm2[167:160] : %ymm3[147:144] = 0x3₄ ? %ymm2[159:152] : %ymm3[147:144] = 0x2₄ ? %ymm2[151:144] : %ymm3[147:144] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[143:143] = 0x1₁ ? 0x0₈ : %ymm3[139:136] = 0xf₄ ? %ymm2[255:248] : %ymm3[139:136] = 0xe₄ ? %ymm2[247:240] : %ymm3[139:136] = 0xd₄ ? %ymm2[239:232] : %ymm3[139:136] = 0xc₄ ? %ymm2[231:224] : %ymm3[139:136] = 0xb₄ ? %ymm2[223:216] : %ymm3[139:136] = 0xa₄ ? %ymm2[215:208] : %ymm3[139:136] = 0x9₄ ? %ymm2[207:200] : %ymm3[139:136] = 0x8₄ ? %ymm2[199:192] : %ymm3[139:136] = 0x7₄ ? %ymm2[191:184] : %ymm3[139:136] = 0x6₄ ? %ymm2[183:176] : %ymm3[139:136] = 0x5₄ ? %ymm2[175:168] : %ymm3[139:136] = 0x4₄ ? %ymm2[167:160] : %ymm3[139:136] = 0x3₄ ? %ymm2[159:152] : %ymm3[139:136] = 0x2₄ ? %ymm2[151:144] : %ymm3[139:136] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[135:135] = 0x1₁ ? 0x0₈ : %ymm3[131:128] = 0xf₄ ? %ymm2[255:248] : %ymm3[131:128] = 0xe₄ ? %ymm2[247:240] : %ymm3[131:128] = 0xd₄ ? %ymm2[239:232] : %ymm3[131:128] = 0xc₄ ? %ymm2[231:224] : %ymm3[131:128] = 0xb₄ ? %ymm2[223:216] : %ymm3[131:128] = 0xa₄ ? %ymm2[215:208] : %ymm3[131:128] = 0x9₄ ? %ymm2[207:200] : %ymm3[131:128] = 0x8₄ ? %ymm2[199:192] : %ymm3[131:128] = 0x7₄ ? %ymm2[191:184] : %ymm3[131:128] = 0x6₄ ? %ymm2[183:176] : %ymm3[131:128] = 0x5₄ ? %ymm2[175:168] : %ymm3[131:128] = 0x4₄ ? %ymm2[167:160] : %ymm3[131:128] = 0x3₄ ? %ymm2[159:152] : %ymm3[131:128] = 0x2₄ ? %ymm2[151:144] : %ymm3[131:128] = 0x1₄ ? %ymm2[143:136] : %ymm2[135:128]) ∘ ((%ymm3[127:127] = 0x1₁ ? 0x0₈ : %ymm3[123:120] = 0xf₄ ? %ymm2[127:120] : %ymm3[123:120] = 0xe₄ ? %ymm2[119:112] : %ymm3[123:120] = 0xd₄ ? %ymm2[111:104] : %ymm3[123:120] = 0xc₄ ? %ymm2[103:96] : %ymm3[123:120] = 0xb₄ ? %ymm2[95:88] : %ymm3[123:120] = 0xa₄ ? %ymm2[87:80] : %ymm3[123:120] = 0x9₄ ? %ymm2[79:72] : %ymm3[123:120] = 0x8₄ ? %ymm2[71:64] : %ymm3[123:120] = 0x7₄ ? %ymm2[63:56] : %ymm3[123:120] = 0x6₄ ? %ymm2[55:48] : %ymm3[123:120] = 0x5₄ ? %ymm2[47:40] : %ymm3[123:120] = 0x4₄ ? %ymm2[39:32] : %ymm3[123:120] = 0x3₄ ? %ymm2[31:24] : %ymm3[123:120] = 0x2₄ ? %ymm2[23:16] : %ymm3[123:120] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[119:119] = 0x1₁ ? 0x0₈ : %ymm3[115:112] = 0xf₄ ? %ymm2[127:120] : %ymm3[115:112] = 0xe₄ ? %ymm2[119:112] : %ymm3[115:112] = 0xd₄ ? %ymm2[111:104] : %ymm3[115:112] = 0xc₄ ? %ymm2[103:96] : %ymm3[115:112] = 0xb₄ ? %ymm2[95:88] : %ymm3[115:112] = 0xa₄ ? %ymm2[87:80] : %ymm3[115:112] = 0x9₄ ? %ymm2[79:72] : %ymm3[115:112] = 0x8₄ ? %ymm2[71:64] : %ymm3[115:112] = 0x7₄ ? %ymm2[63:56] : %ymm3[115:112] = 0x6₄ ? %ymm2[55:48] : %ymm3[115:112] = 0x5₄ ? %ymm2[47:40] : %ymm3[115:112] = 0x4₄ ? %ymm2[39:32] : %ymm3[115:112] = 0x3₄ ? %ymm2[31:24] : %ymm3[115:112] = 0x2₄ ? %ymm2[23:16] : %ymm3[115:112] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[111:111] = 0x1₁ ? 0x0₈ : %ymm3[107:104] = 0xf₄ ? %ymm2[127:120] : %ymm3[107:104] = 0xe₄ ? %ymm2[119:112] : %ymm3[107:104] = 0xd₄ ? %ymm2[111:104] : %ymm3[107:104] = 0xc₄ ? %ymm2[103:96] : %ymm3[107:104] = 0xb₄ ? %ymm2[95:88] : %ymm3[107:104] = 0xa₄ ? %ymm2[87:80] : %ymm3[107:104] = 0x9₄ ? %ymm2[79:72] : %ymm3[107:104] = 0x8₄ ? %ymm2[71:64] : %ymm3[107:104] = 0x7₄ ? %ymm2[63:56] : %ymm3[107:104] = 0x6₄ ? %ymm2[55:48] : %ymm3[107:104] = 0x5₄ ? %ymm2[47:40] : %ymm3[107:104] = 0x4₄ ? %ymm2[39:32] : %ymm3[107:104] = 0x3₄ ? %ymm2[31:24] : %ymm3[107:104] = 0x2₄ ? %ymm2[23:16] : %ymm3[107:104] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[103:103] = 0x1₁ ? 0x0₈ : %ymm3[99:96] = 0xf₄ ? %ymm2[127:120] : %ymm3[99:96] = 0xe₄ ? %ymm2[119:112] : %ymm3[99:96] = 0xd₄ ? %ymm2[111:104] : %ymm3[99:96] = 0xc₄ ? %ymm2[103:96] : %ymm3[99:96] = 0xb₄ ? %ymm2[95:88] : %ymm3[99:96] = 0xa₄ ? %ymm2[87:80] : %ymm3[99:96] = 0x9₄ ? %ymm2[79:72] : %ymm3[99:96] = 0x8₄ ? %ymm2[71:64] : %ymm3[99:96] = 0x7₄ ? %ymm2[63:56] : %ymm3[99:96] = 0x6₄ ? %ymm2[55:48] : %ymm3[99:96] = 0x5₄ ? %ymm2[47:40] : %ymm3[99:96] = 0x4₄ ? %ymm2[39:32] : %ymm3[99:96] = 0x3₄ ? %ymm2[31:24] : %ymm3[99:96] = 0x2₄ ? %ymm2[23:16] : %ymm3[99:96] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[95:95] = 0x1₁ ? 0x0₈ : %ymm3[91:88] = 0xf₄ ? %ymm2[127:120] : %ymm3[91:88] = 0xe₄ ? %ymm2[119:112] : %ymm3[91:88] = 0xd₄ ? %ymm2[111:104] : %ymm3[91:88] = 0xc₄ ? %ymm2[103:96] : %ymm3[91:88] = 0xb₄ ? %ymm2[95:88] : %ymm3[91:88] = 0xa₄ ? %ymm2[87:80] : %ymm3[91:88] = 0x9₄ ? %ymm2[79:72] : %ymm3[91:88] = 0x8₄ ? %ymm2[71:64] : %ymm3[91:88] = 0x7₄ ? %ymm2[63:56] : %ymm3[91:88] = 0x6₄ ? %ymm2[55:48] : %ymm3[91:88] = 0x5₄ ? %ymm2[47:40] : %ymm3[91:88] = 0x4₄ ? %ymm2[39:32] : %ymm3[91:88] = 0x3₄ ? %ymm2[31:24] : %ymm3[91:88] = 0x2₄ ? %ymm2[23:16] : %ymm3[91:88] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[87:87] = 0x1₁ ? 0x0₈ : %ymm3[83:80] = 0xf₄ ? %ymm2[127:120] : %ymm3[83:80] = 0xe₄ ? %ymm2[119:112] : %ymm3[83:80] = 0xd₄ ? %ymm2[111:104] : %ymm3[83:80] = 0xc₄ ? %ymm2[103:96] : %ymm3[83:80] = 0xb₄ ? %ymm2[95:88] : %ymm3[83:80] = 0xa₄ ? %ymm2[87:80] : %ymm3[83:80] = 0x9₄ ? %ymm2[79:72] : %ymm3[83:80] = 0x8₄ ? %ymm2[71:64] : %ymm3[83:80] = 0x7₄ ? %ymm2[63:56] : %ymm3[83:80] = 0x6₄ ? %ymm2[55:48] : %ymm3[83:80] = 0x5₄ ? %ymm2[47:40] : %ymm3[83:80] = 0x4₄ ? %ymm2[39:32] : %ymm3[83:80] = 0x3₄ ? %ymm2[31:24] : %ymm3[83:80] = 0x2₄ ? %ymm2[23:16] : %ymm3[83:80] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[79:79] = 0x1₁ ? 0x0₈ : %ymm3[75:72] = 0xf₄ ? %ymm2[127:120] : %ymm3[75:72] = 0xe₄ ? %ymm2[119:112] : %ymm3[75:72] = 0xd₄ ? %ymm2[111:104] : %ymm3[75:72] = 0xc₄ ? %ymm2[103:96] : %ymm3[75:72] = 0xb₄ ? %ymm2[95:88] : %ymm3[75:72] = 0xa₄ ? %ymm2[87:80] : %ymm3[75:72] = 0x9₄ ? %ymm2[79:72] : %ymm3[75:72] = 0x8₄ ? %ymm2[71:64] : %ymm3[75:72] = 0x7₄ ? %ymm2[63:56] : %ymm3[75:72] = 0x6₄ ? %ymm2[55:48] : %ymm3[75:72] = 0x5₄ ? %ymm2[47:40] : %ymm3[75:72] = 0x4₄ ? %ymm2[39:32] : %ymm3[75:72] = 0x3₄ ? %ymm2[31:24] : %ymm3[75:72] = 0x2₄ ? %ymm2[23:16] : %ymm3[75:72] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[71:71] = 0x1₁ ? 0x0₈ : %ymm3[67:64] = 0xf₄ ? %ymm2[127:120] : %ymm3[67:64] = 0xe₄ ? %ymm2[119:112] : %ymm3[67:64] = 0xd₄ ? %ymm2[111:104] : %ymm3[67:64] = 0xc₄ ? %ymm2[103:96] : %ymm3[67:64] = 0xb₄ ? %ymm2[95:88] : %ymm3[67:64] = 0xa₄ ? %ymm2[87:80] : %ymm3[67:64] = 0x9₄ ? %ymm2[79:72] : %ymm3[67:64] = 0x8₄ ? %ymm2[71:64] : %ymm3[67:64] = 0x7₄ ? %ymm2[63:56] : %ymm3[67:64] = 0x6₄ ? %ymm2[55:48] : %ymm3[67:64] = 0x5₄ ? %ymm2[47:40] : %ymm3[67:64] = 0x4₄ ? %ymm2[39:32] : %ymm3[67:64] = 0x3₄ ? %ymm2[31:24] : %ymm3[67:64] = 0x2₄ ? %ymm2[23:16] : %ymm3[67:64] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[63:63] = 0x1₁ ? 0x0₈ : %ymm3[59:56] = 0xf₄ ? %ymm2[127:120] : %ymm3[59:56] = 0xe₄ ? %ymm2[119:112] : %ymm3[59:56] = 0xd₄ ? %ymm2[111:104] : %ymm3[59:56] = 0xc₄ ? %ymm2[103:96] : %ymm3[59:56] = 0xb₄ ? %ymm2[95:88] : %ymm3[59:56] = 0xa₄ ? %ymm2[87:80] : %ymm3[59:56] = 0x9₄ ? %ymm2[79:72] : %ymm3[59:56] = 0x8₄ ? %ymm2[71:64] : %ymm3[59:56] = 0x7₄ ? %ymm2[63:56] : %ymm3[59:56] = 0x6₄ ? %ymm2[55:48] : %ymm3[59:56] = 0x5₄ ? %ymm2[47:40] : %ymm3[59:56] = 0x4₄ ? %ymm2[39:32] : %ymm3[59:56] = 0x3₄ ? %ymm2[31:24] : %ymm3[59:56] = 0x2₄ ? %ymm2[23:16] : %ymm3[59:56] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[55:55] = 0x1₁ ? 0x0₈ : %ymm3[51:48] = 0xf₄ ? %ymm2[127:120] : %ymm3[51:48] = 0xe₄ ? %ymm2[119:112] : %ymm3[51:48] = 0xd₄ ? %ymm2[111:104] : %ymm3[51:48] = 0xc₄ ? %ymm2[103:96] : %ymm3[51:48] = 0xb₄ ? %ymm2[95:88] : %ymm3[51:48] = 0xa₄ ? %ymm2[87:80] : %ymm3[51:48] = 0x9₄ ? %ymm2[79:72] : %ymm3[51:48] = 0x8₄ ? %ymm2[71:64] : %ymm3[51:48] = 0x7₄ ? %ymm2[63:56] : %ymm3[51:48] = 0x6₄ ? %ymm2[55:48] : %ymm3[51:48] = 0x5₄ ? %ymm2[47:40] : %ymm3[51:48] = 0x4₄ ? %ymm2[39:32] : %ymm3[51:48] = 0x3₄ ? %ymm2[31:24] : %ymm3[51:48] = 0x2₄ ? %ymm2[23:16] : %ymm3[51:48] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[47:47] = 0x1₁ ? 0x0₈ : %ymm3[43:40] = 0xf₄ ? %ymm2[127:120] : %ymm3[43:40] = 0xe₄ ? %ymm2[119:112] : %ymm3[43:40] = 0xd₄ ? %ymm2[111:104] : %ymm3[43:40] = 0xc₄ ? %ymm2[103:96] : %ymm3[43:40] = 0xb₄ ? %ymm2[95:88] : %ymm3[43:40] = 0xa₄ ? %ymm2[87:80] : %ymm3[43:40] = 0x9₄ ? %ymm2[79:72] : %ymm3[43:40] = 0x8₄ ? %ymm2[71:64] : %ymm3[43:40] = 0x7₄ ? %ymm2[63:56] : %ymm3[43:40] = 0x6₄ ? %ymm2[55:48] : %ymm3[43:40] = 0x5₄ ? %ymm2[47:40] : %ymm3[43:40] = 0x4₄ ? %ymm2[39:32] : %ymm3[43:40] = 0x3₄ ? %ymm2[31:24] : %ymm3[43:40] = 0x2₄ ? %ymm2[23:16] : %ymm3[43:40] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[39:39] = 0x1₁ ? 0x0₈ : %ymm3[35:32] = 0xf₄ ? %ymm2[127:120] : %ymm3[35:32] = 0xe₄ ? %ymm2[119:112] : %ymm3[35:32] = 0xd₄ ? %ymm2[111:104] : %ymm3[35:32] = 0xc₄ ? %ymm2[103:96] : %ymm3[35:32] = 0xb₄ ? %ymm2[95:88] : %ymm3[35:32] = 0xa₄ ? %ymm2[87:80] : %ymm3[35:32] = 0x9₄ ? %ymm2[79:72] : %ymm3[35:32] = 0x8₄ ? %ymm2[71:64] : %ymm3[35:32] = 0x7₄ ? %ymm2[63:56] : %ymm3[35:32] = 0x6₄ ? %ymm2[55:48] : %ymm3[35:32] = 0x5₄ ? %ymm2[47:40] : %ymm3[35:32] = 0x4₄ ? %ymm2[39:32] : %ymm3[35:32] = 0x3₄ ? %ymm2[31:24] : %ymm3[35:32] = 0x2₄ ? %ymm2[23:16] : %ymm3[35:32] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[31:31] = 0x1₁ ? 0x0₈ : %ymm3[27:24] = 0xf₄ ? %ymm2[127:120] : %ymm3[27:24] = 0xe₄ ? %ymm2[119:112] : %ymm3[27:24] = 0xd₄ ? %ymm2[111:104] : %ymm3[27:24] = 0xc₄ ? %ymm2[103:96] : %ymm3[27:24] = 0xb₄ ? %ymm2[95:88] : %ymm3[27:24] = 0xa₄ ? %ymm2[87:80] : %ymm3[27:24] = 0x9₄ ? %ymm2[79:72] : %ymm3[27:24] = 0x8₄ ? %ymm2[71:64] : %ymm3[27:24] = 0x7₄ ? %ymm2[63:56] : %ymm3[27:24] = 0x6₄ ? %ymm2[55:48] : %ymm3[27:24] = 0x5₄ ? %ymm2[47:40] : %ymm3[27:24] = 0x4₄ ? %ymm2[39:32] : %ymm3[27:24] = 0x3₄ ? %ymm2[31:24] : %ymm3[27:24] = 0x2₄ ? %ymm2[23:16] : %ymm3[27:24] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[23:23] = 0x1₁ ? 0x0₈ : %ymm3[19:16] = 0xf₄ ? %ymm2[127:120] : %ymm3[19:16] = 0xe₄ ? %ymm2[119:112] : %ymm3[19:16] = 0xd₄ ? %ymm2[111:104] : %ymm3[19:16] = 0xc₄ ? %ymm2[103:96] : %ymm3[19:16] = 0xb₄ ? %ymm2[95:88] : %ymm3[19:16] = 0xa₄ ? %ymm2[87:80] : %ymm3[19:16] = 0x9₄ ? %ymm2[79:72] : %ymm3[19:16] = 0x8₄ ? %ymm2[71:64] : %ymm3[19:16] = 0x7₄ ? %ymm2[63:56] : %ymm3[19:16] = 0x6₄ ? %ymm2[55:48] : %ymm3[19:16] = 0x5₄ ? %ymm2[47:40] : %ymm3[19:16] = 0x4₄ ? %ymm2[39:32] : %ymm3[19:16] = 0x3₄ ? %ymm2[31:24] : %ymm3[19:16] = 0x2₄ ? %ymm2[23:16] : %ymm3[19:16] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ ((%ymm3[15:15] = 0x1₁ ? 0x0₈ : %ymm3[11:8] = 0xf₄ ? %ymm2[127:120] : %ymm3[11:8] = 0xe₄ ? %ymm2[119:112] : %ymm3[11:8] = 0xd₄ ? %ymm2[111:104] : %ymm3[11:8] = 0xc₄ ? %ymm2[103:96] : %ymm3[11:8] = 0xb₄ ? %ymm2[95:88] : %ymm3[11:8] = 0xa₄ ? %ymm2[87:80] : %ymm3[11:8] = 0x9₄ ? %ymm2[79:72] : %ymm3[11:8] = 0x8₄ ? %ymm2[71:64] : %ymm3[11:8] = 0x7₄ ? %ymm2[63:56] : %ymm3[11:8] = 0x6₄ ? %ymm2[55:48] : %ymm3[11:8] = 0x5₄ ? %ymm2[47:40] : %ymm3[11:8] = 0x4₄ ? %ymm2[39:32] : %ymm3[11:8] = 0x3₄ ? %ymm2[31:24] : %ymm3[11:8] = 0x2₄ ? %ymm2[23:16] : %ymm3[11:8] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0]) ∘ (%ymm3[7:7] = 0x1₁ ? 0x0₈ : %ymm3[3:0] = 0xf₄ ? %ymm2[127:120] : %ymm3[3:0] = 0xe₄ ? %ymm2[119:112] : %ymm3[3:0] = 0xd₄ ? %ymm2[111:104] : %ymm3[3:0] = 0xc₄ ? %ymm2[103:96] : %ymm3[3:0] = 0xb₄ ? %ymm2[95:88] : %ymm3[3:0] = 0xa₄ ? %ymm2[87:80] : %ymm3[3:0] = 0x9₄ ? %ymm2[79:72] : %ymm3[3:0] = 0x8₄ ? %ymm2[71:64] : %ymm3[3:0] = 0x7₄ ? %ymm2[63:56] : %ymm3[3:0] = 0x6₄ ? %ymm2[55:48] : %ymm3[3:0] = 0x5₄ ? %ymm2[47:40] : %ymm3[3:0] = 0x4₄ ? %ymm2[39:32] : %ymm3[3:0] = 0x3₄ ? %ymm2[31:24] : %ymm3[3:0] = 0x2₄ ? %ymm2[23:16] : %ymm3[3:0] = 0x1₄ ? %ymm2[15:8] : %ymm2[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


959> vpsignb_xmm_xmm_xmm (vpsignb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsignb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsignb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[127:120] > 0x0₈ ? %ymm2[127:120] : %ymm3[127:120] = 0x0₈ ? 0x0₈ : -%ymm2[127:120]) ∘ ((%ymm3[119:112] > 0x0₈ ? %ymm2[119:112] : %ymm3[119:112] = 0x0₈ ? 0x0₈ : -%ymm2[119:112]) ∘ ((%ymm3[111:104] > 0x0₈ ? %ymm2[111:104] : %ymm3[111:104] = 0x0₈ ? 0x0₈ : -%ymm2[111:104]) ∘ ((%ymm3[103:96] > 0x0₈ ? %ymm2[103:96] : %ymm3[103:96] = 0x0₈ ? 0x0₈ : -%ymm2[103:96]) ∘ ((%ymm3[95:88] > 0x0₈ ? %ymm2[95:88] : %ymm3[95:88] = 0x0₈ ? 0x0₈ : -%ymm2[95:88]) ∘ ((%ymm3[87:80] > 0x0₈ ? %ymm2[87:80] : %ymm3[87:80] = 0x0₈ ? 0x0₈ : -%ymm2[87:80]) ∘ ((%ymm3[79:72] > 0x0₈ ? %ymm2[79:72] : %ymm3[79:72] = 0x0₈ ? 0x0₈ : -%ymm2[79:72]) ∘ ((%ymm3[71:64] > 0x0₈ ? %ymm2[71:64] : %ymm3[71:64] = 0x0₈ ? 0x0₈ : -%ymm2[71:64]) ∘ ((%ymm3[63:56] > 0x0₈ ? %ymm2[63:56] : %ymm3[63:56] = 0x0₈ ? 0x0₈ : -%ymm2[63:56]) ∘ ((%ymm3[55:48] > 0x0₈ ? %ymm2[55:48] : %ymm3[55:48] = 0x0₈ ? 0x0₈ : -%ymm2[55:48]) ∘ ((%ymm3[47:40] > 0x0₈ ? %ymm2[47:40] : %ymm3[47:40] = 0x0₈ ? 0x0₈ : -%ymm2[47:40]) ∘ ((%ymm3[39:32] > 0x0₈ ? %ymm2[39:32] : %ymm3[39:32] = 0x0₈ ? 0x0₈ : -%ymm2[39:32]) ∘ ((%ymm3[31:24] > 0x0₈ ? %ymm2[31:24] : %ymm3[31:24] = 0x0₈ ? 0x0₈ : -%ymm2[31:24]) ∘ ((%ymm3[23:16] > 0x0₈ ? %ymm2[23:16] : %ymm3[23:16] = 0x0₈ ? 0x0₈ : -%ymm2[23:16]) ∘ ((%ymm3[15:8] > 0x0₈ ? %ymm2[15:8] : %ymm3[15:8] = 0x0₈ ? 0x0₈ : -%ymm2[15:8]) ∘ (%ymm3[7:0] > 0x0₈ ? %ymm2[7:0] : %ymm3[7:0] = 0x0₈ ? 0x0₈ : -%ymm2[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


960> vpsignd_xmm_xmm_xmm (vpsignd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsignd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsignd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[127:96] > 0x0₃₂ ? %ymm2[127:96] : %ymm3[127:96] = 0x0₃₂ ? 0x0₃₂ : -%ymm2[127:96]) ∘ ((%ymm3[95:64] > 0x0₃₂ ? %ymm2[95:64] : %ymm3[95:64] = 0x0₃₂ ? 0x0₃₂ : -%ymm2[95:64]) ∘ ((%ymm3[63:32] > 0x0₃₂ ? %ymm2[63:32] : %ymm3[63:32] = 0x0₃₂ ? 0x0₃₂ : -%ymm2[63:32]) ∘ (%ymm3[31:0] > 0x0₃₂ ? %ymm2[31:0] : %ymm3[31:0] = 0x0₃₂ ? 0x0₃₂ : -%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


961> vpsignw_xmm_xmm_xmm (vpsignw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsignw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsignw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm3[127:112] > 0x0₁₆ ? %ymm2[127:112] : %ymm3[127:112] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[127:112]) ∘ ((%ymm3[111:96] > 0x0₁₆ ? %ymm2[111:96] : %ymm3[111:96] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[111:96]) ∘ ((%ymm3[95:80] > 0x0₁₆ ? %ymm2[95:80] : %ymm3[95:80] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[95:80]) ∘ ((%ymm3[79:64] > 0x0₁₆ ? %ymm2[79:64] : %ymm3[79:64] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[79:64]) ∘ ((%ymm3[63:48] > 0x0₁₆ ? %ymm2[63:48] : %ymm3[63:48] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[63:48]) ∘ ((%ymm3[47:32] > 0x0₁₆ ? %ymm2[47:32] : %ymm3[47:32] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[47:32]) ∘ ((%ymm3[31:16] > 0x0₁₆ ? %ymm2[31:16] : %ymm3[31:16] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[31:16]) ∘ (%ymm3[15:0] > 0x0₁₆ ? %ymm2[15:0] : %ymm3[15:0] = 0x0₁₆ ? 0x0₁₆ : -%ymm2[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


962> vpslld_xmm_xmm_xmm (vpslld %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpslld %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpslld %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] << %ymm3[127:96]) ∘ ((%ymm2[95:64] << %ymm3[95:64]) ∘ ((%ymm2[63:32] << %ymm3[63:32]) ∘ (%ymm2[31:0] << %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


963> vpslld_ymm_ymm_xmm (vpslld %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpslld %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpslld %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] << %ymm3[127:96]) ∘ ((%ymm2[95:64] << %ymm3[95:64]) ∘ ((%ymm2[63:32] << %ymm3[63:32]) ∘ (%ymm2[31:0] << %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


964> vpsllq_xmm_xmm_xmm (vpsllq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] << %ymm3[127:64]) ∘ (%ymm2[63:0] << %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


965> vpsllq_ymm_ymm_xmm (vpsllq %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllq %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllq %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] << %ymm3[127:64]) ∘ (%ymm2[63:0] << %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


966> vpsllvd_xmm_xmm_xmm (vpsllvd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllvd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllvd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] << %ymm3[127:96]) ∘ ((%ymm2[95:64] << %ymm3[95:64]) ∘ ((%ymm2[63:32] << %ymm3[63:32]) ∘ (%ymm2[31:0] << %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


967> vpsllvd_ymm_ymm_ymm (vpsllvd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllvd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllvd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] << %ymm3[255:224]) ∘ ((%ymm2[223:192] << %ymm3[223:192]) ∘ ((%ymm2[191:160] << %ymm3[191:160]) ∘ ((%ymm2[159:128] << %ymm3[159:128]) ∘ ((%ymm2[127:96] << %ymm3[127:96]) ∘ ((%ymm2[95:64] << %ymm3[95:64]) ∘ ((%ymm2[63:32] << %ymm3[63:32]) ∘ (%ymm2[31:0] << %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


968> vpsllvq_xmm_xmm_xmm (vpsllvq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllvq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllvq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] << %ymm3[127:64]) ∘ (%ymm2[63:0] << %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


969> vpsllvq_ymm_ymm_ymm (vpsllvq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllvq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllvq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:192] << %ymm3[255:192]) ∘ ((%ymm2[191:128] << %ymm3[191:128]) ∘ ((%ymm2[127:64] << %ymm3[127:64]) ∘ (%ymm2[63:0] << %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


970> vpsllw_xmm_xmm_xmm (vpsllw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] << %ymm3[127:112]) ∘ ((%ymm2[111:96] << %ymm3[111:96]) ∘ ((%ymm2[95:80] << %ymm3[95:80]) ∘ ((%ymm2[79:64] << %ymm3[79:64]) ∘ ((%ymm2[63:48] << %ymm3[63:48]) ∘ ((%ymm2[47:32] << %ymm3[47:32]) ∘ ((%ymm2[31:16] << %ymm3[31:16]) ∘ (%ymm2[15:0] << %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


971> vpsllw_ymm_ymm_xmm (vpsllw %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsllw %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsllw %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] << %ymm3[127:112]) ∘ ((%ymm2[111:96] << %ymm3[111:96]) ∘ ((%ymm2[95:80] << %ymm3[95:80]) ∘ ((%ymm2[79:64] << %ymm3[79:64]) ∘ ((%ymm2[63:48] << %ymm3[63:48]) ∘ ((%ymm2[47:32] << %ymm3[47:32]) ∘ ((%ymm2[31:16] << %ymm3[31:16]) ∘ (%ymm2[15:0] << %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


972> vpsrad_xmm_xmm_xmm (vpsrad %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrad %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsrad_xmm_xmm_xmm:vpsrad %xmm3, %xmm2, %xmm1

973> vpsrad_ymm_ymm_xmm (vpsrad %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrad %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsrad_ymm_ymm_xmm:vpsrad %xmm3, %ymm2, %ymm1

974> vpsravd_xmm_xmm_xmm (vpsravd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsravd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsravd_xmm_xmm_xmm:vpsravd %xmm3, %xmm2, %xmm1

975> vpsravd_ymm_ymm_ymm (vpsravd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsravd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsravd_ymm_ymm_ymm:vpsravd %ymm3, %ymm2, %ymm1

976> vpsraw_xmm_xmm_xmm (vpsraw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsraw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsraw_xmm_xmm_xmm:vpsraw %xmm3, %xmm2, %xmm1

977> vpsraw_ymm_ymm_xmm (vpsraw %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsraw %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vpsraw_ymm_ymm_xmm:vpsraw %xmm3, %ymm2, %ymm1

978> vpsrld_xmm_xmm_xmm (vpsrld %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrld %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrld %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] >> %ymm3[127:96]) ∘ ((%ymm2[95:64] >> %ymm3[95:64]) ∘ ((%ymm2[63:32] >> %ymm3[63:32]) ∘ (%ymm2[31:0] >> %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


979> vpsrld_ymm_ymm_xmm (vpsrld %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrld %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrld %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] >> %ymm3[127:96]) ∘ ((%ymm2[95:64] >> %ymm3[95:64]) ∘ ((%ymm2[63:32] >> %ymm3[63:32]) ∘ (%ymm2[31:0] >> %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


980> vpsrlq_xmm_xmm_xmm (vpsrlq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] >> %ymm3[127:64]) ∘ (%ymm2[63:0] >> %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


981> vpsrlq_ymm_ymm_xmm (vpsrlq %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlq %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlq %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] >> %ymm3[127:64]) ∘ (%ymm2[63:0] >> %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


982> vpsrlvd_xmm_xmm_xmm (vpsrlvd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlvd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlvd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] >> %ymm3[127:96]) ∘ ((%ymm2[95:64] >> %ymm3[95:64]) ∘ ((%ymm2[63:32] >> %ymm3[63:32]) ∘ (%ymm2[31:0] >> %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


983> vpsrlvd_ymm_ymm_ymm (vpsrlvd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlvd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlvd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] >> %ymm3[255:224]) ∘ ((%ymm2[223:192] >> %ymm3[223:192]) ∘ ((%ymm2[191:160] >> %ymm3[191:160]) ∘ ((%ymm2[159:128] >> %ymm3[159:128]) ∘ ((%ymm2[127:96] >> %ymm3[127:96]) ∘ ((%ymm2[95:64] >> %ymm3[95:64]) ∘ ((%ymm2[63:32] >> %ymm3[63:32]) ∘ (%ymm2[31:0] >> %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


984> vpsrlvq_xmm_xmm_xmm (vpsrlvq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlvq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlvq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] >> %ymm3[127:64]) ∘ (%ymm2[63:0] >> %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


985> vpsrlvq_ymm_ymm_ymm (vpsrlvq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlvq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlvq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:192] >> %ymm3[255:192]) ∘ ((%ymm2[191:128] >> %ymm3[191:128]) ∘ ((%ymm2[127:64] >> %ymm3[127:64]) ∘ (%ymm2[63:0] >> %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


986> vpsrlw_xmm_xmm_xmm (vpsrlw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] >> %ymm3[127:112]) ∘ ((%ymm2[111:96] >> %ymm3[111:96]) ∘ ((%ymm2[95:80] >> %ymm3[95:80]) ∘ ((%ymm2[79:64] >> %ymm3[79:64]) ∘ ((%ymm2[63:48] >> %ymm3[63:48]) ∘ ((%ymm2[47:32] >> %ymm3[47:32]) ∘ ((%ymm2[31:16] >> %ymm3[31:16]) ∘ (%ymm2[15:0] >> %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


987> vpsrlw_ymm_ymm_xmm (vpsrlw %xmm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsrlw %xmm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsrlw %xmm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %xmm3 }
  must read:       { %ymm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] >> %ymm3[127:112]) ∘ ((%ymm2[111:96] >> %ymm3[111:96]) ∘ ((%ymm2[95:80] >> %ymm3[95:80]) ∘ ((%ymm2[79:64] >> %ymm3[79:64]) ∘ ((%ymm2[63:48] >> %ymm3[63:48]) ∘ ((%ymm2[47:32] >> %ymm3[47:32]) ∘ ((%ymm2[31:16] >> %ymm3[31:16]) ∘ (%ymm2[15:0] >> %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


988> vpsubb_xmm_xmm_xmm (vpsubb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:120] - %ymm3[127:120]) ∘ ((%ymm2[119:112] - %ymm3[119:112]) ∘ ((%ymm2[111:104] - %ymm3[111:104]) ∘ ((%ymm2[103:96] - %ymm3[103:96]) ∘ ((%ymm2[95:88] - %ymm3[95:88]) ∘ ((%ymm2[87:80] - %ymm3[87:80]) ∘ ((%ymm2[79:72] - %ymm3[79:72]) ∘ ((%ymm2[71:64] - %ymm3[71:64]) ∘ ((%ymm2[63:56] - %ymm3[63:56]) ∘ ((%ymm2[55:48] - %ymm3[55:48]) ∘ ((%ymm2[47:40] - %ymm3[47:40]) ∘ ((%ymm2[39:32] - %ymm3[39:32]) ∘ ((%ymm2[31:24] - %ymm3[31:24]) ∘ ((%ymm2[23:16] - %ymm3[23:16]) ∘ ((%ymm2[15:8] - %ymm3[15:8]) ∘ (%ymm2[7:0] - %ymm3[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


989> vpsubb_ymm_ymm_ymm (vpsubb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:248] - %ymm3[255:248]) ∘ ((%ymm2[247:240] - %ymm3[247:240]) ∘ ((%ymm2[239:232] - %ymm3[239:232]) ∘ ((%ymm2[231:224] - %ymm3[231:224]) ∘ ((%ymm2[223:216] - %ymm3[223:216]) ∘ ((%ymm2[215:208] - %ymm3[215:208]) ∘ ((%ymm2[207:200] - %ymm3[207:200]) ∘ ((%ymm2[199:192] - %ymm3[199:192]) ∘ ((%ymm2[191:184] - %ymm3[191:184]) ∘ ((%ymm2[183:176] - %ymm3[183:176]) ∘ ((%ymm2[175:168] - %ymm3[175:168]) ∘ ((%ymm2[167:160] - %ymm3[167:160]) ∘ ((%ymm2[159:152] - %ymm3[159:152]) ∘ ((%ymm2[151:144] - %ymm3[151:144]) ∘ ((%ymm2[143:136] - %ymm3[143:136]) ∘ ((%ymm2[135:128] - %ymm3[135:128]) ∘ ((%ymm2[127:120] - %ymm3[127:120]) ∘ ((%ymm2[119:112] - %ymm3[119:112]) ∘ ((%ymm2[111:104] - %ymm3[111:104]) ∘ ((%ymm2[103:96] - %ymm3[103:96]) ∘ ((%ymm2[95:88] - %ymm3[95:88]) ∘ ((%ymm2[87:80] - %ymm3[87:80]) ∘ ((%ymm2[79:72] - %ymm3[79:72]) ∘ ((%ymm2[71:64] - %ymm3[71:64]) ∘ ((%ymm2[63:56] - %ymm3[63:56]) ∘ ((%ymm2[55:48] - %ymm3[55:48]) ∘ ((%ymm2[47:40] - %ymm3[47:40]) ∘ ((%ymm2[39:32] - %ymm3[39:32]) ∘ ((%ymm2[31:24] - %ymm3[31:24]) ∘ ((%ymm2[23:16] - %ymm3[23:16]) ∘ ((%ymm2[15:8] - %ymm3[15:8]) ∘ (%ymm2[7:0] - %ymm3[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


990> vpsubd_xmm_xmm_xmm (vpsubd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:96] - %ymm3[127:96]) ∘ ((%ymm2[95:64] - %ymm3[95:64]) ∘ ((%ymm2[63:32] - %ymm3[63:32]) ∘ (%ymm2[31:0] - %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


991> vpsubd_ymm_ymm_ymm (vpsubd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:224] - %ymm3[255:224]) ∘ ((%ymm2[223:192] - %ymm3[223:192]) ∘ ((%ymm2[191:160] - %ymm3[191:160]) ∘ ((%ymm2[159:128] - %ymm3[159:128]) ∘ ((%ymm2[127:96] - %ymm3[127:96]) ∘ ((%ymm2[95:64] - %ymm3[95:64]) ∘ ((%ymm2[63:32] - %ymm3[63:32]) ∘ (%ymm2[31:0] - %ymm3[31:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


992> vpsubq_xmm_xmm_xmm (vpsubq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:64] - %ymm3[127:64]) ∘ (%ymm2[63:0] - %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


993> vpsubq_ymm_ymm_ymm (vpsubq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:192] - %ymm3[255:192]) ∘ ((%ymm2[191:128] - %ymm3[191:128]) ∘ ((%ymm2[127:64] - %ymm3[127:64]) ∘ (%ymm2[63:0] - %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


994> vpsubsb_xmm_xmm_xmm (vpsubsb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubsb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubsb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-10(%ymm2[127:120]) - sign-extend-10(%ymm3[127:120]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[127:120]) - sign-extend-10(%ymm3[127:120]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[127:120]) - sign-extend-10(%ymm3[127:120]))[7:0]) ∘ ((sign-extend-10(%ymm2[119:112]) - sign-extend-10(%ymm3[119:112]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[119:112]) - sign-extend-10(%ymm3[119:112]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[119:112]) - sign-extend-10(%ymm3[119:112]))[7:0]) ∘ ((sign-extend-10(%ymm2[111:104]) - sign-extend-10(%ymm3[111:104]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[111:104]) - sign-extend-10(%ymm3[111:104]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[111:104]) - sign-extend-10(%ymm3[111:104]))[7:0]) ∘ ((sign-extend-10(%ymm2[103:96]) - sign-extend-10(%ymm3[103:96]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[103:96]) - sign-extend-10(%ymm3[103:96]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[103:96]) - sign-extend-10(%ymm3[103:96]))[7:0]) ∘ ((sign-extend-10(%ymm2[95:88]) - sign-extend-10(%ymm3[95:88]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[95:88]) - sign-extend-10(%ymm3[95:88]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[95:88]) - sign-extend-10(%ymm3[95:88]))[7:0]) ∘ ((sign-extend-10(%ymm2[87:80]) - sign-extend-10(%ymm3[87:80]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[87:80]) - sign-extend-10(%ymm3[87:80]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[87:80]) - sign-extend-10(%ymm3[87:80]))[7:0]) ∘ ((sign-extend-10(%ymm2[79:72]) - sign-extend-10(%ymm3[79:72]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[79:72]) - sign-extend-10(%ymm3[79:72]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[79:72]) - sign-extend-10(%ymm3[79:72]))[7:0]) ∘ ((sign-extend-10(%ymm2[71:64]) - sign-extend-10(%ymm3[71:64]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[71:64]) - sign-extend-10(%ymm3[71:64]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[71:64]) - sign-extend-10(%ymm3[71:64]))[7:0]) ∘ ((sign-extend-10(%ymm2[63:56]) - sign-extend-10(%ymm3[63:56]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[63:56]) - sign-extend-10(%ymm3[63:56]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[63:56]) - sign-extend-10(%ymm3[63:56]))[7:0]) ∘ ((sign-extend-10(%ymm2[55:48]) - sign-extend-10(%ymm3[55:48]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[55:48]) - sign-extend-10(%ymm3[55:48]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[55:48]) - sign-extend-10(%ymm3[55:48]))[7:0]) ∘ ((sign-extend-10(%ymm2[47:40]) - sign-extend-10(%ymm3[47:40]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[47:40]) - sign-extend-10(%ymm3[47:40]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[47:40]) - sign-extend-10(%ymm3[47:40]))[7:0]) ∘ ((sign-extend-10(%ymm2[39:32]) - sign-extend-10(%ymm3[39:32]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[39:32]) - sign-extend-10(%ymm3[39:32]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[39:32]) - sign-extend-10(%ymm3[39:32]))[7:0]) ∘ ((sign-extend-10(%ymm2[31:24]) - sign-extend-10(%ymm3[31:24]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[31:24]) - sign-extend-10(%ymm3[31:24]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[31:24]) - sign-extend-10(%ymm3[31:24]))[7:0]) ∘ ((sign-extend-10(%ymm2[23:16]) - sign-extend-10(%ymm3[23:16]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[23:16]) - sign-extend-10(%ymm3[23:16]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[23:16]) - sign-extend-10(%ymm3[23:16]))[7:0]) ∘ ((sign-extend-10(%ymm2[15:8]) - sign-extend-10(%ymm3[15:8]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[15:8]) - sign-extend-10(%ymm3[15:8]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[15:8]) - sign-extend-10(%ymm3[15:8]))[7:0]) ∘ (sign-extend-10(%ymm2[7:0]) - sign-extend-10(%ymm3[7:0]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[7:0]) - sign-extend-10(%ymm3[7:0]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[7:0]) - sign-extend-10(%ymm3[7:0]))[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


995> vpsubsb_ymm_ymm_ymm (vpsubsb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubsb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubsb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (sign-extend-10(%ymm2[255:248]) - sign-extend-10(%ymm3[255:248]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[255:248]) - sign-extend-10(%ymm3[255:248]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[255:248]) - sign-extend-10(%ymm3[255:248]))[7:0]) ∘ ((sign-extend-10(%ymm2[247:240]) - sign-extend-10(%ymm3[247:240]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[247:240]) - sign-extend-10(%ymm3[247:240]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[247:240]) - sign-extend-10(%ymm3[247:240]))[7:0]) ∘ ((sign-extend-10(%ymm2[239:232]) - sign-extend-10(%ymm3[239:232]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[239:232]) - sign-extend-10(%ymm3[239:232]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[239:232]) - sign-extend-10(%ymm3[239:232]))[7:0]) ∘ ((sign-extend-10(%ymm2[231:224]) - sign-extend-10(%ymm3[231:224]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[231:224]) - sign-extend-10(%ymm3[231:224]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[231:224]) - sign-extend-10(%ymm3[231:224]))[7:0]) ∘ ((sign-extend-10(%ymm2[223:216]) - sign-extend-10(%ymm3[223:216]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[223:216]) - sign-extend-10(%ymm3[223:216]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[223:216]) - sign-extend-10(%ymm3[223:216]))[7:0]) ∘ ((sign-extend-10(%ymm2[215:208]) - sign-extend-10(%ymm3[215:208]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[215:208]) - sign-extend-10(%ymm3[215:208]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[215:208]) - sign-extend-10(%ymm3[215:208]))[7:0]) ∘ ((sign-extend-10(%ymm2[207:200]) - sign-extend-10(%ymm3[207:200]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[207:200]) - sign-extend-10(%ymm3[207:200]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[207:200]) - sign-extend-10(%ymm3[207:200]))[7:0]) ∘ ((sign-extend-10(%ymm2[199:192]) - sign-extend-10(%ymm3[199:192]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[199:192]) - sign-extend-10(%ymm3[199:192]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[199:192]) - sign-extend-10(%ymm3[199:192]))[7:0]) ∘ ((sign-extend-10(%ymm2[191:184]) - sign-extend-10(%ymm3[191:184]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[191:184]) - sign-extend-10(%ymm3[191:184]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[191:184]) - sign-extend-10(%ymm3[191:184]))[7:0]) ∘ ((sign-extend-10(%ymm2[183:176]) - sign-extend-10(%ymm3[183:176]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[183:176]) - sign-extend-10(%ymm3[183:176]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[183:176]) - sign-extend-10(%ymm3[183:176]))[7:0]) ∘ ((sign-extend-10(%ymm2[175:168]) - sign-extend-10(%ymm3[175:168]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[175:168]) - sign-extend-10(%ymm3[175:168]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[175:168]) - sign-extend-10(%ymm3[175:168]))[7:0]) ∘ ((sign-extend-10(%ymm2[167:160]) - sign-extend-10(%ymm3[167:160]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[167:160]) - sign-extend-10(%ymm3[167:160]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[167:160]) - sign-extend-10(%ymm3[167:160]))[7:0]) ∘ ((sign-extend-10(%ymm2[159:152]) - sign-extend-10(%ymm3[159:152]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[159:152]) - sign-extend-10(%ymm3[159:152]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[159:152]) - sign-extend-10(%ymm3[159:152]))[7:0]) ∘ ((sign-extend-10(%ymm2[151:144]) - sign-extend-10(%ymm3[151:144]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[151:144]) - sign-extend-10(%ymm3[151:144]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[151:144]) - sign-extend-10(%ymm3[151:144]))[7:0]) ∘ ((sign-extend-10(%ymm2[143:136]) - sign-extend-10(%ymm3[143:136]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[143:136]) - sign-extend-10(%ymm3[143:136]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[143:136]) - sign-extend-10(%ymm3[143:136]))[7:0]) ∘ ((sign-extend-10(%ymm2[135:128]) - sign-extend-10(%ymm3[135:128]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[135:128]) - sign-extend-10(%ymm3[135:128]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[135:128]) - sign-extend-10(%ymm3[135:128]))[7:0]) ∘ ((sign-extend-10(%ymm2[127:120]) - sign-extend-10(%ymm3[127:120]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[127:120]) - sign-extend-10(%ymm3[127:120]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[127:120]) - sign-extend-10(%ymm3[127:120]))[7:0]) ∘ ((sign-extend-10(%ymm2[119:112]) - sign-extend-10(%ymm3[119:112]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[119:112]) - sign-extend-10(%ymm3[119:112]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[119:112]) - sign-extend-10(%ymm3[119:112]))[7:0]) ∘ ((sign-extend-10(%ymm2[111:104]) - sign-extend-10(%ymm3[111:104]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[111:104]) - sign-extend-10(%ymm3[111:104]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[111:104]) - sign-extend-10(%ymm3[111:104]))[7:0]) ∘ ((sign-extend-10(%ymm2[103:96]) - sign-extend-10(%ymm3[103:96]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[103:96]) - sign-extend-10(%ymm3[103:96]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[103:96]) - sign-extend-10(%ymm3[103:96]))[7:0]) ∘ ((sign-extend-10(%ymm2[95:88]) - sign-extend-10(%ymm3[95:88]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[95:88]) - sign-extend-10(%ymm3[95:88]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[95:88]) - sign-extend-10(%ymm3[95:88]))[7:0]) ∘ ((sign-extend-10(%ymm2[87:80]) - sign-extend-10(%ymm3[87:80]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[87:80]) - sign-extend-10(%ymm3[87:80]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[87:80]) - sign-extend-10(%ymm3[87:80]))[7:0]) ∘ ((sign-extend-10(%ymm2[79:72]) - sign-extend-10(%ymm3[79:72]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[79:72]) - sign-extend-10(%ymm3[79:72]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[79:72]) - sign-extend-10(%ymm3[79:72]))[7:0]) ∘ ((sign-extend-10(%ymm2[71:64]) - sign-extend-10(%ymm3[71:64]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[71:64]) - sign-extend-10(%ymm3[71:64]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[71:64]) - sign-extend-10(%ymm3[71:64]))[7:0]) ∘ ((sign-extend-10(%ymm2[63:56]) - sign-extend-10(%ymm3[63:56]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[63:56]) - sign-extend-10(%ymm3[63:56]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[63:56]) - sign-extend-10(%ymm3[63:56]))[7:0]) ∘ ((sign-extend-10(%ymm2[55:48]) - sign-extend-10(%ymm3[55:48]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[55:48]) - sign-extend-10(%ymm3[55:48]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[55:48]) - sign-extend-10(%ymm3[55:48]))[7:0]) ∘ ((sign-extend-10(%ymm2[47:40]) - sign-extend-10(%ymm3[47:40]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[47:40]) - sign-extend-10(%ymm3[47:40]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[47:40]) - sign-extend-10(%ymm3[47:40]))[7:0]) ∘ ((sign-extend-10(%ymm2[39:32]) - sign-extend-10(%ymm3[39:32]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[39:32]) - sign-extend-10(%ymm3[39:32]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[39:32]) - sign-extend-10(%ymm3[39:32]))[7:0]) ∘ ((sign-extend-10(%ymm2[31:24]) - sign-extend-10(%ymm3[31:24]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[31:24]) - sign-extend-10(%ymm3[31:24]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[31:24]) - sign-extend-10(%ymm3[31:24]))[7:0]) ∘ ((sign-extend-10(%ymm2[23:16]) - sign-extend-10(%ymm3[23:16]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[23:16]) - sign-extend-10(%ymm3[23:16]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[23:16]) - sign-extend-10(%ymm3[23:16]))[7:0]) ∘ ((sign-extend-10(%ymm2[15:8]) - sign-extend-10(%ymm3[15:8]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[15:8]) - sign-extend-10(%ymm3[15:8]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[15:8]) - sign-extend-10(%ymm3[15:8]))[7:0]) ∘ (sign-extend-10(%ymm2[7:0]) - sign-extend-10(%ymm3[7:0]) > 0x7f₁₀ ? 0x7f₈ : sign-extend-10(%ymm2[7:0]) - sign-extend-10(%ymm3[7:0]) < 0xffffffffffffff80₁₀ ? 0x80₈ : (sign-extend-10(%ymm2[7:0]) - sign-extend-10(%ymm3[7:0]))[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


996> vpsubsw_xmm_xmm_xmm (vpsubsw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubsw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubsw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((sign-extend-18(%ymm2[127:112]) - sign-extend-18(%ymm3[127:112]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[127:112]) - sign-extend-18(%ymm3[127:112]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[127:112]) - sign-extend-18(%ymm3[127:112]))[15:0]) ∘ ((sign-extend-18(%ymm2[111:96]) - sign-extend-18(%ymm3[111:96]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[111:96]) - sign-extend-18(%ymm3[111:96]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[111:96]) - sign-extend-18(%ymm3[111:96]))[15:0]) ∘ ((sign-extend-18(%ymm2[95:80]) - sign-extend-18(%ymm3[95:80]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[95:80]) - sign-extend-18(%ymm3[95:80]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[95:80]) - sign-extend-18(%ymm3[95:80]))[15:0]) ∘ ((sign-extend-18(%ymm2[79:64]) - sign-extend-18(%ymm3[79:64]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[79:64]) - sign-extend-18(%ymm3[79:64]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[79:64]) - sign-extend-18(%ymm3[79:64]))[15:0]) ∘ ((sign-extend-18(%ymm2[63:48]) - sign-extend-18(%ymm3[63:48]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[63:48]) - sign-extend-18(%ymm3[63:48]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[63:48]) - sign-extend-18(%ymm3[63:48]))[15:0]) ∘ ((sign-extend-18(%ymm2[47:32]) - sign-extend-18(%ymm3[47:32]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[47:32]) - sign-extend-18(%ymm3[47:32]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[47:32]) - sign-extend-18(%ymm3[47:32]))[15:0]) ∘ ((sign-extend-18(%ymm2[31:16]) - sign-extend-18(%ymm3[31:16]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[31:16]) - sign-extend-18(%ymm3[31:16]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[31:16]) - sign-extend-18(%ymm3[31:16]))[15:0]) ∘ (sign-extend-18(%ymm2[15:0]) - sign-extend-18(%ymm3[15:0]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[15:0]) - sign-extend-18(%ymm3[15:0]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[15:0]) - sign-extend-18(%ymm3[15:0]))[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


997> vpsubsw_ymm_ymm_ymm (vpsubsw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubsw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubsw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (sign-extend-18(%ymm2[255:240]) - sign-extend-18(%ymm3[255:240]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[255:240]) - sign-extend-18(%ymm3[255:240]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[255:240]) - sign-extend-18(%ymm3[255:240]))[15:0]) ∘ ((sign-extend-18(%ymm2[239:224]) - sign-extend-18(%ymm3[239:224]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[239:224]) - sign-extend-18(%ymm3[239:224]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[239:224]) - sign-extend-18(%ymm3[239:224]))[15:0]) ∘ ((sign-extend-18(%ymm2[223:208]) - sign-extend-18(%ymm3[223:208]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[223:208]) - sign-extend-18(%ymm3[223:208]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[223:208]) - sign-extend-18(%ymm3[223:208]))[15:0]) ∘ ((sign-extend-18(%ymm2[207:192]) - sign-extend-18(%ymm3[207:192]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[207:192]) - sign-extend-18(%ymm3[207:192]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[207:192]) - sign-extend-18(%ymm3[207:192]))[15:0]) ∘ ((sign-extend-18(%ymm2[191:176]) - sign-extend-18(%ymm3[191:176]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[191:176]) - sign-extend-18(%ymm3[191:176]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[191:176]) - sign-extend-18(%ymm3[191:176]))[15:0]) ∘ ((sign-extend-18(%ymm2[175:160]) - sign-extend-18(%ymm3[175:160]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[175:160]) - sign-extend-18(%ymm3[175:160]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[175:160]) - sign-extend-18(%ymm3[175:160]))[15:0]) ∘ ((sign-extend-18(%ymm2[159:144]) - sign-extend-18(%ymm3[159:144]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[159:144]) - sign-extend-18(%ymm3[159:144]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[159:144]) - sign-extend-18(%ymm3[159:144]))[15:0]) ∘ ((sign-extend-18(%ymm2[143:128]) - sign-extend-18(%ymm3[143:128]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[143:128]) - sign-extend-18(%ymm3[143:128]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[143:128]) - sign-extend-18(%ymm3[143:128]))[15:0]) ∘ ((sign-extend-18(%ymm2[127:112]) - sign-extend-18(%ymm3[127:112]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[127:112]) - sign-extend-18(%ymm3[127:112]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[127:112]) - sign-extend-18(%ymm3[127:112]))[15:0]) ∘ ((sign-extend-18(%ymm2[111:96]) - sign-extend-18(%ymm3[111:96]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[111:96]) - sign-extend-18(%ymm3[111:96]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[111:96]) - sign-extend-18(%ymm3[111:96]))[15:0]) ∘ ((sign-extend-18(%ymm2[95:80]) - sign-extend-18(%ymm3[95:80]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[95:80]) - sign-extend-18(%ymm3[95:80]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[95:80]) - sign-extend-18(%ymm3[95:80]))[15:0]) ∘ ((sign-extend-18(%ymm2[79:64]) - sign-extend-18(%ymm3[79:64]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[79:64]) - sign-extend-18(%ymm3[79:64]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[79:64]) - sign-extend-18(%ymm3[79:64]))[15:0]) ∘ ((sign-extend-18(%ymm2[63:48]) - sign-extend-18(%ymm3[63:48]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[63:48]) - sign-extend-18(%ymm3[63:48]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[63:48]) - sign-extend-18(%ymm3[63:48]))[15:0]) ∘ ((sign-extend-18(%ymm2[47:32]) - sign-extend-18(%ymm3[47:32]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[47:32]) - sign-extend-18(%ymm3[47:32]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[47:32]) - sign-extend-18(%ymm3[47:32]))[15:0]) ∘ ((sign-extend-18(%ymm2[31:16]) - sign-extend-18(%ymm3[31:16]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[31:16]) - sign-extend-18(%ymm3[31:16]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[31:16]) - sign-extend-18(%ymm3[31:16]))[15:0]) ∘ (sign-extend-18(%ymm2[15:0]) - sign-extend-18(%ymm3[15:0]) > 0x7fff₁₈ ? 0x7fff₁₆ : sign-extend-18(%ymm2[15:0]) - sign-extend-18(%ymm3[15:0]) < 0xffffffffffff8000₁₈ ? 0x8000₁₆ : (sign-extend-18(%ymm2[15:0]) - sign-extend-18(%ymm3[15:0]))[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


998> vpsubusb_xmm_xmm_xmm (vpsubusb %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubusb %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubusb %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₂ ∘ %ymm2[127:120] - 0x0₂ ∘ %ymm3[127:120] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[127:120] - 0x0₂ ∘ %ymm3[127:120] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[127:120] - 0x0₂ ∘ %ymm3[127:120])[7:0]) ∘ ((0x0₂ ∘ %ymm2[119:112] - 0x0₂ ∘ %ymm3[119:112] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[119:112] - 0x0₂ ∘ %ymm3[119:112] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[119:112] - 0x0₂ ∘ %ymm3[119:112])[7:0]) ∘ ((0x0₂ ∘ %ymm2[111:104] - 0x0₂ ∘ %ymm3[111:104] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[111:104] - 0x0₂ ∘ %ymm3[111:104] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[111:104] - 0x0₂ ∘ %ymm3[111:104])[7:0]) ∘ ((0x0₂ ∘ %ymm2[103:96] - 0x0₂ ∘ %ymm3[103:96] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[103:96] - 0x0₂ ∘ %ymm3[103:96] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[103:96] - 0x0₂ ∘ %ymm3[103:96])[7:0]) ∘ ((0x0₂ ∘ %ymm2[95:88] - 0x0₂ ∘ %ymm3[95:88] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[95:88] - 0x0₂ ∘ %ymm3[95:88] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[95:88] - 0x0₂ ∘ %ymm3[95:88])[7:0]) ∘ ((0x0₂ ∘ %ymm2[87:80] - 0x0₂ ∘ %ymm3[87:80] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[87:80] - 0x0₂ ∘ %ymm3[87:80] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[87:80] - 0x0₂ ∘ %ymm3[87:80])[7:0]) ∘ ((0x0₂ ∘ %ymm2[79:72] - 0x0₂ ∘ %ymm3[79:72] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[79:72] - 0x0₂ ∘ %ymm3[79:72] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[79:72] - 0x0₂ ∘ %ymm3[79:72])[7:0]) ∘ ((0x0₂ ∘ %ymm2[71:64] - 0x0₂ ∘ %ymm3[71:64] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[71:64] - 0x0₂ ∘ %ymm3[71:64] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[71:64] - 0x0₂ ∘ %ymm3[71:64])[7:0]) ∘ ((0x0₂ ∘ %ymm2[63:56] - 0x0₂ ∘ %ymm3[63:56] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[63:56] - 0x0₂ ∘ %ymm3[63:56] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[63:56] - 0x0₂ ∘ %ymm3[63:56])[7:0]) ∘ ((0x0₂ ∘ %ymm2[55:48] - 0x0₂ ∘ %ymm3[55:48] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[55:48] - 0x0₂ ∘ %ymm3[55:48] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[55:48] - 0x0₂ ∘ %ymm3[55:48])[7:0]) ∘ ((0x0₂ ∘ %ymm2[47:40] - 0x0₂ ∘ %ymm3[47:40] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[47:40] - 0x0₂ ∘ %ymm3[47:40] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[47:40] - 0x0₂ ∘ %ymm3[47:40])[7:0]) ∘ ((0x0₂ ∘ %ymm2[39:32] - 0x0₂ ∘ %ymm3[39:32] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[39:32] - 0x0₂ ∘ %ymm3[39:32] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[39:32] - 0x0₂ ∘ %ymm3[39:32])[7:0]) ∘ ((0x0₂ ∘ %ymm2[31:24] - 0x0₂ ∘ %ymm3[31:24] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[31:24] - 0x0₂ ∘ %ymm3[31:24] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[31:24] - 0x0₂ ∘ %ymm3[31:24])[7:0]) ∘ ((0x0₂ ∘ %ymm2[23:16] - 0x0₂ ∘ %ymm3[23:16] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[23:16] - 0x0₂ ∘ %ymm3[23:16] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[23:16] - 0x0₂ ∘ %ymm3[23:16])[7:0]) ∘ ((0x0₂ ∘ %ymm2[15:8] - 0x0₂ ∘ %ymm3[15:8] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[15:8] - 0x0₂ ∘ %ymm3[15:8] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[15:8] - 0x0₂ ∘ %ymm3[15:8])[7:0]) ∘ (0x0₂ ∘ %ymm2[7:0] - 0x0₂ ∘ %ymm3[7:0] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[7:0] - 0x0₂ ∘ %ymm3[7:0] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[7:0] - 0x0₂ ∘ %ymm3[7:0])[7:0]))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


999> vpsubusb_ymm_ymm_ymm (vpsubusb %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubusb %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubusb %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (0x0₂ ∘ %ymm2[255:248] - 0x0₂ ∘ %ymm3[255:248] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[255:248] - 0x0₂ ∘ %ymm3[255:248] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[255:248] - 0x0₂ ∘ %ymm3[255:248])[7:0]) ∘ ((0x0₂ ∘ %ymm2[247:240] - 0x0₂ ∘ %ymm3[247:240] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[247:240] - 0x0₂ ∘ %ymm3[247:240] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[247:240] - 0x0₂ ∘ %ymm3[247:240])[7:0]) ∘ ((0x0₂ ∘ %ymm2[239:232] - 0x0₂ ∘ %ymm3[239:232] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[239:232] - 0x0₂ ∘ %ymm3[239:232] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[239:232] - 0x0₂ ∘ %ymm3[239:232])[7:0]) ∘ ((0x0₂ ∘ %ymm2[231:224] - 0x0₂ ∘ %ymm3[231:224] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[231:224] - 0x0₂ ∘ %ymm3[231:224] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[231:224] - 0x0₂ ∘ %ymm3[231:224])[7:0]) ∘ ((0x0₂ ∘ %ymm2[223:216] - 0x0₂ ∘ %ymm3[223:216] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[223:216] - 0x0₂ ∘ %ymm3[223:216] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[223:216] - 0x0₂ ∘ %ymm3[223:216])[7:0]) ∘ ((0x0₂ ∘ %ymm2[215:208] - 0x0₂ ∘ %ymm3[215:208] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[215:208] - 0x0₂ ∘ %ymm3[215:208] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[215:208] - 0x0₂ ∘ %ymm3[215:208])[7:0]) ∘ ((0x0₂ ∘ %ymm2[207:200] - 0x0₂ ∘ %ymm3[207:200] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[207:200] - 0x0₂ ∘ %ymm3[207:200] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[207:200] - 0x0₂ ∘ %ymm3[207:200])[7:0]) ∘ ((0x0₂ ∘ %ymm2[199:192] - 0x0₂ ∘ %ymm3[199:192] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[199:192] - 0x0₂ ∘ %ymm3[199:192] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[199:192] - 0x0₂ ∘ %ymm3[199:192])[7:0]) ∘ ((0x0₂ ∘ %ymm2[191:184] - 0x0₂ ∘ %ymm3[191:184] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[191:184] - 0x0₂ ∘ %ymm3[191:184] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[191:184] - 0x0₂ ∘ %ymm3[191:184])[7:0]) ∘ ((0x0₂ ∘ %ymm2[183:176] - 0x0₂ ∘ %ymm3[183:176] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[183:176] - 0x0₂ ∘ %ymm3[183:176] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[183:176] - 0x0₂ ∘ %ymm3[183:176])[7:0]) ∘ ((0x0₂ ∘ %ymm2[175:168] - 0x0₂ ∘ %ymm3[175:168] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[175:168] - 0x0₂ ∘ %ymm3[175:168] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[175:168] - 0x0₂ ∘ %ymm3[175:168])[7:0]) ∘ ((0x0₂ ∘ %ymm2[167:160] - 0x0₂ ∘ %ymm3[167:160] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[167:160] - 0x0₂ ∘ %ymm3[167:160] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[167:160] - 0x0₂ ∘ %ymm3[167:160])[7:0]) ∘ ((0x0₂ ∘ %ymm2[159:152] - 0x0₂ ∘ %ymm3[159:152] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[159:152] - 0x0₂ ∘ %ymm3[159:152] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[159:152] - 0x0₂ ∘ %ymm3[159:152])[7:0]) ∘ ((0x0₂ ∘ %ymm2[151:144] - 0x0₂ ∘ %ymm3[151:144] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[151:144] - 0x0₂ ∘ %ymm3[151:144] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[151:144] - 0x0₂ ∘ %ymm3[151:144])[7:0]) ∘ ((0x0₂ ∘ %ymm2[143:136] - 0x0₂ ∘ %ymm3[143:136] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[143:136] - 0x0₂ ∘ %ymm3[143:136] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[143:136] - 0x0₂ ∘ %ymm3[143:136])[7:0]) ∘ ((0x0₂ ∘ %ymm2[135:128] - 0x0₂ ∘ %ymm3[135:128] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[135:128] - 0x0₂ ∘ %ymm3[135:128] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[135:128] - 0x0₂ ∘ %ymm3[135:128])[7:0]) ∘ ((0x0₂ ∘ %ymm2[127:120] - 0x0₂ ∘ %ymm3[127:120] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[127:120] - 0x0₂ ∘ %ymm3[127:120] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[127:120] - 0x0₂ ∘ %ymm3[127:120])[7:0]) ∘ ((0x0₂ ∘ %ymm2[119:112] - 0x0₂ ∘ %ymm3[119:112] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[119:112] - 0x0₂ ∘ %ymm3[119:112] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[119:112] - 0x0₂ ∘ %ymm3[119:112])[7:0]) ∘ ((0x0₂ ∘ %ymm2[111:104] - 0x0₂ ∘ %ymm3[111:104] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[111:104] - 0x0₂ ∘ %ymm3[111:104] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[111:104] - 0x0₂ ∘ %ymm3[111:104])[7:0]) ∘ ((0x0₂ ∘ %ymm2[103:96] - 0x0₂ ∘ %ymm3[103:96] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[103:96] - 0x0₂ ∘ %ymm3[103:96] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[103:96] - 0x0₂ ∘ %ymm3[103:96])[7:0]) ∘ ((0x0₂ ∘ %ymm2[95:88] - 0x0₂ ∘ %ymm3[95:88] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[95:88] - 0x0₂ ∘ %ymm3[95:88] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[95:88] - 0x0₂ ∘ %ymm3[95:88])[7:0]) ∘ ((0x0₂ ∘ %ymm2[87:80] - 0x0₂ ∘ %ymm3[87:80] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[87:80] - 0x0₂ ∘ %ymm3[87:80] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[87:80] - 0x0₂ ∘ %ymm3[87:80])[7:0]) ∘ ((0x0₂ ∘ %ymm2[79:72] - 0x0₂ ∘ %ymm3[79:72] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[79:72] - 0x0₂ ∘ %ymm3[79:72] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[79:72] - 0x0₂ ∘ %ymm3[79:72])[7:0]) ∘ ((0x0₂ ∘ %ymm2[71:64] - 0x0₂ ∘ %ymm3[71:64] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[71:64] - 0x0₂ ∘ %ymm3[71:64] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[71:64] - 0x0₂ ∘ %ymm3[71:64])[7:0]) ∘ ((0x0₂ ∘ %ymm2[63:56] - 0x0₂ ∘ %ymm3[63:56] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[63:56] - 0x0₂ ∘ %ymm3[63:56] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[63:56] - 0x0₂ ∘ %ymm3[63:56])[7:0]) ∘ ((0x0₂ ∘ %ymm2[55:48] - 0x0₂ ∘ %ymm3[55:48] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[55:48] - 0x0₂ ∘ %ymm3[55:48] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[55:48] - 0x0₂ ∘ %ymm3[55:48])[7:0]) ∘ ((0x0₂ ∘ %ymm2[47:40] - 0x0₂ ∘ %ymm3[47:40] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[47:40] - 0x0₂ ∘ %ymm3[47:40] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[47:40] - 0x0₂ ∘ %ymm3[47:40])[7:0]) ∘ ((0x0₂ ∘ %ymm2[39:32] - 0x0₂ ∘ %ymm3[39:32] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[39:32] - 0x0₂ ∘ %ymm3[39:32] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[39:32] - 0x0₂ ∘ %ymm3[39:32])[7:0]) ∘ ((0x0₂ ∘ %ymm2[31:24] - 0x0₂ ∘ %ymm3[31:24] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[31:24] - 0x0₂ ∘ %ymm3[31:24] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[31:24] - 0x0₂ ∘ %ymm3[31:24])[7:0]) ∘ ((0x0₂ ∘ %ymm2[23:16] - 0x0₂ ∘ %ymm3[23:16] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[23:16] - 0x0₂ ∘ %ymm3[23:16] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[23:16] - 0x0₂ ∘ %ymm3[23:16])[7:0]) ∘ ((0x0₂ ∘ %ymm2[15:8] - 0x0₂ ∘ %ymm3[15:8] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[15:8] - 0x0₂ ∘ %ymm3[15:8] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[15:8] - 0x0₂ ∘ %ymm3[15:8])[7:0]) ∘ (0x0₂ ∘ %ymm2[7:0] - 0x0₂ ∘ %ymm3[7:0] > 0xff₁₀ ? 0xff₈ : 0x0₂ ∘ %ymm2[7:0] - 0x0₂ ∘ %ymm3[7:0] < 0x0₁₀ ? 0x0₈ : (0x0₂ ∘ %ymm2[7:0] - 0x0₂ ∘ %ymm3[7:0])[7:0])))))))))))))))))))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1000> vpsubusw_xmm_xmm_xmm (vpsubusw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubusw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubusw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₂ ∘ %ymm2[127:112] - 0x0₂ ∘ %ymm3[127:112] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[127:112] - 0x0₂ ∘ %ymm3[127:112] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[127:112] - 0x0₂ ∘ %ymm3[127:112])[15:0]) ∘ ((0x0₂ ∘ %ymm2[111:96] - 0x0₂ ∘ %ymm3[111:96] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[111:96] - 0x0₂ ∘ %ymm3[111:96] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[111:96] - 0x0₂ ∘ %ymm3[111:96])[15:0]) ∘ ((0x0₂ ∘ %ymm2[95:80] - 0x0₂ ∘ %ymm3[95:80] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[95:80] - 0x0₂ ∘ %ymm3[95:80] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[95:80] - 0x0₂ ∘ %ymm3[95:80])[15:0]) ∘ ((0x0₂ ∘ %ymm2[79:64] - 0x0₂ ∘ %ymm3[79:64] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[79:64] - 0x0₂ ∘ %ymm3[79:64] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[79:64] - 0x0₂ ∘ %ymm3[79:64])[15:0]) ∘ ((0x0₂ ∘ %ymm2[63:48] - 0x0₂ ∘ %ymm3[63:48] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[63:48] - 0x0₂ ∘ %ymm3[63:48] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[63:48] - 0x0₂ ∘ %ymm3[63:48])[15:0]) ∘ ((0x0₂ ∘ %ymm2[47:32] - 0x0₂ ∘ %ymm3[47:32] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[47:32] - 0x0₂ ∘ %ymm3[47:32] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[47:32] - 0x0₂ ∘ %ymm3[47:32])[15:0]) ∘ ((0x0₂ ∘ %ymm2[31:16] - 0x0₂ ∘ %ymm3[31:16] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[31:16] - 0x0₂ ∘ %ymm3[31:16] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[31:16] - 0x0₂ ∘ %ymm3[31:16])[15:0]) ∘ (0x0₂ ∘ %ymm2[15:0] - 0x0₂ ∘ %ymm3[15:0] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[15:0] - 0x0₂ ∘ %ymm3[15:0] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[15:0] - 0x0₂ ∘ %ymm3[15:0])[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1001> vpsubusw_ymm_ymm_ymm (vpsubusw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubusw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubusw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (0x0₂ ∘ %ymm2[255:240] - 0x0₂ ∘ %ymm3[255:240] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[255:240] - 0x0₂ ∘ %ymm3[255:240] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[255:240] - 0x0₂ ∘ %ymm3[255:240])[15:0]) ∘ ((0x0₂ ∘ %ymm2[239:224] - 0x0₂ ∘ %ymm3[239:224] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[239:224] - 0x0₂ ∘ %ymm3[239:224] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[239:224] - 0x0₂ ∘ %ymm3[239:224])[15:0]) ∘ ((0x0₂ ∘ %ymm2[223:208] - 0x0₂ ∘ %ymm3[223:208] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[223:208] - 0x0₂ ∘ %ymm3[223:208] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[223:208] - 0x0₂ ∘ %ymm3[223:208])[15:0]) ∘ ((0x0₂ ∘ %ymm2[207:192] - 0x0₂ ∘ %ymm3[207:192] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[207:192] - 0x0₂ ∘ %ymm3[207:192] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[207:192] - 0x0₂ ∘ %ymm3[207:192])[15:0]) ∘ ((0x0₂ ∘ %ymm2[191:176] - 0x0₂ ∘ %ymm3[191:176] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[191:176] - 0x0₂ ∘ %ymm3[191:176] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[191:176] - 0x0₂ ∘ %ymm3[191:176])[15:0]) ∘ ((0x0₂ ∘ %ymm2[175:160] - 0x0₂ ∘ %ymm3[175:160] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[175:160] - 0x0₂ ∘ %ymm3[175:160] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[175:160] - 0x0₂ ∘ %ymm3[175:160])[15:0]) ∘ ((0x0₂ ∘ %ymm2[159:144] - 0x0₂ ∘ %ymm3[159:144] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[159:144] - 0x0₂ ∘ %ymm3[159:144] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[159:144] - 0x0₂ ∘ %ymm3[159:144])[15:0]) ∘ ((0x0₂ ∘ %ymm2[143:128] - 0x0₂ ∘ %ymm3[143:128] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[143:128] - 0x0₂ ∘ %ymm3[143:128] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[143:128] - 0x0₂ ∘ %ymm3[143:128])[15:0]) ∘ ((0x0₂ ∘ %ymm2[127:112] - 0x0₂ ∘ %ymm3[127:112] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[127:112] - 0x0₂ ∘ %ymm3[127:112] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[127:112] - 0x0₂ ∘ %ymm3[127:112])[15:0]) ∘ ((0x0₂ ∘ %ymm2[111:96] - 0x0₂ ∘ %ymm3[111:96] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[111:96] - 0x0₂ ∘ %ymm3[111:96] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[111:96] - 0x0₂ ∘ %ymm3[111:96])[15:0]) ∘ ((0x0₂ ∘ %ymm2[95:80] - 0x0₂ ∘ %ymm3[95:80] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[95:80] - 0x0₂ ∘ %ymm3[95:80] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[95:80] - 0x0₂ ∘ %ymm3[95:80])[15:0]) ∘ ((0x0₂ ∘ %ymm2[79:64] - 0x0₂ ∘ %ymm3[79:64] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[79:64] - 0x0₂ ∘ %ymm3[79:64] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[79:64] - 0x0₂ ∘ %ymm3[79:64])[15:0]) ∘ ((0x0₂ ∘ %ymm2[63:48] - 0x0₂ ∘ %ymm3[63:48] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[63:48] - 0x0₂ ∘ %ymm3[63:48] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[63:48] - 0x0₂ ∘ %ymm3[63:48])[15:0]) ∘ ((0x0₂ ∘ %ymm2[47:32] - 0x0₂ ∘ %ymm3[47:32] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[47:32] - 0x0₂ ∘ %ymm3[47:32] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[47:32] - 0x0₂ ∘ %ymm3[47:32])[15:0]) ∘ ((0x0₂ ∘ %ymm2[31:16] - 0x0₂ ∘ %ymm3[31:16] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[31:16] - 0x0₂ ∘ %ymm3[31:16] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[31:16] - 0x0₂ ∘ %ymm3[31:16])[15:0]) ∘ (0x0₂ ∘ %ymm2[15:0] - 0x0₂ ∘ %ymm3[15:0] > 0xffff₁₈ ? 0xffff₁₆ : 0x0₂ ∘ %ymm2[15:0] - 0x0₂ ∘ %ymm3[15:0] < 0x0₁₈ ? 0x0₁₆ : (0x0₂ ∘ %ymm2[15:0] - 0x0₂ ∘ %ymm3[15:0])[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1002> vpsubw_xmm_xmm_xmm (vpsubw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ ((%ymm2[127:112] - %ymm3[127:112]) ∘ ((%ymm2[111:96] - %ymm3[111:96]) ∘ ((%ymm2[95:80] - %ymm3[95:80]) ∘ ((%ymm2[79:64] - %ymm3[79:64]) ∘ ((%ymm2[63:48] - %ymm3[63:48]) ∘ ((%ymm2[47:32] - %ymm3[47:32]) ∘ ((%ymm2[31:16] - %ymm3[31:16]) ∘ (%ymm2[15:0] - %ymm3[15:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1003> vpsubw_ymm_ymm_ymm (vpsubw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpsubw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpsubw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (%ymm2[255:240] - %ymm3[255:240]) ∘ ((%ymm2[239:224] - %ymm3[239:224]) ∘ ((%ymm2[223:208] - %ymm3[223:208]) ∘ ((%ymm2[207:192] - %ymm3[207:192]) ∘ ((%ymm2[191:176] - %ymm3[191:176]) ∘ ((%ymm2[175:160] - %ymm3[175:160]) ∘ ((%ymm2[159:144] - %ymm3[159:144]) ∘ ((%ymm2[143:128] - %ymm3[143:128]) ∘ ((%ymm2[127:112] - %ymm3[127:112]) ∘ ((%ymm2[111:96] - %ymm3[111:96]) ∘ ((%ymm2[95:80] - %ymm3[95:80]) ∘ ((%ymm2[79:64] - %ymm3[79:64]) ∘ ((%ymm2[63:48] - %ymm3[63:48]) ∘ ((%ymm2[47:32] - %ymm3[47:32]) ∘ ((%ymm2[31:16] - %ymm3[31:16]) ∘ (%ymm2[15:0] - %ymm3[15:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1004> vptest_xmm_xmm (vptest %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vptest %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vptest_xmm_xmm:vptest %xmm2, %xmm1

1005> vptest_ymm_ymm (vptest %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vptest %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vptest_ymm_ymm:vptest %ymm2, %ymm1

1006> vpunpckhbw_xmm_xmm_xmm (vpunpckhbw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhbw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhbw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:120] ∘ %ymm2[127:120] ∘ (%ymm3[119:112] ∘ %ymm2[119:112] ∘ (%ymm3[111:104] ∘ %ymm2[111:104] ∘ (%ymm3[103:96] ∘ %ymm2[103:96] ∘ (%ymm3[95:88] ∘ %ymm2[95:88] ∘ (%ymm3[87:80] ∘ %ymm2[87:80] ∘ (%ymm3[79:72] ∘ %ymm2[79:72] ∘ (%ymm3[71:64] ∘ %ymm2[71:64]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1007> vpunpckhbw_ymm_ymm_ymm (vpunpckhbw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhbw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhbw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[255:248] ∘ %ymm2[255:248] ∘ (%ymm3[247:240] ∘ %ymm2[247:240] ∘ (%ymm3[239:232] ∘ %ymm2[239:232] ∘ (%ymm3[231:224] ∘ %ymm2[231:224] ∘ (%ymm3[223:216] ∘ %ymm2[223:216] ∘ (%ymm3[215:208] ∘ %ymm2[215:208] ∘ (%ymm3[207:200] ∘ %ymm2[207:200] ∘ (%ymm3[199:192] ∘ %ymm2[199:192] ∘ (%ymm3[127:120] ∘ %ymm2[127:120] ∘ (%ymm3[119:112] ∘ %ymm2[119:112] ∘ (%ymm3[111:104] ∘ %ymm2[111:104] ∘ (%ymm3[103:96] ∘ %ymm2[103:96] ∘ (%ymm3[95:88] ∘ %ymm2[95:88] ∘ (%ymm3[87:80] ∘ %ymm2[87:80] ∘ (%ymm3[79:72] ∘ %ymm2[79:72] ∘ (%ymm3[71:64] ∘ %ymm2[71:64])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1008> vpunpckhdq_xmm_xmm_xmm (vpunpckhdq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhdq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhdq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:96] ∘ %ymm2[127:96] ∘ (%ymm3[95:64] ∘ %ymm2[95:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1009> vpunpckhdq_ymm_ymm_ymm (vpunpckhdq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhdq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhdq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[255:224] ∘ %ymm2[255:224] ∘ (%ymm3[223:192] ∘ %ymm2[223:192] ∘ (%ymm3[127:96] ∘ %ymm2[127:96] ∘ (%ymm3[95:64] ∘ %ymm2[95:64])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1010> vpunpckhqdq_xmm_xmm_xmm (vpunpckhqdq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhqdq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhqdq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:64] ∘ %ymm2[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1011> vpunpckhqdq_ymm_ymm_ymm (vpunpckhqdq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhqdq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhqdq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[255:192] ∘ %ymm2[255:192] ∘ (%ymm3[127:64] ∘ %ymm2[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1012> vpunpckhwd_xmm_xmm_xmm (vpunpckhwd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhwd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhwd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:112] ∘ %ymm2[127:112] ∘ (%ymm3[111:96] ∘ %ymm2[111:96] ∘ (%ymm3[95:80] ∘ %ymm2[95:80] ∘ (%ymm3[79:64] ∘ %ymm2[79:64]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1013> vpunpckhwd_ymm_ymm_ymm (vpunpckhwd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckhwd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckhwd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[255:240] ∘ %ymm2[255:240] ∘ (%ymm3[239:224] ∘ %ymm2[239:224] ∘ (%ymm3[223:208] ∘ %ymm2[223:208] ∘ (%ymm3[207:192] ∘ %ymm2[207:192] ∘ (%ymm3[127:112] ∘ %ymm2[127:112] ∘ (%ymm3[111:96] ∘ %ymm2[111:96] ∘ (%ymm3[95:80] ∘ %ymm2[95:80] ∘ (%ymm3[79:64] ∘ %ymm2[79:64])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1014> vpunpcklbw_xmm_xmm_xmm (vpunpcklbw %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpcklbw %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpcklbw %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:56] ∘ %ymm2[63:56] ∘ (%ymm3[55:48] ∘ %ymm2[55:48] ∘ (%ymm3[47:40] ∘ %ymm2[47:40] ∘ (%ymm3[39:32] ∘ %ymm2[39:32] ∘ (%ymm3[31:24] ∘ %ymm2[31:24] ∘ (%ymm3[23:16] ∘ %ymm2[23:16] ∘ (%ymm3[15:8] ∘ %ymm2[15:8] ∘ (%ymm3[7:0] ∘ %ymm2[7:0]))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1015> vpunpcklbw_ymm_ymm_ymm (vpunpcklbw %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpcklbw %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpcklbw %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[191:184] ∘ %ymm2[191:184] ∘ (%ymm3[183:176] ∘ %ymm2[183:176] ∘ (%ymm3[175:168] ∘ %ymm2[175:168] ∘ (%ymm3[167:160] ∘ %ymm2[167:160] ∘ (%ymm3[159:152] ∘ %ymm2[159:152] ∘ (%ymm3[151:144] ∘ %ymm2[151:144] ∘ (%ymm3[143:136] ∘ %ymm2[143:136] ∘ (%ymm3[135:128] ∘ %ymm2[135:128] ∘ (%ymm3[63:56] ∘ %ymm2[63:56] ∘ (%ymm3[55:48] ∘ %ymm2[55:48] ∘ (%ymm3[47:40] ∘ %ymm2[47:40] ∘ (%ymm3[39:32] ∘ %ymm2[39:32] ∘ (%ymm3[31:24] ∘ %ymm2[31:24] ∘ (%ymm3[23:16] ∘ %ymm2[23:16] ∘ (%ymm3[15:8] ∘ %ymm2[15:8] ∘ (%ymm3[7:0] ∘ %ymm2[7:0])))))))))))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1016> vpunpckldq_xmm_xmm_xmm (vpunpckldq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckldq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckldq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:32] ∘ %ymm2[63:32] ∘ (%ymm3[31:0] ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1017> vpunpckldq_ymm_ymm_ymm (vpunpckldq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpckldq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpckldq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[191:160] ∘ %ymm2[191:160] ∘ (%ymm3[159:128] ∘ %ymm2[159:128] ∘ (%ymm3[63:32] ∘ %ymm2[63:32] ∘ (%ymm3[31:0] ∘ %ymm2[31:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1018> vpunpcklqdq_xmm_xmm_xmm (vpunpcklqdq %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpcklqdq %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpcklqdq %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1019> vpunpcklqdq_ymm_ymm_ymm (vpunpcklqdq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpcklqdq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpcklqdq %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[191:128] ∘ %ymm2[191:128] ∘ (%ymm3[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1020> vpunpcklwd_xmm_xmm_xmm (vpunpcklwd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpcklwd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpcklwd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:48] ∘ %ymm2[63:48] ∘ (%ymm3[47:32] ∘ %ymm2[47:32] ∘ (%ymm3[31:16] ∘ %ymm2[31:16] ∘ (%ymm3[15:0] ∘ %ymm2[15:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1021> vpunpcklwd_ymm_ymm_ymm (vpunpcklwd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpunpcklwd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpunpcklwd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm3[191:176] ∘ %ymm2[191:176] ∘ (%ymm3[175:160] ∘ %ymm2[175:160] ∘ (%ymm3[159:144] ∘ %ymm2[159:144] ∘ (%ymm3[143:128] ∘ %ymm2[143:128] ∘ (%ymm3[63:48] ∘ %ymm2[63:48] ∘ (%ymm3[47:32] ∘ %ymm2[47:32] ∘ (%ymm3[31:16] ∘ %ymm2[31:16] ∘ (%ymm3[15:0] ∘ %ymm2[15:0])))))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1022> vpvmpgtq_ymm_ymm_ymm (vpvmpgtq %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpvmpgtq %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 

Errors:

  --code <value>
      Error reading value: Failed to parse line 1: vpvmpgtq %ymm3, %ymm2, %ymm1
      Message: No such opcode 'vpvmpgtq' exists
      


1023> vpxor_xmm_xmm_xmm (vpxor %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpxor %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpxor %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] ⊕ %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1024> vpxor_ymm_ymm_ymm (vpxor %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vpxor %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vpxor %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : %ymm2 ⊕ %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1025> vrcpps_xmm_xmm (vrcpps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vrcpps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vrcpps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (approx_reciprocal_single(%ymm2[127:96]) ∘ (approx_reciprocal_single(%ymm2[95:64]) ∘ (approx_reciprocal_single(%ymm2[63:32]) ∘ approx_reciprocal_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1026> vrcpss_xmm_xmm_xmm (vrcpss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vrcpss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vrcpss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ approx_reciprocal_single(%ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1027> vrsqrtps_xmm_xmm (vrsqrtps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vrsqrtps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vrsqrtps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (approx_reciprocal_sqrt_single(%ymm2[127:96]) ∘ (approx_reciprocal_sqrt_single(%ymm2[95:64]) ∘ (approx_reciprocal_sqrt_single(%ymm2[63:32]) ∘ approx_reciprocal_sqrt_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1028> vrsqrtss_xmm_xmm_xmm (vrsqrtss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vrsqrtss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vrsqrtss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ approx_reciprocal_sqrt_single(%ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1029> vsqrtpd_xmm_xmm (vsqrtpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsqrtpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsqrtpd %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₆₄ ∘ (0x0₆₄ ∘ (sqrt_double(%ymm2[127:64]) ∘ sqrt_double(%ymm2[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1030> vsqrtps_xmm_xmm (vsqrtps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsqrtps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsqrtps %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sqrt_single(%ymm2[127:96]) ∘ (sqrt_single(%ymm2[95:64]) ∘ (sqrt_single(%ymm2[63:32]) ∘ sqrt_single(%ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1031> vsqrtsd_xmm_xmm_xmm (vsqrtsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsqrtsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsqrtsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ sqrt_double(%ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1032> vsqrtss_xmm_xmm_xmm (vsqrtss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsqrtss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsqrtss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ sqrt_single(%ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1033> vsubpd_xmm_xmm_xmm (vsubpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsubpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsubpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₆₄ ∘ (0x0₆₄ ∘ (sub_double(%ymm2[127:64], %ymm3[127:64]) ∘ sub_double(%ymm2[63:0], %ymm3[63:0])))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1034> vsubps_xmm_xmm_xmm (vsubps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsubps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsubps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (sub_single(%ymm2[127:96], %ymm3[127:96]) ∘ (sub_single(%ymm2[95:64], %ymm3[95:64]) ∘ (sub_single(%ymm2[63:32], %ymm3[63:32]) ∘ sub_single(%ymm2[31:0], %ymm3[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1035> vsubsd_xmm_xmm_xmm (vsubsd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsubsd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsubsd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:64] ∘ sub_double(%ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1036> vsubss_xmm_xmm_xmm (vsubss %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vsubss %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vsubss %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:32] ∘ sub_single(%ymm2[31:0], %ymm3[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1037> vtestpd_xmm_xmm (vtestpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vtestpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vtestpd_xmm_xmm:vtestpd %xmm2, %xmm1

1038> vtestpd_ymm_ymm (vtestpd %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vtestpd %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vtestpd_ymm_ymm:vtestpd %ymm2, %ymm1

1039> vtestps_xmm_xmm (vtestps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vtestps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vtestps_xmm_xmm:vtestps %xmm2, %xmm1

1040> vtestps_ymm_ymm (vtestps %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vtestps %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
Unsupported:vtestps_ymm_ymm:vtestps %ymm2, %ymm1

1041> vucomisd_xmm_xmm (vucomisd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vucomisd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vucomisd_xmm_xmm:vucomisd %xmm2, %xmm1

1042> vucomiss_xmm_xmm (vucomiss %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vucomiss %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
Unsupported:vucomiss_xmm_xmm:vucomiss %xmm2, %xmm1

1043> vunpckhpd_xmm_xmm_xmm (vunpckhpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpckhpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpckhpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:64] ∘ %ymm2[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1044> vunpckhpd_ymm_ymm_ymm (vunpckhpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpckhpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpckhpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm3[255:192] ∘ %ymm2[255:192] ∘ (%ymm3[127:64] ∘ %ymm2[127:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1045> vunpckhps_xmm_xmm_xmm (vunpckhps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpckhps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpckhps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[127:96] ∘ %ymm2[127:96] ∘ %ymm3[95:64] ∘ %ymm2[95:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1046> vunpckhps_ymm_ymm_ymm (vunpckhps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpckhps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpckhps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm3[255:224] ∘ %ymm2[255:224] ∘ %ymm3[223:192] ∘ %ymm2[223:192] ∘ (%ymm3[127:96] ∘ %ymm2[127:96] ∘ %ymm3[95:64] ∘ %ymm2[95:64])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1047> vunpcklpd_xmm_xmm_xmm (vunpcklpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpcklpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpcklpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1048> vunpcklpd_ymm_ymm_ymm (vunpcklpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpcklpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpcklpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm3[191:128] ∘ %ymm2[191:128] ∘ (%ymm3[63:0] ∘ %ymm2[63:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1049> vunpcklps_xmm_xmm_xmm (vunpcklps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpcklps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpcklps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm3[63:32] ∘ %ymm2[63:32] ∘ %ymm3[31:0] ∘ %ymm2[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1050> vunpcklps_ymm_ymm_ymm (vunpcklps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vunpcklps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vunpcklps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm3[191:160] ∘ %ymm2[191:160] ∘ %ymm3[159:128] ∘ %ymm2[159:128] ∘ (%ymm3[63:32] ∘ %ymm2[63:32] ∘ %ymm3[31:0] ∘ %ymm2[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1051> vxorpd_xmm_xmm_xmm (vxorpd %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vxorpd %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vxorpd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] ⊕ %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1052> vxorpd_ymm_ymm_ymm (vxorpd %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vxorpd %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vxorpd %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2 ⊕ %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1053> vxorps_xmm_xmm_xmm (vxorps %xmm3, %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vxorps %xmm3, %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vxorps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[127:0] ⊕ %ymm3[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1054> vxorps_ymm_ymm_ymm (vxorps %ymm3, %ymm2, %ymm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vxorps %ymm3, %ymm2, %ymm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vxorps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : %ymm2 ⊕ %ymm3

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1055> vzeroupper (vzeroupper)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "vzeroupper" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

vzeroupper

  maybe read:      { %xmm0 %xmm1 %xmm2 %xmm3 %xmm4 %xmm5 %xmm6 %xmm7 %xmm8 %xmm9 %xmm10 %xmm11 %xmm12 %xmm13 %xmm14 %xmm15 }
  must read:       { %xmm0 %xmm1 %xmm2 %xmm3 %xmm4 %xmm5 %xmm6 %xmm7 %xmm8 %xmm9 %xmm10 %xmm11 %xmm12 %xmm13 %xmm14 %xmm15 }
  maybe write:     { %ymm0 %ymm1 %ymm2 %ymm3 %ymm4 %ymm5 %ymm6 %ymm7 %ymm8 %ymm9 %ymm10 %ymm11 %ymm12 %ymm13 %ymm14 %ymm15 }
  must write:      { %ymm0 %ymm1 %ymm2 %ymm3 %ymm4 %ymm5 %ymm6 %ymm7 %ymm8 %ymm9 %ymm10 %ymm11 %ymm12 %ymm13 %ymm14 %ymm15 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm0  : 0x0₁₂₈ ∘ %ymm0[127:0]
%ymm1  : 0x0₁₂₈ ∘ %ymm1[127:0]
%ymm2  : 0x0₁₂₈ ∘ %ymm2[127:0]
%ymm3  : 0x0₁₂₈ ∘ %ymm3[127:0]
%ymm4  : 0x0₁₂₈ ∘ %ymm4[127:0]
%ymm5  : 0x0₁₂₈ ∘ %ymm5[127:0]
%ymm6  : 0x0₁₂₈ ∘ %ymm6[127:0]
%ymm7  : 0x0₁₂₈ ∘ %ymm7[127:0]
%ymm8  : 0x0₁₂₈ ∘ %ymm8[127:0]
%ymm9  : 0x0₁₂₈ ∘ %ymm9[127:0]
%ymm10 : 0x0₁₂₈ ∘ %ymm10[127:0]
%ymm11 : 0x0₁₂₈ ∘ %ymm11[127:0]
%ymm12 : 0x0₁₂₈ ∘ %ymm12[127:0]
%ymm13 : 0x0₁₂₈ ∘ %ymm13[127:0]
%ymm14 : 0x0₁₂₈ ∘ %ymm14[127:0]
%ymm15 : 0x0₁₂₈ ∘ %ymm15[127:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1056> xaddb_r8_r8 (xaddb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %cl %bl %cf %pf %af %zf %sf %of }
  must write:      { %cl %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : %rcx[63:8] ∘ %rbx[7:0]
%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (%rcx[7:7] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(%rcx[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rcx[7:0] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1057> xaddb_r8_rh (xaddb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %bl %cf %pf %af %zf %sf %of }
  must write:      { %ah %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[7:0] ∘ %rax[7:0]
%rbx   : %rbx[63:8] ∘ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:0]

%cf    : (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rax[11:8] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁
%of    : (%rax[15:15] = 0x1₁ ↔ %rbx[7:7] = 0x1₁) ∧ !(%rax[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rax[15:8] + 0x0₁ ∘ %rbx[7:0])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1058> xaddb_rh_r8 (xaddb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %bl %cf %pf %af %zf %sf %of }
  must write:      { %ah %bl %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]
%rbx   : %rbx[63:8] ∘ %rax[15:8]

%cf    : (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[3:0] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (%rbx[7:7] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(%rbx[7:7] = 0x1₁ ↔ (0x0₁ ∘ %rbx[7:0] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1059> xaddb_rh_rh (xaddb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %bh %cf %pf %af %zf %sf %of }
  must write:      { %ah %bh %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:0] ∘ %rax[7:0]
%rbx   : %rbx[63:16] ∘ %rax[15:8] ∘ %rbx[7:0]

%cf    : (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[8:8] = 0x1₁
%pf    : !((0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rbx[11:8] + 0x0₁ ∘ %rax[11:8])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:0] = 0x0₈
%sf    : (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁
%of    : (%rbx[15:15] = 0x1₁ ↔ %rax[15:15] = 0x1₁) ∧ !(%rbx[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rbx[15:8] + 0x0₁ ∘ %rax[15:8])[7:7] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1060> xaddl_r32_r32 (xaddl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rcx %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rcx %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : 0x0₃₂ ∘ %rbx[31:0]
%rbx   : 0x0₃₂ ∘ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:0]

%cf    : (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[32:32] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:0] = 0x0₃₂
%sf    : (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁
%of    : (%rcx[31:31] = 0x1₁ ↔ %rbx[31:31] = 0x1₁) ∧ !(%rcx[31:31] = 0x1₁ ↔ (0x0₁ ∘ %rcx[31:0] + 0x0₁ ∘ %rbx[31:0])[31:31] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1061> xaddq_r64_r64 (xaddq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rcx %rbx %cf %pf %af %zf %sf %of }
  must write:      { %rcx %rbx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : %rbx
%rbx   : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:0]

%cf    : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[64:64] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:0] = 0x0₆₄
%sf    : (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:63] = 0x1₁
%of    : (%rcx[63:63] = 0x1₁ ↔ %rbx[63:63] = 0x1₁) ∧ !(%rcx[63:63] = 0x1₁ ↔ (0x0₁ ∘ %rcx + 0x0₁ ∘ %rbx)[63:63] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1062> xaddw_r16_r16 (xaddw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xaddw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xaddw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %cx %bx %cf %pf %af %zf %sf %of }
  must write:      { %cx %bx %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : %rcx[63:16] ∘ %rbx[15:0]
%rbx   : %rbx[63:16] ∘ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:0]

%cf    : (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[16:16] = 0x1₁
%pf    : !((0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[0:0] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[1:1] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[2:2] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[3:3] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[4:4] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[5:5] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[6:6] = 0x1₁ ⊕ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[7:7] = 0x1₁)
%af    : (0x0₁ ∘ %rcx[3:0] + 0x0₁ ∘ %rbx[3:0])[4:4] = 0x1₁
%zf    : (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:0] = 0x0₁₆
%sf    : (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁
%of    : (%rcx[15:15] = 0x1₁ ↔ %rbx[15:15] = 0x1₁) ∧ !(%rcx[15:15] = 0x1₁ ↔ (0x0₁ ∘ %rcx[15:0] + 0x0₁ ∘ %rbx[15:0])[15:15] = 0x1₁)

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1063> xchgb_r8_r8 (xchgb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %cl %bl }
  must write:      { %cl %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : %rcx[63:8] ∘ %rbx[7:0]
%rbx   : %rbx[63:8] ∘ %rcx[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1064> xchgb_r8_rh (xchgb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %bl }
  must write:      { %ah %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[7:0] ∘ %rax[7:0]
%rbx   : %rbx[63:8] ∘ %rax[15:8]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1065> xchgb_rh_r8 (xchgb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %bl }
  must write:      { %ah %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[7:0] ∘ %rax[7:0]
%rbx   : %rbx[63:8] ∘ %rax[15:8]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1066> xchgb_rh_rh (xchgb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %bh }
  must write:      { %ah %bh }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[15:8] ∘ %rax[7:0]
%rbx   : %rbx[63:16] ∘ %rax[15:8] ∘ %rbx[7:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1067> xchgl_eax_r32 (xchgl %ebx, %eax)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgl %ebx, %eax" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgl %ebx, %eax

  maybe read:      { %eax %ebx }
  must read:       { %eax %ebx }
  maybe write:     { %rax %rbx }
  must write:      { %rax %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ %rbx[31:0]
%rbx   : 0x0₃₂ ∘ %rax[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1068> xchgl_r32_eax (xchgl %eax, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgl %eax, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgl %eax, %ebx

  maybe read:      { %eax %ebx }
  must read:       { %eax %ebx }
  maybe write:     { %rax %rbx }
  must write:      { %rax %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : 0x0₃₂ ∘ %rbx[31:0]
%rbx   : 0x0₃₂ ∘ %rax[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1069> xchgl_r32_r32 (xchgl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rcx %rbx }
  must write:      { %rcx %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : 0x0₃₂ ∘ %rbx[31:0]
%rbx   : 0x0₃₂ ∘ %rcx[31:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1070> xchgq_r64_r64 (xchgq %rcx, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgq %rcx, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rcx %rbx }
  must write:      { %rcx %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : %rbx
%rbx   : %rcx

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1071> xchgq_r64_rax (xchgq %rax, %rbx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgq %rax, %rbx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgq %rax, %rbx

  maybe read:      { %rax %rbx }
  must read:       { %rax %rbx }
  maybe write:     { %rax %rbx }
  must write:      { %rax %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rbx
%rbx   : %rax

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1072> xchgq_rax_r64 (xchgq %rbx, %rax)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgq %rbx, %rax" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgq %rbx, %rax

  maybe read:      { %rax %rbx }
  must read:       { %rax %rbx }
  maybe write:     { %rax %rbx }
  must write:      { %rax %rbx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rbx
%rbx   : %rax

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1073> xchgw_ax_r16 (xchgw %bx, %ax)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgw %bx, %ax" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgw %bx, %ax

  maybe read:      { %ax %bx }
  must read:       { %ax %bx }
  maybe write:     { %ax %bx }
  must write:      { %ax %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[15:0]
%rbx   : %rbx[63:16] ∘ %rax[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1074> xchgw_r16_ax (xchgw %ax, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgw %ax, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgw %ax, %bx

  maybe read:      { %ax %bx }
  must read:       { %ax %bx }
  maybe write:     { %ax %bx }
  must write:      { %ax %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ %rbx[15:0]
%rbx   : %rbx[63:16] ∘ %rax[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1075> xchgw_r16_r16 (xchgw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xchgw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xchgw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %cx %bx }
  must write:      { %cx %bx }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rcx   : %rcx[63:16] ∘ %rbx[15:0]
%rbx   : %rbx[63:16] ∘ %rcx[15:0]

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1076> xorb_r8_r8 (xorb %cl, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorb %cl, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorb %cl, %bl

  maybe read:      { %cl %bl }
  must read:       { %cl %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] ⊕ %rcx[7:0])

%cf    : false
%pf    : !((%rbx[0:0] ⊕ %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] ⊕ %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] ⊕ %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] ⊕ %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] ⊕ %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] ⊕ %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] ⊕ %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] ⊕ %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] ⊕ %rcx[7:0]) = 0x0₈
%sf    : (%rbx[7:7] ⊕ %rcx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1077> xorb_r8_rh (xorb %ah, %bl)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorb %ah, %bl" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorb %ah, %bl

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %bl %cf %pf %zf %sf %of }
  must write:      { %bl %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:8] ∘ (%rbx[7:0] ⊕ %rax[15:8])

%cf    : false
%pf    : !((%rbx[0:0] ⊕ %rax[8:8]) = 0x1₁ ⊕ (%rbx[1:1] ⊕ %rax[9:9]) = 0x1₁ ⊕ (%rbx[2:2] ⊕ %rax[10:10]) = 0x1₁ ⊕ (%rbx[3:3] ⊕ %rax[11:11]) = 0x1₁ ⊕ (%rbx[4:4] ⊕ %rax[12:12]) = 0x1₁ ⊕ (%rbx[5:5] ⊕ %rax[13:13]) = 0x1₁ ⊕ (%rbx[6:6] ⊕ %rax[14:14]) = 0x1₁ ⊕ (%rbx[7:7] ⊕ %rax[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[7:0] ⊕ %rax[15:8]) = 0x0₈
%sf    : (%rbx[7:7] ⊕ %rax[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1078> xorb_rh_r8 (xorb %bl, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorb %bl, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorb %bl, %ah

  maybe read:      { %ah %bl }
  must read:       { %ah %bl }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] ⊕ %rbx[7:0]) ∘ %rax[7:0]

%cf    : false
%pf    : !((%rax[8:8] ⊕ %rbx[0:0]) = 0x1₁ ⊕ (%rax[9:9] ⊕ %rbx[1:1]) = 0x1₁ ⊕ (%rax[10:10] ⊕ %rbx[2:2]) = 0x1₁ ⊕ (%rax[11:11] ⊕ %rbx[3:3]) = 0x1₁ ⊕ (%rax[12:12] ⊕ %rbx[4:4]) = 0x1₁ ⊕ (%rax[13:13] ⊕ %rbx[5:5]) = 0x1₁ ⊕ (%rax[14:14] ⊕ %rbx[6:6]) = 0x1₁ ⊕ (%rax[15:15] ⊕ %rbx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] ⊕ %rbx[7:0]) = 0x0₈
%sf    : (%rax[15:15] ⊕ %rbx[7:7]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1079> xorb_rh_rh (xorb %bh, %ah)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorb %bh, %ah" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorb %bh, %ah

  maybe read:      { %ah %bh }
  must read:       { %ah %bh }
  maybe write:     { %ah %cf %pf %zf %sf %of }
  must write:      { %ah %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rax   : %rax[63:16] ∘ (%rax[15:8] ⊕ %rbx[15:8]) ∘ %rax[7:0]

%cf    : false
%pf    : !((%rax[8:8] ⊕ %rbx[8:8]) = 0x1₁ ⊕ (%rax[9:9] ⊕ %rbx[9:9]) = 0x1₁ ⊕ (%rax[10:10] ⊕ %rbx[10:10]) = 0x1₁ ⊕ (%rax[11:11] ⊕ %rbx[11:11]) = 0x1₁ ⊕ (%rax[12:12] ⊕ %rbx[12:12]) = 0x1₁ ⊕ (%rax[13:13] ⊕ %rbx[13:13]) = 0x1₁ ⊕ (%rax[14:14] ⊕ %rbx[14:14]) = 0x1₁ ⊕ (%rax[15:15] ⊕ %rbx[15:15]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rax[15:8] ⊕ %rbx[15:8]) = 0x0₈
%sf    : (%rax[15:15] ⊕ %rbx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1080> xorl_r32_r32 (xorl %ecx, %ebx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorl %ecx, %ebx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorl %ecx, %ebx

  maybe read:      { %ecx %ebx }
  must read:       { %ecx %ebx }
  maybe write:     { %rbx %cf %pf %zf %sf %of }
  must write:      { %rbx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : 0x0₃₂ ∘ (%rbx[31:0] ⊕ %rcx[31:0])

%cf    : false
%pf    : !((%rbx[0:0] ⊕ %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] ⊕ %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] ⊕ %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] ⊕ %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] ⊕ %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] ⊕ %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] ⊕ %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] ⊕ %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[31:0] ⊕ %rcx[31:0]) = 0x0₃₂
%sf    : (%rbx[31:31] ⊕ %rcx[31:31]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1081> xorpd_xmm_xmm (xorpd %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorpd %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorpd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] ⊕ %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1082> xorps_xmm_xmm (xorps %xmm2, %xmm1)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorps %xmm2, %xmm1" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Formula:

%ymm1  : %ymm1[255:128] ∘ (%ymm1[127:0] ⊕ %ymm2[127:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv


1083> xorw_r16_r16 (xorw %cx, %bx)
/home/sdasgup3/Github/stoke/./bin/stoke_debug_formula    --code "xorw %cx, %bx" 1>/tmp/yyy 2>&1 
WARNING: No live out values provided, assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 }
WARNING: No def in values provided; assuming { %rax %rdx %rbx %rsp %rbp %r12 %r13 %r14 %r15 %xmm0 %xmm1 %mxcsr::rc[0] }
Target

xorw %cx, %bx

  maybe read:      { %cx %bx }
  must read:       { %cx %bx }
  maybe write:     { %bx %cf %pf %zf %sf %of }
  must write:      { %bx %cf %pf %zf %sf %of }
  maybe undef:     { %af }
  must undef:      { %af }
  required flags:  { }

Formula:

%rbx   : %rbx[63:16] ∘ (%rbx[15:0] ⊕ %rcx[15:0])

%cf    : false
%pf    : !((%rbx[0:0] ⊕ %rcx[0:0]) = 0x1₁ ⊕ (%rbx[1:1] ⊕ %rcx[1:1]) = 0x1₁ ⊕ (%rbx[2:2] ⊕ %rcx[2:2]) = 0x1₁ ⊕ (%rbx[3:3] ⊕ %rcx[3:3]) = 0x1₁ ⊕ (%rbx[4:4] ⊕ %rcx[4:4]) = 0x1₁ ⊕ (%rbx[5:5] ⊕ %rcx[5:5]) = 0x1₁ ⊕ (%rbx[6:6] ⊕ %rcx[6:6]) = 0x1₁ ⊕ (%rbx[7:7] ⊕ %rcx[7:7]) = 0x1₁)
%af    : TMP_BOOL_0
%zf    : (%rbx[15:0] ⊕ %rcx[15:0]) = 0x0₁₆
%sf    : (%rbx[15:15] ⊕ %rcx[15:15]) = 0x1₁
%of    : false

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv
