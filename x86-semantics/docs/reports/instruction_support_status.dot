// dot -Tps imm_stats.dot -o imm_stats.ps
digraph instr_supprt {
    
      
  T [label="Total\n3868"]
    SYS         [style=dashed; label="System\n203"] 
    CRYPTO      [style=dashed; label="Crypto\n35"] 
    X87         [style=dashed; label="X87\n155"] 
    BASE        [style=filled; label="Base\n51"] 
    REM         [style=filled; label="Remaining\n2878"]
    US          [style=dashed; label="Sanbox Unsupported\n103"] 
    JMP         [style=filled; label="Jump\n263"] 
    MMX         [style=dashed; label="mmx operand\n180"] 
  
  T -> SYS  
  T -> CRYPTO  
  T -> X87  
  T -> US  
  T -> BASE  
  T -> REM
  T -> JMP  
  T -> MMX  

  {rank = same; T; }
  {rank = same; SYS; CRYPTO; X87; US; JMP; MMX;  }
  {rank = same; REM, BASE}

  /***************************************************/
  // Remaining

  DUP      [label="Duplicate\n120"] 
  MEM      [label="Memory\n1367"] 
  IMMS [label="Immediates\n308"]
  REGS [label="Registers\n1083"]

  REM -> DUP
  REM -> MEM
  REM -> IMMS
  REM -> REGS
  {rank = same; DUP; MEM; IMMS; REGS;}

  /***************************************************/
  // Registers
  subgraph cluster_0 {
    label =  "Register"
    style=filled;
    color = cadetblue1;

    REGS_STRATA [sides=5; shape=polygon; label="Stratified\n#692"] 
    REGS_UNSTRATA [label="Strata Unsupported\n#391"] 
    REGS_UNSTRATA_STOKED [fontcolor=red; color=red; label="#1\nStoked\n!! == TS !!\n#262"] 
    REGS_UGUSUS [fontcolor=red; color=red; label="#2\nUnstoked\n!!Extend Stratification!!\n#129"]

    REGS -> REGS_STRATA
    REGS -> REGS_UNSTRATA
    REGS_UNSTRATA -> REGS_UNSTRATA_STOKED
    REGS_UNSTRATA -> REGS_UGUSUS

    {rank = same; REGS_STRATA; REGS_UNSTRATA; }
    {rank = same; REGS_UNSTRATA_STOKED; REGS_UGUSUS; }
  }
  /***************************************************/

  /***************************************************/
  // Memory
  subgraph cluster_1 {
    label =  "Memory"
    style=filled;
    color = lightgrey;

    MEM_G [label="Gen. from Regs\n#1312"]
    MEM_G_STRATA_STOKE [fontcolor=red; color=red;label="#8\nStrata & Master \nbranches.\n#1103"]
    MEM_G_STRATA_ONLY [label="Strata only \n#209"]
    MEM_G_STRATA_MANUAL_ADDITION [label=" Gen. from Regs \nadded manually\n#200"]
    MEM_G_STRATA_MANUAL_NAME_CONFLICT [label="Gen. from Stratified Regs \n(name conflicts)\n#9"]

    MEM_UG [label="UnGeneralized\n#55"]

    MEM -> MEM_G
    MEM_G -> MEM_G_STRATA_STOKE
    MEM_G -> MEM_G_STRATA_ONLY
    MEM_G_STRATA_ONLY -> MEM_G_STRATA_MANUAL_ADDITION
    MEM_G_STRATA_ONLY -> MEM_G_STRATA_MANUAL_NAME_CONFLICT
    MEM -> MEM_UG

    {rank = same; MEM_UG; MEM_G; }
  }
  /***************************************************/

 /***************************************************/
 // Immediates
  subgraph cluster_2 {
    label =  "Immediate";
    style=filled;
    color = cornsilk;

    G [label="Generalized from Regs\nwo/w extend: 107/83\n#190"] 
    S1 [sides=5; shape=polygon; label="Stratified\n#28"] 
    //S [label="Strata\n106"] 
    UG [label="UnGeneralized\n#118"] 
    UGUS [label="UnStratified\n#40"]
    S2 [sides=5; shape=polygon; label="Stratified\n#78"] 
    UGUSS [fontcolor=red; color=red; label="#3\nStoked\n!!&#8704;I &isin;[1..255]:  == TS !!\n#9\n(size 8: 4; size > 8: 5)"]
    UGUSUS [fontcolor=red; color=red; label="#4\nUnStoked\n!!&#8704;I:  == TS !!\n#31"]
    S2_STOKED [fontcolor=red; color=red; label="#5\nStoked\n !! &#8704;I: Stoke SMT(I) == Strata SMT_I !!\n#15"]
    S2_UNSTOKED [fontcolor=red; color=red; label="#6\nUnStoked\n !! &#8704;I: Stoke SMT(I) == Strata SMT_I !!\n#63"]
    GUS [fontcolor=red; color=red; label="#7\nRegister versions from strata or stoke\n !! &#8704;I &isin;[1..255]: ==TS !!\n#162 \n(size 8: 105; size > 8: 57)"]

    IMMS -> G
    IMMS -> UG

    //G -> S1 -> S
    //UG -> S2 -> S
    G -> S1
    UG -> S2
    G -> GUS
    UG -> UGUS -> UGUSS
    UGUS -> UGUSUS
    S2 -> S2_STOKED
    S2 -> S2_UNSTOKED

    {rank = same; IMMS; }
    {rank = same; G; UG; }
    {rank = same; S1; S2; UGUS }
    {rank = same; UGUSUS  }
    {rank = same; S2_STOKED;S2_UNSTOKED   }
  }
 /***************************************************/

 }
