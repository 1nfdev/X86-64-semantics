// Autogenerated from templates.
requires "x86-configuration.k"

/*@ This file defines the semantics of following 51 base instructions.
  - vcvtdq2pd_ymm_ymm, vcvtdq2ps_ymm_ymm,  32 Int -> 64 doubles or 32 floats
  - vcvtpd2ps_xmm_ymm (NOT IMPLEMENTED) , vcvtps2pd_ymm_xmm, doubles <-> floats

  // Not implemented
  - vcvtpd2dq_xmm_ymm, vcvtps2dq_ymm_ymm   64 doubles or 32 floats -> 32 Ints
  - vcvttpd2dq_xmm_ymm, vcvttps2dq_ymm_ymm,

vcvtdq2pd_ymm_ymm
vcvtdq2ps_ymm_ymm
vcvtpd2ps_xmm_ymm

*/

module VCVTDQ2PD-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr(vcvtdq2pd  Y1:Ymm,  Y2:Ymm, .Typedoperands) =>
      setRegisterValue(
          joinVector(
            applyUIFs(
              splitVector(
                extractMask(getRegisterValue(Y1, RSMap), 128, 0), 
                32), 
              cvt_int32_to_double)),
          Y2)  
  ...</k>
    <regstate> RSMap</regstate>
endmodule

module VCVTDQ2PS-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr(vcvtdq2ps  Y1:Ymm,  Y2:Ymm, .Typedoperands) =>
      setRegisterValue(
          joinVector(applyUIFs(splitVector(getRegisterValue(Y1, RSMap), 32), cvt_int32_to_single)),
          Y2)  
  ...</k>
    <regstate> RSMap</regstate>
endmodule

module VCVTPS2PD-YMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr(vcvtps2pd  X:Xmm,  Y:Ymm, .Typedoperands) =>
      setRegisterValue(
          joinVector(applyUIFs(splitVector(getRegisterValue(X, RSMap), 32), cvt_single_to_double)),
          Y)
  ...</k>
    <regstate> RSMap</regstate>
endmodule

module VCVT-SEMANTICS
  imports VCVTDQ2PD-YMM-YMM
  imports VCVTDQ2PS-YMM-YMM
  imports VCVTPS2PD-YMM-XMM
endmodule
