// Autogenerated using stratification.
requires "x86-configuration.k"

module VDIVPS-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vdivps R1:Xmm, R2:Xmm, R3:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt( div_single ( extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R2, RSMap), 128, 160) ) ,  div_single ( extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192) ) ), concatenateMInt( div_single ( extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R2, RSMap), 192, 224) ) ,  div_single ( extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256) ) ))) )


)

    </regstate>
endmodule

module VDIVPS-XMM-XMM-XMM-SEMANTICS
  imports VDIVPS-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vdivps %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 %xmm3 }
must read:{ %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:divps %xmm3, %xmm2    #  1     0     3      OPC=divps_xmm_xmm
circuit:vmovdqa %xmm2, %xmm8  #  2     0x3   4      OPC=vmovdqa_xmm_xmm
circuit:vmovdqa %ymm8, %ymm4  #  3     0x7   5      OPC=vmovdqa_ymm_ymm
circuit:vmovdqa %xmm4, %xmm1  #  4     0xc   4      OPC=vmovdqa_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vdivps %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : (concat <0x0|128> (concat (concat div_single(<%ymm2|256>[127:96], <%ymm3|256>[127:96]) div_single(<%ymm2|256>[95:64], <%ymm3|256>[95:64])) (concat div_single(<%ymm2|256>[63:32], <%ymm3|256>[63:32]) div_single(<%ymm2|256>[31:0], <%ymm3|256>[31:0]))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/