-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(movsbw(.KList@BASIC-K),, typeoperandlist(%r12b(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movw(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, typeoperandlist(%r12w(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _79_644:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _78_643:K@SORT-K String@STRING-SYNTAX(#""R12"") |-> _73_638:K@SORT-K String@STRING-SYNTAX(#""R13"") |-> _74_639:K@SORT-K String@STRING-SYNTAX(#""R8"") |-> _75_640:K@SORT-K String@STRING-SYNTAX(#""R9"") |-> _76_641:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _72_637:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _77_642:K@SORT-K   ),, <regstatequeue>(_80_645:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(movsbw(.KList@BASIC-K),, typeoperandlist(%r12b(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movw(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, typeoperandlist(%r12w(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %r12(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r13(.KList@BASIC-K)), execinstr(__(movsbw(.KList@BASIC-K),, typeoperandlist(%r12b(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movw(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, typeoperandlist(%r12w(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r13(.KList@BASIC-K)), execinstr(__(movsbw(.KList@BASIC-K),, typeoperandlist(%r12b(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movw(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, typeoperandlist(%r12w(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R13"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movsbw(.KList@BASIC-K),, typeoperandlist(%r12b(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movw(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, typeoperandlist(%r12w(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movw(.KList@BASIC-K),, typeoperandlist(%ax(.KList@BASIC-K),, typeoperandlist(%r12w(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r12(.KList@BASIC-K),, %r13(.KList@BASIC-K),, %xmm2(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"64")), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, %xmm2(.KList@BASIC-K)), split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %r8(.KList@BASIC-K),, %r9(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, %r8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r9(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %r9(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%ymm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"3"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterBitsAtPositon(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"24")), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"2"),, %ymm1(.KList@BASIC-K)), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterBitsAtPositon(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"16")), movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"232"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(movByteToPosOfReg(%r8b(.KList@BASIC-K),, Int@INT-SYNTAX(#"1"),, %ymm1(.KList@BASIC-K)), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterBitsAtPositon(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"8")), execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpbroadcastd(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))),, concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, concatenateMInt(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256"))))))) String@STRING-SYNTAX(#""R12"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R13"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"240")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""R9"") |-> extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"48'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_636:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"248"),, Int@INT-SYNTAX(#"256")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
82.39user 1.31system 0:21.03elapsed 398%CPU (0avgtext+0avgdata 2489044maxresident)k
0inputs+3824outputs (0major+567055minor)pagefaults 0swaps
