// Autogenerated from templates.
requires "x86-semantic-utils.k"

/*@ This file defines the semantics of following 51 base instructions.
  - xorq_r64_r64,
*/

module XOR-R64-R64
  imports X86-SEMANTIC-UTILS

  // Unroll START
Unroll START PATTERN-1
  rule <k> 
    execinstr (xorq, (%REG64 ,  (%REG64 , .Typedoperands)) ) => 
      execinstr (xorq, %REG64 ,  MI, MI, zeroMIntW64 , .Typedoperands )  
  ...</k>
  <REG64> MI </REG64>
Unroll END

Unroll START PATTERN-5
  rule <k> 
    execinstr ( xorq , (%REG64_1 ,  (%REG64_2 , .Typedoperands)) ) =>
      execinstr(xorq, (%REG64_2, MIsrc1, MIsrc2, xorMInt(MIsrc1, MIsrc2), .Typedoperands)) 
  ...</k>
  <REG64_1> MIsrc1 </REG64_1>
  <REG64_2> MIsrc2 </REG64_2>
Unroll END
  // Unroll END

  rule
      execinstr(xorq, ( DestR:R64, MIsrc1:MInt, MIsrc2:MInt, MIresult:MInt, .Typedoperands )) 
    => 
      setOverflow(zeroMIntW1) ~> 
      updateZeroFlag(MIresult) ~> 
      updateSignFlag(MIresult) ~> 
      setAuxCarryFlag(undef) ~> 
      setCarryFlag(zeroMIntW1) ~> 
      updateParityFlag(MIresult) ~> 
      updateReg(MIresult, DestR) 

endmodule

module XOR-SEMANTICS
  imports XOR-R64-R64
endmodule
