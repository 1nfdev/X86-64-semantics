// Autogenerated using stratification.
requires "x86-configuration.k"

module MAXPS-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (maxps R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 128), concatenateMInt(concatenateMInt(Float2MInt(maxFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 128, 160), 24, 8), MInt2Float(extractMInt(getParentValue(R2, RSMap), 128, 160), 24, 8)), 32), Float2MInt(maxFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 160, 192), 24, 8), MInt2Float(extractMInt(getParentValue(R2, RSMap), 160, 192), 24, 8)), 32)), concatenateMInt(Float2MInt(maxFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 224), 24, 8), MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 224), 24, 8)), 32), Float2MInt(maxFloat(MInt2Float(extractMInt(getParentValue(R1, RSMap), 224, 256), 24, 8), MInt2Float(extractMInt(getParentValue(R2, RSMap), 224, 256), 24, 8)), 32)))) )


)

    </regstate>
endmodule

module MAXPS-XMM-XMM-SEMANTICS
  imports MAXPS-XMM-XMM
endmodule
/*
TargetInstr:
maxps %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 }
must read:{ %xmm1 %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ sse }

Circuit:
circuit:vmaxps %xmm2, %xmm1, %xmm2         #  1     0    4      OPC=vmaxps_xmm_xmm_xmm
circuit:callq .move_128_64_xmm2_xmm8_xmm9  #  2     0x4  5      OPC=callq_label
circuit:callq .move_64_128_xmm8_xmm9_xmm1  #  3     0x9  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

maxps %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse }

Circuits:

%ymm1  : %ymm1[255:128] ∘ ((maxcmp_single(%ymm1[127:96], %ymm2[127:96]) = 0x1₁ ? %ymm1[127:96] : %ymm2[127:96]) ∘ ((maxcmp_single(%ymm1[95:64], %ymm2[95:64]) = 0x1₁ ? %ymm1[95:64] : %ymm2[95:64]) ∘ ((maxcmp_single(%ymm1[63:32], %ymm2[63:32]) = 0x1₁ ? %ymm1[63:32] : %ymm2[63:32]) ∘ (maxcmp_single(%ymm1[31:0], %ymm2[31:0]) = 0x1₁ ? %ymm1[31:0] : %ymm2[31:0]))))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/