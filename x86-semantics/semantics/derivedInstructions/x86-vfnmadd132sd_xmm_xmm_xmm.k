// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMADD132SD-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmadd132sd R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(xorMInt(extractMInt(getParentValue(R3, RSMap), 128, 192), mi(64, 0)), Float2MInt( ( MInt2Float(extractMInt(getParentValue(R2, RSMap), 192, 256), 53, 11)  +Float  negateFloat( ( MInt2Float(xorMInt(extractMInt(getParentValue(R3, RSMap), 192, 256), mi(64, 0)), 53, 11)  *Float  MInt2Float(extractMInt(getParentValue(R1, RSMap), 192, 256), 53, 11) ) ) ) , 64))) )


)

    </regstate>
endmodule

module VFNMADD132SD-XMM-XMM-XMM-SEMANTICS
  imports VFNMADD132SD-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfnmadd132sd %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vandpd %xmm1, %xmm1, %xmm9        #  1     0    4      OPC=vandpd_xmm_xmm_xmm
circuit:vfnmadd231pd %xmm3, %xmm9, %xmm2  #  2     0x4  5      OPC=vfnmadd231pd_xmm_xmm_xmm
circuit:vmovsd %xmm2, %xmm9, %xmm1        #  3     0x9  4      OPC=vmovsd_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmadd132sd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₆₄ ⊕ (%ymm1[127:64] | 0x0₆₄)) ∘ vfnmadd132_double(0x0₆₄ ⊕ (%ymm1[63:0] | 0x0₆₄), %ymm2[63:0], %ymm3[63:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/