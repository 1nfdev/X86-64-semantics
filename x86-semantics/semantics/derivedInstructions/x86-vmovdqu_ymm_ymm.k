// Autogenerated using stratification.
requires "x86-configuration.k"

module VMOVDQU-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vmovdqu R1:Ymm, R2:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (getParentValue(R1, RSMap) )


)

    </regstate>
endmodule

module VMOVDQU-YMM-YMM-SEMANTICS
  imports VMOVDQU-YMM-YMM
endmodule
/*
TargetInstr:
vmovdqu %ymm2, %ymm1
RWSet:
maybe read:{ %ymm2 }
must read:{ %ymm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:vmaxps %ymm2, %ymm2, %ymm10  #  1     0    4      OPC=vmaxps_ymm_ymm_ymm
circuit:vmaxpd %ymm10, %ymm2, %ymm1  #  2     0x4  5      OPC=vmaxpd_ymm_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vmovdqu %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : %ymm2

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/