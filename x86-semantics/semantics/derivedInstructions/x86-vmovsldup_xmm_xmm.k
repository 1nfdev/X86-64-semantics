// Autogenerated using stratification.
requires "x86-configuration.k"

module VMOVSLDUP-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vmovsldup R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))) )


)

    </regstate>
endmodule

module VMOVSLDUP-XMM-XMM-SEMANTICS
  imports VMOVSLDUP-XMM-XMM
endmodule
/*
TargetInstr:
vmovsldup %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:callq .move_128_64_xmm2_xmm12_xmm13  #  1     0     5      OPC=callq_label
circuit:vbroadcastss %xmm2, %xmm9            #  2     0x5   5      OPC=vbroadcastss_xmm_xmm
circuit:vbroadcastss %xmm13, %xmm5           #  3     0xa   5      OPC=vbroadcastss_xmm_xmm
circuit:vpunpcklqdq %xmm5, %xmm9, %xmm1      #  4     0xf   4      OPC=vpunpcklqdq_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vmovsldup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ (%ymm2[95:64] ∘ %ymm2[95:64] ∘ (%ymm2[31:0] ∘ %ymm2[31:0]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/