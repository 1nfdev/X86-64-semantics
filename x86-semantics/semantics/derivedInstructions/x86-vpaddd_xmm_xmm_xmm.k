// Autogenerated using stratification.
requires "x86-configuration.k"

module VPADDD-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpaddd R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt(extractMInt(addMInt(concatenateMInt(mi(33, 0), extractMInt(getParentValue(R2, RSMap), 128, 160)), concatenateMInt(mi(33, 0), extractMInt(getParentValue(R1, RSMap), 128, 160))), 33, 65), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192))), concatenateMInt(mi(33, 0), extractMInt(getParentValue(R2, RSMap), 160, 192))), 33, 65)), concatenateMInt(extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R2, RSMap), 192, 224)))), 33, 65), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R2, RSMap), 224, 256)))), 33, 65)))) )


)

    </regstate>
endmodule

module VPADDD-XMM-XMM-XMM-SEMANTICS
  imports VPADDD-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vpaddd %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 %xmm3 }
must read:{ %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:paddd %xmm3, %xmm2                #  1     0     4      OPC=paddd_xmm_xmm
circuit:callq .move_128_064_xmm2_r12_r13  #  2     0x4   5      OPC=callq_label
circuit:vzeroall                          #  3     0x9   3      OPC=vzeroall
circuit:callq .move_064_128_r12_r13_xmm1  #  4     0xc   5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vpaddd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm2 %xmm3 }
  must read:       { %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : 0x0₁₂₈ ∘ ((0x0₁ ∘ (0x0₃₂ ∘ %ymm2[127:96]) + 0x0₁ ∘ (0x0₃₂ ∘ %ymm3[127:96]))[31:0] ∘ (0x0₁ ∘ (%ymm2[95:64] ∘ %ymm3[95:64]) + 0x0₁ ∘ (0x0₃₂ ∘ %ymm2[95:64]))[31:0] ∘ (0x0₁ ∘ (%ymm3[63:32] ∘ %ymm3[63:32]) + 0x0₁ ∘ (%ymm3[63:32] ∘ %ymm2[63:32]))[31:0] ∘ (0x0₁ ∘ (%ymm3[31:0] ∘ %ymm3[31:0]) + 0x0₁ ∘ (%ymm3[31:0] ∘ %ymm2[31:0]))[31:0])

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/