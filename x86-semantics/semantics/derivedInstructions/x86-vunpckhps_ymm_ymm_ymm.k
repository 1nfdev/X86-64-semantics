// Autogenerated using stratification.
requires "x86-configuration.k"

module VUNPCKHPS-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vunpckhps R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 32), extractMInt(getParentValue(R2, RSMap), 0, 32)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 32, 64), extractMInt(getParentValue(R2, RSMap), 32, 64))), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R2, RSMap), 128, 160)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R2, RSMap), 160, 192)))) )


)

    </regstate>
endmodule

module VUNPCKHPS-YMM-YMM-YMM-SEMANTICS
  imports VUNPCKHPS-YMM-YMM-YMM
endmodule
/*
TargetInstr:
vunpckhps %ymm3, %ymm2, %ymm1
RWSet:
maybe read:{ %ymm2 %ymm3 }
must read:{ %ymm2 %ymm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:unpckhps %xmm3, %xmm2                 #  1     0     3      OPC=unpckhps_xmm_xmm
circuit:callq .move_256_128_ymm3_xmm10_xmm11  #  2     0x3   5      OPC=callq_label
circuit:callq .move_256_128_ymm2_xmm12_xmm13  #  3     0x8   5      OPC=callq_label
circuit:punpckhdq %xmm11, %xmm13              #  4     0xd   5      OPC=punpckhdq_xmm_xmm
circuit:callq .move_128_256_xmm12_xmm13_ymm1  #  5     0x12  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vunpckhps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm2 %ymm3 }
  must read:       { %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : %ymm3[255:224] ∘ %ymm2[255:224] ∘ (%ymm3[223:192] ∘ %ymm2[223:192]) ∘ (%ymm3[127:96] ∘ %ymm2[127:96] ∘ (%ymm3[95:64] ∘ %ymm2[95:64]))

sigfpe  : sigfpe
sigbus  : sigbus
sigsegv : sigsegv

*/