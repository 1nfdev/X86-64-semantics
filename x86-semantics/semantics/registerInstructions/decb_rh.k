// Autogenerated using stratification.
requires "x86-configuration.k"

module DECB-RH
  imports X86-CONFIGURATION

  rule <k>
    execinstr (decb R1:Rh,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 0, 48), extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( getParentValue(R1, RSMap), 48, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 1, 9))), 1, 9)), extractMInt( getParentValue(R1, RSMap), 56, 64))

"PF" |-> (#ifMInt ((countOnes(extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( getParentValue(R1, RSMap), 48, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 1, 9))), 1, 9), 0) &Int 1) ==K 0) #then mi(1,1) #else mi(1,0) #fi)

"AF" |-> extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( getParentValue(R1, RSMap), 52, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 5, 9))), 0, 1)

"ZF" |-> (#ifMInt eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( getParentValue(R1, RSMap), 48, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 1, 9))), 1, 9), mi(8, 0)) #then mi(1, 1) #else mi(1, 0) #fi)

"SF" |-> extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( getParentValue(R1, RSMap), 48, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 1, 9))), 1, 2)

"OF" |-> (#ifMInt ((eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) ==Bool eqMInt( extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 1, 2), mi(1, 1))) andBool (notBool (eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) ==Bool eqMInt( extractMInt( addMInt( concatenateMInt( mi(1, 0), extractMInt( getParentValue(R1, RSMap), 48, 56)), concatenateMInt( mi(1, 0), extractMInt( addMInt( concatenateMInt( mi(16, 0), getParity(mi(8, 16))), mi(17, 65535)), 1, 9))), 1, 2), mi(1, 1))))) #then mi(1, 1) #else mi(1, 0) #fi)
)

    </regstate>
endmodule

module DECB-RH-SEMANTICS
  imports DECB-RH
endmodule
