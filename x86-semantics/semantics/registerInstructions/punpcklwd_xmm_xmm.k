// Autogenerated using stratification.
requires "x86-configuration.k"

module PUNPCKLWD-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (punpcklwd R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 128), concatenateMInt( xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 192, 208)), concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 208, 224))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)), concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224))), orMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 192, 224), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), extractMInt( getParentValue(R1, RSMap), 208, 224))), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)), concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 208, 224)))))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 224, 240)), concatenateMInt( mi(16, 0), extractMInt( getParentValue(R2, RSMap), 240, 256))), xorMInt( concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256))), orMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 224, 256), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256)), concatenateMInt( mi(16, 0), extractMInt( getParentValue(R1, RSMap), 240, 256))))))))
)

    </regstate>
endmodule

module PUNPCKLWD-XMM-XMM-SEMANTICS
  imports PUNPCKLWD-XMM-XMM
endmodule
