// Autogenerated using stratification.
requires "x86-configuration.k"

module XORB-RH-R8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (xorb R1:R8, R2:Rh,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 48), xorMInt( extractMInt( getParentValue(R1, RSMap), 56, 64), extractMInt( getParentValue(R2, RSMap), 48, 56))), extractMInt( getParentValue(R2, RSMap), 56, 64))

"CF" |-> mi(1, 0)

"PF" |-> (#ifMInt (notBool (((((((eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 63, 64), extractMInt( getParentValue(R2, RSMap), 55, 56)), mi(1, 1)) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 62, 63), extractMInt( getParentValue(R2, RSMap), 54, 55)), mi(1, 1))) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 61, 62), extractMInt( getParentValue(R2, RSMap), 53, 54)), mi(1, 1))) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 60, 61), extractMInt( getParentValue(R2, RSMap), 52, 53)), mi(1, 1))) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 59, 60), extractMInt( getParentValue(R2, RSMap), 51, 52)), mi(1, 1))) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 58, 59), extractMInt( getParentValue(R2, RSMap), 50, 51)), mi(1, 1))) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 57, 58), extractMInt( getParentValue(R2, RSMap), 49, 50)), mi(1, 1))) xorBool eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 56, 57), extractMInt( getParentValue(R2, RSMap), 48, 49)), mi(1, 1)))) #then mi(1, 1) #else mi(1, 0) #fi)

"AF" |-> (undef)

"ZF" |-> (#ifMInt eqMInt( xorMInt( extractMInt( getParentValue(R1, RSMap), 56, 64), extractMInt( getParentValue(R2, RSMap), 48, 56)), mi(8, 0)) #then mi(1, 1) #else mi(1, 0) #fi)

"SF" |-> xorMInt( extractMInt( getParentValue(R1, RSMap), 56, 57), extractMInt( getParentValue(R2, RSMap), 48, 49))

"OF" |-> mi(1, 0)
)

    </regstate>
endmodule

module XORB-RH-R8-SEMANTICS
  imports XORB-RH-R8
endmodule
