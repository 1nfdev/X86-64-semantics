// Autogenerated using stratification.
requires "x86-configuration.k"

module PMOVZXDQ-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (pmovzxdq R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 128), concatenateMInt(concatenateMInt(concatenateMInt(mi(32, 0), extractMInt(getParentValue(R1, RSMap), 192, 224)), mi(32, 0)), extractMInt(getParentValue(R1, RSMap), 224, 256))) )


)

    </regstate>
endmodule

module PMOVZXDQ-XMM-XMM-SEMANTICS
  imports PMOVZXDQ-XMM-XMM
endmodule
/*
TargetInstr:
pmovzxdq %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ sse4_1 }

Circuit:
circuit:callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11  #  1     0     5      OPC=callq_label
circuit:callq .move_128_256_xmm8_xmm9_ymm3              #  2     0x5   5      OPC=callq_label
circuit:vmovlhps %xmm3, %xmm3, %xmm6                    #  3     0xa   4      OPC=vmovlhps_xmm_xmm_xmm
circuit:movddup %xmm9, %xmm1                            #  4     0xe   5      OPC=movddup_xmm_xmm
circuit:movss %xmm6, %xmm1                              #  5     0x13  4      OPC=movss_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

pmovzxdq %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse4_1 }

Circuits:

%ymm1  : (concat <%ymm1|256>[255:128] (concat (concat (concat <0x0|32> <%ymm2|256>[63:32]) <0x0|32>) <%ymm2|256>[31:0]))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/