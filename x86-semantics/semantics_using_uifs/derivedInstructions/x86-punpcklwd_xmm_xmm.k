// Autogenerated using stratification.
requires "x86-configuration.k"

module PUNPCKLWD-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (punpcklwd R1:Xmm, R2:Xmm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(extractMInt(getParentValue(R2, RSMap), 0, 128), concatenateMInt(xorMInt(xorMInt(orMInt(concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224))), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 208, 224), extractMInt(getParentValue(R1, RSMap), 208, 224)))), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224)))), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R2, RSMap), 192, 208)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R2, RSMap), 208, 224)))), xorMInt(xorMInt(orMInt(concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256))), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 240, 256), extractMInt(getParentValue(R1, RSMap), 240, 256)))), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256)))), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R2, RSMap), 224, 240)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R2, RSMap), 240, 256)))))) )


)

    </regstate>
endmodule

module PUNPCKLWD-XMM-XMM-SEMANTICS
  imports PUNPCKLWD-XMM-XMM
endmodule
/*
TargetInstr:
punpcklwd %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 }
must read:{ %xmm1 %xmm2 }
maybe write:{ %xmm1 }
must write:{ %xmm1 }
maybe undef:{ }
must undef:{ }
required flags:{ sse2 }

Circuit:
circuit:pmovzxwd %xmm2, %xmm5                         #  1     0     5      OPC=pmovzxwd_xmm_xmm
circuit:pmovzxwd %xmm1, %xmm1                         #  2     0x5   5      OPC=pmovzxwd_xmm_xmm
circuit:vpbroadcastw %xmm5, %xmm0                     #  3     0xa   5      OPC=vpbroadcastw_xmm_xmm
circuit:vmovsldup %xmm5, %xmm14                       #  4     0xf   4      OPC=vmovsldup_xmm_xmm
circuit:callq .move_128_032_xmm2_xmm4_xmm5_xmm6_xmm7  #  5     0x13  5      OPC=callq_label
circuit:vpbroadcastw %xmm5, %ymm3                     #  6     0x18  5      OPC=vpbroadcastw_ymm_xmm
circuit:vpunpckldq %xmm3, %xmm0, %xmm0                #  7     0x1d  4      OPC=vpunpckldq_xmm_xmm_xmm
circuit:vpunpckldq %xmm2, %xmm0, %xmm13               #  8     0x21  4      OPC=vpunpckldq_xmm_xmm_xmm
circuit:vandnpd %ymm13, %ymm14, %ymm13                #  9     0x25  5      OPC=vandnpd_ymm_ymm_ymm
circuit:xorps %xmm13, %xmm1                           #  10    0x2a  4      OPC=xorps_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

punpcklwd %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 }
  must read:       { %xmm1 %xmm2 }
  maybe write:     { %xmm1 }
  must write:      { %xmm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { sse2 }

Circuits:

%ymm1  : (concat <%ymm1|256>[255:128] (concat (^ (concat (concat <0x0|16> <%ymm1|256>[63:48]) (concat <0x0|16> <%ymm1|256>[47:32])) (^ (concat (concat <0x0|16> <%ymm2|256>[47:32]) (concat <0x0|16> <%ymm2|256>[47:32])) (| (concat <%ymm2|256>[63:32] (concat <%ymm2|256>[47:32] <%ymm2|256>[47:32])) (concat (concat <0x0|16> <%ymm2|256>[47:32]) (concat <0x0|16> <%ymm2|256>[47:32]))))) (^ (concat (concat <0x0|16> <%ymm1|256>[31:16]) (concat <0x0|16> <%ymm1|256>[15:0])) (^ (concat (concat <0x0|16> <%ymm2|256>[15:0]) (concat <0x0|16> <%ymm2|256>[15:0])) (| (concat <%ymm2|256>[31:0] (concat <%ymm2|256>[15:0] <%ymm2|256>[15:0])) (concat (concat <0x0|16> <%ymm2|256>[15:0]) (concat <0x0|16> <%ymm2|256>[15:0])))))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/