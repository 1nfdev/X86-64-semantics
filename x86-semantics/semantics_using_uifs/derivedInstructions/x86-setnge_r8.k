// Autogenerated using stratification.
requires "x86-configuration.k"

module SETNGE-R8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (setnge R1:R8,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> (concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 56), xorMInt(concatenateMInt(mi(7, 0), getFlag("OF", RSMap)), concatenateMInt(mi(7, 0), getFlag("SF", RSMap)))) )


)

    </regstate>
endmodule

module SETNGE-R8-SEMANTICS
  imports SETNGE-R8
endmodule
/*
TargetInstr:
setnge %bl
RWSet:
maybe read:{ %sf %of }
must read:{ %sf %of }
maybe write:{ %bl }
must write:{ %bl }
maybe undef:{ }
must undef:{ }
required flags:{ }

Circuit:
circuit:callq .read_of_into_rbx            #  1     0     5      OPC=callq_label
circuit:callq .move_032_016_ebx_r12w_r13w  #  2     0x5   5      OPC=callq_label
circuit:callq .move_032_016_ebx_r8w_r9w    #  3     0xa   5      OPC=callq_label
circuit:callq .read_sf_into_rcx            #  4     0xf   5      OPC=callq_label
circuit:rolb $0x1, %r13b                   #  5     0x14  3      OPC=rolb_r8_one
circuit:xorl %ecx, %ebx                    #  6     0x17  2      OPC=xorl_r32_r32
circuit:xaddw %r9w, %r13w                  #  7     0x19  5      OPC=xaddw_r16_r16
circuit:callq .move_r9b_to_byte_5_of_rbx   #  8     0x1e  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

setnge %bl

  maybe read:      { %sf %of }
  must read:       { %sf %of }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Circuits:

%rbx   : (concat <%rbx|64>[63:8] (^ (if <%sf> then <0x1|8> else <0x0|8>) (if <%of> then <0x1|8> else <0x0|8>)))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/