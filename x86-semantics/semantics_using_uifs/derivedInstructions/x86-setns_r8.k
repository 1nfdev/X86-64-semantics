// Autogenerated using stratification.
requires "x86-configuration.k"

module SETNS-R8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (setns R1:R8,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> ((#ifMInt (eqMInt(concatenateMInt(mi(63, 0), getFlag("SF", RSMap)), mi(64, 0)) ) #then ( concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 56), mi(8, 1)) ) #else ( concatenateMInt(extractMInt(getParentValue(R1, RSMap), 0, 56), mi(8, 0)) ) #fi)  )


)

    </regstate>
endmodule

module SETNS-R8-SEMANTICS
  imports SETNS-R8
endmodule
/*
TargetInstr:
setns %bl
RWSet:
maybe read:{ %sf }
must read:{ %sf }
maybe write:{ %bl }
must write:{ %bl }
maybe undef:{ }
must undef:{ }
required flags:{ }

Circuit:
circuit:callq .read_sf_into_rcx            #  1     0     5      OPC=callq_label
circuit:callq .move_032_016_ecx_r12w_r13w  #  2     0x5   5      OPC=callq_label
circuit:callq .move_016_032_r12w_r13w_edx  #  3     0xa   5      OPC=callq_label
circuit:callq .move_032_016_edx_r10w_r11w  #  4     0xf   5      OPC=callq_label
circuit:popcntw %r10w, %r10w               #  5     0x14  6      OPC=popcntw_r16_r16
circuit:sete %bl                           #  6     0x1a  3      OPC=sete_r8
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

setns %bl

  maybe read:      { %sf }
  must read:       { %sf }
  maybe write:     { %bl }
  must write:      { %bl }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Circuits:

%rbx   : (concat <%rbx|64>[63:8] (if (== (if <%sf> then <0x1|64> else <0x0|64>) <0x0|64>) then <0x1|8> else <0x0|8>))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/