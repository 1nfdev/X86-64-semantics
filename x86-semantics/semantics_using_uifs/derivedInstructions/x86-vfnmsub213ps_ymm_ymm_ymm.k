// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMSUB213PS-YMM-YMM-YMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmsub213ps R1:Ymm, R2:Ymm, R3:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 0, 32), extractMInt(getParentValue(R1, RSMap), 0, 32), extractMInt(getParentValue(R3, RSMap), 0, 32) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 32, 64), extractMInt(getParentValue(R1, RSMap), 32, 64), extractMInt(getParentValue(R3, RSMap), 32, 64) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 64, 96), extractMInt(getParentValue(R1, RSMap), 64, 96), extractMInt(getParentValue(R3, RSMap), 64, 96) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 96, 128), extractMInt(getParentValue(R1, RSMap), 96, 128), extractMInt(getParentValue(R3, RSMap), 96, 128) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 128, 160), extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R3, RSMap), 128, 160) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 160, 192), extractMInt(getParentValue(R1, RSMap), 160, 192), extractMInt(getParentValue(R3, RSMap), 160, 192) ) , concatenateMInt( vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R3, RSMap), 192, 224) ) ,  vfnmsub132_single ( extractMInt(getParentValue(R2, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R3, RSMap), 224, 256) ) ))))))) )


)

    </regstate>
endmodule

module VFNMSUB213PS-YMM-YMM-YMM-SEMANTICS
  imports VFNMSUB213PS-YMM-YMM-YMM
endmodule
/*
TargetInstr:
vfnmsub213ps %ymm3, %ymm2, %ymm1
RWSet:
maybe read:{ %ymm1 %ymm2 %ymm3 }
must read:{ %ymm1 %ymm2 %ymm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vfnmsub132ps %ymm1, %ymm3, %ymm2  #  1     0    5      OPC=vfnmsub132ps_ymm_ymm_ymm
circuit:vmaxps %ymm2, %ymm2, %ymm1        #  2     0x5  4      OPC=vmaxps_ymm_ymm_ymm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmsub213ps %ymm3, %ymm2, %ymm1

  maybe read:      { %ymm1 %ymm2 %ymm3 }
  must read:       { %ymm1 %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat vfnmsub132_single(<%ymm2|256>[255:224], <%ymm3|256>[255:224], <%ymm1|256>[255:224]) (concat vfnmsub132_single(<%ymm2|256>[223:192], <%ymm3|256>[223:192], <%ymm1|256>[223:192]) (concat vfnmsub132_single(<%ymm2|256>[191:160], <%ymm3|256>[191:160], <%ymm1|256>[191:160]) (concat vfnmsub132_single(<%ymm2|256>[159:128], <%ymm3|256>[159:128], <%ymm1|256>[159:128]) (concat vfnmsub132_single(<%ymm2|256>[127:96], <%ymm3|256>[127:96], <%ymm1|256>[127:96]) (concat vfnmsub132_single(<%ymm2|256>[95:64], <%ymm3|256>[95:64], <%ymm1|256>[95:64]) (concat vfnmsub132_single(<%ymm2|256>[63:32], <%ymm3|256>[63:32], <%ymm1|256>[63:32]) vfnmsub132_single(<%ymm2|256>[31:0], <%ymm3|256>[31:0], <%ymm1|256>[31:0]))))))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/