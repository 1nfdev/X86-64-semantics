// Autogenerated using stratification.
requires "x86-configuration.k"

module VFNMSUB231PD-XMM-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vfnmsub231pd R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (concatenateMInt(mi(128, 0), concatenateMInt( vfnmsub132_double ( extractMInt(getParentValue(R2, RSMap), 128, 192), extractMInt(getParentValue(R3, RSMap), 128, 192), extractMInt(getParentValue(R1, RSMap), 128, 192) ) ,  vfnmsub132_double ( extractMInt(getParentValue(R2, RSMap), 192, 256), extractMInt(getParentValue(R3, RSMap), 192, 256), extractMInt(getParentValue(R1, RSMap), 192, 256) ) )) )


)

    </regstate>
endmodule

module VFNMSUB231PD-XMM-XMM-XMM-SEMANTICS
  imports VFNMSUB231PD-XMM-XMM-XMM
endmodule
/*
TargetInstr:
vfnmsub231pd %xmm3, %xmm2, %xmm1
RWSet:
maybe read:{ %xmm1 %xmm2 %xmm3 }
must read:{ %xmm1 %xmm2 %xmm3 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ fma }

Circuit:
circuit:vorpd %xmm3, %xmm3, %xmm6         #  1     0     4      OPC=vorpd_xmm_xmm_xmm
circuit:vmovapd %xmm1, %xmm3              #  2     0x4   4      OPC=vmovapd_xmm_xmm
circuit:movaps %xmm6, %xmm1               #  3     0x8   3      OPC=movaps_xmm_xmm
circuit:vfnmsub213pd %xmm3, %xmm2, %xmm1  #  4     0xb   5      OPC=vfnmsub213pd_xmm_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vfnmsub231pd %xmm3, %xmm2, %xmm1

  maybe read:      { %xmm1 %xmm2 %xmm3 }
  must read:       { %xmm1 %xmm2 %xmm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { fma }

Circuits:

%ymm1  : (concat <0x0|128> (concat vnfmsub132_double(<%ymm2|256>[127:64], <%ymm1|256>[127:64], <%ymm3|256>[127:64]) vnfmsub132_double(<%ymm2|256>[63:0], <%ymm1|256>[63:0], <%ymm3|256>[63:0])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/