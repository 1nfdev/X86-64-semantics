// Autogenerated using stratification.
requires "x86-configuration.k"

module VMOVSHDUP-XMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vmovshdup R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(mi(128, 0), concatenateMInt(concatenateMInt(extractMInt(getParentValue(R1, RSMap), 128, 160), extractMInt(getParentValue(R1, RSMap), 128, 160)), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224)))) )


)

    </regstate>
endmodule

module VMOVSHDUP-XMM-XMM-SEMANTICS
  imports VMOVSHDUP-XMM-XMM
endmodule
/*
TargetInstr:
vmovshdup %xmm2, %xmm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx }

Circuit:
circuit:callq .move_128_032_xmm2_xmm8_xmm9_xmm10_xmm11  #  1     0     5      OPC=callq_label
circuit:vmovsldup %xmm11, %xmm11                        #  2     0x5   5      OPC=vmovsldup_xmm_xmm
circuit:vmovdqa %xmm11, %xmm3                           #  3     0xa   5      OPC=vmovdqa_xmm_xmm
circuit:vmovsldup %xmm9, %xmm1                          #  4     0xf   5      OPC=vmovsldup_xmm_xmm
circuit:unpcklpd %xmm3, %xmm1                           #  5     0x14  4      OPC=unpcklpd_xmm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vmovshdup %xmm2, %xmm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Circuits:

%ymm1  : (concat <0x0|128> (concat (concat <%ymm2|256>[127:96] <%ymm2|256>[127:96]) (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/