// Autogenerated using stratification.
requires "x86-configuration.k"

module VPMOVSXWQ-YMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpmovsxwq R1:Xmm, R2:Ymm,  .Typedoperands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(concatenateMInt(mi(64, svalueMInt(extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 192, 208)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224))))), concatenateMInt(mi(1, 0), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224)))), 33, 49)), concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224)))), 49, 65))))), mi(65, 1)), 1, 33))), mi(64, svalueMInt(extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 192, 208)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224))))), concatenateMInt(mi(1, 0), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224)))), 33, 49)), concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 192, 224), extractMInt(getParentValue(R1, RSMap), 192, 224)))), 49, 65))))), mi(65, 1)), 33, 65)))), concatenateMInt(mi(64, svalueMInt(extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 224, 240)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256))))), concatenateMInt(mi(1, 0), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))), 33, 49)), concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))), 49, 65))))), mi(65, 1)), 1, 33))), mi(64, svalueMInt(extractMInt(addMInt(addMInt(concatenateMInt(mi(1, 0), xorMInt(mi(64, 18446744073709551615), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 224, 240)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256))))), concatenateMInt(mi(1, 0), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))), 33, 49)), concatenateMInt(mi(16, 0), extractMInt(addMInt(concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256))), concatenateMInt(mi(1, 0), concatenateMInt(extractMInt(getParentValue(R1, RSMap), 224, 256), extractMInt(getParentValue(R1, RSMap), 224, 256)))), 49, 65))))), mi(65, 1)), 33, 65))))) )


)

    </regstate>
endmodule

module VPMOVSXWQ-YMM-XMM-SEMANTICS
  imports VPMOVSXWQ-YMM-XMM
endmodule
/*
TargetInstr:
vpmovsxwq %xmm2, %ymm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx2 }

Circuit:
circuit:callq .move_128_064_xmm2_r8_r9       #  1     0     5      OPC=callq_label
circuit:callq .move_128_64_xmm2_xmm12_xmm13  #  2     0x5   5      OPC=callq_label
circuit:vpmovsxwd %xmm12, %ymm1              #  3     0xa   5      OPC=vpmovsxwd_ymm_xmm
circuit:callq .move_r9b_to_byte_25_of_ymm1   #  4     0xf   5      OPC=callq_label
circuit:vpmovsxdq %xmm1, %ymm1               #  5     0x14  5      OPC=vpmovsxdq_ymm_xmm
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vpmovsxwq %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Circuits:

%ymm1  : (concat (concat (sign-extend-64 (plus (plus (concat <0x0|1> (^ (concat (concat <0x0|16> <%ymm2|256>[63:48]) (concat <0x0|16> <%ymm2|256>[47:32])) <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])) (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])))[31:16]) (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])) (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])))[15:0]))))[63:32]) (sign-extend-64 (plus (plus (concat <0x0|1> (^ (concat (concat <0x0|16> <%ymm2|256>[63:48]) (concat <0x0|16> <%ymm2|256>[47:32])) <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])) (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])))[31:16]) (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])) (concat <0x0|1> (concat <%ymm2|256>[63:32] <%ymm2|256>[63:32])))[15:0]))))[31:0])) (concat (sign-extend-64 (plus (plus (concat <0x0|1> (^ (concat (concat <0x0|16> <%ymm2|256>[31:16]) (concat <0x0|16> <%ymm2|256>[15:0])) <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])) (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])))[31:16]) (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])) (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])))[15:0]))))[63:32]) (sign-extend-64 (plus (plus (concat <0x0|1> (^ (concat (concat <0x0|16> <%ymm2|256>[31:16]) (concat <0x0|16> <%ymm2|256>[15:0])) <0xffffffffffffffff|64>)) <0x1|65>) (concat <0x0|1> (concat (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])) (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])))[31:16]) (concat <0x0|16> (plus (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])) (concat <0x0|1> (concat <%ymm2|256>[31:0] <%ymm2|256>[31:0])))[15:0]))))[31:0])))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/