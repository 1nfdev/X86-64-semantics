// Autogenerated using stratification.
requires "x86-configuration.k"

module VPMOVZXWD-YMM-XMM
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpmovzxwd R1:Xmm, R2:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (concatenateMInt(concatenateMInt(concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 128, 144)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 144, 160))), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 160, 176)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 176, 192)))), concatenateMInt(concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 192, 208)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 208, 224))), concatenateMInt(concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 224, 240)), concatenateMInt(mi(16, 0), extractMInt(getParentValue(R1, RSMap), 240, 256))))) )


)

    </regstate>
endmodule

module VPMOVZXWD-YMM-XMM-SEMANTICS
  imports VPMOVZXWD-YMM-XMM
endmodule
/*
TargetInstr:
vpmovzxwd %xmm2, %ymm1
RWSet:
maybe read:{ %xmm2 }
must read:{ %xmm2 }
maybe write:{ %ymm1 }
must write:{ %ymm1 }
maybe undef:{ }
must undef:{ }
required flags:{ avx2 }

Circuit:
circuit:vmovdqa %xmm2, %xmm10               #  1     0     4      OPC=vmovdqa_xmm_xmm
circuit:callq .move_128_64_xmm2_xmm8_xmm9   #  2     0x4   5      OPC=callq_label
circuit:vpmovzxwd %xmm9, %xmm9              #  3     0x9   5      OPC=vpmovzxwd_xmm_xmm
circuit:vpmovzxwd %xmm10, %xmm8             #  4     0xe   5      OPC=vpmovzxwd_xmm_xmm
circuit:callq .move_128_256_xmm8_xmm9_ymm1  #  5     0x13  5      OPC=callq_label
BVF:
WARNING: No live out values provided, assuming { }
WARNING: No def in values provided; assuming { %mxcsr::rc[0] }
Target

vpmovzxwd %xmm2, %ymm1

  maybe read:      { %xmm2 }
  must read:       { %xmm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Circuits:

%ymm1  : (concat (concat (concat (concat <0x0|16> <%ymm2|256>[127:112]) (concat <0x0|16> <%ymm2|256>[111:96])) (concat (concat <0x0|16> <%ymm2|256>[95:80]) (concat <0x0|16> <%ymm2|256>[79:64]))) (concat (concat (concat <0x0|16> <%ymm2|256>[63:48]) (concat <0x0|16> <%ymm2|256>[47:32])) (concat (concat <0x0|16> <%ymm2|256>[31:16]) (concat <0x0|16> <%ymm2|256>[15:0]))))

sigfpe  : <sigfpe>
sigbus  : <sigbus>
sigsegv : <sigsegv>

*/