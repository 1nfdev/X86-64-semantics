-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vpmovzxdq(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm0(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovaps(.KList@BASIC-K),, typeoperandlist(%ymm0(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vcvtdq2pd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> _75_730:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _77_732:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _74_729:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _76_731:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _78_733:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _72_727:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _71_726:K@SORT-K String@STRING-SYNTAX(#""YMM0"") |-> _73_728:K@SORT-K   ),, <regstatequeue>(_79_734:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vpmovzxdq(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm0(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovaps(.KList@BASIC-K),, typeoperandlist(%ymm0(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vcvtdq2pd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vpmovzxdq(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm0(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vmovaps(.KList@BASIC-K),, typeoperandlist(%ymm0(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vcvtdq2pd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmovaps(.KList@BASIC-K),, typeoperandlist(%ymm0(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(vcvtdq2pd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vcvtdq2pd(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(%ymm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))),, %ymm3(.KList@BASIC-K)), split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%ymm3(.KList@BASIC-K),, %xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))),, %xmm12(.KList@BASIC-K)), setRegisterValue(concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, %xmm13(.KList@BASIC-K)), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, %xmm13(.KList@BASIC-K)), combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%xmm12(.KList@BASIC-K),, %xmm13(.KList@BASIC-K),, %xmm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128")), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))),, %xmm1(.KList@BASIC-K)), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM12"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))))) String@STRING-SYNTAX(#""YMM13"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(_(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, MInt@MINT(#"32'0")),, _(_)(UIFUOperation@MINT-WRAPPER-SYNTAX(#"cvt_int32_to_double"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_724:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_725:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for _(_)
[Warning] Critical: missing SMTLib translation for mi
80.33user 0.92system 0:20.59elapsed 394%CPU (0avgtext+0avgdata 2174200maxresident)k
0inputs+3800outputs (0major+500107minor)pagefaults 0swaps
