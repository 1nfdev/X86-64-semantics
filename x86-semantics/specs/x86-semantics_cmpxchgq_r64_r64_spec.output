-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(cmpq(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%rax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(cmovneq(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%rax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(cmoveq(.KList@BASIC-K),, typeoperandlist(%rcx(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I2_561:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I8_567:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I1_560:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I4_563:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I3_562:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I9_568:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> _69_571:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _75_577:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _68_570:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _71_573:K@SORT-K String@STRING-SYNTAX(#""RCX"") |-> _74_576:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _70_572:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _67_569:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _72_574:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _73_575:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _76_578:K@SORT-K   ),, <regstatequeue>(_77_579:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(cmpq(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%rax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(cmovneq(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%rax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(cmoveq(.KList@BASIC-K),, typeoperandlist(%rcx(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I2_561:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I8_567:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I1_560:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I4_563:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I3_562:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, ?I9_568:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(cmovneq(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%rax(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(cmoveq(.KList@BASIC-K),, typeoperandlist(%rcx(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(cmoveq(.KList@BASIC-K),, typeoperandlist(%rcx(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(#ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX)),, %rbx(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX))),, concatenateMInt(MInt@MINT(#"1'0"),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX))),, MInt@MINT(#"65'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""SF"") |-> extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(_==K_(_&Int_(countOnes(extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0")),, Int@INT-SYNTAX(#"1")),, Int@INT-SYNTAX(#"0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, notBool_(eqMInt(xorMInt(MInt@MINT(#"1'1"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, extractMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, concatenateMInt(MInt@MINT(#"7'0"),, #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""RBX"") |-> #ifMInt_#then_#else_#fi(eqMInt(#ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")),, MInt@MINT(#"1'0")),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX),, mi(Int@INT-SYNTAX(#"64"),, ?I7_566:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(xorMInt(MInt@MINT(#"64'18446744073709551615"),, mi(Int@INT-SYNTAX(#"64"),, ?I6_565:Int@INT-SYNTAX)),, mi(Int@INT-SYNTAX(#"64"),, ?I5_564:Int@INT-SYNTAX)),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for _&Int_
[Warning] Critical: missing SMTLib translation for countOnes
[Warning] Critical: missing SMTLib translation for mi
103.80user 6.55system 0:30.87elapsed 357%CPU (0avgtext+0avgdata 2980104maxresident)k
0inputs+3728outputs (0major+114323minor)pagefaults 0swaps
