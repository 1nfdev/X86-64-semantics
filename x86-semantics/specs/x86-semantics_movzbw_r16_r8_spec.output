
InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(BaseOpcode@X86-SYNTAX(#"movq"),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"5")),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%rbx(.KList@BASIC-K),, %r12d(.KList@BASIC-K),, %r13d(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> _703:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _701:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _693:K@SORT-K String@STRING-SYNTAX(#""YMM12"") |-> _696:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _697:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _694:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _682:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _695:K@SORT-K String@STRING-SYNTAX(#""RDI"") |-> _706:K@SORT-K String@STRING-SYNTAX(#""YMM14"") |-> _698:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _683:K@SORT-K String@STRING-SYNTAX(#""YMM15"") |-> _699:K@SORT-K String@STRING-SYNTAX(#""RBP"") |-> _708:K@SORT-K String@STRING-SYNTAX(#""CF"") |-> _678:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _680:K@SORT-K String@STRING-SYNTAX(#""R8"") |-> _670:K@SORT-K String@STRING-SYNTAX(#""RDX"") |-> _704:K@SORT-K String@STRING-SYNTAX(#""R9"") |-> _671:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _702:K@SORT-K String@STRING-SYNTAX(#""RSI"") |-> _705:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _681:K@SORT-K String@STRING-SYNTAX(#""RSP"") |-> _707:K@SORT-K String@STRING-SYNTAX(#""R10"") |-> _672:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _686:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _685:K@SORT-K String@STRING-SYNTAX(#""R12"") |-> _674:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _688:K@SORT-K String@STRING-SYNTAX(#""R11"") |-> _673:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _687:K@SORT-K String@STRING-SYNTAX(#""R14"") |-> _676:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _690:K@SORT-K String@STRING-SYNTAX(#""R13"") |-> _675:K@SORT-K String@STRING-SYNTAX(#""YMM5"") |-> _689:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _679:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _692:K@SORT-K String@STRING-SYNTAX(#""R15"") |-> _677:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _691:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _700:K@SORT-K String@STRING-SYNTAX(#""YMM0"") |-> _684:K@SORT-K   ),, <regstatequeue>(_631:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(BaseOpcode@X86-SYNTAX(#"movq"),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"5")),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%rbx(.KList@BASIC-K),, %r12d(.KList@BASIC-K),, %r13d(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(MInt@MINT(#"64'5"),, %rbx(.KList@BASIC-K)), split2NToN(%rbx(.KList@BASIC-K),, %r12d(.KList@BASIC-K),, %r13d(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%rbx(.KList@BASIC-K),, %r12d(.KList@BASIC-K),, %r13d(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(MInt@MINT(#"32'5"),, %r12d(.KList@BASIC-K)), setRegisterValue(MInt@MINT(#"32'0"),, %r13d(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(MInt@MINT(#"32'0"),, %r13d(.KList@BASIC-K)), execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'5")) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(BaseOpcode@X86-SYNTAX(#"movsbq"),, typeoperandlist(%cl(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'5")) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, %r12(.KList@BASIC-K)), combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _635:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'5")) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r12b(.KList@BASIC-K),, %r13b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, %bx(.KList@BASIC-K)), execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> MInt@MINT(#"64'5") String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(DerivedOpcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(MInt@MINT(#"64'0"),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(MInt@MINT(#"64'0"),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(MInt@MINT(#"64'0"),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _654:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _657:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _658:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _655:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _643:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _656:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _659:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _644:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _660:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _639:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _641:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _632:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(MInt@MINT(#"64'0"),, shlMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"0"))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _642:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _633:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _647:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _646:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _649:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _634:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _648:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _637:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _651:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _636:Int@INT-SYNTAX),, MInt@MINT(#"64'-4294967296")),, MInt@MINT(#"64'0")) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _650:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _640:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _653:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _638:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _652:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _645:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
115.62user 2.17system 0:37.30elapsed 315%CPU (0avgtext+0avgdata 1086140maxresident)k
0inputs+3952outputs (0major+107935minor)pagefaults 0swaps
