
InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vdivps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), splitXmmToR32(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _530:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _527:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _528:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _529:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _531:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _526:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _525:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _532:K@SORT-K   ),, <regstatequeue>(_533:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vdivps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), splitXmmToR32(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vdivps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm8(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), splitXmmToR32(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm2(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, %xmm8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, %xmm9(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, %xmm9(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, %xmm11(.KList@BASIC-K)), execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vrsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm8(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vsqrtps(.KList@BASIC-K),, typeoperandlist(%ymm2(.KList@BASIC-K),, typeoperandlist(concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))),, %ymm2(.KList@BASIC-K)), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, Float@FLOAT-SYNTAX(#"0e+00f")),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, concatenateMInt(Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))))))))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_/Float_(Float@FLOAT-SYNTAX(#"1e+00"),, rootFloat(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, Int@INT-SYNTAX(#"2"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(concatenateMInt(Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))),, Float2MInt(_/Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"224'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
[Warning] Internal: Ignored exception thrown by hook _/Float_
59.73user 3.76system 0:15.72elapsed 403%CPU (0avgtext+0avgdata 1710380maxresident)k
0inputs+3784outputs (0major+72903minor)pagefaults 0swaps
