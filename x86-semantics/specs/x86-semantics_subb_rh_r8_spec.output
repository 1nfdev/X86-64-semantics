-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%rax(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(movzbl(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(decl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(andl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(sbbb(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _545:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _550:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _544:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _551:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> _555:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _561:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _554:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _557:K@SORT-K String@STRING-SYNTAX(#""RCX"") |-> _560:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _553:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _556:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _552:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _558:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _559:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _562:K@SORT-K   ),, <regstatequeue>(_563:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%rax(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(movzbl(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(decl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(andl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(sbbb(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _545:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _550:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _544:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _551:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movzbl(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(decl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(andl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(sbbb(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _545:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _550:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _544:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _551:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(decl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))), execinstr(__(andl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(sbbb(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _545:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _550:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _544:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _547:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"56'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _546:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _551:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(andl(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, typeoperandlist(%ecx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(sbbb(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _545:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"32'1"),, lshrMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, Int@INT-SYNTAX(#"31"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"32'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"32")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"32'2"),, addMInt(xorMInt(lshrMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"31")),, lshrMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, Int@INT-SYNTAX(#"31"))),, xorMInt(MInt@MINT(#"32'1"),, lshrMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, Int@INT-SYNTAX(#"31"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(sbbb(.KList@BASIC-K),, typeoperandlist(%bl(.KList@BASIC-K),, typeoperandlist(%ah(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"32'1"),, lshrMInt(xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0")),, Int@INT-SYNTAX(#"31"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(xorMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"32")),, MInt@MINT(#"8'0")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0")),, MInt@MINT(#"32'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"8"),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(ultMInt(addMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, %rax(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(ultMInt(addMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(ultMInt(addMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(ultMInt(addMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(ultMInt(addMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""CF"") |-> #ifMInt_#then_#else_#fi(ultMInt(addMInt(extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"15'0"),, #ifMInt_#then_#else_#fi(_orBool_(_orBool_(ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56"))),, ultMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, _orBool_(ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))))),, ultMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))),, MInt@MINT(#"16'65535")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'1"),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""AF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(andMInt(lshrMInt(xorMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"4")),, MInt@MINT(#"8'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RCX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, xorMInt(addMInt(concatenateMInt(MInt@MINT(#"24'0"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, MInt@MINT(#"32'-1")),, MInt@MINT(#"32'0"))) String@STRING-SYNTAX(#""SPAD1"") |-> concatenateMInt(MInt@MINT(#"192'0"),, mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX)) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"8'2"),, addMInt(xorMInt(lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))),, xorMInt(lshrMInt(xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, Int@INT-SYNTAX(#"7")),, lshrMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, Int@INT-SYNTAX(#"7"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"48")),, concatenateMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _548:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"56")),, xorMInt(MInt@MINT(#"8'255"),, extractMInt(mi(Int@INT-SYNTAX(#"64"),, _549:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))),, MInt@MINT(#"8'1")),, MInt@MINT(#"8'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0"))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
84.43user 2.61system 0:23.85elapsed 364%CPU (0avgtext+0avgdata 2359144maxresident)k
0inputs+3848outputs (0major+428990minor)pagefaults 0swaps
