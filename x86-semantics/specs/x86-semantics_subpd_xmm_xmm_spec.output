
InitialTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vmaxps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vmaxss(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vsubpd(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, typeoperandlist(%ymm10(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _528:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _526:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _527:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _529:K@SORT-K String@STRING-SYNTAX(#""SPAD1"") |-> _525:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _530:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _524:K@SORT-K   ),, <regstatequeue>(_531:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(saveRegister(%ymm1(.KList@BASIC-K),, String@STRING-SYNTAX(#""SPAD1"")), execinstr(__(vmaxps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vmaxss(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vsubpd(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, typeoperandlist(%ymm10(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmaxps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm6(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vmaxss(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vsubpd(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, typeoperandlist(%ymm10(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vmaxss(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vsubpd(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, typeoperandlist(%ymm10(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vsubpd(.KList@BASIC-K),, typeoperandlist(%ymm6(.KList@BASIC-K),, typeoperandlist(%ymm10(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vsubpd(.KList@BASIC-K),, typeoperandlist(%ymm7(.KList@BASIC-K),, typeoperandlist(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))),, %ymm7(.KList@BASIC-K)), execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movapd(.KList@BASIC-K),, typeoperandlist(%xmm7(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(restoreRegister(String@STRING-SYNTAX(#""SPAD1""),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM6"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM7"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")),, Float2MInt(_-Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _523:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"53"),, Int@INT-SYNTAX(#"11"))),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""SPAD1"") |-> mi(Int@INT-SYNTAX(#"256"),, _522:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for Float2MInt
[Warning] Critical: missing SMTLib translation for mi
64.20user 4.12system 0:16.04elapsed 426%CPU (0avgtext+0avgdata 1782180maxresident)k
0inputs+3712outputs (0major+82910minor)pagefaults 0swaps
