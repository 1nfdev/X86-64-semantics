-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(execinstr(__(andps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), split2NToN(%ymm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _531:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _528:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _529:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _530:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _532:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _533:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _527:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _534:K@SORT-K   ),, <regstatequeue>(_535:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(andps(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), split2NToN(%ymm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), split2NToN(%ymm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%ymm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), split2NToN(%ymm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, %xmm11(.KList@BASIC-K)), split2NToN(%ymm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, %xmm11(.KList@BASIC-K)), split2NToN(%ymm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%ymm3(.KList@BASIC-K),, %xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, Int@INT-SYNTAX(#"128")), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))))),, %xmm8(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, %xmm9(.KList@BASIC-K)), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, %xmm9(.KList@BASIC-K)), execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> MInt@MINT(#"256'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(pand(.KList@BASIC-K),, typeoperandlist(%xmm11(.KList@BASIC-K),, typeoperandlist(%xmm9(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%xmm8(.KList@BASIC-K),, %xmm9(.KList@BASIC-K),, %ymm1(.KList@BASIC-K),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"),, Int@INT-SYNTAX(#"128")), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))),, %ymm1(.KList@BASIC-K)), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _524:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128"))) String@STRING-SYNTAX(#""YMM3"") |-> concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"128")),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""YMM8"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")))))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM9"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"64")))),, xorMInt(orMInt(xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))),, xorMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, _526:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, _525:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"64"),, Int@INT-SYNTAX(#"128"))))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
81.15user 2.64system 0:21.71elapsed 385%CPU (0avgtext+0avgdata 1788360maxresident)k
0inputs+3784outputs (0major+189501minor)pagefaults 0swaps
