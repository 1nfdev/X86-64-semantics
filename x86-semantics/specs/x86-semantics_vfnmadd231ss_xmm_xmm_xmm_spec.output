-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmadd132ss(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vfnmsub213ss(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> _73_622:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _70_619:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _71_620:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _72_621:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _74_623:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _69_618:K@SORT-K   ),, <regstatequeue>(_75_624:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%xmm2(.KList@BASIC-K),, %xmm10(.KList@BASIC-K),, %xmm11(.KList@BASIC-K),, Int@INT-SYNTAX(#"64")), execinstr(__(vfnmadd132ss(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vfnmsub213ss(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256")),, %xmm10(.KList@BASIC-K)), setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm11(.KList@BASIC-K)), execinstr(__(vfnmadd132ss(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vfnmsub213ss(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192")),, %xmm11(.KList@BASIC-K)), execinstr(__(vfnmadd132ss(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vfnmsub213ss(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> MInt@MINT(#"256'0") String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vfnmadd132ss(.KList@BASIC-K),, typeoperandlist(%xmm3(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(vfnmsub213ss(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(vfnmsub213ss(.KList@BASIC-K),, typeoperandlist(%xmm10(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K)))))), execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(movss(.KList@BASIC-K),, typeoperandlist(%xmm2(.KList@BASIC-K),, typeoperandlist(%xmm1(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_-Float_(negateFloat(_*Float_(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM2"") |-> concatenateMInt(MInt@MINT(#"128'0"),, concatenateMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224")),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32")))) String@STRING-SYNTAX(#""YMM1"") |-> concatenateMInt(concatenateMInt(MInt@MINT(#"128'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"224"))),, Float2MInt(_+Float_(negateFloat(_*Float_(MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8")))),, MInt2Float(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I1_615:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256")),, Int@INT-SYNTAX(#"24"),, Int@INT-SYNTAX(#"8"))),, Int@INT-SYNTAX(#"32"))) String@STRING-SYNTAX(#""YMM10"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""YMM11"") |-> concatenateMInt(MInt@MINT(#"192'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_616:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I3_617:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0")   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
141.20user 5.72system 0:37.72elapsed 389%CPU (0avgtext+0avgdata 2898548maxresident)k
0inputs+3816outputs (0major+82333minor)pagefaults 0swaps
