-Xms64m -Xmx1024m -Xss32m -XX:+TieredCompilation -Xmx8g

InitialTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm1(.KList@BASIC-K),, %eax(.KList@BASIC-K),, %edx(.KList@BASIC-K),, %r8d(.KList@BASIC-K),, %r9d(.KList@BASIC-K),, Int@INT-SYNTAX(#"32")), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RDX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> _75_544:K@SORT-K String@STRING-SYNTAX(#""CF"") |-> _68_537:K@SORT-K String@STRING-SYNTAX(#""R8"") |-> _70_539:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _69_538:K@SORT-K String@STRING-SYNTAX(#""R9"") |-> _71_540:K@SORT-K String@STRING-SYNTAX(#""RDX"") |-> _74_543:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _67_536:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _72_541:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _73_542:K@SORT-K   ),, <regstatequeue>(_76_545:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(splitXmmToR32(%xmm1(.KList@BASIC-K),, %eax(.KList@BASIC-K),, %edx(.KList@BASIC-K),, %r8d(.KList@BASIC-K),, %r9d(.KList@BASIC-K),, Int@INT-SYNTAX(#"32")), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RDX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))),, %rax(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, %rdx(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, %r8(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, %r9(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RDX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, %rdx(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, %r8(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, %r9(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RDX"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))),, %r8(.KList@BASIC-K)), setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, %r9(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, %r9(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R9"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%r9d(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(readFlagToRegister(String@STRING-SYNTAX(#""CF""),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129"))),, notBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129")),, extractMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(MInt@MINT(#"63'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, %rbx(.KList@BASIC-K)), execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129"))),, notBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129")),, extractMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, ?I1_534:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(roll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%edx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129"))),, notBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"129")),, extractMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(MInt@MINT(#"63'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(rcll(.KList@BASIC-K),, typeoperandlist($0x_(HexConstant@X86-SYNTAX(#"1")),, typeoperandlist(%ebx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(_andBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"193")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"193"))),, notBool_(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"193")),, extractMInt(addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(MInt@MINT(#"63'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(nop(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(notBool_(eqMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(notBool_(eqMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(notBool_(eqMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")) String@STRING-SYNTAX(#""R8"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"160"),, Int@INT-SYNTAX(#"192"))) String@STRING-SYNTAX(#""R9"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""RDX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))))) String@STRING-SYNTAX(#""OF"") |-> #ifMInt_#then_#else_#fi(notBool_(eqMInt(MInt@MINT(#"1'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RAX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"224"),, Int@INT-SYNTAX(#"256"))) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""RBX"") |-> concatenateMInt(MInt@MINT(#"32'0"),, addMInt(addMInt(concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1"))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"128"),, Int@INT-SYNTAX(#"160")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, concatenateMInt(MInt@MINT(#"31'0"),, extractMInt(addMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, concatenateMInt(MInt@MINT(#"32'0"),, extractMInt(addMInt(concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224"))),, concatenateMInt(MInt@MINT(#"1'0"),, extractMInt(mi(Int@INT-SYNTAX(#"256"),, ?I2_535:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"192"),, Int@INT-SYNTAX(#"224")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"1")))))   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
183.07user 6.82system 0:49.99elapsed 379%CPU (0avgtext+0avgdata 2939352maxresident)k
0inputs+3840outputs (0major+83639minor)pagefaults 0swaps
