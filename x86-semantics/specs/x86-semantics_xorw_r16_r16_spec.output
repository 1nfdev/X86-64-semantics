
InitialTerm: 
<T>(<k>(#KSequence(split2NToN(%cx(.KList@BASIC-K),, %r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

TargetTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> _732:K@SORT-K String@STRING-SYNTAX(#""RAX"") |-> _730:K@SORT-K String@STRING-SYNTAX(#""YMM9"") |-> _722:K@SORT-K String@STRING-SYNTAX(#""YMM12"") |-> _725:K@SORT-K String@STRING-SYNTAX(#""YMM13"") |-> _726:K@SORT-K String@STRING-SYNTAX(#""YMM10"") |-> _723:K@SORT-K String@STRING-SYNTAX(#""SF"") |-> _711:K@SORT-K String@STRING-SYNTAX(#""YMM11"") |-> _724:K@SORT-K String@STRING-SYNTAX(#""RDI"") |-> _735:K@SORT-K String@STRING-SYNTAX(#""YMM14"") |-> _727:K@SORT-K String@STRING-SYNTAX(#""OF"") |-> _712:K@SORT-K String@STRING-SYNTAX(#""YMM15"") |-> _728:K@SORT-K String@STRING-SYNTAX(#""RBP"") |-> _737:K@SORT-K String@STRING-SYNTAX(#""CF"") |-> _707:K@SORT-K String@STRING-SYNTAX(#""AF"") |-> _709:K@SORT-K String@STRING-SYNTAX(#""R8"") |-> _699:K@SORT-K String@STRING-SYNTAX(#""RDX"") |-> _733:K@SORT-K String@STRING-SYNTAX(#""R9"") |-> _700:K@SORT-K String@STRING-SYNTAX(#""RBX"") |-> _731:K@SORT-K String@STRING-SYNTAX(#""RSI"") |-> _734:K@SORT-K String@STRING-SYNTAX(#""ZF"") |-> _710:K@SORT-K String@STRING-SYNTAX(#""RSP"") |-> _736:K@SORT-K String@STRING-SYNTAX(#""R10"") |-> _701:K@SORT-K String@STRING-SYNTAX(#""YMM2"") |-> _715:K@SORT-K String@STRING-SYNTAX(#""YMM1"") |-> _714:K@SORT-K String@STRING-SYNTAX(#""R12"") |-> _703:K@SORT-K String@STRING-SYNTAX(#""YMM4"") |-> _717:K@SORT-K String@STRING-SYNTAX(#""R11"") |-> _702:K@SORT-K String@STRING-SYNTAX(#""YMM3"") |-> _716:K@SORT-K String@STRING-SYNTAX(#""R14"") |-> _705:K@SORT-K String@STRING-SYNTAX(#""YMM6"") |-> _719:K@SORT-K String@STRING-SYNTAX(#""R13"") |-> _704:K@SORT-K String@STRING-SYNTAX(#""YMM5"") |-> _718:K@SORT-K String@STRING-SYNTAX(#""PF"") |-> _708:K@SORT-K String@STRING-SYNTAX(#""YMM8"") |-> _721:K@SORT-K String@STRING-SYNTAX(#""R15"") |-> _706:K@SORT-K String@STRING-SYNTAX(#""YMM7"") |-> _720:K@SORT-K String@STRING-SYNTAX(#""RIP"") |-> _729:K@SORT-K String@STRING-SYNTAX(#""YMM0"") |-> _713:K@SORT-K   ),, <regstatequeue>(_660:List@LIST)) /\ _==K_(Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"true"))



IntermediateTerm: 
<T>(<k>(#KSequence(split2NToN(%cx(.KList@BASIC-K),, %r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, %r8b(.KList@BASIC-K)), setRegisterValue(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8")),, %r9b(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8")),, %r9b(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R9"") |-> mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%bx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, %r12(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, _664:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, %bx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setSZPForRegister(%bx(.KList@BASIC-K)), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateSignFlag(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), updateZeroFlag(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), updateParityFlag(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> mi(Int@INT-SYNTAX(#"1"),, _672:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateZeroFlag(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), updateParityFlag(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> mi(Int@INT-SYNTAX(#"1"),, _671:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateParityFlag(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> mi(Int@INT-SYNTAX(#"1"),, _669:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(readFlagToRegister(String@STRING-SYNTAX(#""SF""),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, %rbx(.KList@BASIC-K)), combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(combineNTo2N(%r8b(.KList@BASIC-K),, %r9b(.KList@BASIC-K),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64"))),, %bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%rbx(.KList@BASIC-K),, typeoperandlist(%r12(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"xorq"),, typeoperandlist(%r12(.KList@BASIC-K),, typeoperandlist(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, typeoperandlist(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, typeoperandlist(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, .List{"typeoperandlist"}(.KList@BASIC-K))))))), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setFlag(MInt@MINT(#"1'0"),, String@STRING-SYNTAX(#""OF"")), updateZeroFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), updateSignFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setFlag(undef(.KList@BASIC-K),, String@STRING-SYNTAX(#""AF"")), setFlag(MInt@MINT(#"1'0"),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> mi(Int@INT-SYNTAX(#"1"),, _673:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateZeroFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), updateSignFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setFlag(undef(.KList@BASIC-K),, String@STRING-SYNTAX(#""AF"")), setFlag(MInt@MINT(#"1'0"),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateSignFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setFlag(undef(.KList@BASIC-K),, String@STRING-SYNTAX(#""AF"")), setFlag(MInt@MINT(#"1'0"),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setFlag(undef(.KList@BASIC-K),, String@STRING-SYNTAX(#""AF"")), setFlag(MInt@MINT(#"1'0"),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> mi(Int@INT-SYNTAX(#"1"),, _670:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setFlag(MInt@MINT(#"1'0"),, String@STRING-SYNTAX(#""CF"")), updateParityFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> mi(Int@INT-SYNTAX(#"1"),, _668:Int@INT-SYNTAX) String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateParityFlag(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))))), setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, %r12(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"movswq"),, typeoperandlist(%r12w(.KList@BASIC-K),, typeoperandlist(%rbx(.KList@BASIC-K),, .List{"typeoperandlist"}(.KList@BASIC-K))))), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setRegisterValue(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, %rbx(.KList@BASIC-K)), setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(setSZPForRegister(%bx(.KList@BASIC-K)), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateSignFlag(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), updateZeroFlag(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), updateParityFlag(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"64'1"),, lshrMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"63"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateZeroFlag(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), updateParityFlag(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, MInt@MINT(#"64'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(updateParityFlag(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))), execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#KSequence(execinstr(__(Opcode@X86-SYNTAX(#"nop"),, .List{"typeoperandlist"}(.KList@BASIC-K))), KItem@BASIC-K(#"inforegisters"), KItem@BASIC-K(#"fetch"))),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(#EmptyK()),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

IntermediateTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")

FinalTerm: 
<T>(<k>(exit_0(.KList@BASIC-K)),, <entrypoint>(MInt@MINT(#"64'0")),, <nextLoc>(MInt@MINT(#"64'0")),, <memstate>(<cmem>(.Map),, <dmem>(.Map)),, <regstate>(String@STRING-SYNTAX(#""RCX"") |-> mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RAX"") |-> mi(Int@INT-SYNTAX(#"64"),, _690:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM9"") |-> mi(Int@INT-SYNTAX(#"256"),, _683:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM12"") |-> mi(Int@INT-SYNTAX(#"256"),, _686:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM13"") |-> mi(Int@INT-SYNTAX(#"256"),, _687:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM10"") |-> mi(Int@INT-SYNTAX(#"256"),, _684:Int@INT-SYNTAX) String@STRING-SYNTAX(#""SF"") |-> #ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM11"") |-> mi(Int@INT-SYNTAX(#"256"),, _685:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RDI"") |-> mi(Int@INT-SYNTAX(#"64"),, _695:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM14"") |-> mi(Int@INT-SYNTAX(#"256"),, _688:Int@INT-SYNTAX) String@STRING-SYNTAX(#""OF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""YMM15"") |-> mi(Int@INT-SYNTAX(#"256"),, _689:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBP"") |-> mi(Int@INT-SYNTAX(#"64"),, _697:Int@INT-SYNTAX) String@STRING-SYNTAX(#""CF"") |-> MInt@MINT(#"1'0") String@STRING-SYNTAX(#""AF"") |-> undef(.KList@BASIC-K) String@STRING-SYNTAX(#""R8"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))) String@STRING-SYNTAX(#""R9"") |-> orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))) String@STRING-SYNTAX(#""RDX"") |-> mi(Int@INT-SYNTAX(#"64"),, _693:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RBX"") |-> mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))) String@STRING-SYNTAX(#""RSI"") |-> mi(Int@INT-SYNTAX(#"64"),, _694:Int@INT-SYNTAX) String@STRING-SYNTAX(#""ZF"") |-> #ifMInt_#then_#else_#fi(eqMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, MInt@MINT(#"16'0")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""RSP"") |-> mi(Int@INT-SYNTAX(#"64"),, _696:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R10"") |-> mi(Int@INT-SYNTAX(#"64"),, _662:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM2"") |-> mi(Int@INT-SYNTAX(#"256"),, _676:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM1"") |-> mi(Int@INT-SYNTAX(#"256"),, _675:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R12"") |-> xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))) String@STRING-SYNTAX(#""YMM4"") |-> mi(Int@INT-SYNTAX(#"256"),, _678:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R11"") |-> mi(Int@INT-SYNTAX(#"64"),, _663:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM3"") |-> mi(Int@INT-SYNTAX(#"256"),, _677:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R14"") |-> mi(Int@INT-SYNTAX(#"64"),, _666:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM6"") |-> mi(Int@INT-SYNTAX(#"256"),, _680:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R13"") |-> mi(Int@INT-SYNTAX(#"64"),, _665:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM5"") |-> mi(Int@INT-SYNTAX(#"256"),, _679:Int@INT-SYNTAX) String@STRING-SYNTAX(#""PF"") |-> #ifMInt_#then_#else_#fi(#ifBool_#then_#else_#fi(notBool_(_==K_(uvalueMInt(xorMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, countOnes(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(xorMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(#ifMInt_#then_#else_#fi(eqMInt(MInt@MINT(#"16'1"),, lshrMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"15"))),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")))),, MInt@MINT(#"64'-65536")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(concatenateMInt(extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _661:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"0"),, Int@INT-SYNTAX(#"8"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")),, extractMInt(orMInt(andMInt(mi(Int@INT-SYNTAX(#"64"),, _698:Int@INT-SYNTAX),, MInt@MINT(#"64'-256")),, mi(Int@INT-SYNTAX(#"64"),, uvalueMInt(extractMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _692:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16"))))),, Int@INT-SYNTAX(#"56"),, Int@INT-SYNTAX(#"64")))))),, mi(Int@INT-SYNTAX(#"64"),, svalueMInt(extractMInt(mi(Int@INT-SYNTAX(#"64"),, _691:Int@INT-SYNTAX),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64"))))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")))),, Int@INT-SYNTAX(#"48"),, Int@INT-SYNTAX(#"64")),, Int@INT-SYNTAX(#"8"),, Int@INT-SYNTAX(#"16")),, Int@INT-SYNTAX(#"0"))),, MInt@MINT(#"64'1")),, MInt@MINT(#"64'1"))),, Int@INT-SYNTAX(#"0"))),, Bool@BOOL-SYNTAX(#"true"),, Bool@BOOL-SYNTAX(#"false")),, MInt@MINT(#"1'1"),, MInt@MINT(#"1'0")) String@STRING-SYNTAX(#""YMM8"") |-> mi(Int@INT-SYNTAX(#"256"),, _682:Int@INT-SYNTAX) String@STRING-SYNTAX(#""R15"") |-> mi(Int@INT-SYNTAX(#"64"),, _667:Int@INT-SYNTAX) String@STRING-SYNTAX(#""YMM7"") |-> mi(Int@INT-SYNTAX(#"256"),, _681:Int@INT-SYNTAX) String@STRING-SYNTAX(#""RIP"") |-> MInt@MINT(#"64'0") String@STRING-SYNTAX(#""YMM0"") |-> mi(Int@INT-SYNTAX(#"256"),, _674:Int@INT-SYNTAX)   ),, <regstatequeue>(.List())) /\ Bool@BOOL-SYNTAX(#"true")
true
[Warning] Critical: missing SMTLib translation for mi
253.32user 6.47system 1:13.44elapsed 353%CPU (0avgtext+0avgdata 2910860maxresident)k
0inputs+4536outputs (0major+144956minor)pagefaults 0swaps
