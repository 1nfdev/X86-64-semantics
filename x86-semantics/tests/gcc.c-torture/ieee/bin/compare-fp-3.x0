	.file	"compare-fp-3.c"
	.text
	.globl	test1
	.type	test1, @function
test1:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-8(%rbp), %xmm2
	jp	.L1
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-8(%rbp), %xmm3
	jne	.L1
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm4
	vucomiss	-8(%rbp), %xmm4
	jp	.L6
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm5
	vucomiss	-8(%rbp), %xmm5
	je	.L1
.L6:
	movl	$0, %eax
	call	link_error0
.L1:
	leave
	ret
	.size	test1, .-test1
	.globl	test2
	.type	test2, @function
test2:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-8(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-4(%rbp), %xmm2
	jbe	.L7
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-8(%rbp), %xmm3
	jbe	.L7
	movl	$0, %eax
	call	link_error0
.L7:
	leave
	ret
	.size	test2, .-test2
	.globl	test3
	.type	test3, @function
test3:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-8(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-4(%rbp), %xmm2
	jbe	.L13
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-8(%rbp), %xmm3
	jbe	.L13
	movl	$0, %eax
	call	link_error0
.L13:
	leave
	ret
	.size	test3, .-test3
	.globl	test4
	.type	test4, @function
test4:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-8(%rbp), %xmm2
	jp	.L22
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-8(%rbp), %xmm3
	je	.L19
.L22:
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm4
	vucomiss	-8(%rbp), %xmm4
	jp	.L19
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm5
	vucomiss	-8(%rbp), %xmm5
	jne	.L19
	movl	$0, %eax
	call	link_error1
.L19:
	leave
	ret
	.size	test4, .-test4
	.globl	test5
	.type	test5, @function
test5:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-8(%rbp), %xmm2
	jp	.L23
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-8(%rbp), %xmm3
	jnb	.L23
	movl	-8(%rbp), %eax
	vmovd	%eax, %xmm4
	vucomiss	-4(%rbp), %xmm4
	ja	.L23
	movl	$0, %eax
	call	link_error1
.L23:
	leave
	ret
	.size	test5, .-test5
	.globl	test6
	.type	test6, @function
test6:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-8(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-4(%rbp), %xmm2
	jp	.L25
	movl	-8(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-4(%rbp), %xmm3
	jnb	.L25
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm4
	vucomiss	-8(%rbp), %xmm4
	ja	.L25
	movl	$0, %eax
	call	link_error1
.L25:
	leave
	ret
	.size	test6, .-test6
	.globl	test7
	.type	test7, @function
test7:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm2
	vucomiss	-8(%rbp), %xmm2
	jp	.L27
	movl	-4(%rbp), %eax
	vmovd	%eax, %xmm3
	vucomiss	-8(%rbp), %xmm3
	jnp	.L27
	movl	$0, %eax
	call	link_error1
.L27:
	leave
	ret
	.size	test7, .-test7
	.globl	all_tests
	.type	all_tests, @function
all_tests:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	vmovss	%xmm0, -4(%rbp)
	vmovss	%xmm1, -8(%rbp)
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test1
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test2
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test3
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test4
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test5
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test6
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %eax
	vmovd	%edx, %xmm1
	vmovd	%eax, %xmm0
	call	test7
	leave
	ret
	.size	all_tests, .-all_tests
	.globl	main
	.type	main, @function
main:
	pushq	%rbp
	movq	%rsp, %rbp
	vxorps	%xmm1, %xmm1, %xmm1
	vxorps	%xmm0, %xmm0, %xmm0
	call	all_tests
	vmovss	.LC1(%rip), %xmm1
	vmovss	.LC2(%rip), %xmm0
	call	all_tests
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	all_tests
	movl	$0, %eax
	popq	%rbp
	ret
	.size	main, .-main
	.globl	link_error0
	.type	link_error0, @function
link_error0:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	ret
	.size	link_error0, .-link_error0
	.globl	link_error1
	.type	link_error1, @function
link_error1:
	pushq	%rbp
	movq	%rsp, %rbp
	popq	%rbp
	ret
	.size	link_error1, .-link_error1
	.section	.rodata
	.align 4
.LC1:
	.long	1073741824
	.align 4
.LC2:
	.long	1065353216
	.align 4
.LC3:
	.long	1077936128
	.align 4
.LC4:
	.long	1082130432
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
