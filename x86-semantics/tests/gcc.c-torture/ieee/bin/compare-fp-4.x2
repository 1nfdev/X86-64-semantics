	.file	"compare-fp-4.c"
	.section	.text.unlikely,"ax",@progbits
.LCOLDB0:
	.text
.LHOTB0:
	.p2align 4,,15
	.globl	iuneq
	.type	iuneq, @function
iuneq:
	xorl	%eax, %eax
	vucomiss	%xmm1, %xmm0
	sete	%al
	cmpl	%edi, %eax
	jne	.L6
	ret
.L6:
	pushq	%rax
	call	abort
	.size	iuneq, .-iuneq
	.section	.text.unlikely
.LCOLDE0:
	.text
.LHOTE0:
	.section	.text.unlikely
.LCOLDB1:
	.text
.LHOTB1:
	.p2align 4,,15
	.globl	ieq
	.type	ieq, @function
ieq:
	xorl	%eax, %eax
	vucomiss	%xmm1, %xmm0
	movl	$0, %edx
	setnp	%al
	cmovne	%edx, %eax
	cmpl	%edi, %eax
	jne	.L11
	ret
.L11:
	pushq	%rax
	call	abort
	.size	ieq, .-ieq
	.section	.text.unlikely
.LCOLDE1:
	.text
.LHOTE1:
	.section	.text.unlikely
.LCOLDB2:
	.text
.LHOTB2:
	.p2align 4,,15
	.globl	iltgt
	.type	iltgt, @function
iltgt:
	xorl	%eax, %eax
	vucomiss	%xmm1, %xmm0
	setne	%al
	cmpl	%edi, %eax
	jne	.L16
	ret
.L16:
	pushq	%rax
	call	abort
	.size	iltgt, .-iltgt
	.section	.text.unlikely
.LCOLDE2:
	.text
.LHOTE2:
	.section	.text.unlikely
.LCOLDB3:
	.text
.LHOTB3:
	.p2align 4,,15
	.globl	ine
	.type	ine, @function
ine:
	xorl	%eax, %eax
	vucomiss	%xmm1, %xmm0
	movl	$1, %edx
	setp	%al
	cmovne	%edx, %eax
	cmpl	%edi, %eax
	jne	.L21
	ret
.L21:
	pushq	%rax
	call	abort
	.size	ine, .-ine
	.section	.text.unlikely
.LCOLDE3:
	.text
.LHOTE3:
	.section	.text.unlikely
.LCOLDB4:
	.text
.LHOTB4:
	.p2align 4,,15
	.globl	iunlt
	.type	iunlt, @function
iunlt:
	xorl	%eax, %eax
	vucomiss	%xmm1, %xmm0
	setb	%al
	cmpl	%edi, %eax
	jne	.L26
	ret
.L26:
	pushq	%rax
	call	abort
	.size	iunlt, .-iunlt
	.section	.text.unlikely
.LCOLDE4:
	.text
.LHOTE4:
	.section	.text.unlikely
.LCOLDB5:
	.text
.LHOTB5:
	.p2align 4,,15
	.globl	ilt
	.type	ilt, @function
ilt:
	xorl	%eax, %eax
	subq	$8, %rsp
	vucomiss	%xmm0, %xmm1
	seta	%al
	cmpl	%edi, %eax
	jne	.L29
	xorl	%edx, %edx
	vucomiss	%xmm0, %xmm1
	seta	%dl
	cmpl	%edx, %eax
	jne	.L29
	addq	$8, %rsp
	ret
.L29:
	call	abort
	.size	ilt, .-ilt
	.section	.text.unlikely
.LCOLDE5:
	.text
.LHOTE5:
	.section	.text.unlikely
.LCOLDB6:
	.text
.LHOTB6:
	.p2align 4,,15
	.globl	iunle
	.type	iunle, @function
iunle:
	xorl	%eax, %eax
	vucomiss	%xmm1, %xmm0
	setbe	%al
	cmpl	%edi, %eax
	jne	.L35
	ret
.L35:
	pushq	%rax
	call	abort
	.size	iunle, .-iunle
	.section	.text.unlikely
.LCOLDE6:
	.text
.LHOTE6:
	.section	.text.unlikely
.LCOLDB7:
	.text
.LHOTB7:
	.p2align 4,,15
	.globl	ile
	.type	ile, @function
ile:
	xorl	%eax, %eax
	subq	$8, %rsp
	vucomiss	%xmm0, %xmm1
	setnb	%al
	cmpl	%edi, %eax
	jne	.L38
	xorl	%edx, %edx
	vucomiss	%xmm0, %xmm1
	setnb	%dl
	cmpl	%edx, %eax
	jne	.L38
	addq	$8, %rsp
	ret
.L38:
	call	abort
	.size	ile, .-ile
	.section	.text.unlikely
.LCOLDE7:
	.text
.LHOTE7:
	.section	.text.unlikely
.LCOLDB8:
	.text
.LHOTB8:
	.p2align 4,,15
	.globl	iungt
	.type	iungt, @function
iungt:
	xorl	%eax, %eax
	vucomiss	%xmm0, %xmm1
	setb	%al
	cmpl	%edi, %eax
	jne	.L44
	ret
.L44:
	pushq	%rax
	call	abort
	.size	iungt, .-iungt
	.section	.text.unlikely
.LCOLDE8:
	.text
.LHOTE8:
	.section	.text.unlikely
.LCOLDB9:
	.text
.LHOTB9:
	.p2align 4,,15
	.globl	igt
	.type	igt, @function
igt:
	xorl	%eax, %eax
	subq	$8, %rsp
	vucomiss	%xmm1, %xmm0
	seta	%al
	cmpl	%edi, %eax
	jne	.L47
	xorl	%edx, %edx
	vucomiss	%xmm1, %xmm0
	seta	%dl
	cmpl	%edx, %eax
	jne	.L47
	addq	$8, %rsp
	ret
.L47:
	call	abort
	.size	igt, .-igt
	.section	.text.unlikely
.LCOLDE9:
	.text
.LHOTE9:
	.section	.text.unlikely
.LCOLDB10:
	.text
.LHOTB10:
	.p2align 4,,15
	.globl	iunge
	.type	iunge, @function
iunge:
	xorl	%eax, %eax
	vucomiss	%xmm0, %xmm1
	setbe	%al
	cmpl	%edi, %eax
	jne	.L53
	ret
.L53:
	pushq	%rax
	call	abort
	.size	iunge, .-iunge
	.section	.text.unlikely
.LCOLDE10:
	.text
.LHOTE10:
	.section	.text.unlikely
.LCOLDB11:
	.text
.LHOTB11:
	.p2align 4,,15
	.globl	ige
	.type	ige, @function
ige:
	xorl	%eax, %eax
	subq	$8, %rsp
	vucomiss	%xmm1, %xmm0
	setnb	%al
	cmpl	%edi, %eax
	jne	.L56
	xorl	%edx, %edx
	vucomiss	%xmm1, %xmm0
	setnb	%dl
	cmpl	%edx, %eax
	jne	.L56
	addq	$8, %rsp
	ret
.L56:
	call	abort
	.size	ige, .-ige
	.section	.text.unlikely
.LCOLDE11:
	.text
.LHOTE11:
	.section	.text.unlikely
.LCOLDB20:
	.section	.text.startup,"ax",@progbits
.LHOTB20:
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
	subq	$8, %rsp
	xorl	%edi, %edi
	vmovss	.LC12(%rip), %xmm1
	movl	$0x7f800000, pinf(%rip)
	vmovss	.LC13(%rip), %xmm0
	movl	$0xff800000, ninf(%rip)
	movl	$0x7fc00000, NaN(%rip)
	call	iuneq
	movl	$1, %edi
	vmovss	.LC14(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iuneq
	xorl	%edi, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iuneq
	xorl	%edi, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	iuneq
	movl	$1, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iuneq
	xorl	%edi, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	iuneq
	xorl	%edi, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	ieq
	movl	$1, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ieq
	xorl	%edi, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	ieq
	movl	$1, %edi
	vmovss	.LC12(%rip), %xmm1
	vmovss	.LC13(%rip), %xmm0
	call	iltgt
	xorl	%edi, %edi
	vmovss	.LC14(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	iltgt
	xorl	%edi, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	iltgt
	movl	$1, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	ine
	xorl	%edi, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ine
	movl	$1, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	ine
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC14(%rip), %xmm0
	call	iunlt
	movl	$1, %edi
	vmovss	.LC14(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iunlt
	xorl	%edi, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iunlt
	xorl	%edi, %edi
	vmovss	.LC12(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunlt
	xorl	%edi, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunlt
	movl	$1, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	iunlt
	xorl	%edi, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunlt
	xorl	%edi, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	iunlt
	movl	$1, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	ilt
	xorl	%edi, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ilt
	xorl	%edi, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	ilt
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC14(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC14(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iunle
	xorl	%edi, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC12(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunle
	xorl	%edi, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	iunle
	movl	$1, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	ile
	movl	$1, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ile
	xorl	%edi, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	ile
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC14(%rip), %xmm0
	call	iungt
	movl	$1, %edi
	vmovss	.LC14(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iungt
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iungt
	xorl	%edi, %edi
	vmovss	.LC12(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iungt
	xorl	%edi, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iungt
	xorl	%edi, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	iungt
	xorl	%edi, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iungt
	movl	$1, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	iungt
	xorl	%edi, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	igt
	xorl	%edi, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	igt
	movl	$1, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	igt
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovss	.LC14(%rip), %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC14(%rip), %xmm1
	vmovss	.LC12(%rip), %xmm0
	call	iunge
	xorl	%edi, %edi
	vmovss	.LC12(%rip), %xmm1
	vmovss	.LC13(%rip), %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC12(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC13(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunge
	xorl	%edi, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	iunge
	movl	$1, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	iunge
	xorl	%edi, %edi
	vmovss	.LC15(%rip), %xmm1
	vmovss	.LC16(%rip), %xmm0
	call	ige
	movl	$1, %edi
	vmovss	.LC17(%rip), %xmm1
	vmovaps	%xmm1, %xmm0
	call	ige
	movl	$1, %edi
	vmovss	.LC18(%rip), %xmm1
	vmovss	.LC19(%rip), %xmm0
	call	ige
	xorl	%eax, %eax
	addq	$8, %rsp
	ret
	.size	main, .-main
	.section	.text.unlikely
.LCOLDE20:
	.section	.text.startup
.LHOTE20:
	.comm	NaN,4,4
	.comm	ninf,4,4
	.comm	pinf,4,4
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC12:
	.long	2139095040
	.align 4
.LC13:
	.long	4286578688
	.align 4
.LC14:
	.long	2143289344
	.align 4
.LC15:
	.long	1082130432
	.align 4
.LC16:
	.long	1065353216
	.align 4
.LC17:
	.long	1077936128
	.align 4
.LC18:
	.long	1073741824
	.align 4
.LC19:
	.long	1084227584
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
