	.file	"copysign1.c"
	.section	.text.unlikely,"ax",@progbits
.LCOLDB2:
	.text
.LHOTB2:
	.p2align 4,,15
	.globl	cf
	.type	cf, @function
cf:
	vandps	.LC0(%rip), %xmm0, %xmm0
	vmovaps	%xmm1, %xmm2
	vandps	.LC1(%rip), %xmm2, %xmm1
	vorps	%xmm1, %xmm0, %xmm0
	ret
	.size	cf, .-cf
	.section	.text.unlikely
.LCOLDE2:
	.text
.LHOTE2:
	.section	.text.unlikely
.LCOLDB11:
	.text
.LHOTB11:
	.p2align 4,,15
	.globl	testf
	.type	testf, @function
testf:
	subq	$24, %rsp
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	xorl	%eax, %eax
	call	cf
	movl	$4, %edx
	movl	$Tf+8, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC5(%rip), %xmm1
	vmovss	.LC4(%rip), %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+20, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC5(%rip), %xmm1
	vmovss	.LC6(%rip), %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+32, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC5(%rip), %xmm1
	vxorps	%xmm0, %xmm0, %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+44, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC5(%rip), %xmm1
	vmovss	.LC8(%rip), %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+56, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC3(%rip), %xmm1
	vmovss	.LC8(%rip), %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+68, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC8(%rip), %xmm1
	vmovss	.LC9(%rip), %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+80, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	vmovss	.LC9(%rip), %xmm1
	vmovss	.LC10(%rip), %xmm0
	call	cf
	movl	$4, %edx
	movl	$Tf+92, %esi
	leaq	4(%rsp), %rdi
	vmovss	%xmm0, 4(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L3
	movq	8(%rsp), %rax
	xorq	%fs:40, %rax
	jne	.L9
	addq	$24, %rsp
	ret
.L3:
	call	abort
.L9:
	call	__stack_chk_fail
	.size	testf, .-testf
	.section	.text.unlikely
.LCOLDE11:
	.text
.LHOTE11:
	.section	.text.unlikely
.LCOLDB14:
	.text
.LHOTB14:
	.p2align 4,,15
	.globl	c
	.type	c, @function
c:
	vandpd	.LC12(%rip), %xmm0, %xmm0
	vmovapd	%xmm1, %xmm2
	vandpd	.LC13(%rip), %xmm2, %xmm1
	vorpd	%xmm1, %xmm0, %xmm0
	ret
	.size	c, .-c
	.section	.text.unlikely
.LCOLDE14:
	.text
.LHOTE14:
	.section	.text.unlikely
.LCOLDB23:
	.text
.LHOTB23:
	.p2align 4,,15
	.globl	test
	.type	test, @function
test:
	subq	$24, %rsp
	vmovsd	.LC15(%rip), %xmm1
	vmovsd	.LC16(%rip), %xmm0
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	xorl	%eax, %eax
	call	c
	movl	$8, %edx
	movl	$T+16, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC17(%rip), %xmm1
	vmovsd	.LC16(%rip), %xmm0
	call	c
	movl	$8, %edx
	movl	$T+40, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC17(%rip), %xmm1
	vmovsd	.LC18(%rip), %xmm0
	call	c
	movl	$8, %edx
	movl	$T+64, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC17(%rip), %xmm1
	vxorpd	%xmm0, %xmm0, %xmm0
	call	c
	movl	$8, %edx
	movl	$T+88, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC17(%rip), %xmm1
	vmovsd	.LC20(%rip), %xmm0
	call	c
	movl	$8, %edx
	movl	$T+112, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC15(%rip), %xmm1
	vmovsd	.LC20(%rip), %xmm0
	call	c
	movl	$8, %edx
	movl	$T+136, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC20(%rip), %xmm1
	vmovsd	.LC21(%rip), %xmm0
	call	c
	movl	$8, %edx
	movl	$T+160, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	vmovsd	.LC21(%rip), %xmm1
	vmovsd	.LC22(%rip), %xmm0
	call	c
	movl	$8, %edx
	movl	$T+184, %esi
	movq	%rsp, %rdi
	vmovsd	%xmm0, (%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L12
	movq	8(%rsp), %rax
	xorq	%fs:40, %rax
	jne	.L17
	addq	$24, %rsp
	ret
.L12:
	call	abort
.L17:
	call	__stack_chk_fail
	.size	test, .-test
	.section	.text.unlikely
.LCOLDE23:
	.text
.LHOTE23:
	.section	.text.unlikely
.LCOLDB25:
	.text
.LHOTB25:
	.p2align 4,,15
	.globl	cl
	.type	cl, @function
cl:
	fldt	24(%rsp)
	fxam
	fnstsw	%ax
	fstp	%st(0)
	fldt	8(%rsp)
	fabs
	testb	$2, %ah
	je	.L23
	fchs
.L23:
	ret
	.size	cl, .-cl
	.section	.text.unlikely
.LCOLDE25:
	.text
.LHOTE25:
	.section	.text.unlikely
.LCOLDB26:
	.text
.LHOTB26:
	.p2align 4,,15
	.globl	testl
	.type	testl, @function
testl:
	movabsq	$-9223372036854775808, %r10
	subq	$56, %rsp
	movq	%fs:40, %rax
	movq	%rax, 40(%rsp)
	xorl	%eax, %eax
	pushq	$16384
	fld1
	pushq	%r10
	subq	$16, %rsp
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	32(%rsp)
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+32, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	movabsq	$-9223372036854775808, %r9
	pushq	$49152
	pushq	%r9
	fldt	16(%rsp)
	subq	$16, %rsp
	fstpt	(%rsp)
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+80, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	movabsq	$-9223372036854775808, %rdi
	pushq	$49152
	movabsq	$-9223372036854775808, %r8
	pushq	%rdi
	pushq	$49151
	pushq	%r8
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+128, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	movabsq	$-9223372036854775808, %rsi
	pushq	$49152
	pushq	%rsi
	pushq	$0
	pushq	$0
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+176, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	movabsq	$-9223372036854775808, %rcx
	pushq	$49152
	fldz
	pushq	%rcx
	fchs
	subq	$16, %rsp
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	32(%rsp)
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+224, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	movabsq	$-9223372036854775808, %rdx
	pushq	$16384
	pushq	%rdx
	fldt	16(%rsp)
	subq	$16, %rsp
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	32(%rsp)
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+272, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	fldt	(%rsp)
	subq	$32, %rsp
	fstpt	16(%rsp)
	flds	.LC9(%rip)
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	32(%rsp)
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+320, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	fldt	(%rsp)
	subq	$16, %rsp
	movabsq	$-4611686018427387904, %rax
	fstpt	(%rsp)
	pushq	$65535
	pushq	%rax
	call	cl
	addq	$32, %rsp
	movl	$10, %edx
	movl	$Tl+368, %esi
	fstpt	16(%rsp)
	leaq	16(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L25
	movq	40(%rsp), %rax
	xorq	%fs:40, %rax
	jne	.L30
	addq	$56, %rsp
	ret
.L25:
	call	abort
.L30:
	call	__stack_chk_fail
	.size	testl, .-testl
	.section	.text.unlikely
.LCOLDE26:
	.text
.LHOTE26:
	.section	.text.unlikely
.LCOLDB27:
	.section	.text.startup,"ax",@progbits
.LHOTB27:
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
	subq	$8, %rsp
	call	testf
	call	test
	call	testl
	xorl	%eax, %eax
	addq	$8, %rsp
	ret
	.size	main, .-main
	.section	.text.unlikely
.LCOLDE27:
	.section	.text.startup
.LHOTE27:
	.section	.rodata
	.align 64
	.type	Tl, @object
	.size	Tl, 384
Tl:
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	16384
	.long	0
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	2147483648
	.long	49152
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	2147483648
	.long	16384
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2147483648
	.long	32767
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	2147483648
	.long	65535
	.long	0
	.long	0
	.long	3221225472
	.long	65535
	.long	0
	.long	0
	.long	2147483648
	.long	32767
	.long	0
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.align 64
	.type	T, @object
	.size	T, 192
T:
	.long	0
	.long	1072693248
	.long	0
	.long	1073741824
	.long	0
	.long	1072693248
	.long	0
	.long	1072693248
	.long	0
	.long	-1073741824
	.long	0
	.long	-1074790400
	.long	0
	.long	-1074790400
	.long	0
	.long	-1073741824
	.long	0
	.long	-1074790400
	.long	0
	.long	0
	.long	0
	.long	-1073741824
	.long	0
	.long	-2147483648
	.long	0
	.long	-2147483648
	.long	0
	.long	-1073741824
	.long	0
	.long	-2147483648
	.long	0
	.long	-2147483648
	.long	0
	.long	1073741824
	.long	0
	.long	0
	.long	0
	.long	2146435072
	.long	0
	.long	-2147483648
	.long	0
	.long	-1048576
	.long	0
	.long	-524288
	.long	0
	.long	2146435072
	.long	0
	.long	2146959360
	.align 64
	.type	Tf, @object
	.size	Tf, 96
Tf:
	.long	1065353216
	.long	1073741824
	.long	1065353216
	.long	1065353216
	.long	3221225472
	.long	3212836864
	.long	3212836864
	.long	3221225472
	.long	3212836864
	.long	0
	.long	3221225472
	.long	2147483648
	.long	2147483648
	.long	3221225472
	.long	2147483648
	.long	2147483648
	.long	1073741824
	.long	0
	.long	2139095040
	.long	2147483648
	.long	4286578688
	.long	4290772992
	.long	2139095040
	.long	2143289344
	.section	.rodata.cst16,"aM",@progbits,16
	.align 16
.LC0:
	.long	2147483647
	.long	0
	.long	0
	.long	0
	.align 16
.LC1:
	.long	2147483648
	.long	0
	.long	0
	.long	0
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC3:
	.long	1073741824
	.align 4
.LC4:
	.long	1065353216
	.align 4
.LC5:
	.long	3221225472
	.align 4
.LC6:
	.long	3212836864
	.align 4
.LC8:
	.long	2147483648
	.align 4
.LC9:
	.long	2139095040
	.align 4
.LC10:
	.long	4290772992
	.section	.rodata.cst16
	.align 16
.LC12:
	.long	4294967295
	.long	2147483647
	.long	0
	.long	0
	.align 16
.LC13:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC15:
	.long	0
	.long	1073741824
	.align 8
.LC16:
	.long	0
	.long	1072693248
	.align 8
.LC17:
	.long	0
	.long	-1073741824
	.align 8
.LC18:
	.long	0
	.long	-1074790400
	.align 8
.LC20:
	.long	0
	.long	-2147483648
	.align 8
.LC21:
	.long	0
	.long	2146435072
	.align 8
.LC22:
	.long	0
	.long	-524288
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
