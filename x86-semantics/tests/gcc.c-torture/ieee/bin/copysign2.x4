	.file	"copysign2.c"
	.text
.Ltext0:
	.cfi_sections	.debug_frame
	.section	.text.unlikely,"ax",@progbits
.LCOLDB1:
	.text
.LHOTB1:
	.p2align 4,,15
	.section	.text.unlikely
.Ltext_cold0:
	.text
	.globl	testf
	.type	testf, @function
testf:
.LFB17:
	.file 1 "./src/copysign2.c"
	.loc 1 60 0
	.cfi_startproc
	leaq	8(%rsp), %r10
	.cfi_def_cfa 10, 0
	andq	$-32, %rsp
	movl	$4, %edx
	pushq	-8(%r10)
	pushq	%rbp
	movl	$Zf, %esi
	.cfi_escape 0x10,0x6,0x2,0x76,0
	movq	%rsp, %rbp
	pushq	%r10
	.cfi_escape 0xf,0x3,0x76,0x78,0x6
	leaq	-80(%rbp), %rdi
	subq	$72, %rsp
	.loc 1 60 0
	vmovaps	.LC0(%rip), %ymm0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	vmovaps	%ymm0, -80(%rbp)
.LVL0:
	vzeroupper
	call	memcmp
.LVL1:
	testl	%eax, %eax
	jne	.L2
.LVL2:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+4, %esi
	leaq	4(%rax), %rdi
	call	memcmp
.LVL3:
	testl	%eax, %eax
	jne	.L2
.LVL4:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+8, %esi
	leaq	8(%rax), %rdi
	call	memcmp
.LVL5:
	testl	%eax, %eax
	jne	.L2
.LVL6:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+12, %esi
	leaq	12(%rax), %rdi
	call	memcmp
.LVL7:
	testl	%eax, %eax
	jne	.L2
.LVL8:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+16, %esi
	leaq	16(%rax), %rdi
	call	memcmp
.LVL9:
	testl	%eax, %eax
	jne	.L2
.LVL10:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+20, %esi
	leaq	20(%rax), %rdi
	call	memcmp
.LVL11:
	testl	%eax, %eax
	jne	.L2
.LVL12:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+24, %esi
	leaq	24(%rax), %rdi
	call	memcmp
.LVL13:
	testl	%eax, %eax
	jne	.L2
.LVL14:
	leaq	-80(%rbp), %rax
	movl	$4, %edx
	movl	$Zf+28, %esi
	leaq	28(%rax), %rdi
	call	memcmp
.LVL15:
	testl	%eax, %eax
	jne	.L2
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	jne	.L8
	addq	$72, %rsp
	popq	%r10
	.cfi_remember_state
	.cfi_def_cfa 10, 0
	popq	%rbp
	leaq	-8(%r10), %rsp
	.cfi_def_cfa 7, 8
	ret
.LVL16:
.L2:
	.cfi_restore_state
	.loc 1 60 0 is_stmt 0 discriminator 2
	call	abort
.LVL17:
.L8:
	.loc 1 60 0
	call	__stack_chk_fail
.LVL18:
	.cfi_endproc
.LFE17:
	.size	testf, .-testf
	.section	.text.unlikely
.LCOLDE1:
	.text
.LHOTE1:
	.section	.text.unlikely
.LCOLDB4:
	.text
.LHOTB4:
	.p2align 4,,15
	.globl	test
	.type	test, @function
test:
.LFB18:
	.loc 1 61 0 is_stmt 1
	.cfi_startproc
	leaq	8(%rsp), %r10
	.cfi_def_cfa 10, 0
	andq	$-32, %rsp
	movl	$8, %edx
	pushq	-8(%r10)
	pushq	%rbp
	movl	$Z, %esi
	.cfi_escape 0x10,0x6,0x2,0x76,0
	movq	%rsp, %rbp
	pushq	%r10
	.cfi_escape 0xf,0x3,0x76,0x78,0x6
	leaq	-112(%rbp), %rdi
	subq	$104, %rsp
	.loc 1 61 0
	vmovapd	.LC2(%rip), %ymm0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	vmovapd	%ymm0, -112(%rbp)
	vmovapd	.LC3(%rip), %ymm0
	vmovapd	%ymm0, -80(%rbp)
.LVL19:
	vzeroupper
	call	memcmp
.LVL20:
	testl	%eax, %eax
	jne	.L10
.LVL21:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+8, %esi
	leaq	8(%rax), %rdi
	call	memcmp
.LVL22:
	testl	%eax, %eax
	jne	.L10
.LVL23:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+16, %esi
	leaq	16(%rax), %rdi
	call	memcmp
.LVL24:
	testl	%eax, %eax
	jne	.L10
.LVL25:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+24, %esi
	leaq	24(%rax), %rdi
	call	memcmp
.LVL26:
	testl	%eax, %eax
	jne	.L10
.LVL27:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+32, %esi
	leaq	32(%rax), %rdi
	call	memcmp
.LVL28:
	testl	%eax, %eax
	jne	.L10
.LVL29:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+40, %esi
	leaq	40(%rax), %rdi
	call	memcmp
.LVL30:
	testl	%eax, %eax
	jne	.L10
.LVL31:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+48, %esi
	leaq	48(%rax), %rdi
	call	memcmp
.LVL32:
	testl	%eax, %eax
	jne	.L10
.LVL33:
	leaq	-112(%rbp), %rax
	movl	$8, %edx
	movl	$Z+56, %esi
	leaq	56(%rax), %rdi
	call	memcmp
.LVL34:
	testl	%eax, %eax
	jne	.L10
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	jne	.L15
	addq	$104, %rsp
	popq	%r10
	.cfi_remember_state
	.cfi_def_cfa 10, 0
	popq	%rbp
	leaq	-8(%r10), %rsp
	.cfi_def_cfa 7, 8
	ret
.LVL35:
.L10:
	.cfi_restore_state
	.loc 1 61 0 is_stmt 0 discriminator 2
	call	abort
.LVL36:
.L15:
	.loc 1 61 0
	call	__stack_chk_fail
.LVL37:
	.cfi_endproc
.LFE18:
	.size	test, .-test
	.section	.text.unlikely
.LCOLDE4:
	.text
.LHOTE4:
	.section	.text.unlikely
.LCOLDB11:
	.text
.LHOTB11:
	.p2align 4,,15
	.globl	testl
	.type	testl, @function
testl:
.LFB19:
	.loc 1 62 0 is_stmt 1
	.cfi_startproc
	fld1
	movl	$10, %edx
	movl	$Zl, %esi
	subq	$152, %rsp
	.cfi_def_cfa_offset 160
	.loc 1 62 0
	fstpt	(%rsp)
	movq	%rsp, %rdi
	movq	%fs:40, %rax
	movq	%rax, 136(%rsp)
	xorl	%eax, %eax
	fld1
	fchs
	fstpt	16(%rsp)
	fldt	16(%rsp)
	fstpt	32(%rsp)
	fldz
	fchs
	fstpt	48(%rsp)
	fldt	48(%rsp)
	fstpt	64(%rsp)
	fldz
	fstpt	80(%rsp)
	flds	.LC9(%rip)
	fstpt	96(%rsp)
	flds	.LC10(%rip)
	fstpt	112(%rsp)
.LVL38:
	call	memcmp
.LVL39:
	testl	%eax, %eax
	jne	.L17
.LVL40:
	leaq	16(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+16, %esi
	call	memcmp
.LVL41:
	testl	%eax, %eax
	jne	.L17
.LVL42:
	leaq	32(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+32, %esi
	call	memcmp
.LVL43:
	testl	%eax, %eax
	jne	.L17
.LVL44:
	leaq	48(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+48, %esi
	call	memcmp
.LVL45:
	testl	%eax, %eax
	jne	.L17
.LVL46:
	leaq	64(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+64, %esi
	call	memcmp
.LVL47:
	testl	%eax, %eax
	jne	.L17
.LVL48:
	leaq	80(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+80, %esi
	call	memcmp
.LVL49:
	testl	%eax, %eax
	jne	.L17
.LVL50:
	leaq	96(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+96, %esi
	call	memcmp
.LVL51:
	testl	%eax, %eax
	jne	.L17
.LVL52:
	leaq	112(%rsp), %rdi
	movl	$10, %edx
	movl	$Zl+112, %esi
	call	memcmp
.LVL53:
	testl	%eax, %eax
	jne	.L17
	movq	136(%rsp), %rax
	xorq	%fs:40, %rax
	jne	.L22
	addq	$152, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.LVL54:
.L17:
	.cfi_restore_state
	.loc 1 62 0 is_stmt 0 discriminator 2
	call	abort
.LVL55:
.L22:
	.loc 1 62 0
	call	__stack_chk_fail
.LVL56:
	.cfi_endproc
.LFE19:
	.size	testl, .-testl
	.section	.text.unlikely
.LCOLDE11:
	.text
.LHOTE11:
	.section	.text.unlikely
.LCOLDB12:
	.section	.text.startup,"ax",@progbits
.LHOTB12:
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB20:
	.loc 1 65 0 is_stmt 1
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	.loc 1 66 0
	call	testf
.LVL57:
	.loc 1 67 0
	call	test
.LVL58:
	.loc 1 68 0
	call	testl
.LVL59:
	.loc 1 70 0
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE20:
	.size	main, .-main
	.section	.text.unlikely
.LCOLDE12:
	.section	.text.startup
.LHOTE12:
	.section	.rodata
	.align 64
	.type	Zl, @object
	.size	Zl, 128
Zl:
	.long	0
	.long	2147483648
	.long	16383
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	2147483648
	.long	49151
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	0
	.long	32768
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	2147483648
	.long	65535
	.long	0
	.long	0
	.long	3221225472
	.long	32767
	.long	0
	.align 64
	.type	Z, @object
	.size	Z, 64
Z:
	.long	0
	.long	1072693248
	.long	0
	.long	-1074790400
	.long	0
	.long	-1074790400
	.long	0
	.long	-2147483648
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.long	0
	.long	-1048576
	.long	0
	.long	2146959360
	.align 32
	.type	Zf, @object
	.size	Zf, 32
Zf:
	.long	1065353216
	.long	3212836864
	.long	3212836864
	.long	2147483648
	.long	2147483648
	.long	0
	.long	4286578688
	.long	2143289344
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC0:
	.long	1065353216
	.long	3212836864
	.long	3212836864
	.long	2147483648
	.long	2147483648
	.long	0
	.long	4286578688
	.long	2143289344
	.align 32
.LC2:
	.long	0
	.long	1072693248
	.long	0
	.long	-1074790400
	.long	0
	.long	-1074790400
	.long	0
	.long	-2147483648
	.align 32
.LC3:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.long	0
	.long	-1048576
	.long	0
	.long	2146959360
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC9:
	.long	4286578688
	.align 4
.LC10:
	.long	2143289344
	.text
.Letext0:
	.section	.text.unlikely
.Letext_cold0:
	.file 2 "/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h"
	.file 3 "/usr/include/string.h"
	.file 4 "/usr/include/stdlib.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x794
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF18
	.byte	0x1
	.long	.LASF19
	.long	.LASF20
	.long	.Ldebug_ranges0+0
	.quad	0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF21
	.byte	0x2
	.byte	0xd4
	.long	0x34
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.long	.LASF1
	.uleb128 0x3
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF3
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF4
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x1
	.byte	0x8
	.long	.LASF6
	.uleb128 0x3
	.byte	0x4
	.byte	0x7
	.long	.LASF7
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF8
	.uleb128 0x3
	.byte	0x2
	.byte	0x5
	.long	.LASF9
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.long	.LASF10
	.uleb128 0x5
	.byte	0x8
	.long	0x8e
	.uleb128 0x6
	.uleb128 0x7
	.long	.LASF12
	.byte	0x1
	.byte	0x3c
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x235
	.uleb128 0x8
	.string	"r"
	.byte	0x1
	.byte	0x3c
	.long	0x235
	.uleb128 0x3
	.byte	0x76
	.sleb128 -80
	.uleb128 0x9
	.string	"i"
	.byte	0x1
	.byte	0x3c
	.long	0x49
	.long	.LLST0
	.uleb128 0xa
	.quad	.LVL1
	.long	0x76b
	.long	0xf1
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -80
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL3
	.long	0x76b
	.long	0x11c
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -76
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+4
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL5
	.long	0x76b
	.long	0x147
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -72
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+8
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL7
	.long	0x76b
	.long	0x172
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -68
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+12
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL9
	.long	0x76b
	.long	0x19c
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x76
	.sleb128 -64
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+16
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL11
	.long	0x76b
	.long	0x1c6
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x76
	.sleb128 -60
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+20
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL13
	.long	0x76b
	.long	0x1f0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x76
	.sleb128 -56
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+24
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xa
	.quad	.LVL15
	.long	0x76b
	.long	0x21a
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x76
	.sleb128 -52
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zf+28
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.uleb128 0xc
	.quad	.LVL17
	.long	0x78a
	.uleb128 0xc
	.quad	.LVL18
	.long	0x792
	.byte	0
	.uleb128 0xd
	.long	0x245
	.long	0x245
	.uleb128 0xe
	.long	0x3b
	.byte	0x7
	.byte	0
	.uleb128 0x3
	.byte	0x4
	.byte	0x4
	.long	.LASF11
	.uleb128 0x7
	.long	.LASF13
	.byte	0x1
	.byte	0x3d
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0x3f4
	.uleb128 0x8
	.string	"r"
	.byte	0x1
	.byte	0x3d
	.long	0x3f4
	.uleb128 0x3
	.byte	0x76
	.sleb128 -112
	.uleb128 0x9
	.string	"i"
	.byte	0x1
	.byte	0x3d
	.long	0x49
	.long	.LLST1
	.uleb128 0xa
	.quad	.LVL20
	.long	0x76b
	.long	0x2ae
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -112
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL22
	.long	0x76b
	.long	0x2d9
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -104
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+8
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL24
	.long	0x76b
	.long	0x304
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -96
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+16
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL26
	.long	0x76b
	.long	0x32f
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -88
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+24
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL28
	.long	0x76b
	.long	0x35a
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -80
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+32
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL30
	.long	0x76b
	.long	0x385
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x76
	.sleb128 -72
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+40
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL32
	.long	0x76b
	.long	0x3af
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x76
	.sleb128 -64
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+48
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xa
	.quad	.LVL34
	.long	0x76b
	.long	0x3d9
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x76
	.sleb128 -56
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Z+56
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x38
	.byte	0
	.uleb128 0xc
	.quad	.LVL36
	.long	0x78a
	.uleb128 0xc
	.quad	.LVL37
	.long	0x792
	.byte	0
	.uleb128 0xd
	.long	0x404
	.long	0x404
	.uleb128 0xe
	.long	0x3b
	.byte	0x7
	.byte	0
	.uleb128 0x3
	.byte	0x8
	.byte	0x4
	.long	.LASF14
	.uleb128 0x7
	.long	.LASF15
	.byte	0x1
	.byte	0x3e
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b2
	.uleb128 0x8
	.string	"r"
	.byte	0x1
	.byte	0x3e
	.long	0x5b2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x9
	.string	"i"
	.byte	0x1
	.byte	0x3e
	.long	0x49
	.long	.LLST2
	.uleb128 0xa
	.quad	.LVL39
	.long	0x76b
	.long	0x46c
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x77
	.sleb128 0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL41
	.long	0x76b
	.long	0x497
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+16
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL43
	.long	0x76b
	.long	0x4c2
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+32
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL45
	.long	0x76b
	.long	0x4ed
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+48
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL47
	.long	0x76b
	.long	0x518
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+64
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL49
	.long	0x76b
	.long	0x543
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+80
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL51
	.long	0x76b
	.long	0x56d
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+96
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xa
	.quad	.LVL53
	.long	0x76b
	.long	0x597
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x9
	.byte	0x3
	.quad	Zl+112
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x3a
	.byte	0
	.uleb128 0xc
	.quad	.LVL55
	.long	0x78a
	.uleb128 0xc
	.quad	.LVL56
	.long	0x792
	.byte	0
	.uleb128 0xd
	.long	0x5c2
	.long	0x5c2
	.uleb128 0xe
	.long	0x3b
	.byte	0x7
	.byte	0
	.uleb128 0x3
	.byte	0x10
	.byte	0x4
	.long	.LASF16
	.uleb128 0xf
	.long	.LASF17
	.byte	0x1
	.byte	0x40
	.long	0x49
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x612
	.uleb128 0xc
	.quad	.LVL57
	.long	0x8f
	.uleb128 0xc
	.quad	.LVL58
	.long	0x24c
	.uleb128 0xc
	.quad	.LVL59
	.long	0x40b
	.byte	0
	.uleb128 0x10
	.string	"Yf"
	.byte	0x1
	.byte	0x3c
	.long	0x63d
	.byte	0x20
	.byte	0
	.byte	0
	.byte	0
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0x7f
	.uleb128 0x11
	.long	0x235
	.uleb128 0x8
	.string	"Zf"
	.byte	0x1
	.byte	0x3c
	.long	0x656
	.uleb128 0x9
	.byte	0x3
	.quad	Zf
	.uleb128 0x11
	.long	0x235
	.uleb128 0x10
	.string	"Y"
	.byte	0x1
	.byte	0x3d
	.long	0x6a5
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0xf0
	.byte	0x7f
	.uleb128 0x11
	.long	0x3f4
	.uleb128 0x8
	.string	"Z"
	.byte	0x1
	.byte	0x3d
	.long	0x6bd
	.uleb128 0x9
	.byte	0x3
	.quad	Z
	.uleb128 0x11
	.long	0x3f4
	.uleb128 0x10
	.string	"Yl"
	.byte	0x1
	.byte	0x3e
	.long	0x74d
	.byte	0x80
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0xc0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0x40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0x80
	.byte	0xff
	.byte	0x7f
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x5b2
	.uleb128 0x8
	.string	"Zl"
	.byte	0x1
	.byte	0x3e
	.long	0x766
	.uleb128 0x9
	.byte	0x3
	.quad	Zl
	.uleb128 0x11
	.long	0x5b2
	.uleb128 0x12
	.long	.LASF22
	.byte	0x3
	.byte	0x41
	.long	0x49
	.long	0x78a
	.uleb128 0x13
	.long	0x88
	.uleb128 0x13
	.long	0x88
	.uleb128 0x13
	.long	0x29
	.byte	0
	.uleb128 0x14
	.long	.LASF23
	.byte	0x4
	.value	0x1dc
	.uleb128 0x15
	.long	.LASF24
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.quad	.LVL0
	.quad	.LVL2
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL2
	.quad	.LVL4
	.value	0x2
	.byte	0x31
	.byte	0x9f
	.quad	.LVL4
	.quad	.LVL6
	.value	0x2
	.byte	0x32
	.byte	0x9f
	.quad	.LVL6
	.quad	.LVL8
	.value	0x2
	.byte	0x33
	.byte	0x9f
	.quad	.LVL8
	.quad	.LVL10
	.value	0x2
	.byte	0x34
	.byte	0x9f
	.quad	.LVL10
	.quad	.LVL12
	.value	0x2
	.byte	0x35
	.byte	0x9f
	.quad	.LVL12
	.quad	.LVL14
	.value	0x2
	.byte	0x36
	.byte	0x9f
	.quad	.LVL14
	.quad	.LVL16
	.value	0x2
	.byte	0x37
	.byte	0x9f
	.quad	.LVL17
	.quad	.LFE17
	.value	0x2
	.byte	0x37
	.byte	0x9f
	.quad	0
	.quad	0
.LLST1:
	.quad	.LVL19
	.quad	.LVL21
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL21
	.quad	.LVL23
	.value	0x2
	.byte	0x31
	.byte	0x9f
	.quad	.LVL23
	.quad	.LVL25
	.value	0x2
	.byte	0x32
	.byte	0x9f
	.quad	.LVL25
	.quad	.LVL27
	.value	0x2
	.byte	0x33
	.byte	0x9f
	.quad	.LVL27
	.quad	.LVL29
	.value	0x2
	.byte	0x34
	.byte	0x9f
	.quad	.LVL29
	.quad	.LVL31
	.value	0x2
	.byte	0x35
	.byte	0x9f
	.quad	.LVL31
	.quad	.LVL33
	.value	0x2
	.byte	0x36
	.byte	0x9f
	.quad	.LVL33
	.quad	.LVL35
	.value	0x2
	.byte	0x37
	.byte	0x9f
	.quad	.LVL36
	.quad	.LFE18
	.value	0x2
	.byte	0x37
	.byte	0x9f
	.quad	0
	.quad	0
.LLST2:
	.quad	.LVL38
	.quad	.LVL40
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL40
	.quad	.LVL42
	.value	0x2
	.byte	0x31
	.byte	0x9f
	.quad	.LVL42
	.quad	.LVL44
	.value	0x2
	.byte	0x32
	.byte	0x9f
	.quad	.LVL44
	.quad	.LVL46
	.value	0x2
	.byte	0x33
	.byte	0x9f
	.quad	.LVL46
	.quad	.LVL48
	.value	0x2
	.byte	0x34
	.byte	0x9f
	.quad	.LVL48
	.quad	.LVL50
	.value	0x2
	.byte	0x35
	.byte	0x9f
	.quad	.LVL50
	.quad	.LVL52
	.value	0x2
	.byte	0x36
	.byte	0x9f
	.quad	.LVL52
	.quad	.LVL54
	.value	0x2
	.byte	0x37
	.byte	0x9f
	.quad	.LVL55
	.quad	.LFE19
	.value	0x2
	.byte	0x37
	.byte	0x9f
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x3c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltext0
	.quad	.Letext0
	.quad	.LFB20
	.quad	.LFE20
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF21:
	.string	"size_t"
.LASF19:
	.string	"./src/copysign2.c"
.LASF22:
	.string	"memcmp"
.LASF18:
	.string	"GNU C 4.9.4 -march=haswell -g -O3 -fno-inline -fno-asynchronous-unwind-tables -fstack-protector-strong"
.LASF2:
	.string	"short unsigned int"
.LASF20:
	.string	"/home/sdasgup3/x86-semantics/tests/gcc.c-torture/ieee"
.LASF11:
	.string	"float"
.LASF6:
	.string	"unsigned char"
.LASF0:
	.string	"long unsigned int"
.LASF12:
	.string	"testf"
.LASF15:
	.string	"testl"
.LASF14:
	.string	"double"
.LASF17:
	.string	"main"
.LASF13:
	.string	"test"
.LASF7:
	.string	"unsigned int"
.LASF24:
	.string	"__stack_chk_fail"
.LASF10:
	.string	"long long unsigned int"
.LASF1:
	.string	"sizetype"
.LASF5:
	.string	"long long int"
.LASF3:
	.string	"char"
.LASF9:
	.string	"short int"
.LASF4:
	.string	"long int"
.LASF23:
	.string	"abort"
.LASF16:
	.string	"long double"
.LASF8:
	.string	"signed char"
	.ident	"GCC: (Ubuntu 4.9.4-2ubuntu1) 4.9.4"
	.section	.note.GNU-stack,"",@progbits
