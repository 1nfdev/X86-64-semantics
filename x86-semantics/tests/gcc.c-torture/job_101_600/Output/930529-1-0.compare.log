grep  -A 39  "ListItem"  Output/930529-1-0.kstate  | sed -e '/RIP/d' 1> /tmp/tmpfilesz6RN 2>&1 
numOfInstrs: 28

	0:	55	push   %rbp
	1:	48 89 e5	mov    %rsp,%rbp
	2:	48 83 ec 10	sub    $0x10,%rsp
	3:	c7 45 fc fd ff ff ff	movl   $0xfffffffd,-0x4(%rbp)
	4:	e9 59 01 00 00	jmpq   0x400304 <L23>
	5:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	6:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	7:	8b 45 fc	mov    -0x4(%rbp),%eax
	8:	be 01 00 00 00	mov    $0x1,%esi
	9:	89 c7	mov    %eax,%edi
	10:	e8 ca ff ff ff	callq  0x400184 <dd>
	11:	55	push   %rbp
	12:	48 89 e5	mov    %rsp,%rbp
	13:	89 7d fc	mov    %edi,-0x4(%rbp)
	14:	89 75 f8	mov    %esi,-0x8(%rbp)
	15:	8b 45 fc	mov    -0x4(%rbp),%eax
	16:	99	cltd   
	17:	f7 7d f8	idivl  -0x8(%rbp)
	18:	5d	pop    %rbp
	19:	c3	retq   
	20:	3b 45 fc	cmp    -0x4(%rbp),%eax
	21:	74 05	je     0x4001c4 <L24>
	22:	8b 45 fc	mov    -0x4(%rbp),%eax
	23:	be 02 00 00 00	mov    $0x2,%esi
	24:	89 c7	mov    %eax,%edi
	25:	e8 b1 ff ff ff	callq  0x400184 <dd>
	26:	55	push   %rbp
	27:	48 89 e5	mov    %rsp,%rbp
	28:	89 7d fc	mov    %edi,-0x4(%rbp)
	29:	89 75 f8	mov    %esi,-0x8(%rbp)
	30:	8b 45 fc	mov    -0x4(%rbp),%eax
	31:	99	cltd   
	32:	f7 7d f8	idivl  -0x8(%rbp)
	33:	5d	pop    %rbp
	34:	c3	retq   
	35:	89 c2	mov    %eax,%edx
	36:	8b 45 fc	mov    -0x4(%rbp),%eax
	37:	89 c1	mov    %eax,%ecx
	38:	c1 e9 1f	shr    $0x1f,%ecx
	39:	01 c8	add    %ecx,%eax
	40:	d1 f8	sar    %eax
	41:	39 c2	cmp    %eax,%edx
	42:	74 05	je     0x4001ea <L25>
	43:	8b 45 fc	mov    -0x4(%rbp),%eax
	44:	be 03 00 00 00	mov    $0x3,%esi
	45:	89 c7	mov    %eax,%edi
	46:	e8 8b ff ff ff	callq  0x400184 <dd>
	47:	55	push   %rbp
	48:	48 89 e5	mov    %rsp,%rbp
	49:	89 7d fc	mov    %edi,-0x4(%rbp)
	50:	89 75 f8	mov    %esi,-0x8(%rbp)
	51:	8b 45 fc	mov    -0x4(%rbp),%eax
	52:	99	cltd   
	53:	f7 7d f8	idivl  -0x8(%rbp)
	54:	5d	pop    %rbp
	55:	c3	retq   
	56:	89 c6	mov    %eax,%esi
	57:	8b 4d fc	mov    -0x4(%rbp),%ecx
	58:	ba 56 55 55 55	mov    $0x55555556,%edx
	59:	89 c8	mov    %ecx,%eax
	60:	f7 ea	imul   %edx
	61:	89 c8	mov    %ecx,%eax
	62:	c1 f8 1f	sar    $0x1f,%eax
	63:	29 c2	sub    %eax,%edx
	64:	89 d0	mov    %edx,%eax
	65:	39 c6	cmp    %eax,%esi
	66:	74 05	je     0x400219 <L26>
	67:	8b 45 fc	mov    -0x4(%rbp),%eax
	68:	be 04 00 00 00	mov    $0x4,%esi
	69:	89 c7	mov    %eax,%edi
	70:	e8 5c ff ff ff	callq  0x400184 <dd>
	71:	55	push   %rbp
	72:	48 89 e5	mov    %rsp,%rbp
	73:	89 7d fc	mov    %edi,-0x4(%rbp)
	74:	89 75 f8	mov    %esi,-0x8(%rbp)
	75:	8b 45 fc	mov    -0x4(%rbp),%eax
	76:	99	cltd   
	77:	f7 7d f8	idivl  -0x8(%rbp)
	78:	5d	pop    %rbp
	79:	c3	retq   
	80:	89 c2	mov    %eax,%edx
	81:	8b 45 fc	mov    -0x4(%rbp),%eax
	82:	8d 48 03	lea    0x3(%rax),%ecx
	83:	85 c0	test   %eax,%eax
	84:	0f 48 c1	cmovs  %ecx,%eax
	85:	c1 f8 02	sar    $0x2,%eax
	86:	39 c2	cmp    %eax,%edx
	87:	74 05	je     0x400241 <L27>
	88:	8b 45 fc	mov    -0x4(%rbp),%eax
	89:	be 05 00 00 00	mov    $0x5,%esi
	90:	89 c7	mov    %eax,%edi
	91:	e8 34 ff ff ff	callq  0x400184 <dd>
	92:	55	push   %rbp
	93:	48 89 e5	mov    %rsp,%rbp
	94:	89 7d fc	mov    %edi,-0x4(%rbp)
	95:	89 75 f8	mov    %esi,-0x8(%rbp)
	96:	8b 45 fc	mov    -0x4(%rbp),%eax
	97:	99	cltd   
	98:	f7 7d f8	idivl  -0x8(%rbp)
	99:	5d	pop    %rbp
	100:	c3	retq   
	101:	89 c6	mov    %eax,%esi
	102:	8b 4d fc	mov    -0x4(%rbp),%ecx
	103:	ba 67 66 66 66	mov    $0x66666667,%edx
	104:	89 c8	mov    %ecx,%eax
	105:	f7 ea	imul   %edx
	106:	d1 fa	sar    %edx
	107:	89 c8	mov    %ecx,%eax
	108:	c1 f8 1f	sar    $0x1f,%eax
	109:	29 c2	sub    %eax,%edx
	110:	89 d0	mov    %edx,%eax
	111:	39 c6	cmp    %eax,%esi
	112:	74 05	je     0x400272 <L28>
	113:	8b 45 fc	mov    -0x4(%rbp),%eax
	114:	be 06 00 00 00	mov    $0x6,%esi
	115:	89 c7	mov    %eax,%edi
	116:	e8 03 ff ff ff	callq  0x400184 <dd>
	117:	55	push   %rbp
	118:	48 89 e5	mov    %rsp,%rbp
	119:	89 7d fc	mov    %edi,-0x4(%rbp)
	120:	89 75 f8	mov    %esi,-0x8(%rbp)
	121:	8b 45 fc	mov    -0x4(%rbp),%eax
	122:	99	cltd   
	123:	f7 7d f8	idivl  -0x8(%rbp)
	124:	5d	pop    %rbp
	125:	c3	retq   
	126:	89 c6	mov    %eax,%esi
	127:	8b 4d fc	mov    -0x4(%rbp),%ecx
	128:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	129:	89 c8	mov    %ecx,%eax
	130:	f7 ea	imul   %edx
	131:	89 c8	mov    %ecx,%eax
	132:	c1 f8 1f	sar    $0x1f,%eax
	133:	29 c2	sub    %eax,%edx
	134:	89 d0	mov    %edx,%eax
	135:	39 c6	cmp    %eax,%esi
	136:	74 05	je     0x4002a1 <L29>
	137:	8b 45 fc	mov    -0x4(%rbp),%eax
	138:	be 07 00 00 00	mov    $0x7,%esi
	139:	89 c7	mov    %eax,%edi
	140:	e8 d4 fe ff ff	callq  0x400184 <dd>
	141:	55	push   %rbp
	142:	48 89 e5	mov    %rsp,%rbp
	143:	89 7d fc	mov    %edi,-0x4(%rbp)
	144:	89 75 f8	mov    %esi,-0x8(%rbp)
	145:	8b 45 fc	mov    -0x4(%rbp),%eax
	146:	99	cltd   
	147:	f7 7d f8	idivl  -0x8(%rbp)
	148:	5d	pop    %rbp
	149:	c3	retq   
	150:	89 c6	mov    %eax,%esi
	151:	8b 4d fc	mov    -0x4(%rbp),%ecx
	152:	ba 93 24 49 92	mov    $0x92492493,%edx
	153:	89 c8	mov    %ecx,%eax
	154:	f7 ea	imul   %edx
	155:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	156:	c1 f8 02	sar    $0x2,%eax
	157:	89 c2	mov    %eax,%edx
	158:	89 c8	mov    %ecx,%eax
	159:	c1 f8 1f	sar    $0x1f,%eax
	160:	29 c2	sub    %eax,%edx
	161:	89 d0	mov    %edx,%eax
	162:	39 c6	cmp    %eax,%esi
	163:	74 05	je     0x4002d8 <L30>
	164:	8b 45 fc	mov    -0x4(%rbp),%eax
	165:	be 08 00 00 00	mov    $0x8,%esi
	166:	89 c7	mov    %eax,%edi
	167:	e8 9d fe ff ff	callq  0x400184 <dd>
	168:	55	push   %rbp
	169:	48 89 e5	mov    %rsp,%rbp
	170:	89 7d fc	mov    %edi,-0x4(%rbp)
	171:	89 75 f8	mov    %esi,-0x8(%rbp)
	172:	8b 45 fc	mov    -0x4(%rbp),%eax
	173:	99	cltd   
	174:	f7 7d f8	idivl  -0x8(%rbp)
	175:	5d	pop    %rbp
	176:	c3	retq   
	177:	89 c2	mov    %eax,%edx
	178:	8b 45 fc	mov    -0x4(%rbp),%eax
	179:	8d 48 07	lea    0x7(%rax),%ecx
	180:	85 c0	test   %eax,%eax
	181:	0f 48 c1	cmovs  %ecx,%eax
	182:	c1 f8 03	sar    $0x3,%eax
	183:	39 c2	cmp    %eax,%edx
	184:	74 05	je     0x400300 <L31>
	185:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	186:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	187:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	188:	8b 45 fc	mov    -0x4(%rbp),%eax
	189:	be 01 00 00 00	mov    $0x1,%esi
	190:	89 c7	mov    %eax,%edi
	191:	e8 ca ff ff ff	callq  0x400184 <dd>
	192:	55	push   %rbp
	193:	48 89 e5	mov    %rsp,%rbp
	194:	89 7d fc	mov    %edi,-0x4(%rbp)
	195:	89 75 f8	mov    %esi,-0x8(%rbp)
	196:	8b 45 fc	mov    -0x4(%rbp),%eax
	197:	99	cltd   
	198:	f7 7d f8	idivl  -0x8(%rbp)
	199:	5d	pop    %rbp
	200:	c3	retq   
	201:	3b 45 fc	cmp    -0x4(%rbp),%eax
	202:	74 05	je     0x4001c4 <L24>
	203:	8b 45 fc	mov    -0x4(%rbp),%eax
	204:	be 02 00 00 00	mov    $0x2,%esi
	205:	89 c7	mov    %eax,%edi
	206:	e8 b1 ff ff ff	callq  0x400184 <dd>
	207:	55	push   %rbp
	208:	48 89 e5	mov    %rsp,%rbp
	209:	89 7d fc	mov    %edi,-0x4(%rbp)
	210:	89 75 f8	mov    %esi,-0x8(%rbp)
	211:	8b 45 fc	mov    -0x4(%rbp),%eax
	212:	99	cltd   
	213:	f7 7d f8	idivl  -0x8(%rbp)
	214:	5d	pop    %rbp
	215:	c3	retq   
	216:	89 c2	mov    %eax,%edx
	217:	8b 45 fc	mov    -0x4(%rbp),%eax
	218:	89 c1	mov    %eax,%ecx
	219:	c1 e9 1f	shr    $0x1f,%ecx
	220:	01 c8	add    %ecx,%eax
	221:	d1 f8	sar    %eax
	222:	39 c2	cmp    %eax,%edx
	223:	74 05	je     0x4001ea <L25>
	224:	8b 45 fc	mov    -0x4(%rbp),%eax
	225:	be 03 00 00 00	mov    $0x3,%esi
	226:	89 c7	mov    %eax,%edi
	227:	e8 8b ff ff ff	callq  0x400184 <dd>
	228:	55	push   %rbp
	229:	48 89 e5	mov    %rsp,%rbp
	230:	89 7d fc	mov    %edi,-0x4(%rbp)
	231:	89 75 f8	mov    %esi,-0x8(%rbp)
	232:	8b 45 fc	mov    -0x4(%rbp),%eax
	233:	99	cltd   
	234:	f7 7d f8	idivl  -0x8(%rbp)
	235:	5d	pop    %rbp
	236:	c3	retq   
	237:	89 c6	mov    %eax,%esi
	238:	8b 4d fc	mov    -0x4(%rbp),%ecx
	239:	ba 56 55 55 55	mov    $0x55555556,%edx
	240:	89 c8	mov    %ecx,%eax
	241:	f7 ea	imul   %edx
	242:	89 c8	mov    %ecx,%eax
	243:	c1 f8 1f	sar    $0x1f,%eax
	244:	29 c2	sub    %eax,%edx
	245:	89 d0	mov    %edx,%eax
	246:	39 c6	cmp    %eax,%esi
	247:	74 05	je     0x400219 <L26>
	248:	8b 45 fc	mov    -0x4(%rbp),%eax
	249:	be 04 00 00 00	mov    $0x4,%esi
	250:	89 c7	mov    %eax,%edi
	251:	e8 5c ff ff ff	callq  0x400184 <dd>
	252:	55	push   %rbp
	253:	48 89 e5	mov    %rsp,%rbp
	254:	89 7d fc	mov    %edi,-0x4(%rbp)
	255:	89 75 f8	mov    %esi,-0x8(%rbp)
	256:	8b 45 fc	mov    -0x4(%rbp),%eax
	257:	99	cltd   
	258:	f7 7d f8	idivl  -0x8(%rbp)
	259:	5d	pop    %rbp
	260:	c3	retq   
	261:	89 c2	mov    %eax,%edx
	262:	8b 45 fc	mov    -0x4(%rbp),%eax
	263:	8d 48 03	lea    0x3(%rax),%ecx
	264:	85 c0	test   %eax,%eax
	265:	0f 48 c1	cmovs  %ecx,%eax
	266:	c1 f8 02	sar    $0x2,%eax
	267:	39 c2	cmp    %eax,%edx
	268:	74 05	je     0x400241 <L27>
	269:	8b 45 fc	mov    -0x4(%rbp),%eax
	270:	be 05 00 00 00	mov    $0x5,%esi
	271:	89 c7	mov    %eax,%edi
	272:	e8 34 ff ff ff	callq  0x400184 <dd>
	273:	55	push   %rbp
	274:	48 89 e5	mov    %rsp,%rbp
	275:	89 7d fc	mov    %edi,-0x4(%rbp)
	276:	89 75 f8	mov    %esi,-0x8(%rbp)
	277:	8b 45 fc	mov    -0x4(%rbp),%eax
	278:	99	cltd   
	279:	f7 7d f8	idivl  -0x8(%rbp)
	280:	5d	pop    %rbp
	281:	c3	retq   
	282:	89 c6	mov    %eax,%esi
	283:	8b 4d fc	mov    -0x4(%rbp),%ecx
	284:	ba 67 66 66 66	mov    $0x66666667,%edx
	285:	89 c8	mov    %ecx,%eax
	286:	f7 ea	imul   %edx
	287:	d1 fa	sar    %edx
	288:	89 c8	mov    %ecx,%eax
	289:	c1 f8 1f	sar    $0x1f,%eax
	290:	29 c2	sub    %eax,%edx
	291:	89 d0	mov    %edx,%eax
	292:	39 c6	cmp    %eax,%esi
	293:	74 05	je     0x400272 <L28>
	294:	8b 45 fc	mov    -0x4(%rbp),%eax
	295:	be 06 00 00 00	mov    $0x6,%esi
	296:	89 c7	mov    %eax,%edi
	297:	e8 03 ff ff ff	callq  0x400184 <dd>
	298:	55	push   %rbp
	299:	48 89 e5	mov    %rsp,%rbp
	300:	89 7d fc	mov    %edi,-0x4(%rbp)
	301:	89 75 f8	mov    %esi,-0x8(%rbp)
	302:	8b 45 fc	mov    -0x4(%rbp),%eax
	303:	99	cltd   
	304:	f7 7d f8	idivl  -0x8(%rbp)
	305:	5d	pop    %rbp
	306:	c3	retq   
	307:	89 c6	mov    %eax,%esi
	308:	8b 4d fc	mov    -0x4(%rbp),%ecx
	309:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	310:	89 c8	mov    %ecx,%eax
	311:	f7 ea	imul   %edx
	312:	89 c8	mov    %ecx,%eax
	313:	c1 f8 1f	sar    $0x1f,%eax
	314:	29 c2	sub    %eax,%edx
	315:	89 d0	mov    %edx,%eax
	316:	39 c6	cmp    %eax,%esi
	317:	74 05	je     0x4002a1 <L29>
	318:	8b 45 fc	mov    -0x4(%rbp),%eax
	319:	be 07 00 00 00	mov    $0x7,%esi
	320:	89 c7	mov    %eax,%edi
	321:	e8 d4 fe ff ff	callq  0x400184 <dd>
	322:	55	push   %rbp
	323:	48 89 e5	mov    %rsp,%rbp
	324:	89 7d fc	mov    %edi,-0x4(%rbp)
	325:	89 75 f8	mov    %esi,-0x8(%rbp)
	326:	8b 45 fc	mov    -0x4(%rbp),%eax
	327:	99	cltd   
	328:	f7 7d f8	idivl  -0x8(%rbp)
	329:	5d	pop    %rbp
	330:	c3	retq   
	331:	89 c6	mov    %eax,%esi
	332:	8b 4d fc	mov    -0x4(%rbp),%ecx
	333:	ba 93 24 49 92	mov    $0x92492493,%edx
	334:	89 c8	mov    %ecx,%eax
	335:	f7 ea	imul   %edx
	336:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	337:	c1 f8 02	sar    $0x2,%eax
	338:	89 c2	mov    %eax,%edx
	339:	89 c8	mov    %ecx,%eax
	340:	c1 f8 1f	sar    $0x1f,%eax
	341:	29 c2	sub    %eax,%edx
	342:	89 d0	mov    %edx,%eax
	343:	39 c6	cmp    %eax,%esi
	344:	74 05	je     0x4002d8 <L30>
	345:	8b 45 fc	mov    -0x4(%rbp),%eax
	346:	be 08 00 00 00	mov    $0x8,%esi
	347:	89 c7	mov    %eax,%edi
	348:	e8 9d fe ff ff	callq  0x400184 <dd>
	349:	55	push   %rbp
	350:	48 89 e5	mov    %rsp,%rbp
	351:	89 7d fc	mov    %edi,-0x4(%rbp)
	352:	89 75 f8	mov    %esi,-0x8(%rbp)
	353:	8b 45 fc	mov    -0x4(%rbp),%eax
	354:	99	cltd   
	355:	f7 7d f8	idivl  -0x8(%rbp)
	356:	5d	pop    %rbp
	357:	c3	retq   
	358:	89 c2	mov    %eax,%edx
	359:	8b 45 fc	mov    -0x4(%rbp),%eax
	360:	8d 48 07	lea    0x7(%rax),%ecx
	361:	85 c0	test   %eax,%eax
	362:	0f 48 c1	cmovs  %ecx,%eax
	363:	c1 f8 03	sar    $0x3,%eax
	364:	39 c2	cmp    %eax,%edx
	365:	74 05	je     0x400300 <L31>
	366:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	367:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	368:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	369:	8b 45 fc	mov    -0x4(%rbp),%eax
	370:	be 01 00 00 00	mov    $0x1,%esi
	371:	89 c7	mov    %eax,%edi
	372:	e8 ca ff ff ff	callq  0x400184 <dd>
	373:	55	push   %rbp
	374:	48 89 e5	mov    %rsp,%rbp
	375:	89 7d fc	mov    %edi,-0x4(%rbp)
	376:	89 75 f8	mov    %esi,-0x8(%rbp)
	377:	8b 45 fc	mov    -0x4(%rbp),%eax
	378:	99	cltd   
	379:	f7 7d f8	idivl  -0x8(%rbp)
	380:	5d	pop    %rbp
	381:	c3	retq   
	382:	3b 45 fc	cmp    -0x4(%rbp),%eax
	383:	74 05	je     0x4001c4 <L24>
	384:	8b 45 fc	mov    -0x4(%rbp),%eax
	385:	be 02 00 00 00	mov    $0x2,%esi
	386:	89 c7	mov    %eax,%edi
	387:	e8 b1 ff ff ff	callq  0x400184 <dd>
	388:	55	push   %rbp
	389:	48 89 e5	mov    %rsp,%rbp
	390:	89 7d fc	mov    %edi,-0x4(%rbp)
	391:	89 75 f8	mov    %esi,-0x8(%rbp)
	392:	8b 45 fc	mov    -0x4(%rbp),%eax
	393:	99	cltd   
	394:	f7 7d f8	idivl  -0x8(%rbp)
	395:	5d	pop    %rbp
	396:	c3	retq   
	397:	89 c2	mov    %eax,%edx
	398:	8b 45 fc	mov    -0x4(%rbp),%eax
	399:	89 c1	mov    %eax,%ecx
	400:	c1 e9 1f	shr    $0x1f,%ecx
	401:	01 c8	add    %ecx,%eax
	402:	d1 f8	sar    %eax
	403:	39 c2	cmp    %eax,%edx
	404:	74 05	je     0x4001ea <L25>
	405:	8b 45 fc	mov    -0x4(%rbp),%eax
	406:	be 03 00 00 00	mov    $0x3,%esi
	407:	89 c7	mov    %eax,%edi
	408:	e8 8b ff ff ff	callq  0x400184 <dd>
	409:	55	push   %rbp
	410:	48 89 e5	mov    %rsp,%rbp
	411:	89 7d fc	mov    %edi,-0x4(%rbp)
	412:	89 75 f8	mov    %esi,-0x8(%rbp)
	413:	8b 45 fc	mov    -0x4(%rbp),%eax
	414:	99	cltd   
	415:	f7 7d f8	idivl  -0x8(%rbp)
	416:	5d	pop    %rbp
	417:	c3	retq   
	418:	89 c6	mov    %eax,%esi
	419:	8b 4d fc	mov    -0x4(%rbp),%ecx
	420:	ba 56 55 55 55	mov    $0x55555556,%edx
	421:	89 c8	mov    %ecx,%eax
	422:	f7 ea	imul   %edx
	423:	89 c8	mov    %ecx,%eax
	424:	c1 f8 1f	sar    $0x1f,%eax
	425:	29 c2	sub    %eax,%edx
	426:	89 d0	mov    %edx,%eax
	427:	39 c6	cmp    %eax,%esi
	428:	74 05	je     0x400219 <L26>
	429:	8b 45 fc	mov    -0x4(%rbp),%eax
	430:	be 04 00 00 00	mov    $0x4,%esi
	431:	89 c7	mov    %eax,%edi
	432:	e8 5c ff ff ff	callq  0x400184 <dd>
	433:	55	push   %rbp
	434:	48 89 e5	mov    %rsp,%rbp
	435:	89 7d fc	mov    %edi,-0x4(%rbp)
	436:	89 75 f8	mov    %esi,-0x8(%rbp)
	437:	8b 45 fc	mov    -0x4(%rbp),%eax
	438:	99	cltd   
	439:	f7 7d f8	idivl  -0x8(%rbp)
	440:	5d	pop    %rbp
	441:	c3	retq   
	442:	89 c2	mov    %eax,%edx
	443:	8b 45 fc	mov    -0x4(%rbp),%eax
	444:	8d 48 03	lea    0x3(%rax),%ecx
	445:	85 c0	test   %eax,%eax
	446:	0f 48 c1	cmovs  %ecx,%eax
	447:	c1 f8 02	sar    $0x2,%eax
	448:	39 c2	cmp    %eax,%edx
	449:	74 05	je     0x400241 <L27>
	450:	8b 45 fc	mov    -0x4(%rbp),%eax
	451:	be 05 00 00 00	mov    $0x5,%esi
	452:	89 c7	mov    %eax,%edi
	453:	e8 34 ff ff ff	callq  0x400184 <dd>
	454:	55	push   %rbp
	455:	48 89 e5	mov    %rsp,%rbp
	456:	89 7d fc	mov    %edi,-0x4(%rbp)
	457:	89 75 f8	mov    %esi,-0x8(%rbp)
	458:	8b 45 fc	mov    -0x4(%rbp),%eax
	459:	99	cltd   
	460:	f7 7d f8	idivl  -0x8(%rbp)
	461:	5d	pop    %rbp
	462:	c3	retq   
	463:	89 c6	mov    %eax,%esi
	464:	8b 4d fc	mov    -0x4(%rbp),%ecx
	465:	ba 67 66 66 66	mov    $0x66666667,%edx
	466:	89 c8	mov    %ecx,%eax
	467:	f7 ea	imul   %edx
	468:	d1 fa	sar    %edx
	469:	89 c8	mov    %ecx,%eax
	470:	c1 f8 1f	sar    $0x1f,%eax
	471:	29 c2	sub    %eax,%edx
	472:	89 d0	mov    %edx,%eax
	473:	39 c6	cmp    %eax,%esi
	474:	74 05	je     0x400272 <L28>
	475:	8b 45 fc	mov    -0x4(%rbp),%eax
	476:	be 06 00 00 00	mov    $0x6,%esi
	477:	89 c7	mov    %eax,%edi
	478:	e8 03 ff ff ff	callq  0x400184 <dd>
	479:	55	push   %rbp
	480:	48 89 e5	mov    %rsp,%rbp
	481:	89 7d fc	mov    %edi,-0x4(%rbp)
	482:	89 75 f8	mov    %esi,-0x8(%rbp)
	483:	8b 45 fc	mov    -0x4(%rbp),%eax
	484:	99	cltd   
	485:	f7 7d f8	idivl  -0x8(%rbp)
	486:	5d	pop    %rbp
	487:	c3	retq   
	488:	89 c6	mov    %eax,%esi
	489:	8b 4d fc	mov    -0x4(%rbp),%ecx
	490:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	491:	89 c8	mov    %ecx,%eax
	492:	f7 ea	imul   %edx
	493:	89 c8	mov    %ecx,%eax
	494:	c1 f8 1f	sar    $0x1f,%eax
	495:	29 c2	sub    %eax,%edx
	496:	89 d0	mov    %edx,%eax
	497:	39 c6	cmp    %eax,%esi
	498:	74 05	je     0x4002a1 <L29>
	499:	8b 45 fc	mov    -0x4(%rbp),%eax
	500:	be 07 00 00 00	mov    $0x7,%esi
	501:	89 c7	mov    %eax,%edi
	502:	e8 d4 fe ff ff	callq  0x400184 <dd>
	503:	55	push   %rbp
	504:	48 89 e5	mov    %rsp,%rbp
	505:	89 7d fc	mov    %edi,-0x4(%rbp)
	506:	89 75 f8	mov    %esi,-0x8(%rbp)
	507:	8b 45 fc	mov    -0x4(%rbp),%eax
	508:	99	cltd   
	509:	f7 7d f8	idivl  -0x8(%rbp)
	510:	5d	pop    %rbp
	511:	c3	retq   
	512:	89 c6	mov    %eax,%esi
	513:	8b 4d fc	mov    -0x4(%rbp),%ecx
	514:	ba 93 24 49 92	mov    $0x92492493,%edx
	515:	89 c8	mov    %ecx,%eax
	516:	f7 ea	imul   %edx
	517:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	518:	c1 f8 02	sar    $0x2,%eax
	519:	89 c2	mov    %eax,%edx
	520:	89 c8	mov    %ecx,%eax
	521:	c1 f8 1f	sar    $0x1f,%eax
	522:	29 c2	sub    %eax,%edx
	523:	89 d0	mov    %edx,%eax
	524:	39 c6	cmp    %eax,%esi
	525:	74 05	je     0x4002d8 <L30>
	526:	8b 45 fc	mov    -0x4(%rbp),%eax
	527:	be 08 00 00 00	mov    $0x8,%esi
	528:	89 c7	mov    %eax,%edi
	529:	e8 9d fe ff ff	callq  0x400184 <dd>
	530:	55	push   %rbp
	531:	48 89 e5	mov    %rsp,%rbp
	532:	89 7d fc	mov    %edi,-0x4(%rbp)
	533:	89 75 f8	mov    %esi,-0x8(%rbp)
	534:	8b 45 fc	mov    -0x4(%rbp),%eax
	535:	99	cltd   
	536:	f7 7d f8	idivl  -0x8(%rbp)
	537:	5d	pop    %rbp
	538:	c3	retq   
	539:	89 c2	mov    %eax,%edx
	540:	8b 45 fc	mov    -0x4(%rbp),%eax
	541:	8d 48 07	lea    0x7(%rax),%ecx
	542:	85 c0	test   %eax,%eax
	543:	0f 48 c1	cmovs  %ecx,%eax
	544:	c1 f8 03	sar    $0x3,%eax
	545:	39 c2	cmp    %eax,%edx
	546:	74 05	je     0x400300 <L31>
	547:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	548:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	549:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	550:	8b 45 fc	mov    -0x4(%rbp),%eax
	551:	be 01 00 00 00	mov    $0x1,%esi
	552:	89 c7	mov    %eax,%edi
	553:	e8 ca ff ff ff	callq  0x400184 <dd>
	554:	55	push   %rbp
	555:	48 89 e5	mov    %rsp,%rbp
	556:	89 7d fc	mov    %edi,-0x4(%rbp)
	557:	89 75 f8	mov    %esi,-0x8(%rbp)
	558:	8b 45 fc	mov    -0x4(%rbp),%eax
	559:	99	cltd   
	560:	f7 7d f8	idivl  -0x8(%rbp)
	561:	5d	pop    %rbp
	562:	c3	retq   
	563:	3b 45 fc	cmp    -0x4(%rbp),%eax
	564:	74 05	je     0x4001c4 <L24>
	565:	8b 45 fc	mov    -0x4(%rbp),%eax
	566:	be 02 00 00 00	mov    $0x2,%esi
	567:	89 c7	mov    %eax,%edi
	568:	e8 b1 ff ff ff	callq  0x400184 <dd>
	569:	55	push   %rbp
	570:	48 89 e5	mov    %rsp,%rbp
	571:	89 7d fc	mov    %edi,-0x4(%rbp)
	572:	89 75 f8	mov    %esi,-0x8(%rbp)
	573:	8b 45 fc	mov    -0x4(%rbp),%eax
	574:	99	cltd   
	575:	f7 7d f8	idivl  -0x8(%rbp)
	576:	5d	pop    %rbp
	577:	c3	retq   
	578:	89 c2	mov    %eax,%edx
	579:	8b 45 fc	mov    -0x4(%rbp),%eax
	580:	89 c1	mov    %eax,%ecx
	581:	c1 e9 1f	shr    $0x1f,%ecx
	582:	01 c8	add    %ecx,%eax
	583:	d1 f8	sar    %eax
	584:	39 c2	cmp    %eax,%edx
	585:	74 05	je     0x4001ea <L25>
	586:	8b 45 fc	mov    -0x4(%rbp),%eax
	587:	be 03 00 00 00	mov    $0x3,%esi
	588:	89 c7	mov    %eax,%edi
	589:	e8 8b ff ff ff	callq  0x400184 <dd>
	590:	55	push   %rbp
	591:	48 89 e5	mov    %rsp,%rbp
	592:	89 7d fc	mov    %edi,-0x4(%rbp)
	593:	89 75 f8	mov    %esi,-0x8(%rbp)
	594:	8b 45 fc	mov    -0x4(%rbp),%eax
	595:	99	cltd   
	596:	f7 7d f8	idivl  -0x8(%rbp)
	597:	5d	pop    %rbp
	598:	c3	retq   
	599:	89 c6	mov    %eax,%esi
	600:	8b 4d fc	mov    -0x4(%rbp),%ecx
	601:	ba 56 55 55 55	mov    $0x55555556,%edx
	602:	89 c8	mov    %ecx,%eax
	603:	f7 ea	imul   %edx
	604:	89 c8	mov    %ecx,%eax
	605:	c1 f8 1f	sar    $0x1f,%eax
	606:	29 c2	sub    %eax,%edx
	607:	89 d0	mov    %edx,%eax
	608:	39 c6	cmp    %eax,%esi
	609:	74 05	je     0x400219 <L26>
	610:	8b 45 fc	mov    -0x4(%rbp),%eax
	611:	be 04 00 00 00	mov    $0x4,%esi
	612:	89 c7	mov    %eax,%edi
	613:	e8 5c ff ff ff	callq  0x400184 <dd>
	614:	55	push   %rbp
	615:	48 89 e5	mov    %rsp,%rbp
	616:	89 7d fc	mov    %edi,-0x4(%rbp)
	617:	89 75 f8	mov    %esi,-0x8(%rbp)
	618:	8b 45 fc	mov    -0x4(%rbp),%eax
	619:	99	cltd   
	620:	f7 7d f8	idivl  -0x8(%rbp)
	621:	5d	pop    %rbp
	622:	c3	retq   
	623:	89 c2	mov    %eax,%edx
	624:	8b 45 fc	mov    -0x4(%rbp),%eax
	625:	8d 48 03	lea    0x3(%rax),%ecx
	626:	85 c0	test   %eax,%eax
	627:	0f 48 c1	cmovs  %ecx,%eax
	628:	c1 f8 02	sar    $0x2,%eax
	629:	39 c2	cmp    %eax,%edx
	630:	74 05	je     0x400241 <L27>
	631:	8b 45 fc	mov    -0x4(%rbp),%eax
	632:	be 05 00 00 00	mov    $0x5,%esi
	633:	89 c7	mov    %eax,%edi
	634:	e8 34 ff ff ff	callq  0x400184 <dd>
	635:	55	push   %rbp
	636:	48 89 e5	mov    %rsp,%rbp
	637:	89 7d fc	mov    %edi,-0x4(%rbp)
	638:	89 75 f8	mov    %esi,-0x8(%rbp)
	639:	8b 45 fc	mov    -0x4(%rbp),%eax
	640:	99	cltd   
	641:	f7 7d f8	idivl  -0x8(%rbp)
	642:	5d	pop    %rbp
	643:	c3	retq   
	644:	89 c6	mov    %eax,%esi
	645:	8b 4d fc	mov    -0x4(%rbp),%ecx
	646:	ba 67 66 66 66	mov    $0x66666667,%edx
	647:	89 c8	mov    %ecx,%eax
	648:	f7 ea	imul   %edx
	649:	d1 fa	sar    %edx
	650:	89 c8	mov    %ecx,%eax
	651:	c1 f8 1f	sar    $0x1f,%eax
	652:	29 c2	sub    %eax,%edx
	653:	89 d0	mov    %edx,%eax
	654:	39 c6	cmp    %eax,%esi
	655:	74 05	je     0x400272 <L28>
	656:	8b 45 fc	mov    -0x4(%rbp),%eax
	657:	be 06 00 00 00	mov    $0x6,%esi
	658:	89 c7	mov    %eax,%edi
	659:	e8 03 ff ff ff	callq  0x400184 <dd>
	660:	55	push   %rbp
	661:	48 89 e5	mov    %rsp,%rbp
	662:	89 7d fc	mov    %edi,-0x4(%rbp)
	663:	89 75 f8	mov    %esi,-0x8(%rbp)
	664:	8b 45 fc	mov    -0x4(%rbp),%eax
	665:	99	cltd   
	666:	f7 7d f8	idivl  -0x8(%rbp)
	667:	5d	pop    %rbp
	668:	c3	retq   
	669:	89 c6	mov    %eax,%esi
	670:	8b 4d fc	mov    -0x4(%rbp),%ecx
	671:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	672:	89 c8	mov    %ecx,%eax
	673:	f7 ea	imul   %edx
	674:	89 c8	mov    %ecx,%eax
	675:	c1 f8 1f	sar    $0x1f,%eax
	676:	29 c2	sub    %eax,%edx
	677:	89 d0	mov    %edx,%eax
	678:	39 c6	cmp    %eax,%esi
	679:	74 05	je     0x4002a1 <L29>
	680:	8b 45 fc	mov    -0x4(%rbp),%eax
	681:	be 07 00 00 00	mov    $0x7,%esi
	682:	89 c7	mov    %eax,%edi
	683:	e8 d4 fe ff ff	callq  0x400184 <dd>
	684:	55	push   %rbp
	685:	48 89 e5	mov    %rsp,%rbp
	686:	89 7d fc	mov    %edi,-0x4(%rbp)
	687:	89 75 f8	mov    %esi,-0x8(%rbp)
	688:	8b 45 fc	mov    -0x4(%rbp),%eax
	689:	99	cltd   
	690:	f7 7d f8	idivl  -0x8(%rbp)
	691:	5d	pop    %rbp
	692:	c3	retq   
	693:	89 c6	mov    %eax,%esi
	694:	8b 4d fc	mov    -0x4(%rbp),%ecx
	695:	ba 93 24 49 92	mov    $0x92492493,%edx
	696:	89 c8	mov    %ecx,%eax
	697:	f7 ea	imul   %edx
	698:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	699:	c1 f8 02	sar    $0x2,%eax
	700:	89 c2	mov    %eax,%edx
	701:	89 c8	mov    %ecx,%eax
	702:	c1 f8 1f	sar    $0x1f,%eax
	703:	29 c2	sub    %eax,%edx
	704:	89 d0	mov    %edx,%eax
	705:	39 c6	cmp    %eax,%esi
	706:	74 05	je     0x4002d8 <L30>
	707:	8b 45 fc	mov    -0x4(%rbp),%eax
	708:	be 08 00 00 00	mov    $0x8,%esi
	709:	89 c7	mov    %eax,%edi
	710:	e8 9d fe ff ff	callq  0x400184 <dd>
	711:	55	push   %rbp
	712:	48 89 e5	mov    %rsp,%rbp
	713:	89 7d fc	mov    %edi,-0x4(%rbp)
	714:	89 75 f8	mov    %esi,-0x8(%rbp)
	715:	8b 45 fc	mov    -0x4(%rbp),%eax
	716:	99	cltd   
	717:	f7 7d f8	idivl  -0x8(%rbp)
	718:	5d	pop    %rbp
	719:	c3	retq   
	720:	89 c2	mov    %eax,%edx
	721:	8b 45 fc	mov    -0x4(%rbp),%eax
	722:	8d 48 07	lea    0x7(%rax),%ecx
	723:	85 c0	test   %eax,%eax
	724:	0f 48 c1	cmovs  %ecx,%eax
	725:	c1 f8 03	sar    $0x3,%eax
	726:	39 c2	cmp    %eax,%edx
	727:	74 05	je     0x400300 <L31>
	728:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	729:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	730:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	731:	8b 45 fc	mov    -0x4(%rbp),%eax
	732:	be 01 00 00 00	mov    $0x1,%esi
	733:	89 c7	mov    %eax,%edi
	734:	e8 ca ff ff ff	callq  0x400184 <dd>
	735:	55	push   %rbp
	736:	48 89 e5	mov    %rsp,%rbp
	737:	89 7d fc	mov    %edi,-0x4(%rbp)
	738:	89 75 f8	mov    %esi,-0x8(%rbp)
	739:	8b 45 fc	mov    -0x4(%rbp),%eax
	740:	99	cltd   
	741:	f7 7d f8	idivl  -0x8(%rbp)
	742:	5d	pop    %rbp
	743:	c3	retq   
	744:	3b 45 fc	cmp    -0x4(%rbp),%eax
	745:	74 05	je     0x4001c4 <L24>
	746:	8b 45 fc	mov    -0x4(%rbp),%eax
	747:	be 02 00 00 00	mov    $0x2,%esi
	748:	89 c7	mov    %eax,%edi
	749:	e8 b1 ff ff ff	callq  0x400184 <dd>
	750:	55	push   %rbp
	751:	48 89 e5	mov    %rsp,%rbp
	752:	89 7d fc	mov    %edi,-0x4(%rbp)
	753:	89 75 f8	mov    %esi,-0x8(%rbp)
	754:	8b 45 fc	mov    -0x4(%rbp),%eax
	755:	99	cltd   
	756:	f7 7d f8	idivl  -0x8(%rbp)
	757:	5d	pop    %rbp
	758:	c3	retq   
	759:	89 c2	mov    %eax,%edx
	760:	8b 45 fc	mov    -0x4(%rbp),%eax
	761:	89 c1	mov    %eax,%ecx
	762:	c1 e9 1f	shr    $0x1f,%ecx
	763:	01 c8	add    %ecx,%eax
	764:	d1 f8	sar    %eax
	765:	39 c2	cmp    %eax,%edx
	766:	74 05	je     0x4001ea <L25>
	767:	8b 45 fc	mov    -0x4(%rbp),%eax
	768:	be 03 00 00 00	mov    $0x3,%esi
	769:	89 c7	mov    %eax,%edi
	770:	e8 8b ff ff ff	callq  0x400184 <dd>
	771:	55	push   %rbp
	772:	48 89 e5	mov    %rsp,%rbp
	773:	89 7d fc	mov    %edi,-0x4(%rbp)
	774:	89 75 f8	mov    %esi,-0x8(%rbp)
	775:	8b 45 fc	mov    -0x4(%rbp),%eax
	776:	99	cltd   
	777:	f7 7d f8	idivl  -0x8(%rbp)
	778:	5d	pop    %rbp
	779:	c3	retq   
	780:	89 c6	mov    %eax,%esi
	781:	8b 4d fc	mov    -0x4(%rbp),%ecx
	782:	ba 56 55 55 55	mov    $0x55555556,%edx
	783:	89 c8	mov    %ecx,%eax
	784:	f7 ea	imul   %edx
	785:	89 c8	mov    %ecx,%eax
	786:	c1 f8 1f	sar    $0x1f,%eax
	787:	29 c2	sub    %eax,%edx
	788:	89 d0	mov    %edx,%eax
	789:	39 c6	cmp    %eax,%esi
	790:	74 05	je     0x400219 <L26>
	791:	8b 45 fc	mov    -0x4(%rbp),%eax
	792:	be 04 00 00 00	mov    $0x4,%esi
	793:	89 c7	mov    %eax,%edi
	794:	e8 5c ff ff ff	callq  0x400184 <dd>
	795:	55	push   %rbp
	796:	48 89 e5	mov    %rsp,%rbp
	797:	89 7d fc	mov    %edi,-0x4(%rbp)
	798:	89 75 f8	mov    %esi,-0x8(%rbp)
	799:	8b 45 fc	mov    -0x4(%rbp),%eax
	800:	99	cltd   
	801:	f7 7d f8	idivl  -0x8(%rbp)
	802:	5d	pop    %rbp
	803:	c3	retq   
	804:	89 c2	mov    %eax,%edx
	805:	8b 45 fc	mov    -0x4(%rbp),%eax
	806:	8d 48 03	lea    0x3(%rax),%ecx
	807:	85 c0	test   %eax,%eax
	808:	0f 48 c1	cmovs  %ecx,%eax
	809:	c1 f8 02	sar    $0x2,%eax
	810:	39 c2	cmp    %eax,%edx
	811:	74 05	je     0x400241 <L27>
	812:	8b 45 fc	mov    -0x4(%rbp),%eax
	813:	be 05 00 00 00	mov    $0x5,%esi
	814:	89 c7	mov    %eax,%edi
	815:	e8 34 ff ff ff	callq  0x400184 <dd>
	816:	55	push   %rbp
	817:	48 89 e5	mov    %rsp,%rbp
	818:	89 7d fc	mov    %edi,-0x4(%rbp)
	819:	89 75 f8	mov    %esi,-0x8(%rbp)
	820:	8b 45 fc	mov    -0x4(%rbp),%eax
	821:	99	cltd   
	822:	f7 7d f8	idivl  -0x8(%rbp)
	823:	5d	pop    %rbp
	824:	c3	retq   
	825:	89 c6	mov    %eax,%esi
	826:	8b 4d fc	mov    -0x4(%rbp),%ecx
	827:	ba 67 66 66 66	mov    $0x66666667,%edx
	828:	89 c8	mov    %ecx,%eax
	829:	f7 ea	imul   %edx
	830:	d1 fa	sar    %edx
	831:	89 c8	mov    %ecx,%eax
	832:	c1 f8 1f	sar    $0x1f,%eax
	833:	29 c2	sub    %eax,%edx
	834:	89 d0	mov    %edx,%eax
	835:	39 c6	cmp    %eax,%esi
	836:	74 05	je     0x400272 <L28>
	837:	8b 45 fc	mov    -0x4(%rbp),%eax
	838:	be 06 00 00 00	mov    $0x6,%esi
	839:	89 c7	mov    %eax,%edi
	840:	e8 03 ff ff ff	callq  0x400184 <dd>
	841:	55	push   %rbp
	842:	48 89 e5	mov    %rsp,%rbp
	843:	89 7d fc	mov    %edi,-0x4(%rbp)
	844:	89 75 f8	mov    %esi,-0x8(%rbp)
	845:	8b 45 fc	mov    -0x4(%rbp),%eax
	846:	99	cltd   
	847:	f7 7d f8	idivl  -0x8(%rbp)
	848:	5d	pop    %rbp
	849:	c3	retq   
	850:	89 c6	mov    %eax,%esi
	851:	8b 4d fc	mov    -0x4(%rbp),%ecx
	852:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	853:	89 c8	mov    %ecx,%eax
	854:	f7 ea	imul   %edx
	855:	89 c8	mov    %ecx,%eax
	856:	c1 f8 1f	sar    $0x1f,%eax
	857:	29 c2	sub    %eax,%edx
	858:	89 d0	mov    %edx,%eax
	859:	39 c6	cmp    %eax,%esi
	860:	74 05	je     0x4002a1 <L29>
	861:	8b 45 fc	mov    -0x4(%rbp),%eax
	862:	be 07 00 00 00	mov    $0x7,%esi
	863:	89 c7	mov    %eax,%edi
	864:	e8 d4 fe ff ff	callq  0x400184 <dd>
	865:	55	push   %rbp
	866:	48 89 e5	mov    %rsp,%rbp
	867:	89 7d fc	mov    %edi,-0x4(%rbp)
	868:	89 75 f8	mov    %esi,-0x8(%rbp)
	869:	8b 45 fc	mov    -0x4(%rbp),%eax
	870:	99	cltd   
	871:	f7 7d f8	idivl  -0x8(%rbp)
	872:	5d	pop    %rbp
	873:	c3	retq   
	874:	89 c6	mov    %eax,%esi
	875:	8b 4d fc	mov    -0x4(%rbp),%ecx
	876:	ba 93 24 49 92	mov    $0x92492493,%edx
	877:	89 c8	mov    %ecx,%eax
	878:	f7 ea	imul   %edx
	879:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	880:	c1 f8 02	sar    $0x2,%eax
	881:	89 c2	mov    %eax,%edx
	882:	89 c8	mov    %ecx,%eax
	883:	c1 f8 1f	sar    $0x1f,%eax
	884:	29 c2	sub    %eax,%edx
	885:	89 d0	mov    %edx,%eax
	886:	39 c6	cmp    %eax,%esi
	887:	74 05	je     0x4002d8 <L30>
	888:	8b 45 fc	mov    -0x4(%rbp),%eax
	889:	be 08 00 00 00	mov    $0x8,%esi
	890:	89 c7	mov    %eax,%edi
	891:	e8 9d fe ff ff	callq  0x400184 <dd>
	892:	55	push   %rbp
	893:	48 89 e5	mov    %rsp,%rbp
	894:	89 7d fc	mov    %edi,-0x4(%rbp)
	895:	89 75 f8	mov    %esi,-0x8(%rbp)
	896:	8b 45 fc	mov    -0x4(%rbp),%eax
	897:	99	cltd   
	898:	f7 7d f8	idivl  -0x8(%rbp)
	899:	5d	pop    %rbp
	900:	c3	retq   
	901:	89 c2	mov    %eax,%edx
	902:	8b 45 fc	mov    -0x4(%rbp),%eax
	903:	8d 48 07	lea    0x7(%rax),%ecx
	904:	85 c0	test   %eax,%eax
	905:	0f 48 c1	cmovs  %ecx,%eax
	906:	c1 f8 03	sar    $0x3,%eax
	907:	39 c2	cmp    %eax,%edx
	908:	74 05	je     0x400300 <L31>
	909:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	910:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	911:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	912:	8b 45 fc	mov    -0x4(%rbp),%eax
	913:	be 01 00 00 00	mov    $0x1,%esi
	914:	89 c7	mov    %eax,%edi
	915:	e8 ca ff ff ff	callq  0x400184 <dd>
	916:	55	push   %rbp
	917:	48 89 e5	mov    %rsp,%rbp
	918:	89 7d fc	mov    %edi,-0x4(%rbp)
	919:	89 75 f8	mov    %esi,-0x8(%rbp)
	920:	8b 45 fc	mov    -0x4(%rbp),%eax
	921:	99	cltd   
	922:	f7 7d f8	idivl  -0x8(%rbp)
	923:	5d	pop    %rbp
	924:	c3	retq   
	925:	3b 45 fc	cmp    -0x4(%rbp),%eax
	926:	74 05	je     0x4001c4 <L24>
	927:	8b 45 fc	mov    -0x4(%rbp),%eax
	928:	be 02 00 00 00	mov    $0x2,%esi
	929:	89 c7	mov    %eax,%edi
	930:	e8 b1 ff ff ff	callq  0x400184 <dd>
	931:	55	push   %rbp
	932:	48 89 e5	mov    %rsp,%rbp
	933:	89 7d fc	mov    %edi,-0x4(%rbp)
	934:	89 75 f8	mov    %esi,-0x8(%rbp)
	935:	8b 45 fc	mov    -0x4(%rbp),%eax
	936:	99	cltd   
	937:	f7 7d f8	idivl  -0x8(%rbp)
	938:	5d	pop    %rbp
	939:	c3	retq   
	940:	89 c2	mov    %eax,%edx
	941:	8b 45 fc	mov    -0x4(%rbp),%eax
	942:	89 c1	mov    %eax,%ecx
	943:	c1 e9 1f	shr    $0x1f,%ecx
	944:	01 c8	add    %ecx,%eax
	945:	d1 f8	sar    %eax
	946:	39 c2	cmp    %eax,%edx
	947:	74 05	je     0x4001ea <L25>
	948:	8b 45 fc	mov    -0x4(%rbp),%eax
	949:	be 03 00 00 00	mov    $0x3,%esi
	950:	89 c7	mov    %eax,%edi
	951:	e8 8b ff ff ff	callq  0x400184 <dd>
	952:	55	push   %rbp
	953:	48 89 e5	mov    %rsp,%rbp
	954:	89 7d fc	mov    %edi,-0x4(%rbp)
	955:	89 75 f8	mov    %esi,-0x8(%rbp)
	956:	8b 45 fc	mov    -0x4(%rbp),%eax
	957:	99	cltd   
	958:	f7 7d f8	idivl  -0x8(%rbp)
	959:	5d	pop    %rbp
	960:	c3	retq   
	961:	89 c6	mov    %eax,%esi
	962:	8b 4d fc	mov    -0x4(%rbp),%ecx
	963:	ba 56 55 55 55	mov    $0x55555556,%edx
	964:	89 c8	mov    %ecx,%eax
	965:	f7 ea	imul   %edx
	966:	89 c8	mov    %ecx,%eax
	967:	c1 f8 1f	sar    $0x1f,%eax
	968:	29 c2	sub    %eax,%edx
	969:	89 d0	mov    %edx,%eax
	970:	39 c6	cmp    %eax,%esi
	971:	74 05	je     0x400219 <L26>
	972:	8b 45 fc	mov    -0x4(%rbp),%eax
	973:	be 04 00 00 00	mov    $0x4,%esi
	974:	89 c7	mov    %eax,%edi
	975:	e8 5c ff ff ff	callq  0x400184 <dd>
	976:	55	push   %rbp
	977:	48 89 e5	mov    %rsp,%rbp
	978:	89 7d fc	mov    %edi,-0x4(%rbp)
	979:	89 75 f8	mov    %esi,-0x8(%rbp)
	980:	8b 45 fc	mov    -0x4(%rbp),%eax
	981:	99	cltd   
	982:	f7 7d f8	idivl  -0x8(%rbp)
	983:	5d	pop    %rbp
	984:	c3	retq   
	985:	89 c2	mov    %eax,%edx
	986:	8b 45 fc	mov    -0x4(%rbp),%eax
	987:	8d 48 03	lea    0x3(%rax),%ecx
	988:	85 c0	test   %eax,%eax
	989:	0f 48 c1	cmovs  %ecx,%eax
	990:	c1 f8 02	sar    $0x2,%eax
	991:	39 c2	cmp    %eax,%edx
	992:	74 05	je     0x400241 <L27>
	993:	8b 45 fc	mov    -0x4(%rbp),%eax
	994:	be 05 00 00 00	mov    $0x5,%esi
	995:	89 c7	mov    %eax,%edi
	996:	e8 34 ff ff ff	callq  0x400184 <dd>
	997:	55	push   %rbp
	998:	48 89 e5	mov    %rsp,%rbp
	999:	89 7d fc	mov    %edi,-0x4(%rbp)
	1000:	89 75 f8	mov    %esi,-0x8(%rbp)
	1001:	8b 45 fc	mov    -0x4(%rbp),%eax
	1002:	99	cltd   
	1003:	f7 7d f8	idivl  -0x8(%rbp)
	1004:	5d	pop    %rbp
	1005:	c3	retq   
	1006:	89 c6	mov    %eax,%esi
	1007:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1008:	ba 67 66 66 66	mov    $0x66666667,%edx
	1009:	89 c8	mov    %ecx,%eax
	1010:	f7 ea	imul   %edx
	1011:	d1 fa	sar    %edx
	1012:	89 c8	mov    %ecx,%eax
	1013:	c1 f8 1f	sar    $0x1f,%eax
	1014:	29 c2	sub    %eax,%edx
	1015:	89 d0	mov    %edx,%eax
	1016:	39 c6	cmp    %eax,%esi
	1017:	74 05	je     0x400272 <L28>
	1018:	8b 45 fc	mov    -0x4(%rbp),%eax
	1019:	be 06 00 00 00	mov    $0x6,%esi
	1020:	89 c7	mov    %eax,%edi
	1021:	e8 03 ff ff ff	callq  0x400184 <dd>
	1022:	55	push   %rbp
	1023:	48 89 e5	mov    %rsp,%rbp
	1024:	89 7d fc	mov    %edi,-0x4(%rbp)
	1025:	89 75 f8	mov    %esi,-0x8(%rbp)
	1026:	8b 45 fc	mov    -0x4(%rbp),%eax
	1027:	99	cltd   
	1028:	f7 7d f8	idivl  -0x8(%rbp)
	1029:	5d	pop    %rbp
	1030:	c3	retq   
	1031:	89 c6	mov    %eax,%esi
	1032:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1033:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	1034:	89 c8	mov    %ecx,%eax
	1035:	f7 ea	imul   %edx
	1036:	89 c8	mov    %ecx,%eax
	1037:	c1 f8 1f	sar    $0x1f,%eax
	1038:	29 c2	sub    %eax,%edx
	1039:	89 d0	mov    %edx,%eax
	1040:	39 c6	cmp    %eax,%esi
	1041:	74 05	je     0x4002a1 <L29>
	1042:	8b 45 fc	mov    -0x4(%rbp),%eax
	1043:	be 07 00 00 00	mov    $0x7,%esi
	1044:	89 c7	mov    %eax,%edi
	1045:	e8 d4 fe ff ff	callq  0x400184 <dd>
	1046:	55	push   %rbp
	1047:	48 89 e5	mov    %rsp,%rbp
	1048:	89 7d fc	mov    %edi,-0x4(%rbp)
	1049:	89 75 f8	mov    %esi,-0x8(%rbp)
	1050:	8b 45 fc	mov    -0x4(%rbp),%eax
	1051:	99	cltd   
	1052:	f7 7d f8	idivl  -0x8(%rbp)
	1053:	5d	pop    %rbp
	1054:	c3	retq   
	1055:	89 c6	mov    %eax,%esi
	1056:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1057:	ba 93 24 49 92	mov    $0x92492493,%edx
	1058:	89 c8	mov    %ecx,%eax
	1059:	f7 ea	imul   %edx
	1060:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	1061:	c1 f8 02	sar    $0x2,%eax
	1062:	89 c2	mov    %eax,%edx
	1063:	89 c8	mov    %ecx,%eax
	1064:	c1 f8 1f	sar    $0x1f,%eax
	1065:	29 c2	sub    %eax,%edx
	1066:	89 d0	mov    %edx,%eax
	1067:	39 c6	cmp    %eax,%esi
	1068:	74 05	je     0x4002d8 <L30>
	1069:	8b 45 fc	mov    -0x4(%rbp),%eax
	1070:	be 08 00 00 00	mov    $0x8,%esi
	1071:	89 c7	mov    %eax,%edi
	1072:	e8 9d fe ff ff	callq  0x400184 <dd>
	1073:	55	push   %rbp
	1074:	48 89 e5	mov    %rsp,%rbp
	1075:	89 7d fc	mov    %edi,-0x4(%rbp)
	1076:	89 75 f8	mov    %esi,-0x8(%rbp)
	1077:	8b 45 fc	mov    -0x4(%rbp),%eax
	1078:	99	cltd   
	1079:	f7 7d f8	idivl  -0x8(%rbp)
	1080:	5d	pop    %rbp
	1081:	c3	retq   
	1082:	89 c2	mov    %eax,%edx
	1083:	8b 45 fc	mov    -0x4(%rbp),%eax
	1084:	8d 48 07	lea    0x7(%rax),%ecx
	1085:	85 c0	test   %eax,%eax
	1086:	0f 48 c1	cmovs  %ecx,%eax
	1087:	c1 f8 03	sar    $0x3,%eax
	1088:	39 c2	cmp    %eax,%edx
	1089:	74 05	je     0x400300 <L31>
	1090:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	1091:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	1092:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	1093:	8b 45 fc	mov    -0x4(%rbp),%eax
	1094:	be 01 00 00 00	mov    $0x1,%esi
	1095:	89 c7	mov    %eax,%edi
	1096:	e8 ca ff ff ff	callq  0x400184 <dd>
	1097:	55	push   %rbp
	1098:	48 89 e5	mov    %rsp,%rbp
	1099:	89 7d fc	mov    %edi,-0x4(%rbp)
	1100:	89 75 f8	mov    %esi,-0x8(%rbp)
	1101:	8b 45 fc	mov    -0x4(%rbp),%eax
	1102:	99	cltd   
	1103:	f7 7d f8	idivl  -0x8(%rbp)
	1104:	5d	pop    %rbp
	1105:	c3	retq   
	1106:	3b 45 fc	cmp    -0x4(%rbp),%eax
	1107:	74 05	je     0x4001c4 <L24>
	1108:	8b 45 fc	mov    -0x4(%rbp),%eax
	1109:	be 02 00 00 00	mov    $0x2,%esi
	1110:	89 c7	mov    %eax,%edi
	1111:	e8 b1 ff ff ff	callq  0x400184 <dd>
	1112:	55	push   %rbp
	1113:	48 89 e5	mov    %rsp,%rbp
	1114:	89 7d fc	mov    %edi,-0x4(%rbp)
	1115:	89 75 f8	mov    %esi,-0x8(%rbp)
	1116:	8b 45 fc	mov    -0x4(%rbp),%eax
	1117:	99	cltd   
	1118:	f7 7d f8	idivl  -0x8(%rbp)
	1119:	5d	pop    %rbp
	1120:	c3	retq   
	1121:	89 c2	mov    %eax,%edx
	1122:	8b 45 fc	mov    -0x4(%rbp),%eax
	1123:	89 c1	mov    %eax,%ecx
	1124:	c1 e9 1f	shr    $0x1f,%ecx
	1125:	01 c8	add    %ecx,%eax
	1126:	d1 f8	sar    %eax
	1127:	39 c2	cmp    %eax,%edx
	1128:	74 05	je     0x4001ea <L25>
	1129:	8b 45 fc	mov    -0x4(%rbp),%eax
	1130:	be 03 00 00 00	mov    $0x3,%esi
	1131:	89 c7	mov    %eax,%edi
	1132:	e8 8b ff ff ff	callq  0x400184 <dd>
	1133:	55	push   %rbp
	1134:	48 89 e5	mov    %rsp,%rbp
	1135:	89 7d fc	mov    %edi,-0x4(%rbp)
	1136:	89 75 f8	mov    %esi,-0x8(%rbp)
	1137:	8b 45 fc	mov    -0x4(%rbp),%eax
	1138:	99	cltd   
	1139:	f7 7d f8	idivl  -0x8(%rbp)
	1140:	5d	pop    %rbp
	1141:	c3	retq   
	1142:	89 c6	mov    %eax,%esi
	1143:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1144:	ba 56 55 55 55	mov    $0x55555556,%edx
	1145:	89 c8	mov    %ecx,%eax
	1146:	f7 ea	imul   %edx
	1147:	89 c8	mov    %ecx,%eax
	1148:	c1 f8 1f	sar    $0x1f,%eax
	1149:	29 c2	sub    %eax,%edx
	1150:	89 d0	mov    %edx,%eax
	1151:	39 c6	cmp    %eax,%esi
	1152:	74 05	je     0x400219 <L26>
	1153:	8b 45 fc	mov    -0x4(%rbp),%eax
	1154:	be 04 00 00 00	mov    $0x4,%esi
	1155:	89 c7	mov    %eax,%edi
	1156:	e8 5c ff ff ff	callq  0x400184 <dd>
	1157:	55	push   %rbp
	1158:	48 89 e5	mov    %rsp,%rbp
	1159:	89 7d fc	mov    %edi,-0x4(%rbp)
	1160:	89 75 f8	mov    %esi,-0x8(%rbp)
	1161:	8b 45 fc	mov    -0x4(%rbp),%eax
	1162:	99	cltd   
	1163:	f7 7d f8	idivl  -0x8(%rbp)
	1164:	5d	pop    %rbp
	1165:	c3	retq   
	1166:	89 c2	mov    %eax,%edx
	1167:	8b 45 fc	mov    -0x4(%rbp),%eax
	1168:	8d 48 03	lea    0x3(%rax),%ecx
	1169:	85 c0	test   %eax,%eax
	1170:	0f 48 c1	cmovs  %ecx,%eax
	1171:	c1 f8 02	sar    $0x2,%eax
	1172:	39 c2	cmp    %eax,%edx
	1173:	74 05	je     0x400241 <L27>
	1174:	8b 45 fc	mov    -0x4(%rbp),%eax
	1175:	be 05 00 00 00	mov    $0x5,%esi
	1176:	89 c7	mov    %eax,%edi
	1177:	e8 34 ff ff ff	callq  0x400184 <dd>
	1178:	55	push   %rbp
	1179:	48 89 e5	mov    %rsp,%rbp
	1180:	89 7d fc	mov    %edi,-0x4(%rbp)
	1181:	89 75 f8	mov    %esi,-0x8(%rbp)
	1182:	8b 45 fc	mov    -0x4(%rbp),%eax
	1183:	99	cltd   
	1184:	f7 7d f8	idivl  -0x8(%rbp)
	1185:	5d	pop    %rbp
	1186:	c3	retq   
	1187:	89 c6	mov    %eax,%esi
	1188:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1189:	ba 67 66 66 66	mov    $0x66666667,%edx
	1190:	89 c8	mov    %ecx,%eax
	1191:	f7 ea	imul   %edx
	1192:	d1 fa	sar    %edx
	1193:	89 c8	mov    %ecx,%eax
	1194:	c1 f8 1f	sar    $0x1f,%eax
	1195:	29 c2	sub    %eax,%edx
	1196:	89 d0	mov    %edx,%eax
	1197:	39 c6	cmp    %eax,%esi
	1198:	74 05	je     0x400272 <L28>
	1199:	8b 45 fc	mov    -0x4(%rbp),%eax
	1200:	be 06 00 00 00	mov    $0x6,%esi
	1201:	89 c7	mov    %eax,%edi
	1202:	e8 03 ff ff ff	callq  0x400184 <dd>
	1203:	55	push   %rbp
	1204:	48 89 e5	mov    %rsp,%rbp
	1205:	89 7d fc	mov    %edi,-0x4(%rbp)
	1206:	89 75 f8	mov    %esi,-0x8(%rbp)
	1207:	8b 45 fc	mov    -0x4(%rbp),%eax
	1208:	99	cltd   
	1209:	f7 7d f8	idivl  -0x8(%rbp)
	1210:	5d	pop    %rbp
	1211:	c3	retq   
	1212:	89 c6	mov    %eax,%esi
	1213:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1214:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	1215:	89 c8	mov    %ecx,%eax
	1216:	f7 ea	imul   %edx
	1217:	89 c8	mov    %ecx,%eax
	1218:	c1 f8 1f	sar    $0x1f,%eax
	1219:	29 c2	sub    %eax,%edx
	1220:	89 d0	mov    %edx,%eax
	1221:	39 c6	cmp    %eax,%esi
	1222:	74 05	je     0x4002a1 <L29>
	1223:	8b 45 fc	mov    -0x4(%rbp),%eax
	1224:	be 07 00 00 00	mov    $0x7,%esi
	1225:	89 c7	mov    %eax,%edi
	1226:	e8 d4 fe ff ff	callq  0x400184 <dd>
	1227:	55	push   %rbp
	1228:	48 89 e5	mov    %rsp,%rbp
	1229:	89 7d fc	mov    %edi,-0x4(%rbp)
	1230:	89 75 f8	mov    %esi,-0x8(%rbp)
	1231:	8b 45 fc	mov    -0x4(%rbp),%eax
	1232:	99	cltd   
	1233:	f7 7d f8	idivl  -0x8(%rbp)
	1234:	5d	pop    %rbp
	1235:	c3	retq   
	1236:	89 c6	mov    %eax,%esi
	1237:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1238:	ba 93 24 49 92	mov    $0x92492493,%edx
	1239:	89 c8	mov    %ecx,%eax
	1240:	f7 ea	imul   %edx
	1241:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	1242:	c1 f8 02	sar    $0x2,%eax
	1243:	89 c2	mov    %eax,%edx
	1244:	89 c8	mov    %ecx,%eax
	1245:	c1 f8 1f	sar    $0x1f,%eax
	1246:	29 c2	sub    %eax,%edx
	1247:	89 d0	mov    %edx,%eax
	1248:	39 c6	cmp    %eax,%esi
	1249:	74 05	je     0x4002d8 <L30>
	1250:	8b 45 fc	mov    -0x4(%rbp),%eax
	1251:	be 08 00 00 00	mov    $0x8,%esi
	1252:	89 c7	mov    %eax,%edi
	1253:	e8 9d fe ff ff	callq  0x400184 <dd>
	1254:	55	push   %rbp
	1255:	48 89 e5	mov    %rsp,%rbp
	1256:	89 7d fc	mov    %edi,-0x4(%rbp)
	1257:	89 75 f8	mov    %esi,-0x8(%rbp)
	1258:	8b 45 fc	mov    -0x4(%rbp),%eax
	1259:	99	cltd   
	1260:	f7 7d f8	idivl  -0x8(%rbp)
	1261:	5d	pop    %rbp
	1262:	c3	retq   
	1263:	89 c2	mov    %eax,%edx
	1264:	8b 45 fc	mov    -0x4(%rbp),%eax
	1265:	8d 48 07	lea    0x7(%rax),%ecx
	1266:	85 c0	test   %eax,%eax
	1267:	0f 48 c1	cmovs  %ecx,%eax
	1268:	c1 f8 03	sar    $0x3,%eax
	1269:	39 c2	cmp    %eax,%edx
	1270:	74 05	je     0x400300 <L31>
	1271:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	1272:	83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
	1273:	0f 8e 9d fe ff ff	jle    0x4001ab <L32>
	1274:	c7 45 fc fc ff ff 7f	movl   $0x7ffffffc,-0x4(%rbp)
	1275:	e9 59 01 00 00	jmpq   0x400473 <L33>
	1276:	8b 45 fc	mov    -0x4(%rbp),%eax
	1277:	3d 02 00 00 80	cmp    $0x80000002,%eax
	1278:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	1279:	8b 45 fc	mov    -0x4(%rbp),%eax
	1280:	be 01 00 00 00	mov    $0x1,%esi
	1281:	89 c7	mov    %eax,%edi
	1282:	e8 5b fe ff ff	callq  0x400184 <dd>
	1283:	55	push   %rbp
	1284:	48 89 e5	mov    %rsp,%rbp
	1285:	89 7d fc	mov    %edi,-0x4(%rbp)
	1286:	89 75 f8	mov    %esi,-0x8(%rbp)
	1287:	8b 45 fc	mov    -0x4(%rbp),%eax
	1288:	99	cltd   
	1289:	f7 7d f8	idivl  -0x8(%rbp)
	1290:	5d	pop    %rbp
	1291:	c3	retq   
	1292:	3b 45 fc	cmp    -0x4(%rbp),%eax
	1293:	74 05	je     0x400333 <L34>
	1294:	8b 45 fc	mov    -0x4(%rbp),%eax
	1295:	be 02 00 00 00	mov    $0x2,%esi
	1296:	89 c7	mov    %eax,%edi
	1297:	e8 42 fe ff ff	callq  0x400184 <dd>
	1298:	55	push   %rbp
	1299:	48 89 e5	mov    %rsp,%rbp
	1300:	89 7d fc	mov    %edi,-0x4(%rbp)
	1301:	89 75 f8	mov    %esi,-0x8(%rbp)
	1302:	8b 45 fc	mov    -0x4(%rbp),%eax
	1303:	99	cltd   
	1304:	f7 7d f8	idivl  -0x8(%rbp)
	1305:	5d	pop    %rbp
	1306:	c3	retq   
	1307:	89 c2	mov    %eax,%edx
	1308:	8b 45 fc	mov    -0x4(%rbp),%eax
	1309:	89 c1	mov    %eax,%ecx
	1310:	c1 e9 1f	shr    $0x1f,%ecx
	1311:	01 c8	add    %ecx,%eax
	1312:	d1 f8	sar    %eax
	1313:	39 c2	cmp    %eax,%edx
	1314:	74 05	je     0x400359 <L35>
	1315:	8b 45 fc	mov    -0x4(%rbp),%eax
	1316:	be 03 00 00 00	mov    $0x3,%esi
	1317:	89 c7	mov    %eax,%edi
	1318:	e8 1c fe ff ff	callq  0x400184 <dd>
	1319:	55	push   %rbp
	1320:	48 89 e5	mov    %rsp,%rbp
	1321:	89 7d fc	mov    %edi,-0x4(%rbp)
	1322:	89 75 f8	mov    %esi,-0x8(%rbp)
	1323:	8b 45 fc	mov    -0x4(%rbp),%eax
	1324:	99	cltd   
	1325:	f7 7d f8	idivl  -0x8(%rbp)
	1326:	5d	pop    %rbp
	1327:	c3	retq   
	1328:	89 c6	mov    %eax,%esi
	1329:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1330:	ba 56 55 55 55	mov    $0x55555556,%edx
	1331:	89 c8	mov    %ecx,%eax
	1332:	f7 ea	imul   %edx
	1333:	89 c8	mov    %ecx,%eax
	1334:	c1 f8 1f	sar    $0x1f,%eax
	1335:	29 c2	sub    %eax,%edx
	1336:	89 d0	mov    %edx,%eax
	1337:	39 c6	cmp    %eax,%esi
	1338:	74 05	je     0x400388 <L36>
	1339:	8b 45 fc	mov    -0x4(%rbp),%eax
	1340:	be 04 00 00 00	mov    $0x4,%esi
	1341:	89 c7	mov    %eax,%edi
	1342:	e8 ed fd ff ff	callq  0x400184 <dd>
	1343:	55	push   %rbp
	1344:	48 89 e5	mov    %rsp,%rbp
	1345:	89 7d fc	mov    %edi,-0x4(%rbp)
	1346:	89 75 f8	mov    %esi,-0x8(%rbp)
	1347:	8b 45 fc	mov    -0x4(%rbp),%eax
	1348:	99	cltd   
	1349:	f7 7d f8	idivl  -0x8(%rbp)
	1350:	5d	pop    %rbp
	1351:	c3	retq   
	1352:	89 c2	mov    %eax,%edx
	1353:	8b 45 fc	mov    -0x4(%rbp),%eax
	1354:	8d 48 03	lea    0x3(%rax),%ecx
	1355:	85 c0	test   %eax,%eax
	1356:	0f 48 c1	cmovs  %ecx,%eax
	1357:	c1 f8 02	sar    $0x2,%eax
	1358:	39 c2	cmp    %eax,%edx
	1359:	74 05	je     0x4003b0 <L37>
	1360:	8b 45 fc	mov    -0x4(%rbp),%eax
	1361:	be 05 00 00 00	mov    $0x5,%esi
	1362:	89 c7	mov    %eax,%edi
	1363:	e8 c5 fd ff ff	callq  0x400184 <dd>
	1364:	55	push   %rbp
	1365:	48 89 e5	mov    %rsp,%rbp
	1366:	89 7d fc	mov    %edi,-0x4(%rbp)
	1367:	89 75 f8	mov    %esi,-0x8(%rbp)
	1368:	8b 45 fc	mov    -0x4(%rbp),%eax
	1369:	99	cltd   
	1370:	f7 7d f8	idivl  -0x8(%rbp)
	1371:	5d	pop    %rbp
	1372:	c3	retq   
	1373:	89 c6	mov    %eax,%esi
	1374:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1375:	ba 67 66 66 66	mov    $0x66666667,%edx
	1376:	89 c8	mov    %ecx,%eax
	1377:	f7 ea	imul   %edx
	1378:	d1 fa	sar    %edx
	1379:	89 c8	mov    %ecx,%eax
	1380:	c1 f8 1f	sar    $0x1f,%eax
	1381:	29 c2	sub    %eax,%edx
	1382:	89 d0	mov    %edx,%eax
	1383:	39 c6	cmp    %eax,%esi
	1384:	74 05	je     0x4003e1 <L38>
	1385:	8b 45 fc	mov    -0x4(%rbp),%eax
	1386:	be 06 00 00 00	mov    $0x6,%esi
	1387:	89 c7	mov    %eax,%edi
	1388:	e8 94 fd ff ff	callq  0x400184 <dd>
	1389:	55	push   %rbp
	1390:	48 89 e5	mov    %rsp,%rbp
	1391:	89 7d fc	mov    %edi,-0x4(%rbp)
	1392:	89 75 f8	mov    %esi,-0x8(%rbp)
	1393:	8b 45 fc	mov    -0x4(%rbp),%eax
	1394:	99	cltd   
	1395:	f7 7d f8	idivl  -0x8(%rbp)
	1396:	5d	pop    %rbp
	1397:	c3	retq   
	1398:	89 c6	mov    %eax,%esi
	1399:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1400:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	1401:	89 c8	mov    %ecx,%eax
	1402:	f7 ea	imul   %edx
	1403:	89 c8	mov    %ecx,%eax
	1404:	c1 f8 1f	sar    $0x1f,%eax
	1405:	29 c2	sub    %eax,%edx
	1406:	89 d0	mov    %edx,%eax
	1407:	39 c6	cmp    %eax,%esi
	1408:	74 05	je     0x400410 <L39>
	1409:	8b 45 fc	mov    -0x4(%rbp),%eax
	1410:	be 07 00 00 00	mov    $0x7,%esi
	1411:	89 c7	mov    %eax,%edi
	1412:	e8 65 fd ff ff	callq  0x400184 <dd>
	1413:	55	push   %rbp
	1414:	48 89 e5	mov    %rsp,%rbp
	1415:	89 7d fc	mov    %edi,-0x4(%rbp)
	1416:	89 75 f8	mov    %esi,-0x8(%rbp)
	1417:	8b 45 fc	mov    -0x4(%rbp),%eax
	1418:	99	cltd   
	1419:	f7 7d f8	idivl  -0x8(%rbp)
	1420:	5d	pop    %rbp
	1421:	c3	retq   
	1422:	89 c6	mov    %eax,%esi
	1423:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1424:	ba 93 24 49 92	mov    $0x92492493,%edx
	1425:	89 c8	mov    %ecx,%eax
	1426:	f7 ea	imul   %edx
	1427:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	1428:	c1 f8 02	sar    $0x2,%eax
	1429:	89 c2	mov    %eax,%edx
	1430:	89 c8	mov    %ecx,%eax
	1431:	c1 f8 1f	sar    $0x1f,%eax
	1432:	29 c2	sub    %eax,%edx
	1433:	89 d0	mov    %edx,%eax
	1434:	39 c6	cmp    %eax,%esi
	1435:	74 05	je     0x400447 <L40>
	1436:	8b 45 fc	mov    -0x4(%rbp),%eax
	1437:	be 08 00 00 00	mov    $0x8,%esi
	1438:	89 c7	mov    %eax,%edi
	1439:	e8 2e fd ff ff	callq  0x400184 <dd>
	1440:	55	push   %rbp
	1441:	48 89 e5	mov    %rsp,%rbp
	1442:	89 7d fc	mov    %edi,-0x4(%rbp)
	1443:	89 75 f8	mov    %esi,-0x8(%rbp)
	1444:	8b 45 fc	mov    -0x4(%rbp),%eax
	1445:	99	cltd   
	1446:	f7 7d f8	idivl  -0x8(%rbp)
	1447:	5d	pop    %rbp
	1448:	c3	retq   
	1449:	89 c2	mov    %eax,%edx
	1450:	8b 45 fc	mov    -0x4(%rbp),%eax
	1451:	8d 48 07	lea    0x7(%rax),%ecx
	1452:	85 c0	test   %eax,%eax
	1453:	0f 48 c1	cmovs  %ecx,%eax
	1454:	c1 f8 03	sar    $0x3,%eax
	1455:	39 c2	cmp    %eax,%edx
	1456:	74 05	je     0x40046f <L41>
	1457:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	1458:	8b 45 fc	mov    -0x4(%rbp),%eax
	1459:	3d 02 00 00 80	cmp    $0x80000002,%eax
	1460:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	1461:	8b 45 fc	mov    -0x4(%rbp),%eax
	1462:	be 01 00 00 00	mov    $0x1,%esi
	1463:	89 c7	mov    %eax,%edi
	1464:	e8 5b fe ff ff	callq  0x400184 <dd>
	1465:	55	push   %rbp
	1466:	48 89 e5	mov    %rsp,%rbp
	1467:	89 7d fc	mov    %edi,-0x4(%rbp)
	1468:	89 75 f8	mov    %esi,-0x8(%rbp)
	1469:	8b 45 fc	mov    -0x4(%rbp),%eax
	1470:	99	cltd   
	1471:	f7 7d f8	idivl  -0x8(%rbp)
	1472:	5d	pop    %rbp
	1473:	c3	retq   
	1474:	3b 45 fc	cmp    -0x4(%rbp),%eax
	1475:	74 05	je     0x400333 <L34>
	1476:	8b 45 fc	mov    -0x4(%rbp),%eax
	1477:	be 02 00 00 00	mov    $0x2,%esi
	1478:	89 c7	mov    %eax,%edi
	1479:	e8 42 fe ff ff	callq  0x400184 <dd>
	1480:	55	push   %rbp
	1481:	48 89 e5	mov    %rsp,%rbp
	1482:	89 7d fc	mov    %edi,-0x4(%rbp)
	1483:	89 75 f8	mov    %esi,-0x8(%rbp)
	1484:	8b 45 fc	mov    -0x4(%rbp),%eax
	1485:	99	cltd   
	1486:	f7 7d f8	idivl  -0x8(%rbp)
	1487:	5d	pop    %rbp
	1488:	c3	retq   
	1489:	89 c2	mov    %eax,%edx
	1490:	8b 45 fc	mov    -0x4(%rbp),%eax
	1491:	89 c1	mov    %eax,%ecx
	1492:	c1 e9 1f	shr    $0x1f,%ecx
	1493:	01 c8	add    %ecx,%eax
	1494:	d1 f8	sar    %eax
	1495:	39 c2	cmp    %eax,%edx
	1496:	74 05	je     0x400359 <L35>
	1497:	8b 45 fc	mov    -0x4(%rbp),%eax
	1498:	be 03 00 00 00	mov    $0x3,%esi
	1499:	89 c7	mov    %eax,%edi
	1500:	e8 1c fe ff ff	callq  0x400184 <dd>
	1501:	55	push   %rbp
	1502:	48 89 e5	mov    %rsp,%rbp
	1503:	89 7d fc	mov    %edi,-0x4(%rbp)
	1504:	89 75 f8	mov    %esi,-0x8(%rbp)
	1505:	8b 45 fc	mov    -0x4(%rbp),%eax
	1506:	99	cltd   
	1507:	f7 7d f8	idivl  -0x8(%rbp)
	1508:	5d	pop    %rbp
	1509:	c3	retq   
	1510:	89 c6	mov    %eax,%esi
	1511:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1512:	ba 56 55 55 55	mov    $0x55555556,%edx
	1513:	89 c8	mov    %ecx,%eax
	1514:	f7 ea	imul   %edx
	1515:	89 c8	mov    %ecx,%eax
	1516:	c1 f8 1f	sar    $0x1f,%eax
	1517:	29 c2	sub    %eax,%edx
	1518:	89 d0	mov    %edx,%eax
	1519:	39 c6	cmp    %eax,%esi
	1520:	74 05	je     0x400388 <L36>
	1521:	8b 45 fc	mov    -0x4(%rbp),%eax
	1522:	be 04 00 00 00	mov    $0x4,%esi
	1523:	89 c7	mov    %eax,%edi
	1524:	e8 ed fd ff ff	callq  0x400184 <dd>
	1525:	55	push   %rbp
	1526:	48 89 e5	mov    %rsp,%rbp
	1527:	89 7d fc	mov    %edi,-0x4(%rbp)
	1528:	89 75 f8	mov    %esi,-0x8(%rbp)
	1529:	8b 45 fc	mov    -0x4(%rbp),%eax
	1530:	99	cltd   
	1531:	f7 7d f8	idivl  -0x8(%rbp)
	1532:	5d	pop    %rbp
	1533:	c3	retq   
	1534:	89 c2	mov    %eax,%edx
	1535:	8b 45 fc	mov    -0x4(%rbp),%eax
	1536:	8d 48 03	lea    0x3(%rax),%ecx
	1537:	85 c0	test   %eax,%eax
	1538:	0f 48 c1	cmovs  %ecx,%eax
	1539:	c1 f8 02	sar    $0x2,%eax
	1540:	39 c2	cmp    %eax,%edx
	1541:	74 05	je     0x4003b0 <L37>
	1542:	8b 45 fc	mov    -0x4(%rbp),%eax
	1543:	be 05 00 00 00	mov    $0x5,%esi
	1544:	89 c7	mov    %eax,%edi
	1545:	e8 c5 fd ff ff	callq  0x400184 <dd>
	1546:	55	push   %rbp
	1547:	48 89 e5	mov    %rsp,%rbp
	1548:	89 7d fc	mov    %edi,-0x4(%rbp)
	1549:	89 75 f8	mov    %esi,-0x8(%rbp)
	1550:	8b 45 fc	mov    -0x4(%rbp),%eax
	1551:	99	cltd   
	1552:	f7 7d f8	idivl  -0x8(%rbp)
	1553:	5d	pop    %rbp
	1554:	c3	retq   
	1555:	89 c6	mov    %eax,%esi
	1556:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1557:	ba 67 66 66 66	mov    $0x66666667,%edx
	1558:	89 c8	mov    %ecx,%eax
	1559:	f7 ea	imul   %edx
	1560:	d1 fa	sar    %edx
	1561:	89 c8	mov    %ecx,%eax
	1562:	c1 f8 1f	sar    $0x1f,%eax
	1563:	29 c2	sub    %eax,%edx
	1564:	89 d0	mov    %edx,%eax
	1565:	39 c6	cmp    %eax,%esi
	1566:	74 05	je     0x4003e1 <L38>
	1567:	8b 45 fc	mov    -0x4(%rbp),%eax
	1568:	be 06 00 00 00	mov    $0x6,%esi
	1569:	89 c7	mov    %eax,%edi
	1570:	e8 94 fd ff ff	callq  0x400184 <dd>
	1571:	55	push   %rbp
	1572:	48 89 e5	mov    %rsp,%rbp
	1573:	89 7d fc	mov    %edi,-0x4(%rbp)
	1574:	89 75 f8	mov    %esi,-0x8(%rbp)
	1575:	8b 45 fc	mov    -0x4(%rbp),%eax
	1576:	99	cltd   
	1577:	f7 7d f8	idivl  -0x8(%rbp)
	1578:	5d	pop    %rbp
	1579:	c3	retq   
	1580:	89 c6	mov    %eax,%esi
	1581:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1582:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	1583:	89 c8	mov    %ecx,%eax
	1584:	f7 ea	imul   %edx
	1585:	89 c8	mov    %ecx,%eax
	1586:	c1 f8 1f	sar    $0x1f,%eax
	1587:	29 c2	sub    %eax,%edx
	1588:	89 d0	mov    %edx,%eax
	1589:	39 c6	cmp    %eax,%esi
	1590:	74 05	je     0x400410 <L39>
	1591:	8b 45 fc	mov    -0x4(%rbp),%eax
	1592:	be 07 00 00 00	mov    $0x7,%esi
	1593:	89 c7	mov    %eax,%edi
	1594:	e8 65 fd ff ff	callq  0x400184 <dd>
	1595:	55	push   %rbp
	1596:	48 89 e5	mov    %rsp,%rbp
	1597:	89 7d fc	mov    %edi,-0x4(%rbp)
	1598:	89 75 f8	mov    %esi,-0x8(%rbp)
	1599:	8b 45 fc	mov    -0x4(%rbp),%eax
	1600:	99	cltd   
	1601:	f7 7d f8	idivl  -0x8(%rbp)
	1602:	5d	pop    %rbp
	1603:	c3	retq   
	1604:	89 c6	mov    %eax,%esi
	1605:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1606:	ba 93 24 49 92	mov    $0x92492493,%edx
	1607:	89 c8	mov    %ecx,%eax
	1608:	f7 ea	imul   %edx
	1609:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	1610:	c1 f8 02	sar    $0x2,%eax
	1611:	89 c2	mov    %eax,%edx
	1612:	89 c8	mov    %ecx,%eax
	1613:	c1 f8 1f	sar    $0x1f,%eax
	1614:	29 c2	sub    %eax,%edx
	1615:	89 d0	mov    %edx,%eax
	1616:	39 c6	cmp    %eax,%esi
	1617:	74 05	je     0x400447 <L40>
	1618:	8b 45 fc	mov    -0x4(%rbp),%eax
	1619:	be 08 00 00 00	mov    $0x8,%esi
	1620:	89 c7	mov    %eax,%edi
	1621:	e8 2e fd ff ff	callq  0x400184 <dd>
	1622:	55	push   %rbp
	1623:	48 89 e5	mov    %rsp,%rbp
	1624:	89 7d fc	mov    %edi,-0x4(%rbp)
	1625:	89 75 f8	mov    %esi,-0x8(%rbp)
	1626:	8b 45 fc	mov    -0x4(%rbp),%eax
	1627:	99	cltd   
	1628:	f7 7d f8	idivl  -0x8(%rbp)
	1629:	5d	pop    %rbp
	1630:	c3	retq   
	1631:	89 c2	mov    %eax,%edx
	1632:	8b 45 fc	mov    -0x4(%rbp),%eax
	1633:	8d 48 07	lea    0x7(%rax),%ecx
	1634:	85 c0	test   %eax,%eax
	1635:	0f 48 c1	cmovs  %ecx,%eax
	1636:	c1 f8 03	sar    $0x3,%eax
	1637:	39 c2	cmp    %eax,%edx
	1638:	74 05	je     0x40046f <L41>
	1639:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	1640:	8b 45 fc	mov    -0x4(%rbp),%eax
	1641:	3d 02 00 00 80	cmp    $0x80000002,%eax
	1642:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	1643:	8b 45 fc	mov    -0x4(%rbp),%eax
	1644:	be 01 00 00 00	mov    $0x1,%esi
	1645:	89 c7	mov    %eax,%edi
	1646:	e8 5b fe ff ff	callq  0x400184 <dd>
	1647:	55	push   %rbp
	1648:	48 89 e5	mov    %rsp,%rbp
	1649:	89 7d fc	mov    %edi,-0x4(%rbp)
	1650:	89 75 f8	mov    %esi,-0x8(%rbp)
	1651:	8b 45 fc	mov    -0x4(%rbp),%eax
	1652:	99	cltd   
	1653:	f7 7d f8	idivl  -0x8(%rbp)
	1654:	5d	pop    %rbp
	1655:	c3	retq   
	1656:	3b 45 fc	cmp    -0x4(%rbp),%eax
	1657:	74 05	je     0x400333 <L34>
	1658:	8b 45 fc	mov    -0x4(%rbp),%eax
	1659:	be 02 00 00 00	mov    $0x2,%esi
	1660:	89 c7	mov    %eax,%edi
	1661:	e8 42 fe ff ff	callq  0x400184 <dd>
	1662:	55	push   %rbp
	1663:	48 89 e5	mov    %rsp,%rbp
	1664:	89 7d fc	mov    %edi,-0x4(%rbp)
	1665:	89 75 f8	mov    %esi,-0x8(%rbp)
	1666:	8b 45 fc	mov    -0x4(%rbp),%eax
	1667:	99	cltd   
	1668:	f7 7d f8	idivl  -0x8(%rbp)
	1669:	5d	pop    %rbp
	1670:	c3	retq   
	1671:	89 c2	mov    %eax,%edx
	1672:	8b 45 fc	mov    -0x4(%rbp),%eax
	1673:	89 c1	mov    %eax,%ecx
	1674:	c1 e9 1f	shr    $0x1f,%ecx
	1675:	01 c8	add    %ecx,%eax
	1676:	d1 f8	sar    %eax
	1677:	39 c2	cmp    %eax,%edx
	1678:	74 05	je     0x400359 <L35>
	1679:	8b 45 fc	mov    -0x4(%rbp),%eax
	1680:	be 03 00 00 00	mov    $0x3,%esi
	1681:	89 c7	mov    %eax,%edi
	1682:	e8 1c fe ff ff	callq  0x400184 <dd>
	1683:	55	push   %rbp
	1684:	48 89 e5	mov    %rsp,%rbp
	1685:	89 7d fc	mov    %edi,-0x4(%rbp)
	1686:	89 75 f8	mov    %esi,-0x8(%rbp)
	1687:	8b 45 fc	mov    -0x4(%rbp),%eax
	1688:	99	cltd   
	1689:	f7 7d f8	idivl  -0x8(%rbp)
	1690:	5d	pop    %rbp
	1691:	c3	retq   
	1692:	89 c6	mov    %eax,%esi
	1693:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1694:	ba 56 55 55 55	mov    $0x55555556,%edx
	1695:	89 c8	mov    %ecx,%eax
	1696:	f7 ea	imul   %edx
	1697:	89 c8	mov    %ecx,%eax
	1698:	c1 f8 1f	sar    $0x1f,%eax
	1699:	29 c2	sub    %eax,%edx
	1700:	89 d0	mov    %edx,%eax
	1701:	39 c6	cmp    %eax,%esi
	1702:	74 05	je     0x400388 <L36>
	1703:	8b 45 fc	mov    -0x4(%rbp),%eax
	1704:	be 04 00 00 00	mov    $0x4,%esi
	1705:	89 c7	mov    %eax,%edi
	1706:	e8 ed fd ff ff	callq  0x400184 <dd>
	1707:	55	push   %rbp
	1708:	48 89 e5	mov    %rsp,%rbp
	1709:	89 7d fc	mov    %edi,-0x4(%rbp)
	1710:	89 75 f8	mov    %esi,-0x8(%rbp)
	1711:	8b 45 fc	mov    -0x4(%rbp),%eax
	1712:	99	cltd   
	1713:	f7 7d f8	idivl  -0x8(%rbp)
	1714:	5d	pop    %rbp
	1715:	c3	retq   
	1716:	89 c2	mov    %eax,%edx
	1717:	8b 45 fc	mov    -0x4(%rbp),%eax
	1718:	8d 48 03	lea    0x3(%rax),%ecx
	1719:	85 c0	test   %eax,%eax
	1720:	0f 48 c1	cmovs  %ecx,%eax
	1721:	c1 f8 02	sar    $0x2,%eax
	1722:	39 c2	cmp    %eax,%edx
	1723:	74 05	je     0x4003b0 <L37>
	1724:	8b 45 fc	mov    -0x4(%rbp),%eax
	1725:	be 05 00 00 00	mov    $0x5,%esi
	1726:	89 c7	mov    %eax,%edi
	1727:	e8 c5 fd ff ff	callq  0x400184 <dd>
	1728:	55	push   %rbp
	1729:	48 89 e5	mov    %rsp,%rbp
	1730:	89 7d fc	mov    %edi,-0x4(%rbp)
	1731:	89 75 f8	mov    %esi,-0x8(%rbp)
	1732:	8b 45 fc	mov    -0x4(%rbp),%eax
	1733:	99	cltd   
	1734:	f7 7d f8	idivl  -0x8(%rbp)
	1735:	5d	pop    %rbp
	1736:	c3	retq   
	1737:	89 c6	mov    %eax,%esi
	1738:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1739:	ba 67 66 66 66	mov    $0x66666667,%edx
	1740:	89 c8	mov    %ecx,%eax
	1741:	f7 ea	imul   %edx
	1742:	d1 fa	sar    %edx
	1743:	89 c8	mov    %ecx,%eax
	1744:	c1 f8 1f	sar    $0x1f,%eax
	1745:	29 c2	sub    %eax,%edx
	1746:	89 d0	mov    %edx,%eax
	1747:	39 c6	cmp    %eax,%esi
	1748:	74 05	je     0x4003e1 <L38>
	1749:	8b 45 fc	mov    -0x4(%rbp),%eax
	1750:	be 06 00 00 00	mov    $0x6,%esi
	1751:	89 c7	mov    %eax,%edi
	1752:	e8 94 fd ff ff	callq  0x400184 <dd>
	1753:	55	push   %rbp
	1754:	48 89 e5	mov    %rsp,%rbp
	1755:	89 7d fc	mov    %edi,-0x4(%rbp)
	1756:	89 75 f8	mov    %esi,-0x8(%rbp)
	1757:	8b 45 fc	mov    -0x4(%rbp),%eax
	1758:	99	cltd   
	1759:	f7 7d f8	idivl  -0x8(%rbp)
	1760:	5d	pop    %rbp
	1761:	c3	retq   
	1762:	89 c6	mov    %eax,%esi
	1763:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1764:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	1765:	89 c8	mov    %ecx,%eax
	1766:	f7 ea	imul   %edx
	1767:	89 c8	mov    %ecx,%eax
	1768:	c1 f8 1f	sar    $0x1f,%eax
	1769:	29 c2	sub    %eax,%edx
	1770:	89 d0	mov    %edx,%eax
	1771:	39 c6	cmp    %eax,%esi
	1772:	74 05	je     0x400410 <L39>
	1773:	8b 45 fc	mov    -0x4(%rbp),%eax
	1774:	be 07 00 00 00	mov    $0x7,%esi
	1775:	89 c7	mov    %eax,%edi
	1776:	e8 65 fd ff ff	callq  0x400184 <dd>
	1777:	55	push   %rbp
	1778:	48 89 e5	mov    %rsp,%rbp
	1779:	89 7d fc	mov    %edi,-0x4(%rbp)
	1780:	89 75 f8	mov    %esi,-0x8(%rbp)
	1781:	8b 45 fc	mov    -0x4(%rbp),%eax
	1782:	99	cltd   
	1783:	f7 7d f8	idivl  -0x8(%rbp)
	1784:	5d	pop    %rbp
	1785:	c3	retq   
	1786:	89 c6	mov    %eax,%esi
	1787:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1788:	ba 93 24 49 92	mov    $0x92492493,%edx
	1789:	89 c8	mov    %ecx,%eax
	1790:	f7 ea	imul   %edx
	1791:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	1792:	c1 f8 02	sar    $0x2,%eax
	1793:	89 c2	mov    %eax,%edx
	1794:	89 c8	mov    %ecx,%eax
	1795:	c1 f8 1f	sar    $0x1f,%eax
	1796:	29 c2	sub    %eax,%edx
	1797:	89 d0	mov    %edx,%eax
	1798:	39 c6	cmp    %eax,%esi
	1799:	74 05	je     0x400447 <L40>
	1800:	8b 45 fc	mov    -0x4(%rbp),%eax
	1801:	be 08 00 00 00	mov    $0x8,%esi
	1802:	89 c7	mov    %eax,%edi
	1803:	e8 2e fd ff ff	callq  0x400184 <dd>
	1804:	55	push   %rbp
	1805:	48 89 e5	mov    %rsp,%rbp
	1806:	89 7d fc	mov    %edi,-0x4(%rbp)
	1807:	89 75 f8	mov    %esi,-0x8(%rbp)
	1808:	8b 45 fc	mov    -0x4(%rbp),%eax
	1809:	99	cltd   
	1810:	f7 7d f8	idivl  -0x8(%rbp)
	1811:	5d	pop    %rbp
	1812:	c3	retq   
	1813:	89 c2	mov    %eax,%edx
	1814:	8b 45 fc	mov    -0x4(%rbp),%eax
	1815:	8d 48 07	lea    0x7(%rax),%ecx
	1816:	85 c0	test   %eax,%eax
	1817:	0f 48 c1	cmovs  %ecx,%eax
	1818:	c1 f8 03	sar    $0x3,%eax
	1819:	39 c2	cmp    %eax,%edx
	1820:	74 05	je     0x40046f <L41>
	1821:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	1822:	8b 45 fc	mov    -0x4(%rbp),%eax
	1823:	3d 02 00 00 80	cmp    $0x80000002,%eax
	1824:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	1825:	8b 45 fc	mov    -0x4(%rbp),%eax
	1826:	be 01 00 00 00	mov    $0x1,%esi
	1827:	89 c7	mov    %eax,%edi
	1828:	e8 5b fe ff ff	callq  0x400184 <dd>
	1829:	55	push   %rbp
	1830:	48 89 e5	mov    %rsp,%rbp
	1831:	89 7d fc	mov    %edi,-0x4(%rbp)
	1832:	89 75 f8	mov    %esi,-0x8(%rbp)
	1833:	8b 45 fc	mov    -0x4(%rbp),%eax
	1834:	99	cltd   
	1835:	f7 7d f8	idivl  -0x8(%rbp)
	1836:	5d	pop    %rbp
	1837:	c3	retq   
	1838:	3b 45 fc	cmp    -0x4(%rbp),%eax
	1839:	74 05	je     0x400333 <L34>
	1840:	8b 45 fc	mov    -0x4(%rbp),%eax
	1841:	be 02 00 00 00	mov    $0x2,%esi
	1842:	89 c7	mov    %eax,%edi
	1843:	e8 42 fe ff ff	callq  0x400184 <dd>
	1844:	55	push   %rbp
	1845:	48 89 e5	mov    %rsp,%rbp
	1846:	89 7d fc	mov    %edi,-0x4(%rbp)
	1847:	89 75 f8	mov    %esi,-0x8(%rbp)
	1848:	8b 45 fc	mov    -0x4(%rbp),%eax
	1849:	99	cltd   
	1850:	f7 7d f8	idivl  -0x8(%rbp)
	1851:	5d	pop    %rbp
	1852:	c3	retq   
	1853:	89 c2	mov    %eax,%edx
	1854:	8b 45 fc	mov    -0x4(%rbp),%eax
	1855:	89 c1	mov    %eax,%ecx
	1856:	c1 e9 1f	shr    $0x1f,%ecx
	1857:	01 c8	add    %ecx,%eax
	1858:	d1 f8	sar    %eax
	1859:	39 c2	cmp    %eax,%edx
	1860:	74 05	je     0x400359 <L35>
	1861:	8b 45 fc	mov    -0x4(%rbp),%eax
	1862:	be 03 00 00 00	mov    $0x3,%esi
	1863:	89 c7	mov    %eax,%edi
	1864:	e8 1c fe ff ff	callq  0x400184 <dd>
	1865:	55	push   %rbp
	1866:	48 89 e5	mov    %rsp,%rbp
	1867:	89 7d fc	mov    %edi,-0x4(%rbp)
	1868:	89 75 f8	mov    %esi,-0x8(%rbp)
	1869:	8b 45 fc	mov    -0x4(%rbp),%eax
	1870:	99	cltd   
	1871:	f7 7d f8	idivl  -0x8(%rbp)
	1872:	5d	pop    %rbp
	1873:	c3	retq   
	1874:	89 c6	mov    %eax,%esi
	1875:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1876:	ba 56 55 55 55	mov    $0x55555556,%edx
	1877:	89 c8	mov    %ecx,%eax
	1878:	f7 ea	imul   %edx
	1879:	89 c8	mov    %ecx,%eax
	1880:	c1 f8 1f	sar    $0x1f,%eax
	1881:	29 c2	sub    %eax,%edx
	1882:	89 d0	mov    %edx,%eax
	1883:	39 c6	cmp    %eax,%esi
	1884:	74 05	je     0x400388 <L36>
	1885:	8b 45 fc	mov    -0x4(%rbp),%eax
	1886:	be 04 00 00 00	mov    $0x4,%esi
	1887:	89 c7	mov    %eax,%edi
	1888:	e8 ed fd ff ff	callq  0x400184 <dd>
	1889:	55	push   %rbp
	1890:	48 89 e5	mov    %rsp,%rbp
	1891:	89 7d fc	mov    %edi,-0x4(%rbp)
	1892:	89 75 f8	mov    %esi,-0x8(%rbp)
	1893:	8b 45 fc	mov    -0x4(%rbp),%eax
	1894:	99	cltd   
	1895:	f7 7d f8	idivl  -0x8(%rbp)
	1896:	5d	pop    %rbp
	1897:	c3	retq   
	1898:	89 c2	mov    %eax,%edx
	1899:	8b 45 fc	mov    -0x4(%rbp),%eax
	1900:	8d 48 03	lea    0x3(%rax),%ecx
	1901:	85 c0	test   %eax,%eax
	1902:	0f 48 c1	cmovs  %ecx,%eax
	1903:	c1 f8 02	sar    $0x2,%eax
	1904:	39 c2	cmp    %eax,%edx
	1905:	74 05	je     0x4003b0 <L37>
	1906:	8b 45 fc	mov    -0x4(%rbp),%eax
	1907:	be 05 00 00 00	mov    $0x5,%esi
	1908:	89 c7	mov    %eax,%edi
	1909:	e8 c5 fd ff ff	callq  0x400184 <dd>
	1910:	55	push   %rbp
	1911:	48 89 e5	mov    %rsp,%rbp
	1912:	89 7d fc	mov    %edi,-0x4(%rbp)
	1913:	89 75 f8	mov    %esi,-0x8(%rbp)
	1914:	8b 45 fc	mov    -0x4(%rbp),%eax
	1915:	99	cltd   
	1916:	f7 7d f8	idivl  -0x8(%rbp)
	1917:	5d	pop    %rbp
	1918:	c3	retq   
	1919:	89 c6	mov    %eax,%esi
	1920:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1921:	ba 67 66 66 66	mov    $0x66666667,%edx
	1922:	89 c8	mov    %ecx,%eax
	1923:	f7 ea	imul   %edx
	1924:	d1 fa	sar    %edx
	1925:	89 c8	mov    %ecx,%eax
	1926:	c1 f8 1f	sar    $0x1f,%eax
	1927:	29 c2	sub    %eax,%edx
	1928:	89 d0	mov    %edx,%eax
	1929:	39 c6	cmp    %eax,%esi
	1930:	74 05	je     0x4003e1 <L38>
	1931:	8b 45 fc	mov    -0x4(%rbp),%eax
	1932:	be 06 00 00 00	mov    $0x6,%esi
	1933:	89 c7	mov    %eax,%edi
	1934:	e8 94 fd ff ff	callq  0x400184 <dd>
	1935:	55	push   %rbp
	1936:	48 89 e5	mov    %rsp,%rbp
	1937:	89 7d fc	mov    %edi,-0x4(%rbp)
	1938:	89 75 f8	mov    %esi,-0x8(%rbp)
	1939:	8b 45 fc	mov    -0x4(%rbp),%eax
	1940:	99	cltd   
	1941:	f7 7d f8	idivl  -0x8(%rbp)
	1942:	5d	pop    %rbp
	1943:	c3	retq   
	1944:	89 c6	mov    %eax,%esi
	1945:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1946:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	1947:	89 c8	mov    %ecx,%eax
	1948:	f7 ea	imul   %edx
	1949:	89 c8	mov    %ecx,%eax
	1950:	c1 f8 1f	sar    $0x1f,%eax
	1951:	29 c2	sub    %eax,%edx
	1952:	89 d0	mov    %edx,%eax
	1953:	39 c6	cmp    %eax,%esi
	1954:	74 05	je     0x400410 <L39>
	1955:	8b 45 fc	mov    -0x4(%rbp),%eax
	1956:	be 07 00 00 00	mov    $0x7,%esi
	1957:	89 c7	mov    %eax,%edi
	1958:	e8 65 fd ff ff	callq  0x400184 <dd>
	1959:	55	push   %rbp
	1960:	48 89 e5	mov    %rsp,%rbp
	1961:	89 7d fc	mov    %edi,-0x4(%rbp)
	1962:	89 75 f8	mov    %esi,-0x8(%rbp)
	1963:	8b 45 fc	mov    -0x4(%rbp),%eax
	1964:	99	cltd   
	1965:	f7 7d f8	idivl  -0x8(%rbp)
	1966:	5d	pop    %rbp
	1967:	c3	retq   
	1968:	89 c6	mov    %eax,%esi
	1969:	8b 4d fc	mov    -0x4(%rbp),%ecx
	1970:	ba 93 24 49 92	mov    $0x92492493,%edx
	1971:	89 c8	mov    %ecx,%eax
	1972:	f7 ea	imul   %edx
	1973:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	1974:	c1 f8 02	sar    $0x2,%eax
	1975:	89 c2	mov    %eax,%edx
	1976:	89 c8	mov    %ecx,%eax
	1977:	c1 f8 1f	sar    $0x1f,%eax
	1978:	29 c2	sub    %eax,%edx
	1979:	89 d0	mov    %edx,%eax
	1980:	39 c6	cmp    %eax,%esi
	1981:	74 05	je     0x400447 <L40>
	1982:	8b 45 fc	mov    -0x4(%rbp),%eax
	1983:	be 08 00 00 00	mov    $0x8,%esi
	1984:	89 c7	mov    %eax,%edi
	1985:	e8 2e fd ff ff	callq  0x400184 <dd>
	1986:	55	push   %rbp
	1987:	48 89 e5	mov    %rsp,%rbp
	1988:	89 7d fc	mov    %edi,-0x4(%rbp)
	1989:	89 75 f8	mov    %esi,-0x8(%rbp)
	1990:	8b 45 fc	mov    -0x4(%rbp),%eax
	1991:	99	cltd   
	1992:	f7 7d f8	idivl  -0x8(%rbp)
	1993:	5d	pop    %rbp
	1994:	c3	retq   
	1995:	89 c2	mov    %eax,%edx
	1996:	8b 45 fc	mov    -0x4(%rbp),%eax
	1997:	8d 48 07	lea    0x7(%rax),%ecx
	1998:	85 c0	test   %eax,%eax
	1999:	0f 48 c1	cmovs  %ecx,%eax
	2000:	c1 f8 03	sar    $0x3,%eax
	2001:	39 c2	cmp    %eax,%edx
	2002:	74 05	je     0x40046f <L41>
	2003:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	2004:	8b 45 fc	mov    -0x4(%rbp),%eax
	2005:	3d 02 00 00 80	cmp    $0x80000002,%eax
	2006:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	2007:	8b 45 fc	mov    -0x4(%rbp),%eax
	2008:	be 01 00 00 00	mov    $0x1,%esi
	2009:	89 c7	mov    %eax,%edi
	2010:	e8 5b fe ff ff	callq  0x400184 <dd>
	2011:	55	push   %rbp
	2012:	48 89 e5	mov    %rsp,%rbp
	2013:	89 7d fc	mov    %edi,-0x4(%rbp)
	2014:	89 75 f8	mov    %esi,-0x8(%rbp)
	2015:	8b 45 fc	mov    -0x4(%rbp),%eax
	2016:	99	cltd   
	2017:	f7 7d f8	idivl  -0x8(%rbp)
	2018:	5d	pop    %rbp
	2019:	c3	retq   
	2020:	3b 45 fc	cmp    -0x4(%rbp),%eax
	2021:	74 05	je     0x400333 <L34>
	2022:	8b 45 fc	mov    -0x4(%rbp),%eax
	2023:	be 02 00 00 00	mov    $0x2,%esi
	2024:	89 c7	mov    %eax,%edi
	2025:	e8 42 fe ff ff	callq  0x400184 <dd>
	2026:	55	push   %rbp
	2027:	48 89 e5	mov    %rsp,%rbp
	2028:	89 7d fc	mov    %edi,-0x4(%rbp)
	2029:	89 75 f8	mov    %esi,-0x8(%rbp)
	2030:	8b 45 fc	mov    -0x4(%rbp),%eax
	2031:	99	cltd   
	2032:	f7 7d f8	idivl  -0x8(%rbp)
	2033:	5d	pop    %rbp
	2034:	c3	retq   
	2035:	89 c2	mov    %eax,%edx
	2036:	8b 45 fc	mov    -0x4(%rbp),%eax
	2037:	89 c1	mov    %eax,%ecx
	2038:	c1 e9 1f	shr    $0x1f,%ecx
	2039:	01 c8	add    %ecx,%eax
	2040:	d1 f8	sar    %eax
	2041:	39 c2	cmp    %eax,%edx
	2042:	74 05	je     0x400359 <L35>
	2043:	8b 45 fc	mov    -0x4(%rbp),%eax
	2044:	be 03 00 00 00	mov    $0x3,%esi
	2045:	89 c7	mov    %eax,%edi
	2046:	e8 1c fe ff ff	callq  0x400184 <dd>
	2047:	55	push   %rbp
	2048:	48 89 e5	mov    %rsp,%rbp
	2049:	89 7d fc	mov    %edi,-0x4(%rbp)
	2050:	89 75 f8	mov    %esi,-0x8(%rbp)
	2051:	8b 45 fc	mov    -0x4(%rbp),%eax
	2052:	99	cltd   
	2053:	f7 7d f8	idivl  -0x8(%rbp)
	2054:	5d	pop    %rbp
	2055:	c3	retq   
	2056:	89 c6	mov    %eax,%esi
	2057:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2058:	ba 56 55 55 55	mov    $0x55555556,%edx
	2059:	89 c8	mov    %ecx,%eax
	2060:	f7 ea	imul   %edx
	2061:	89 c8	mov    %ecx,%eax
	2062:	c1 f8 1f	sar    $0x1f,%eax
	2063:	29 c2	sub    %eax,%edx
	2064:	89 d0	mov    %edx,%eax
	2065:	39 c6	cmp    %eax,%esi
	2066:	74 05	je     0x400388 <L36>
	2067:	8b 45 fc	mov    -0x4(%rbp),%eax
	2068:	be 04 00 00 00	mov    $0x4,%esi
	2069:	89 c7	mov    %eax,%edi
	2070:	e8 ed fd ff ff	callq  0x400184 <dd>
	2071:	55	push   %rbp
	2072:	48 89 e5	mov    %rsp,%rbp
	2073:	89 7d fc	mov    %edi,-0x4(%rbp)
	2074:	89 75 f8	mov    %esi,-0x8(%rbp)
	2075:	8b 45 fc	mov    -0x4(%rbp),%eax
	2076:	99	cltd   
	2077:	f7 7d f8	idivl  -0x8(%rbp)
	2078:	5d	pop    %rbp
	2079:	c3	retq   
	2080:	89 c2	mov    %eax,%edx
	2081:	8b 45 fc	mov    -0x4(%rbp),%eax
	2082:	8d 48 03	lea    0x3(%rax),%ecx
	2083:	85 c0	test   %eax,%eax
	2084:	0f 48 c1	cmovs  %ecx,%eax
	2085:	c1 f8 02	sar    $0x2,%eax
	2086:	39 c2	cmp    %eax,%edx
	2087:	74 05	je     0x4003b0 <L37>
	2088:	8b 45 fc	mov    -0x4(%rbp),%eax
	2089:	be 05 00 00 00	mov    $0x5,%esi
	2090:	89 c7	mov    %eax,%edi
	2091:	e8 c5 fd ff ff	callq  0x400184 <dd>
	2092:	55	push   %rbp
	2093:	48 89 e5	mov    %rsp,%rbp
	2094:	89 7d fc	mov    %edi,-0x4(%rbp)
	2095:	89 75 f8	mov    %esi,-0x8(%rbp)
	2096:	8b 45 fc	mov    -0x4(%rbp),%eax
	2097:	99	cltd   
	2098:	f7 7d f8	idivl  -0x8(%rbp)
	2099:	5d	pop    %rbp
	2100:	c3	retq   
	2101:	89 c6	mov    %eax,%esi
	2102:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2103:	ba 67 66 66 66	mov    $0x66666667,%edx
	2104:	89 c8	mov    %ecx,%eax
	2105:	f7 ea	imul   %edx
	2106:	d1 fa	sar    %edx
	2107:	89 c8	mov    %ecx,%eax
	2108:	c1 f8 1f	sar    $0x1f,%eax
	2109:	29 c2	sub    %eax,%edx
	2110:	89 d0	mov    %edx,%eax
	2111:	39 c6	cmp    %eax,%esi
	2112:	74 05	je     0x4003e1 <L38>
	2113:	8b 45 fc	mov    -0x4(%rbp),%eax
	2114:	be 06 00 00 00	mov    $0x6,%esi
	2115:	89 c7	mov    %eax,%edi
	2116:	e8 94 fd ff ff	callq  0x400184 <dd>
	2117:	55	push   %rbp
	2118:	48 89 e5	mov    %rsp,%rbp
	2119:	89 7d fc	mov    %edi,-0x4(%rbp)
	2120:	89 75 f8	mov    %esi,-0x8(%rbp)
	2121:	8b 45 fc	mov    -0x4(%rbp),%eax
	2122:	99	cltd   
	2123:	f7 7d f8	idivl  -0x8(%rbp)
	2124:	5d	pop    %rbp
	2125:	c3	retq   
	2126:	89 c6	mov    %eax,%esi
	2127:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2128:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	2129:	89 c8	mov    %ecx,%eax
	2130:	f7 ea	imul   %edx
	2131:	89 c8	mov    %ecx,%eax
	2132:	c1 f8 1f	sar    $0x1f,%eax
	2133:	29 c2	sub    %eax,%edx
	2134:	89 d0	mov    %edx,%eax
	2135:	39 c6	cmp    %eax,%esi
	2136:	74 05	je     0x400410 <L39>
	2137:	8b 45 fc	mov    -0x4(%rbp),%eax
	2138:	be 07 00 00 00	mov    $0x7,%esi
	2139:	89 c7	mov    %eax,%edi
	2140:	e8 65 fd ff ff	callq  0x400184 <dd>
	2141:	55	push   %rbp
	2142:	48 89 e5	mov    %rsp,%rbp
	2143:	89 7d fc	mov    %edi,-0x4(%rbp)
	2144:	89 75 f8	mov    %esi,-0x8(%rbp)
	2145:	8b 45 fc	mov    -0x4(%rbp),%eax
	2146:	99	cltd   
	2147:	f7 7d f8	idivl  -0x8(%rbp)
	2148:	5d	pop    %rbp
	2149:	c3	retq   
	2150:	89 c6	mov    %eax,%esi
	2151:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2152:	ba 93 24 49 92	mov    $0x92492493,%edx
	2153:	89 c8	mov    %ecx,%eax
	2154:	f7 ea	imul   %edx
	2155:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	2156:	c1 f8 02	sar    $0x2,%eax
	2157:	89 c2	mov    %eax,%edx
	2158:	89 c8	mov    %ecx,%eax
	2159:	c1 f8 1f	sar    $0x1f,%eax
	2160:	29 c2	sub    %eax,%edx
	2161:	89 d0	mov    %edx,%eax
	2162:	39 c6	cmp    %eax,%esi
	2163:	74 05	je     0x400447 <L40>
	2164:	8b 45 fc	mov    -0x4(%rbp),%eax
	2165:	be 08 00 00 00	mov    $0x8,%esi
	2166:	89 c7	mov    %eax,%edi
	2167:	e8 2e fd ff ff	callq  0x400184 <dd>
	2168:	55	push   %rbp
	2169:	48 89 e5	mov    %rsp,%rbp
	2170:	89 7d fc	mov    %edi,-0x4(%rbp)
	2171:	89 75 f8	mov    %esi,-0x8(%rbp)
	2172:	8b 45 fc	mov    -0x4(%rbp),%eax
	2173:	99	cltd   
	2174:	f7 7d f8	idivl  -0x8(%rbp)
	2175:	5d	pop    %rbp
	2176:	c3	retq   
	2177:	89 c2	mov    %eax,%edx
	2178:	8b 45 fc	mov    -0x4(%rbp),%eax
	2179:	8d 48 07	lea    0x7(%rax),%ecx
	2180:	85 c0	test   %eax,%eax
	2181:	0f 48 c1	cmovs  %ecx,%eax
	2182:	c1 f8 03	sar    $0x3,%eax
	2183:	39 c2	cmp    %eax,%edx
	2184:	74 05	je     0x40046f <L41>
	2185:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	2186:	8b 45 fc	mov    -0x4(%rbp),%eax
	2187:	3d 02 00 00 80	cmp    $0x80000002,%eax
	2188:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	2189:	8b 45 fc	mov    -0x4(%rbp),%eax
	2190:	be 01 00 00 00	mov    $0x1,%esi
	2191:	89 c7	mov    %eax,%edi
	2192:	e8 5b fe ff ff	callq  0x400184 <dd>
	2193:	55	push   %rbp
	2194:	48 89 e5	mov    %rsp,%rbp
	2195:	89 7d fc	mov    %edi,-0x4(%rbp)
	2196:	89 75 f8	mov    %esi,-0x8(%rbp)
	2197:	8b 45 fc	mov    -0x4(%rbp),%eax
	2198:	99	cltd   
	2199:	f7 7d f8	idivl  -0x8(%rbp)
	2200:	5d	pop    %rbp
	2201:	c3	retq   
	2202:	3b 45 fc	cmp    -0x4(%rbp),%eax
	2203:	74 05	je     0x400333 <L34>
	2204:	8b 45 fc	mov    -0x4(%rbp),%eax
	2205:	be 02 00 00 00	mov    $0x2,%esi
	2206:	89 c7	mov    %eax,%edi
	2207:	e8 42 fe ff ff	callq  0x400184 <dd>
	2208:	55	push   %rbp
	2209:	48 89 e5	mov    %rsp,%rbp
	2210:	89 7d fc	mov    %edi,-0x4(%rbp)
	2211:	89 75 f8	mov    %esi,-0x8(%rbp)
	2212:	8b 45 fc	mov    -0x4(%rbp),%eax
	2213:	99	cltd   
	2214:	f7 7d f8	idivl  -0x8(%rbp)
	2215:	5d	pop    %rbp
	2216:	c3	retq   
	2217:	89 c2	mov    %eax,%edx
	2218:	8b 45 fc	mov    -0x4(%rbp),%eax
	2219:	89 c1	mov    %eax,%ecx
	2220:	c1 e9 1f	shr    $0x1f,%ecx
	2221:	01 c8	add    %ecx,%eax
	2222:	d1 f8	sar    %eax
	2223:	39 c2	cmp    %eax,%edx
	2224:	74 05	je     0x400359 <L35>
	2225:	8b 45 fc	mov    -0x4(%rbp),%eax
	2226:	be 03 00 00 00	mov    $0x3,%esi
	2227:	89 c7	mov    %eax,%edi
	2228:	e8 1c fe ff ff	callq  0x400184 <dd>
	2229:	55	push   %rbp
	2230:	48 89 e5	mov    %rsp,%rbp
	2231:	89 7d fc	mov    %edi,-0x4(%rbp)
	2232:	89 75 f8	mov    %esi,-0x8(%rbp)
	2233:	8b 45 fc	mov    -0x4(%rbp),%eax
	2234:	99	cltd   
	2235:	f7 7d f8	idivl  -0x8(%rbp)
	2236:	5d	pop    %rbp
	2237:	c3	retq   
	2238:	89 c6	mov    %eax,%esi
	2239:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2240:	ba 56 55 55 55	mov    $0x55555556,%edx
	2241:	89 c8	mov    %ecx,%eax
	2242:	f7 ea	imul   %edx
	2243:	89 c8	mov    %ecx,%eax
	2244:	c1 f8 1f	sar    $0x1f,%eax
	2245:	29 c2	sub    %eax,%edx
	2246:	89 d0	mov    %edx,%eax
	2247:	39 c6	cmp    %eax,%esi
	2248:	74 05	je     0x400388 <L36>
	2249:	8b 45 fc	mov    -0x4(%rbp),%eax
	2250:	be 04 00 00 00	mov    $0x4,%esi
	2251:	89 c7	mov    %eax,%edi
	2252:	e8 ed fd ff ff	callq  0x400184 <dd>
	2253:	55	push   %rbp
	2254:	48 89 e5	mov    %rsp,%rbp
	2255:	89 7d fc	mov    %edi,-0x4(%rbp)
	2256:	89 75 f8	mov    %esi,-0x8(%rbp)
	2257:	8b 45 fc	mov    -0x4(%rbp),%eax
	2258:	99	cltd   
	2259:	f7 7d f8	idivl  -0x8(%rbp)
	2260:	5d	pop    %rbp
	2261:	c3	retq   
	2262:	89 c2	mov    %eax,%edx
	2263:	8b 45 fc	mov    -0x4(%rbp),%eax
	2264:	8d 48 03	lea    0x3(%rax),%ecx
	2265:	85 c0	test   %eax,%eax
	2266:	0f 48 c1	cmovs  %ecx,%eax
	2267:	c1 f8 02	sar    $0x2,%eax
	2268:	39 c2	cmp    %eax,%edx
	2269:	74 05	je     0x4003b0 <L37>
	2270:	8b 45 fc	mov    -0x4(%rbp),%eax
	2271:	be 05 00 00 00	mov    $0x5,%esi
	2272:	89 c7	mov    %eax,%edi
	2273:	e8 c5 fd ff ff	callq  0x400184 <dd>
	2274:	55	push   %rbp
	2275:	48 89 e5	mov    %rsp,%rbp
	2276:	89 7d fc	mov    %edi,-0x4(%rbp)
	2277:	89 75 f8	mov    %esi,-0x8(%rbp)
	2278:	8b 45 fc	mov    -0x4(%rbp),%eax
	2279:	99	cltd   
	2280:	f7 7d f8	idivl  -0x8(%rbp)
	2281:	5d	pop    %rbp
	2282:	c3	retq   
	2283:	89 c6	mov    %eax,%esi
	2284:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2285:	ba 67 66 66 66	mov    $0x66666667,%edx
	2286:	89 c8	mov    %ecx,%eax
	2287:	f7 ea	imul   %edx
	2288:	d1 fa	sar    %edx
	2289:	89 c8	mov    %ecx,%eax
	2290:	c1 f8 1f	sar    $0x1f,%eax
	2291:	29 c2	sub    %eax,%edx
	2292:	89 d0	mov    %edx,%eax
	2293:	39 c6	cmp    %eax,%esi
	2294:	74 05	je     0x4003e1 <L38>
	2295:	8b 45 fc	mov    -0x4(%rbp),%eax
	2296:	be 06 00 00 00	mov    $0x6,%esi
	2297:	89 c7	mov    %eax,%edi
	2298:	e8 94 fd ff ff	callq  0x400184 <dd>
	2299:	55	push   %rbp
	2300:	48 89 e5	mov    %rsp,%rbp
	2301:	89 7d fc	mov    %edi,-0x4(%rbp)
	2302:	89 75 f8	mov    %esi,-0x8(%rbp)
	2303:	8b 45 fc	mov    -0x4(%rbp),%eax
	2304:	99	cltd   
	2305:	f7 7d f8	idivl  -0x8(%rbp)
	2306:	5d	pop    %rbp
	2307:	c3	retq   
	2308:	89 c6	mov    %eax,%esi
	2309:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2310:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	2311:	89 c8	mov    %ecx,%eax
	2312:	f7 ea	imul   %edx
	2313:	89 c8	mov    %ecx,%eax
	2314:	c1 f8 1f	sar    $0x1f,%eax
	2315:	29 c2	sub    %eax,%edx
	2316:	89 d0	mov    %edx,%eax
	2317:	39 c6	cmp    %eax,%esi
	2318:	74 05	je     0x400410 <L39>
	2319:	8b 45 fc	mov    -0x4(%rbp),%eax
	2320:	be 07 00 00 00	mov    $0x7,%esi
	2321:	89 c7	mov    %eax,%edi
	2322:	e8 65 fd ff ff	callq  0x400184 <dd>
	2323:	55	push   %rbp
	2324:	48 89 e5	mov    %rsp,%rbp
	2325:	89 7d fc	mov    %edi,-0x4(%rbp)
	2326:	89 75 f8	mov    %esi,-0x8(%rbp)
	2327:	8b 45 fc	mov    -0x4(%rbp),%eax
	2328:	99	cltd   
	2329:	f7 7d f8	idivl  -0x8(%rbp)
	2330:	5d	pop    %rbp
	2331:	c3	retq   
	2332:	89 c6	mov    %eax,%esi
	2333:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2334:	ba 93 24 49 92	mov    $0x92492493,%edx
	2335:	89 c8	mov    %ecx,%eax
	2336:	f7 ea	imul   %edx
	2337:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	2338:	c1 f8 02	sar    $0x2,%eax
	2339:	89 c2	mov    %eax,%edx
	2340:	89 c8	mov    %ecx,%eax
	2341:	c1 f8 1f	sar    $0x1f,%eax
	2342:	29 c2	sub    %eax,%edx
	2343:	89 d0	mov    %edx,%eax
	2344:	39 c6	cmp    %eax,%esi
	2345:	74 05	je     0x400447 <L40>
	2346:	8b 45 fc	mov    -0x4(%rbp),%eax
	2347:	be 08 00 00 00	mov    $0x8,%esi
	2348:	89 c7	mov    %eax,%edi
	2349:	e8 2e fd ff ff	callq  0x400184 <dd>
	2350:	55	push   %rbp
	2351:	48 89 e5	mov    %rsp,%rbp
	2352:	89 7d fc	mov    %edi,-0x4(%rbp)
	2353:	89 75 f8	mov    %esi,-0x8(%rbp)
	2354:	8b 45 fc	mov    -0x4(%rbp),%eax
	2355:	99	cltd   
	2356:	f7 7d f8	idivl  -0x8(%rbp)
	2357:	5d	pop    %rbp
	2358:	c3	retq   
	2359:	89 c2	mov    %eax,%edx
	2360:	8b 45 fc	mov    -0x4(%rbp),%eax
	2361:	8d 48 07	lea    0x7(%rax),%ecx
	2362:	85 c0	test   %eax,%eax
	2363:	0f 48 c1	cmovs  %ecx,%eax
	2364:	c1 f8 03	sar    $0x3,%eax
	2365:	39 c2	cmp    %eax,%edx
	2366:	74 05	je     0x40046f <L41>
	2367:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	2368:	8b 45 fc	mov    -0x4(%rbp),%eax
	2369:	3d 02 00 00 80	cmp    $0x80000002,%eax
	2370:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	2371:	8b 45 fc	mov    -0x4(%rbp),%eax
	2372:	be 01 00 00 00	mov    $0x1,%esi
	2373:	89 c7	mov    %eax,%edi
	2374:	e8 5b fe ff ff	callq  0x400184 <dd>
	2375:	55	push   %rbp
	2376:	48 89 e5	mov    %rsp,%rbp
	2377:	89 7d fc	mov    %edi,-0x4(%rbp)
	2378:	89 75 f8	mov    %esi,-0x8(%rbp)
	2379:	8b 45 fc	mov    -0x4(%rbp),%eax
	2380:	99	cltd   
	2381:	f7 7d f8	idivl  -0x8(%rbp)
	2382:	5d	pop    %rbp
	2383:	c3	retq   
	2384:	3b 45 fc	cmp    -0x4(%rbp),%eax
	2385:	74 05	je     0x400333 <L34>
	2386:	8b 45 fc	mov    -0x4(%rbp),%eax
	2387:	be 02 00 00 00	mov    $0x2,%esi
	2388:	89 c7	mov    %eax,%edi
	2389:	e8 42 fe ff ff	callq  0x400184 <dd>
	2390:	55	push   %rbp
	2391:	48 89 e5	mov    %rsp,%rbp
	2392:	89 7d fc	mov    %edi,-0x4(%rbp)
	2393:	89 75 f8	mov    %esi,-0x8(%rbp)
	2394:	8b 45 fc	mov    -0x4(%rbp),%eax
	2395:	99	cltd   
	2396:	f7 7d f8	idivl  -0x8(%rbp)
	2397:	5d	pop    %rbp
	2398:	c3	retq   
	2399:	89 c2	mov    %eax,%edx
	2400:	8b 45 fc	mov    -0x4(%rbp),%eax
	2401:	89 c1	mov    %eax,%ecx
	2402:	c1 e9 1f	shr    $0x1f,%ecx
	2403:	01 c8	add    %ecx,%eax
	2404:	d1 f8	sar    %eax
	2405:	39 c2	cmp    %eax,%edx
	2406:	74 05	je     0x400359 <L35>
	2407:	8b 45 fc	mov    -0x4(%rbp),%eax
	2408:	be 03 00 00 00	mov    $0x3,%esi
	2409:	89 c7	mov    %eax,%edi
	2410:	e8 1c fe ff ff	callq  0x400184 <dd>
	2411:	55	push   %rbp
	2412:	48 89 e5	mov    %rsp,%rbp
	2413:	89 7d fc	mov    %edi,-0x4(%rbp)
	2414:	89 75 f8	mov    %esi,-0x8(%rbp)
	2415:	8b 45 fc	mov    -0x4(%rbp),%eax
	2416:	99	cltd   
	2417:	f7 7d f8	idivl  -0x8(%rbp)
	2418:	5d	pop    %rbp
	2419:	c3	retq   
	2420:	89 c6	mov    %eax,%esi
	2421:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2422:	ba 56 55 55 55	mov    $0x55555556,%edx
	2423:	89 c8	mov    %ecx,%eax
	2424:	f7 ea	imul   %edx
	2425:	89 c8	mov    %ecx,%eax
	2426:	c1 f8 1f	sar    $0x1f,%eax
	2427:	29 c2	sub    %eax,%edx
	2428:	89 d0	mov    %edx,%eax
	2429:	39 c6	cmp    %eax,%esi
	2430:	74 05	je     0x400388 <L36>
	2431:	8b 45 fc	mov    -0x4(%rbp),%eax
	2432:	be 04 00 00 00	mov    $0x4,%esi
	2433:	89 c7	mov    %eax,%edi
	2434:	e8 ed fd ff ff	callq  0x400184 <dd>
	2435:	55	push   %rbp
	2436:	48 89 e5	mov    %rsp,%rbp
	2437:	89 7d fc	mov    %edi,-0x4(%rbp)
	2438:	89 75 f8	mov    %esi,-0x8(%rbp)
	2439:	8b 45 fc	mov    -0x4(%rbp),%eax
	2440:	99	cltd   
	2441:	f7 7d f8	idivl  -0x8(%rbp)
	2442:	5d	pop    %rbp
	2443:	c3	retq   
	2444:	89 c2	mov    %eax,%edx
	2445:	8b 45 fc	mov    -0x4(%rbp),%eax
	2446:	8d 48 03	lea    0x3(%rax),%ecx
	2447:	85 c0	test   %eax,%eax
	2448:	0f 48 c1	cmovs  %ecx,%eax
	2449:	c1 f8 02	sar    $0x2,%eax
	2450:	39 c2	cmp    %eax,%edx
	2451:	74 05	je     0x4003b0 <L37>
	2452:	8b 45 fc	mov    -0x4(%rbp),%eax
	2453:	be 05 00 00 00	mov    $0x5,%esi
	2454:	89 c7	mov    %eax,%edi
	2455:	e8 c5 fd ff ff	callq  0x400184 <dd>
	2456:	55	push   %rbp
	2457:	48 89 e5	mov    %rsp,%rbp
	2458:	89 7d fc	mov    %edi,-0x4(%rbp)
	2459:	89 75 f8	mov    %esi,-0x8(%rbp)
	2460:	8b 45 fc	mov    -0x4(%rbp),%eax
	2461:	99	cltd   
	2462:	f7 7d f8	idivl  -0x8(%rbp)
	2463:	5d	pop    %rbp
	2464:	c3	retq   
	2465:	89 c6	mov    %eax,%esi
	2466:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2467:	ba 67 66 66 66	mov    $0x66666667,%edx
	2468:	89 c8	mov    %ecx,%eax
	2469:	f7 ea	imul   %edx
	2470:	d1 fa	sar    %edx
	2471:	89 c8	mov    %ecx,%eax
	2472:	c1 f8 1f	sar    $0x1f,%eax
	2473:	29 c2	sub    %eax,%edx
	2474:	89 d0	mov    %edx,%eax
	2475:	39 c6	cmp    %eax,%esi
	2476:	74 05	je     0x4003e1 <L38>
	2477:	8b 45 fc	mov    -0x4(%rbp),%eax
	2478:	be 06 00 00 00	mov    $0x6,%esi
	2479:	89 c7	mov    %eax,%edi
	2480:	e8 94 fd ff ff	callq  0x400184 <dd>
	2481:	55	push   %rbp
	2482:	48 89 e5	mov    %rsp,%rbp
	2483:	89 7d fc	mov    %edi,-0x4(%rbp)
	2484:	89 75 f8	mov    %esi,-0x8(%rbp)
	2485:	8b 45 fc	mov    -0x4(%rbp),%eax
	2486:	99	cltd   
	2487:	f7 7d f8	idivl  -0x8(%rbp)
	2488:	5d	pop    %rbp
	2489:	c3	retq   
	2490:	89 c6	mov    %eax,%esi
	2491:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2492:	ba ab aa aa 2a	mov    $0x2aaaaaab,%edx
	2493:	89 c8	mov    %ecx,%eax
	2494:	f7 ea	imul   %edx
	2495:	89 c8	mov    %ecx,%eax
	2496:	c1 f8 1f	sar    $0x1f,%eax
	2497:	29 c2	sub    %eax,%edx
	2498:	89 d0	mov    %edx,%eax
	2499:	39 c6	cmp    %eax,%esi
	2500:	74 05	je     0x400410 <L39>
	2501:	8b 45 fc	mov    -0x4(%rbp),%eax
	2502:	be 07 00 00 00	mov    $0x7,%esi
	2503:	89 c7	mov    %eax,%edi
	2504:	e8 65 fd ff ff	callq  0x400184 <dd>
	2505:	55	push   %rbp
	2506:	48 89 e5	mov    %rsp,%rbp
	2507:	89 7d fc	mov    %edi,-0x4(%rbp)
	2508:	89 75 f8	mov    %esi,-0x8(%rbp)
	2509:	8b 45 fc	mov    -0x4(%rbp),%eax
	2510:	99	cltd   
	2511:	f7 7d f8	idivl  -0x8(%rbp)
	2512:	5d	pop    %rbp
	2513:	c3	retq   
	2514:	89 c6	mov    %eax,%esi
	2515:	8b 4d fc	mov    -0x4(%rbp),%ecx
	2516:	ba 93 24 49 92	mov    $0x92492493,%edx
	2517:	89 c8	mov    %ecx,%eax
	2518:	f7 ea	imul   %edx
	2519:	8d 04 0a	lea    (%rdx,%rcx,1),%eax
	2520:	c1 f8 02	sar    $0x2,%eax
	2521:	89 c2	mov    %eax,%edx
	2522:	89 c8	mov    %ecx,%eax
	2523:	c1 f8 1f	sar    $0x1f,%eax
	2524:	29 c2	sub    %eax,%edx
	2525:	89 d0	mov    %edx,%eax
	2526:	39 c6	cmp    %eax,%esi
	2527:	74 05	je     0x400447 <L40>
	2528:	8b 45 fc	mov    -0x4(%rbp),%eax
	2529:	be 08 00 00 00	mov    $0x8,%esi
	2530:	89 c7	mov    %eax,%edi
	2531:	e8 2e fd ff ff	callq  0x400184 <dd>
	2532:	55	push   %rbp
	2533:	48 89 e5	mov    %rsp,%rbp
	2534:	89 7d fc	mov    %edi,-0x4(%rbp)
	2535:	89 75 f8	mov    %esi,-0x8(%rbp)
	2536:	8b 45 fc	mov    -0x4(%rbp),%eax
	2537:	99	cltd   
	2538:	f7 7d f8	idivl  -0x8(%rbp)
	2539:	5d	pop    %rbp
	2540:	c3	retq   
	2541:	89 c2	mov    %eax,%edx
	2542:	8b 45 fc	mov    -0x4(%rbp),%eax
	2543:	8d 48 07	lea    0x7(%rax),%ecx
	2544:	85 c0	test   %eax,%eax
	2545:	0f 48 c1	cmovs  %ecx,%eax
	2546:	c1 f8 03	sar    $0x3,%eax
	2547:	39 c2	cmp    %eax,%edx
	2548:	74 05	je     0x40046f <L41>
	2549:	83 45 fc 01	addl   $0x1,-0x4(%rbp)
	2550:	8b 45 fc	mov    -0x4(%rbp),%eax
	2551:	3d 02 00 00 80	cmp    $0x80000002,%eax
	2552:	0f 86 99 fe ff ff	jbe    0x40031a <L42>
	2553:	bf 00 00 00 00	mov    $0x0,%edi
	2554:	e8 97 fc ff ff	callq  0x400122 <exit>
	2555:	55	push   %rbp
	2556:	48 89 e5	mov    %rsp,%rbp
	2557:	89 7d fc	mov    %edi,-0x4(%rbp)
	2558:	48 c7 c0 ff ff ff ff	mov    $0xffffffffffffffff,%rax
	2559:	ff e0	jmpq   *%rax


Count 0) reg	kstate	xstate		55	push   %rbp
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'248	140737488343360
rbp	64'248	0
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'0	0
af	1'0	0
zf	1'0	0
sf	1'0	0
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 1) reg	kstate	xstate		48 89 e5	mov    %rsp,%rbp
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'240	140737488343352
rbp	64'248	0
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'0	0
af	1'0	0
zf	1'0	0
sf	1'0	0
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 2) reg	kstate	xstate		48 83 ec 10	sub    $0x10,%rsp
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'240	140737488343352
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'0	0
af	1'0	0
zf	1'0	0
sf	1'0	0
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 3) reg	kstate	xstate		c7 45 fc fd ff ff ff	movl   $0xfffffffd,-0x4(%rbp)
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'0	1
af	1'0	0
zf	1'0	0
sf	1'0	0
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 4) reg	kstate	xstate		e9 59 01 00 00	jmpq   0x400304 <L23>
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'0	1
af	1'0	0
zf	1'0	0
sf	1'0	0
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 5) reg	kstate	xstate		83 7d fc 03	cmpl   $0x3,-0x4(%rbp)
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'0	1
af	1'0	0
zf	1'0	0
sf	1'0	0
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 6) reg	kstate	xstate		0f 8e 9d fe ff ff	jle    0x4001ab <L32>
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 7) reg	kstate	xstate		8b 45 fc	mov    -0x4(%rbp),%eax
---------------------
rax	64'0	0
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 8) reg	kstate	xstate		be 01 00 00 00	mov    $0x1,%esi
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'0	0
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 9) reg	kstate	xstate		89 c7	mov    %eax,%edi
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'0	0
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 10) reg	kstate	xstate		e8 ca ff ff ff	callq  0x400184 <dd>
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 11) reg	kstate	xstate		55	push   %rbp
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'216	140737488343328
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 12) reg	kstate	xstate		48 89 e5	mov    %rsp,%rbp
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 13) reg	kstate	xstate		89 7d fc	mov    %edi,-0x4(%rbp)
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343320
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 14) reg	kstate	xstate		89 75 f8	mov    %esi,-0x8(%rbp)
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343320
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 15) reg	kstate	xstate		8b 45 fc	mov    -0x4(%rbp),%eax
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343320
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 16) reg	kstate	xstate		99	cltd   
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'0	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343320
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 17) reg	kstate	xstate		f7 7d f8	idivl  -0x8(%rbp)
---------------------
rax	64'4294967293	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	64'4294967295	4294967295
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343320
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	1'0	0
pf	1'1	1
af	1'0	0
zf	1'0	0
sf	1'1	1
of	1'0	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 18) reg	kstate	xstate		5d	pop    %rbp
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343320
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	undefMInt	0
pf	undefMInt	1
af	undefMInt	0
zf	undefMInt )	0
sf	undefMInt	1
of	undefMInt	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 19) reg	kstate	xstate		c3	retq   
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'216	140737488343328
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	undefMInt	0
pf	undefMInt	1
af	undefMInt	0
zf	undefMInt )	0
sf	undefMInt	1
of	undefMInt	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 20) reg	kstate	xstate		3b 45 fc	cmp    -0x4(%rbp),%eax
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	undefMInt	0
pf	undefMInt	1
af	undefMInt	0
zf	undefMInt )	0
sf	undefMInt	1
of	undefMInt	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 21) reg	kstate	xstate		74 05	je     0x4001c4 <L24>
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 22) reg	kstate	xstate		8b 45 fc	mov    -0x4(%rbp),%eax
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'224	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 23) reg	kstate	xstate		be 02 00 00 00	mov    $0x2,%esi
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	1
rdi	64'4294967293	4294967293
rsp	64'216	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 24) reg	kstate	xstate		89 c7	mov    %eax,%edi
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	2
rdi	64'4294967293	4294967293
rsp	64'208	140737488343336
rbp	64'240	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 25) reg	kstate	xstate		e8 b1 ff ff ff	callq  0x400184 <dd>
---------------------
rax	concatenateMInt ( 32'0 , idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) )	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	2
rdi	64'4294967293	4294967293
rsp	64'208	140737488343336
rbp	64'208	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 26) reg	kstate	xstate		55	push   %rbp
---------------------
rax	64'-1	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	2
rdi	64'4294967293	4294967293
rsp	64'208	140737488343328
rbp	64'208	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000

Count 27) reg	kstate	xstate		48 89 e5	mov    %rsp,%rbp
---------------------
rax	64'-1	4294967293
rbx	64'0	0
rcx	64'0	0
rdx	concatenateMInt ( 32'0 , idiv_remainder_int32 ( 64'18446744073709551613 , 32'1 ) )	0
rsi	64'1	2
rdi	64'4294967293	4294967293
rsp	64'208	140737488343320
rbp	64'208	140737488343352
r8	64'0	0
r9	64'0	0
r10	64'0	0
r11	64'0	0
r12	64'0	0
r13	64'0	0
r14	64'0	0
r15	64'0	0
cf	#ifMInt notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 0 , 1 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
pf	#ifMInt notBool notBool ( notBool ( notBool ( notBool ( notBool ( notBool ( notBool eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 32 , 33 ) , 1'1 ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 31 , 32 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 30 , 31 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 29 , 30 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 27 , 28 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 26 , 27 ) , 1'1 ) ) ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 25 , 26 ) , 1'1 ) #then 1'1 #else 1'0 #fi	1
af	xorMInt ( xorMInt ( 1'1 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 27 , 28 ) ) , extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 28 , 29 ) )	0
zf	#ifMInt eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 33 ) , 32'0 ) #then 1'1 #else 1'0 #fi )	1
sf	extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 )	0
of	#ifMInt false ==K eqMInt ( extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 1 ) , 1'1 ) andBool notBool false ==K eqMInt ( extractMInt ( addMInt ( 33'3 , concatenateMInt ( 1'0 , extractMInt ( idiv_quotient_int32 ( 64'18446744073709551613 , 32'1 ) , 0 , 32 ) ) ) , 1 , 2 ) , 1'1 ) #then 1'1 #else 1'0 #fi	0
ymm0	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm1	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm2	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm3	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm4	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm5	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm6	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm7	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm8	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm9	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm10	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm11	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm12	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm13	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm14	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
ymm15	256'0	0x0000000000000000000000000000000000000000000000000000000000000000
[4m[1m[34m930529-1-0 Compare Results :[0m
Failed:[4m[1m[91m930529-1-0: kstate xstate count unequal[0m
kstates = 1064
xstates = 97280

Failed:[4m[1m[91mFail[0m
0 != 1
pf at instrcount: 4

Failed:[4m[1m[91mFail[0m
0 != 1
pf at instrcount: 5

Failed:[4m[1m[91mFail[0m
0 != 1
pf at instrcount: 6

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 18

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 19

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 20

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 21

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 22

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 22

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 22

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 22

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 22

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 22

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 22

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 23

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 23

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 23

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 23

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 23

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 23

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 23

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 24

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 24

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 24

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 24

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 24

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 24

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 24

Failed:[4m[1m[91mFail[0m
0000000000000001 != 0000000000000002
rsi at instrcount: 25

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 25

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 25

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 25

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 25

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 25

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 25

Failed:[4m[1m[91mFail[0m
00000000 != fffffffd
rax at instrcount: 25

Failed:[4m[1m[91mFail[0m
0000000000000001 != 0000000000000002
rsi at instrcount: 26

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 26

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 26

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 26

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 26

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 26

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 26

Failed:[4m[1m[91mFail[0m
ffffffffffffffff != 00000000fffffffd
rax at instrcount: 26

Failed:[4m[1m[91mFail[0m
0000000000000001 != 0000000000000002
rsi at instrcount: 27

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 27

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 27

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 27

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 27

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 27

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 27

Failed:[4m[1m[91mFail[0m
ffffffffffffffff != 00000000fffffffd
rax at instrcount: 27

Failed:[4m[1m[91mFail[0m
0000000000000001 != 0000000000000002
rsi at instrcount: 28

Failed:[4m[1m[91mFail[0m
3 != 0
cf at instrcount: 28

Failed:[4m[1m[91mFail[0m
3 != 1
pf at instrcount: 28

Failed:[4m[1m[91mFail[0m
1 != 0
af at instrcount: 28

Failed:[4m[1m[91mFail[0m
3 != 1
zf at instrcount: 28

Failed:[4m[1m[91mFail[0m
3 != 0
sf at instrcount: 28

Failed:[4m[1m[91mFail[0m
fffffffffffffffd != 0000000000000000
of at instrcount: 28

Passed:[4m[1m[92mPassed[0m
